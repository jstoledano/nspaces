[{"model": "blog.category", "pk": 1, "fields": {"idx": "e5ed58ad-47e1-488d-9878-600b6700665b", "creado": "2017-07-28T13:48:47.230Z", "modificado": "2017-07-28T19:08:50.781Z", "title": "C\u00e9firos y Trinos", "slug": "trinos", "icon": "retweet", "description": "Notas r\u00e1pidas que encuentro navegando en Internet.", "description_html": "<p>Notas r\u00e1pidas que encuentro navegando en Internet.</p>"}}, {"model": "blog.category", "pk": 2, "fields": {"idx": "501d8e4f-54c9-43f0-9644-d436123d5041", "creado": "2017-07-28T19:27:24.381Z", "modificado": "2017-07-28T19:27:51.717Z", "title": "Audioteca Toledana", "slug": "audioteca", "icon": "music", "description": "La mejor selecci\u00f3n de la m\u00fasica mundial.", "description_html": "<p>La mejor selecci\u00f3n de la m\u00fasica mundial.</p>"}}, {"model": "blog.category", "pk": 3, "fields": {"idx": "76c0670d-51e3-4c33-ac9e-fa1d8bdb60ee", "creado": "2017-07-28T19:28:15.045Z", "modificado": "2017-07-28T19:28:15.045Z", "title": "Fototeca Toledana", "slug": "fototeca", "icon": "camera-retro", "description": "Conoce el mundo, visto desde un enfoque \u00fanico.", "description_html": "<p>Conoce el mundo, visto desde un enfoque \u00fanico.</p>"}}, {"model": "blog.category", "pk": 4, "fields": {"idx": "d0107bee-819f-4cb7-b97a-717d72f4f501", "creado": "2017-07-28T19:30:32.426Z", "modificado": "2017-07-28T19:30:32.426Z", "title": "Calidad", "slug": "calidad", "icon": "certificate", "description": "Art\u00edculos sobre la implementaci\u00f3n de la Norma ISO 9001", "description_html": "<p>Art\u00edculos sobre la implementaci\u00f3n de la Norma ISO 9001</p>"}}, {"model": "blog.category", "pk": 5, "fields": {"idx": "70d2da6e-db28-47cc-b025-1929104804c3", "creado": "2017-07-28T19:31:12.997Z", "modificado": "2017-07-28T19:32:19.756Z", "title": "Editorial", "slug": "editorial", "icon": "coffee", "description": "Art\u00edculos de opini\u00f3n personal.", "description_html": "<p>Art\u00edculos de opini\u00f3n personal.</p>"}}, {"model": "blog.category", "pk": 6, "fields": {"idx": "27fc12df-fbfa-4abd-a406-6fa7a2a0f91d", "creado": "2017-07-29T02:13:34.419Z", "modificado": "2017-07-29T02:24:02.109Z", "title": "Desarrollo Web", "slug": "desarrollo", "icon": "code", "description": "Notas sobre desarrollo con Python, Django, JavaScript y mucho m\u00e1s...", "description_html": "<p>Notas sobre desarrollo con Python, Django, JavaScript y mucho m\u00e1s&hellip;</p>"}}, {"model": "blog.entry", "pk": 1, "fields": {"idx": "0a96b1a1-9e81-47fc-a664-792018844ee9", "creado": "2017-07-28T13:52:37.592Z", "modificado": "2017-07-29T02:50:37.429Z", "title": "Especializaci\u00f3n", "summary": "Una cita de Lazarus Long", "body": "> A human being should be able to change a diaper, plan an invasion, butcher a hog, conn a ship, design a building, write a sonnet, balance accounts, build a wall, set a bone, comfort the dying, take orders, give orders, cooperate, act alone, solve equations, analyze a new problem, pitch manure, program a computer, cook a tasty meal, fight efficiently, die gallantly. Specialization is for insects.  \r\n<cite>&mdash; Lazarus Long in Time Enough For Love</cite>", "extend": "", "pub_date": "2000-01-01T06:00:00Z", "summary_html": "<p>Una cita de Lazarus Long</p>", "body_html": "<blockquote>\n<p>A human being should be able to change a diaper, plan an invasion, butcher a hog, conn a ship, design a building, write a sonnet, balance accounts, build a wall, set a bone, comfort the dying, take orders, give orders, cooperate, act alone, solve equations, analyze a new problem, pitch manure, program a computer, cook a tasty meal, fight efficiently, die gallantly. Specialization is for insects.<br>\n<cite>&mdash; Lazarus Long in Time Enough For Love</cite></p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "especializacion", "status": 1, "featured": false, "category": 1, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 2, "fields": {"idx": "6dcae1e4-727d-4445-94f1-aafd65fa58fa", "creado": "2017-07-28T19:35:09.884Z", "modificado": "2017-07-28T19:35:09.884Z", "title": "Guilty, 5 minutos en el pasado", "summary": "Guilty, un dueto entre Barbra Streisand y Barry Gibb, ganador del Grammy en 1980.", "body": "__Guilty__, un d\u00fao de Barbra Streisand con Barry Gibb el l\u00edder de la banda australiana Bee Gees, es uno de los temas representativos de principios de los ochentas, si, del siglo pasado.\r\n\r\nSe desprenden del \u00e1lbum del mismo nombre, sin duda el mas importante de la carrera de la cantante y actriz, \u00e9xitos tan importantes como _Woman In Love_, por ejemplo.\r\n\r\nEsta canci\u00f3n, _Culpable_, en espa\u00f1ol, gan\u00f3 el Grammy en 1981 como la mejor interpretaci\u00f3n pop vocal de grupo o dueto, y es un delicioso viaje al pasado.\r\n\r\n__T\u00edtulo__: Guilty  \r\n__Int\u00e9rprete__: Barbra Streisand y Barry Gibb  \r\n__Autores__: Barry, Maurice y Robin Gibb  \r\n__Album__: Guilty, 1980", "extend": "<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\nvar songlist = new Array(1);\r\nsonglist[0] = new Object();\r\nsonglist[0].mp3 = \"//media.toledano.org/audioteca/guilty.mp3\";\r\nsonglist[0].ogg =\" //media.toledano.org/audioteca/guilty.ogg\"\r\nsonglist[0].title = \"Gulty\";\r\nsonglist[0].cover = \"//media.toledano.org/audioteca/guilty.jpg\";\r\nsonglist[0].artist = \"Barbra Streisand y Barry Gibb\";     \r\n$(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\r\n</script>\r\n\r\n>[Barbra:]  \r\nShadows falling , baby , we stand alone  \r\nOut on the street anybody you meet got a heartache of their own  \r\n(It oughta be illegal)  \r\nMake it a crime to be lonely or sad  \r\n(It oughta be illegal)  \r\nYou got a reason for livin'  \r\nYou battle on with the love you're livin' on  \r\nYou gotta be mine  \r\nWe take it away  \r\nIt's gotta be night and day  \r\nJust a matter of time  \r\nAnd we got nothing to be guilty of  \r\nOur love will climb any mountain near or far, we are  \r\nAnd we never let it end  \r\nWe are devotion  \r\nAnd we got nothing to be sorry for  \r\nOur love is one in a million  \r\nEyes can see that we got a highway to the sky  \r\nI don't wanna hear your goodbye  \r\nOh!  \r\n>\r\n>[Barry:]  \r\nAaah!  \r\nPulse's racing , darling  \r\nHow grand we are  \r\nLittle by little we meet in the middle  \r\nThere's danger in the dark  \r\n(It oughta be illegal)  \r\nMake it a crime to be out in the cold  \r\n(It oughta be illegal)  \r\nYou got a reason for livin'  \r\nYou battle on with the love you're buildin' on  \r\nTogether  \r\nYou gotta be mine  \r\nWe take it away  \r\nIt's gotta be night and day  \r\nJust a matter of time  \r\nAnd we got nothing to be guilty of  \r\nOur love will climb and mountain near or far, we are  \r\nAnd we never let it end  \r\nWe are devotion  \r\nAnd we got nothing to be sorry for  \r\nOur love is one in a million  \r\nEyes can see that we got a highway to the sky  \r\n> \r\n>[Barbra:]  \r\nI don't wanna hear your goodbye  \r\n>   \r\n>[Barry:]  \r\nDon't wanna hear your goodbye  \r\n>   \r\n>[Both:]  \r\nI don't wanna hear your  \r\nAnd we got nothing to be guilty of  \r\nOur love will climb and mountain near or far, we are  \r\nAnd we never let it end  \r\nWe are devotion  \r\nAnd we got nothing to be sorry for  \r\nOur love is one in a million  \r\nEyes can see that we got a highway to the sky  \r\nDon't wanna hear your goodbye  \r\nDon't wanna hear your  \r\nAnd we got nothing to be guilty of.", "pub_date": "2014-02-21T05:01:00Z", "summary_html": "<p>Guilty, un dueto entre Barbra Streisand y Barry Gibb, ganador del Grammy en 1980.</p>", "body_html": "<p><strong>Guilty</strong>, un d\u00fao de Barbra Streisand con Barry Gibb el l\u00edder de la banda australiana Bee Gees, es uno de los temas representativos de principios de los ochentas, si, del siglo pasado.</p>\n<p>Se desprenden del \u00e1lbum del mismo nombre, sin duda el mas importante de la carrera de la cantante y actriz, \u00e9xitos tan importantes como <em>Woman In Love</em>, por ejemplo.</p>\n<p>Esta canci\u00f3n, <em>Culpable</em>, en espa\u00f1ol, gan\u00f3 el Grammy en 1981 como la mejor interpretaci\u00f3n pop vocal de grupo o dueto, y es un delicioso viaje al pasado.</p>\n<p><strong>T\u00edtulo</strong>: Guilty<br>\n<strong>Int\u00e9rprete</strong>: Barbra Streisand y Barry Gibb<br>\n<strong>Autores</strong>: Barry, Maurice y Robin Gibb<br>\n<strong>Album</strong>: Guilty, 1980</p>", "extend_html": "<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\nvar songlist = new Array(1);\nsonglist[0] = new Object();\nsonglist[0].mp3 = \"//media.toledano.org/audioteca/guilty.mp3\";\nsonglist[0].ogg =\" //media.toledano.org/audioteca/guilty.ogg\"\nsonglist[0].title = \"Gulty\";\nsonglist[0].cover = \"//media.toledano.org/audioteca/guilty.jpg\";\nsonglist[0].artist = \"Barbra Streisand y Barry Gibb\";     \n$(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\n</script>\n\n<blockquote>\n<p>[Barbra:]<br>\nShadows falling , baby , we stand alone<br>\nOut on the street anybody you meet got a heartache of their own<br>\n(It oughta be illegal)<br>\nMake it a crime to be lonely or sad<br>\n(It oughta be illegal)<br>\nYou got a reason for livin&rsquo;<br>\nYou battle on with the love you&rsquo;re livin&rsquo; on<br>\nYou gotta be mine<br>\nWe take it away<br>\nIt&rsquo;s gotta be night and day<br>\nJust a matter of time<br>\nAnd we got nothing to be guilty of<br>\nOur love will climb any mountain near or far, we are<br>\nAnd we never let it end<br>\nWe are devotion<br>\nAnd we got nothing to be sorry for<br>\nOur love is one in a million<br>\nEyes can see that we got a highway to the sky<br>\nI don&rsquo;t wanna hear your goodbye<br>\nOh!  </p>\n<p>[Barry:]<br>\nAaah!<br>\nPulse&rsquo;s racing , darling<br>\nHow grand we are<br>\nLittle by little we meet in the middle<br>\nThere&rsquo;s danger in the dark<br>\n(It oughta be illegal)<br>\nMake it a crime to be out in the cold<br>\n(It oughta be illegal)<br>\nYou got a reason for livin&rsquo;<br>\nYou battle on with the love you&rsquo;re buildin&rsquo; on<br>\nTogether<br>\nYou gotta be mine<br>\nWe take it away<br>\nIt&rsquo;s gotta be night and day<br>\nJust a matter of time<br>\nAnd we got nothing to be guilty of<br>\nOur love will climb and mountain near or far, we are<br>\nAnd we never let it end<br>\nWe are devotion<br>\nAnd we got nothing to be sorry for<br>\nOur love is one in a million<br>\nEyes can see that we got a highway to the sky  </p>\n<p>[Barbra:]<br>\nI don&rsquo;t wanna hear your goodbye  </p>\n<p>[Barry:]<br>\nDon&rsquo;t wanna hear your goodbye  </p>\n<p>[Both:]<br>\nI don&rsquo;t wanna hear your<br>\nAnd we got nothing to be guilty of<br>\nOur love will climb and mountain near or far, we are<br>\nAnd we never let it end<br>\nWe are devotion<br>\nAnd we got nothing to be sorry for<br>\nOur love is one in a million<br>\nEyes can see that we got a highway to the sky<br>\nDon&rsquo;t wanna hear your goodbye<br>\nDon&rsquo;t wanna hear your<br>\nAnd we got nothing to be guilty of.</p>\n</blockquote>", "enable_comments": true, "cover": "", "slug": "guilty-5-minutos-en-el-pasado", "status": 1, "featured": false, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 3, "fields": {"idx": "cf104204-e2b5-4fb7-ab45-7fc83480c458", "creado": "2017-07-28T23:32:45.338Z", "modificado": "2017-07-28T23:32:45.338Z", "title": "Nuestro mayor miedo", "summary": "Una inspiradora frase, atribuida con frecuencia a Nelson Mandela.", "body": "Title: Nuestro mayor miedo\r\nDate: 2014/02/21 00:00\r\nCategory: Trinos\r\nTags: citas\r\nSlug: nuestro-mayor-miedo\r\nAuthor: Javier Sanchez Toledano\r\nSummary: Una inspiradora frase, atribuida con frecuencia a Nelson Mandela.\r\nemail: javier@namespace.mx\r\n\r\n<blockquote>\r\n<div><em>Our deepest fear is not that we are inadequate.<br clear=\"none\" /> Our deepest fear is that we are powerful beyond measure.<br clear=\"none\" /> It is our light, not our darkness, that most frightens us.<br clear=\"none\" /> We ask ourselves, who am I to be brilliant, gorgeous, talented, and fabulous?<br clear=\"none\" /> Actually, who are you not to be?<br clear=\"none\" /></em></div>\r\n<div></div>\r\n<div><em>You are a child of God.<br clear=\"none\" /> Your playing small doesn't serve the world.<br clear=\"none\" /> There's nothing enlightened about shrinking so that other people won't feel insecure around you. </em></div>\r\n<div></div>\r\n<div><em>We are all meant to shine, as children do.<br clear=\"none\" /> We are born to make manifest the glory of God that is within us.<br clear=\"none\" /> It's not just in some of us, it's in everyone.<br clear=\"none\" /> And as we let our own light shine, we unconsciously give other people permission to do the same. </em></div>\r\n<div></div>\r\n<div><em>As we are liberated from our own fear, our presence automatically liberates others.</em></div>\r\n<div></div>\r\n<div>\r\n<div style=\"text-align: right;\"><strong>Marianne Williamson</strong></div>\r\n</div></blockquote>\r\n\r\n>\r\nNuestro mayor miedo no es ser inadecuados. Nuestro mayor miedo es ser poderosos m\u00e1s all\u00e1 de toda medida. Es nuestra luz, no la oscuridad, lo que m\u00e1s nos asusta. Y nos preguntamos \u00bfqui\u00e9n soy yo para ser tan brillante, tan talentoso, tan fabuloso? En realidad, \u00bfqui\u00e9n soy para no serlo?\r\n>\r\nTodos somos hijos de Dios. Empeque\u00f1ecerte no sirve de nada al mundo. No hay nada inteligente en encogerse para que otras personas no se sientan inseguras junto a t\u00ed. Estamos destinados a brillar, como los ni\u00f1os. Nacimos para manifestar la gloria de Dios que est\u00e1 dentro de nosotros. Y no solo en algunos, est\u00e1 en todos. Y al dejar que nuestra propia luz brille, inconcientemente dejamos que otras personas brillen igual.\r\n\r\n>\r\nAl liberarnos de nuestros propios miedos, nuestra presencia autom\u00e1ticamente libera a otros.", "extend": "", "pub_date": "2014-02-21T06:00:00Z", "summary_html": "<p>Una inspiradora frase, atribuida con frecuencia a Nelson Mandela.</p>", "body_html": "<blockquote>\n<div><em>Our deepest fear is not that we are inadequate.<br clear=\"none\" /> Our deepest fear is that we are powerful beyond measure.<br clear=\"none\" /> It is our light, not our darkness, that most frightens us.<br clear=\"none\" /> We ask ourselves, who am I to be brilliant, gorgeous, talented, and fabulous?<br clear=\"none\" /> Actually, who are you not to be?<br clear=\"none\" /></em></div>\n<div></div>\n<div><em>You are a child of God.<br clear=\"none\" /> Your playing small doesn't serve the world.<br clear=\"none\" /> There's nothing enlightened about shrinking so that other people won't feel insecure around you. </em></div>\n<div></div>\n<div><em>We are all meant to shine, as children do.<br clear=\"none\" /> We are born to make manifest the glory of God that is within us.<br clear=\"none\" /> It's not just in some of us, it's in everyone.<br clear=\"none\" /> And as we let our own light shine, we unconsciously give other people permission to do the same. </em></div>\n<div></div>\n<div><em>As we are liberated from our own fear, our presence automatically liberates others.</em></div>\n<div></div>\n<div>\n<div style=\"text-align: right;\"><strong>Marianne Williamson</strong></div>\n</div></blockquote>\n\n<blockquote>\n<p>Nuestro mayor miedo no es ser inadecuados. Nuestro mayor miedo es ser poderosos m\u00e1s all\u00e1 de toda medida. Es nuestra luz, no la oscuridad, lo que m\u00e1s nos asusta. Y nos preguntamos \u00bfqui\u00e9n soy yo para ser tan brillante, tan talentoso, tan fabuloso? En realidad, \u00bfqui\u00e9n soy para no serlo?</p>\n<p>Todos somos hijos de Dios. Empeque\u00f1ecerte no sirve de nada al mundo. No hay nada inteligente en encogerse para que otras personas no se sientan inseguras junto a t\u00ed. Estamos destinados a brillar, como los ni\u00f1os. Nacimos para manifestar la gloria de Dios que est\u00e1 dentro de nosotros. Y no solo en algunos, est\u00e1 en todos. Y al dejar que nuestra propia luz brille, inconcientemente dejamos que otras personas brillen igual.</p>\n<p>Al liberarnos de nuestros propios miedos, nuestra presencia autom\u00e1ticamente libera a otros.</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "nuestro-mayor-miedo", "status": 1, "featured": false, "category": 1, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 4, "fields": {"idx": "e24652c4-37e0-4c03-a59e-4ac779dfd927", "creado": "2017-07-28T23:33:45.118Z", "modificado": "2017-07-28T23:33:45.118Z", "title": "La Norma", "summary": "", "body": "Title: La Norma\r\nDate: 2015-08-09 8:04:25 p.m.\r\nCategory: Trinos\r\nTags:  citas\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\n\r\n> \u201cNormal is not something to aspire to, it\u2019s something to get away from.\u201d  \r\n<small>Jodie Foster</small>", "extend": "", "pub_date": "2015-08-10T01:04:00Z", "summary_html": "", "body_html": "<blockquote>\n<p>\u201cNormal is not something to aspire to, it\u2019s something to get away from.\u201d<br>\n<small>Jodie Foster</small></p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "la-norma", "status": 1, "featured": false, "category": 1, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 5, "fields": {"idx": "d6adb306-ce09-4222-a5a1-2f00c4863608", "creado": "2017-07-28T23:38:06.539Z", "modificado": "2017-07-28T23:38:06.539Z", "title": "La Oveja Negra", "summary": "Un cuento de Augusto Monterroso", "body": "Title: La Oveja Negra\r\nDate: 2015-08-09 8:04:44 p.m.\r\nCategory: trinos\r\nTags:  cuento\r\nAuthor: Javier Sanchez Toledano\r\nSummary: Un cuento de Augusto Monterroso\r\n\r\nEn un lejano pa\u00eds existi\u00f3 hace muchos a\u00f1os una Oveja negra. Fue fusilada.\r\nUn siglo despu\u00e9s, el reba\u00f1o arrepentido le levant\u00f3 una estatua ecuestre que qued\u00f3 muy bien en el parque.\r\n\r\nAs\u00ed, en lo sucesivo, cada vez que aparec\u00edan ovejas negras eran r\u00e1pidamente pasadas por las armas para que las futuras generaciones de ovejas comunes y corrientes pudieran ejercitarse tambi\u00e9n en la escultura.\r\n\r\n<cite>Augusto Monterroso</cite>", "extend": "", "pub_date": "2015-08-10T01:04:00Z", "summary_html": "<p>Un cuento de Augusto Monterroso</p>", "body_html": "<p>En un lejano pa\u00eds existi\u00f3 hace muchos a\u00f1os una Oveja negra. Fue fusilada.\nUn siglo despu\u00e9s, el reba\u00f1o arrepentido le levant\u00f3 una estatua ecuestre que qued\u00f3 muy bien en el parque.</p>\n<p>As\u00ed, en lo sucesivo, cada vez que aparec\u00edan ovejas negras eran r\u00e1pidamente pasadas por las armas para que las futuras generaciones de ovejas comunes y corrientes pudieran ejercitarse tambi\u00e9n en la escultura.</p>\n<p><cite>Augusto Monterroso</cite></p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "la-oveja-negra", "status": 1, "featured": false, "category": 1, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 6, "fields": {"idx": "f65907c0-6714-441c-b8f1-493ff3a2ca33", "creado": "2017-07-28T23:39:50.627Z", "modificado": "2017-07-28T23:39:50.627Z", "title": "Parce que tu pars", "summary": "", "body": "Title: Parce que tu pars    \r\nDate: 2015-08-09 8:06:09 p.m.\r\nCategory: trinos\r\nTags:  citas\r\nSummary: \r\n\r\n\r\n> \u201cJamais je ne me suis d\u00e9gag\u00e9e de son emprise \u2026 jamais!\r\nJ\u2019\u00e9tais comme ensorcel\u00e9e par elle\u2026 j\u2019\u00e9tais son \u00e9l\u00e9phant blanc \u00e0 elle\u2026 et sa chance!\r\nMais elle est parti\u2026 elle est vraiment parti!\r\nComment des hommes et des femmes ordinaires aussi clairs que nous, sont-ils capable d\u2019un romantisme aussi absurde, des gestes inacceptables d\u2019une souffrance intol\u00e9rable? Je vivais dans cet absolue\u2026\u201d  \r\n<small>Lara Fabian</small>", "extend": "", "pub_date": "2015-08-10T01:06:00Z", "summary_html": "", "body_html": "<blockquote>\n<p>\u201cJamais je ne me suis d\u00e9gag\u00e9e de son emprise \u2026 jamais!\nJ\u2019\u00e9tais comme ensorcel\u00e9e par elle\u2026 j\u2019\u00e9tais son \u00e9l\u00e9phant blanc \u00e0 elle\u2026 et sa chance!\nMais elle est parti\u2026 elle est vraiment parti!\nComment des hommes et des femmes ordinaires aussi clairs que nous, sont-ils capable d\u2019un romantisme aussi absurde, des gestes inacceptables d\u2019une souffrance intol\u00e9rable? Je vivais dans cet absolue\u2026\u201d<br>\n<small>Lara Fabian</small></p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "parce-que-tu-pars", "status": 1, "featured": false, "category": 1, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 7, "fields": {"idx": "ff543cf8-5572-49b3-a3c3-4569e4f29f56", "creado": "2017-07-28T23:40:27.948Z", "modificado": "2017-07-28T23:40:27.948Z", "title": "Razones y Resultados", "summary": "", "body": "Title: Razones y Resultados    \r\nDate: 2015-08-09 8:07:05 p.m.\r\nCategory: Trinos\r\nTags:  citas\r\nSummary: \r\n\r\n\r\n> \u201cEn esta vida solo puedes tener dos cosas: razones y resultados. Las razones no cuentan.\u201d", "extend": "", "pub_date": "2015-08-10T01:07:00Z", "summary_html": "", "body_html": "<blockquote>\n<p>\u201cEn esta vida solo puedes tener dos cosas: razones y resultados. Las razones no cuentan.\u201d</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "razones-y-resultados", "status": 1, "featured": false, "category": 1, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 8, "fields": {"idx": "a47ea97e-12c4-4831-b91c-311bd839f8d8", "creado": "2017-07-28T23:43:30.764Z", "modificado": "2017-07-28T23:43:30.764Z", "title": "Reflexiones sobre el Apocalipsis Zombie", "summary": "", "body": "Title: Reflexiones sobre el Apocalipsis Zombie    \r\nDate: 2015-08-09 8:07:46 p.m.\r\nCategory: Trinos\r\nTags:  citas\r\nSummary: Reflexiones sobre el inevitable Apocalisis Zombie\r\n\r\n\r\n* Es la colocaci\u00f3n d las velas y no la direcci\u00f3n del viento la q determina d\u00f3nde nos dirigimos en el #ApocalipsisZombie #S\u00e1badoDeReflexiones\r\n* If someone seriously wants to survive to #ZombieApocalypse, they will seriously make an effort to gonna make it  #S\u00e1badoDeReflexiones\r\n* Un arma te ayudar\u00e1 a escapar un zombie. Pero solo tu voluntad te har\u00e1 sobrevivir al #ApocalipsisZombie. #S\u00e1badoDeReflexiones\r\n* En el #ApocalipsisZombie, las emociones son abrumadoras. #S\u00e1badoDeReflexiones\r\n* Cuando se desencadena una locura como el #ApocalipsisZombie, la base misma de nuestra convivencia vacila y se tambalea. #S\u00e1badoDeReflexiones\r\n* Sobrevivir al #ApocalipsisZombie no depende de la capacidad f\u00edsica, si no de la voluntad y la capacidad de adaptaci\u00f3n. #S\u00e1badoDeReflexiones\r\n* Because sometimes... the truth isn't good enough. Sometimes people deserve more. Sometimes people deserve to have their faith rewarded.\r\n* Lo que verdaderamente importa en el #ApocalipsisZombie no son los zombies que matas, son los humanos que salvas. #S\u00e1badoDeReflexiones\r\n* Lo peor de la crisis del #ApocalipsisZombie es la asimetr\u00eda entre quienes la originaron y quienes la soportan. #S\u00e1badoDeReflexiones\r\n* En el #ApocalipsisZombie aquellos que tengan la posibilidad de actuar, tienen la responsabilidad de hacerlo. #S\u00e1badoDeReflexiones\r\n* El #ApocalipsisZombie se trata de sobrevivir como especie, pero primero debemos cuestionarnos porque merecemos salvarnos.\r\n* El #ApocalipsisZombie es nuestra responsabilidad y no podemos lavarnos las manos ni esconder las cosas que como especie hemos hecho.\r\n* El futuro que nos quede, depender\u00e1 de los que sobrevivan al #ApocalipsisZombie\r\n* Sobrevivir al #ApocalipsisZombie no es suficiente, debemos tener algo por lo qu\u00e9 vivir.\r\n* Aquellos que renuncian a su libertad por seguridad, no se merecen ni lo uno ni lo otro.\r\n* La guerra contra los zombies no demuestra quien es el m\u00e1s fuerte, sino el m\u00e1s inteligente.\r\n* Morality...must not be exhortation, sermon or good intentions. It must be practices.\r\n* No permitas que tu sentido de la moral te impida hacer algo que est\u00e1 bien.\r\n* Para erradicar una enfermedad de tu cuerpo debes iniciar en tu Mente\r\n* Si luchamos contra las zombies, ganar es dif\u00edcil. Si no luchamos, ya hemos perdido.\r\n* Es imposible dijo el orgullo. Es arriesgado dijo la experiencia. No tiene sentido dijo la raz\u00f3n. Int\u00e9ntalo susurr\u00f3 el coraz\u00f3n. Los voy a denunciar a la FEPADE, dijo la vieja chismosa.\r\n* Dale un pan a un hombre y comer\u00e1 un d\u00eda. Ens\u00e9\u00f1ale a usar un arma y sobrevivir\u00e1 al #ApocalipsisZombie\r\n* Tener solamente muchas armas y munici\u00f3n no te prepara para enfrentar el #Apocalipsiszombie\r\n* La pregunta que todos deben hacerse el d\u00eda de hoy es: \u00ab\u00bfEstoy listo para el #ApocalipsisZombie?\u00bb Piensa en eso.", "extend": "", "pub_date": "2015-08-10T01:07:00Z", "summary_html": "", "body_html": "<ul>\n<li>Es la colocaci\u00f3n d las velas y no la direcci\u00f3n del viento la q determina d\u00f3nde nos dirigimos en el #ApocalipsisZombie #S\u00e1badoDeReflexiones</li>\n<li>If someone seriously wants to survive to #ZombieApocalypse, they will seriously make an effort to gonna make it  #S\u00e1badoDeReflexiones</li>\n<li>Un arma te ayudar\u00e1 a escapar un zombie. Pero solo tu voluntad te har\u00e1 sobrevivir al #ApocalipsisZombie. #S\u00e1badoDeReflexiones</li>\n<li>En el #ApocalipsisZombie, las emociones son abrumadoras. #S\u00e1badoDeReflexiones</li>\n<li>Cuando se desencadena una locura como el #ApocalipsisZombie, la base misma de nuestra convivencia vacila y se tambalea. #S\u00e1badoDeReflexiones</li>\n<li>Sobrevivir al #ApocalipsisZombie no depende de la capacidad f\u00edsica, si no de la voluntad y la capacidad de adaptaci\u00f3n. #S\u00e1badoDeReflexiones</li>\n<li>Because sometimes&hellip; the truth isn&rsquo;t good enough. Sometimes people deserve more. Sometimes people deserve to have their faith rewarded.</li>\n<li>Lo que verdaderamente importa en el #ApocalipsisZombie no son los zombies que matas, son los humanos que salvas. #S\u00e1badoDeReflexiones</li>\n<li>Lo peor de la crisis del #ApocalipsisZombie es la asimetr\u00eda entre quienes la originaron y quienes la soportan. #S\u00e1badoDeReflexiones</li>\n<li>En el #ApocalipsisZombie aquellos que tengan la posibilidad de actuar, tienen la responsabilidad de hacerlo. #S\u00e1badoDeReflexiones</li>\n<li>El #ApocalipsisZombie se trata de sobrevivir como especie, pero primero debemos cuestionarnos porque merecemos salvarnos.</li>\n<li>El #ApocalipsisZombie es nuestra responsabilidad y no podemos lavarnos las manos ni esconder las cosas que como especie hemos hecho.</li>\n<li>El futuro que nos quede, depender\u00e1 de los que sobrevivan al #ApocalipsisZombie</li>\n<li>Sobrevivir al #ApocalipsisZombie no es suficiente, debemos tener algo por lo qu\u00e9 vivir.</li>\n<li>Aquellos que renuncian a su libertad por seguridad, no se merecen ni lo uno ni lo otro.</li>\n<li>La guerra contra los zombies no demuestra quien es el m\u00e1s fuerte, sino el m\u00e1s inteligente.</li>\n<li>Morality&hellip;must not be exhortation, sermon or good intentions. It must be practices.</li>\n<li>No permitas que tu sentido de la moral te impida hacer algo que est\u00e1 bien.</li>\n<li>Para erradicar una enfermedad de tu cuerpo debes iniciar en tu Mente</li>\n<li>Si luchamos contra las zombies, ganar es dif\u00edcil. Si no luchamos, ya hemos perdido.</li>\n<li>Es imposible dijo el orgullo. Es arriesgado dijo la experiencia. No tiene sentido dijo la raz\u00f3n. Int\u00e9ntalo susurr\u00f3 el coraz\u00f3n. Los voy a denunciar a la FEPADE, dijo la vieja chismosa.</li>\n<li>Dale un pan a un hombre y comer\u00e1 un d\u00eda. Ens\u00e9\u00f1ale a usar un arma y sobrevivir\u00e1 al #ApocalipsisZombie</li>\n<li>Tener solamente muchas armas y munici\u00f3n no te prepara para enfrentar el #Apocalipsiszombie</li>\n<li>La pregunta que todos deben hacerse el d\u00eda de hoy es: \u00ab\u00bfEstoy listo para el #ApocalipsisZombie?\u00bb Piensa en eso.</li>\n</ul>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "reflexiones-sobre-el-apocalipsis-zombie", "status": 1, "featured": false, "category": 1, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 9, "fields": {"idx": "e09c63b4-ffd2-46da-9570-c8ab8ca1cafb", "creado": "2017-07-28T23:45:06.262Z", "modificado": "2017-07-28T23:47:30.174Z", "title": "La verdad duele", "summary": "", "body": "Title: La verdad duele    \r\nDate: 2015-08-09 8:08:35 p.m.\r\nCategory: Trinos\r\nTags:  citas\r\nSummary: \r\n\r\n\r\n\r\n> \u201cTruth hurts, I know. It\u2019s biologically-based, actually. Our brains process sound faster than they do light, but light moves faster than sound, see? So our brains are constantly shifting reality so the world syncs up. Only when someone is standing 30 yards away do we see and hear the world exactly as it is. That\u2019s when your brain, sound, and light are all in perfect harmony. The rest of the time, we\u2019re living in a world of lies. Lies are what make the world make sense. Ergo, the truth hurts.\u201d  \r\n<cite>\u2014 \tPatrick Jane, The Mentalist</cite>", "extend": "", "pub_date": "2015-08-09T13:08:00Z", "summary_html": "", "body_html": "<blockquote>\n<p>\u201cTruth hurts, I know. It\u2019s biologically-based, actually. Our brains process sound faster than they do light, but light moves faster than sound, see? So our brains are constantly shifting reality so the world syncs up. Only when someone is standing 30 yards away do we see and hear the world exactly as it is. That\u2019s when your brain, sound, and light are all in perfect harmony. The rest of the time, we\u2019re living in a world of lies. Lies are what make the world make sense. Ergo, the truth hurts.\u201d<br>\n<cite>\u2014     Patrick Jane, The Mentalist</cite></p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "la-verdad-duele", "status": 1, "featured": false, "category": 1, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 10, "fields": {"idx": "c8817355-1f01-4941-883d-d4b4b94018a0", "creado": "2017-07-28T23:48:22.130Z", "modificado": "2017-07-28T23:48:22.130Z", "title": "The Love We Had", "summary": "", "body": "Title: The Love We Had\r\nDate: 2014/02/24 20:17\r\nCategory: Audioteca\r\nTags: lang:en, r&b, cover\r\nSlug: the-love-we-had\r\nFavorito: True\r\nCover: https://media.toledano.org/images/the-love-we-have.jpg\r\nSummary: Un excelente cover de esta rom\u00e1ntica canci\u00f3n interpretado por Joss Stone\r\n\r\n\u00bfC\u00f3mo es posible que canciones tristes, se escuchen m\u00e1s tristes con ciertas voces?\r\n\r\nBueno, pues esto me pasa con __The Love We Have__, del disco _The Soul Season Vol 2_ de __Joss Stone__.\r\n\r\nLa versi\u00f3n m\u00e1s antigua de esta canci\u00f3n corresponde a un grupo de R&B llamado _The Dells_, que lanz\u00f3 esta canci\u00f3n en 1972. Luego, en la d\u00e9cada de 1990, otro grupo (tambi\u00e9n de R&B) llamado _Dru Hill_ hizo un cover de esta canci\u00f3n.\r\n\r\nY seguramente se debe a que la letra (escrita por el jazzista Terrence Orlando Callier y Larry Wade) est\u00e1 llena de amor, de nostalgia, de soledad y de esperanza, y supera a todas las versiones que hagan de ella.\r\n\r\nPara que la conozcan les dejo la interpretaci\u00f3n de Joss Stone, que transmite la tristeza y el dolor de esta canci\u00f3n, con toda su fuerza.\r\n\r\n__T\u00edtulo__: The Love We Had (Stays On My Mind)  \r\n__Int\u00e9rprete__: Joss Stone  \r\n__Album__: The Soul Season Vol. 2  \r\n__Autores__: Terrence O. Callier / Larry Wade\r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\n  var songlist = new Array(1);\r\n  songlist[0] = new Object();\r\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/the-love-we-have.mp3\";\r\n  songlist[0].ogg = \"//media.toledano.org/audioteca/the-love-we-have.ogg\";\r\n  songlist[0].title = \"The Love We Have (Stays In My Mind)\";\r\n  songlist[0].cover = \"//media.toledano.org/audioteca/the-love-we-have.jpg\";\r\n  songlist[0].artist = \"Joss Stone\";\r\n</script> \r\n\r\n<blockquote>\r\n  <p>Lately baby, I&#8217;ve been thinking<br />\r\n  How good it was when you were here<br />\r\n  And it ain&#8217;t the wine that I been drinking</p>\r\n  \r\n  <p>For once I feel my head is clear<br />\r\n  But early this morning, when I opened up my eyes<br />\r\n  That old lonesome feeling took me by surprise<br />\r\n  I guess you meant more to me than I realized<br />\r\n  The love we had stays on my mind<br />\r\n  <em>The love we had stays on my mind</em></p>\r\n  \r\n  <p>And lately girl, I&#8217;ve been remembering<br />\r\n  The good times that we used to share<br />\r\n  My thoughts of you don&#8217;t have an ending<br />\r\n  And memories of you are everywhere</p>\r\n  \r\n  <p>But why should I tell you, it&#8217;s not your concern<br />\r\n  You win some, you lose some<br />\r\n  Well I&#8217;ve lost and I&#8217;ve learned<br />\r\n  It&#8217;s just that I&#8217;m so lonely<br />\r\n  With no place to turn<br />\r\n  And here at the end, I find<br />\r\n  Yes I do<br />\r\n  The love we had stays on my mind</p>\r\n  \r\n  <p>Girl, if you were nearer<br />\r\n  If you had a mirror<br />\r\n  Maybe you could count my tears</p>\r\n  \r\n  <p>And if you were nearer<br />\r\n  It would all be clearer<br />\r\n  How I wish that you were here<br />\r\n  <em>How I wish that you were here<br />\r\n  </em><em>How I wish</em><span>, </span><em>how I wish<br />\r\n  </em><em>How I wish</em><span> that you were here</span></p>\r\n  \r\n  <p>And baby girl I was tired<br />\r\n  So I laid down to dream for a little while<br />\r\n  But lately I&#8217;ve been so, so uninspire<br />\r\n  Without the comfort of your smile</p>\r\n  \r\n  <p>But I&#8217;m not complaining<br />\r\n  Cuz that&#8217;s how it goes<br />\r\n  There&#8217;s always some h\r\n  eartache<br />\r\n  In this world I suppose</p>\r\n  \r\n  <p>But you can&#8217;t imagine<br />\r\n  But nobody knows<br />\r\n  The love we had stays on my mind<br />\r\n  <em>The love we had stays on my mind<br />\r\n  </em><em>The love we had stays on my mind</em></p>\r\n</blockquote>\r\n\r\n<p>Por cierto, si estos enalces si quieren escuchar la versi\u00f3n de <a href=\"http://www.youtube.com/watch?v=hs8OxUlIFEk\"><strong>The Mighty Dells</strong></a> o la versi\u00f3n de <a href=\"http://www.youtube.com/watch?v=8M8UTSUZ4c4\"><strong>Dru Hill</strong></a>.</p>", "extend": "", "pub_date": "2014-02-25T02:17:00Z", "summary_html": "", "body_html": "<p>\u00bfC\u00f3mo es posible que canciones tristes, se escuchen m\u00e1s tristes con ciertas voces?</p>\n<p>Bueno, pues esto me pasa con <strong>The Love We Have</strong>, del disco <em>The Soul Season Vol 2</em> de <strong>Joss Stone</strong>.</p>\n<p>La versi\u00f3n m\u00e1s antigua de esta canci\u00f3n corresponde a un grupo de R&amp;B llamado <em>The Dells</em>, que lanz\u00f3 esta canci\u00f3n en 1972. Luego, en la d\u00e9cada de 1990, otro grupo (tambi\u00e9n de R&amp;B) llamado <em>Dru Hill</em> hizo un cover de esta canci\u00f3n.</p>\n<p>Y seguramente se debe a que la letra (escrita por el jazzista Terrence Orlando Callier y Larry Wade) est\u00e1 llena de amor, de nostalgia, de soledad y de esperanza, y supera a todas las versiones que hagan de ella.</p>\n<p>Para que la conozcan les dejo la interpretaci\u00f3n de Joss Stone, que transmite la tristeza y el dolor de esta canci\u00f3n, con toda su fuerza.</p>\n<p><strong>T\u00edtulo</strong>: The Love We Had (Stays On My Mind)<br>\n<strong>Int\u00e9rprete</strong>: Joss Stone<br>\n<strong>Album</strong>: The Soul Season Vol. 2<br>\n<strong>Autores</strong>: Terrence O. Callier / Larry Wade</p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\n  var songlist = new Array(1);\n  songlist[0] = new Object();\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/the-love-we-have.mp3\";\n  songlist[0].ogg = \"//media.toledano.org/audioteca/the-love-we-have.ogg\";\n  songlist[0].title = \"The Love We Have (Stays In My Mind)\";\n  songlist[0].cover = \"//media.toledano.org/audioteca/the-love-we-have.jpg\";\n  songlist[0].artist = \"Joss Stone\";\n</script>\n\n<blockquote>\n  <p>Lately baby, I&#8217;ve been thinking<br />\n  How good it was when you were here<br />\n  And it ain&#8217;t the wine that I been drinking</p>\n\n  <p>For once I feel my head is clear<br />\n  But early this morning, when I opened up my eyes<br />\n  That old lonesome feeling took me by surprise<br />\n  I guess you meant more to me than I realized<br />\n  The love we had stays on my mind<br />\n  <em>The love we had stays on my mind</em></p>\n\n  <p>And lately girl, I&#8217;ve been remembering<br />\n  The good times that we used to share<br />\n  My thoughts of you don&#8217;t have an ending<br />\n  And memories of you are everywhere</p>\n\n  <p>But why should I tell you, it&#8217;s not your concern<br />\n  You win some, you lose some<br />\n  Well I&#8217;ve lost and I&#8217;ve learned<br />\n  It&#8217;s just that I&#8217;m so lonely<br />\n  With no place to turn<br />\n  And here at the end, I find<br />\n  Yes I do<br />\n  The love we had stays on my mind</p>\n\n  <p>Girl, if you were nearer<br />\n  If you had a mirror<br />\n  Maybe you could count my tears</p>\n\n  <p>And if you were nearer<br />\n  It would all be clearer<br />\n  How I wish that you were here<br />\n  <em>How I wish that you were here<br />\n  </em><em>How I wish</em><span>, </span><em>how I wish<br />\n  </em><em>How I wish</em><span> that you were here</span></p>\n\n  <p>And baby girl I was tired<br />\n  So I laid down to dream for a little while<br />\n  But lately I&#8217;ve been so, so uninspire<br />\n  Without the comfort of your smile</p>\n\n  <p>But I&#8217;m not complaining<br />\n  Cuz that&#8217;s how it goes<br />\n  There&#8217;s always some h\n  eartache<br />\n  In this world I suppose</p>\n\n  <p>But you can&#8217;t imagine<br />\n  But nobody knows<br />\n  The love we had stays on my mind<br />\n  <em>The love we had stays on my mind<br />\n  </em><em>The love we had stays on my mind</em></p>\n</blockquote>\n\n<p>Por cierto, si estos enalces si quieren escuchar la versi\u00f3n de <a href=\"http://www.youtube.com/watch?v=hs8OxUlIFEk\"><strong>The Mighty Dells</strong></a> o la versi\u00f3n de <a href=\"http://www.youtube.com/watch?v=8M8UTSUZ4c4\"><strong>Dru Hill</strong></a>.</p>", "extend_html": "", "enable_comments": true, "cover": "https://media.toledano.org/images/the-love-we-have.jpg", "slug": "love-we-had", "status": 1, "featured": true, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 11, "fields": {"idx": "599379a2-9d1f-411b-9acf-9a10a75bd47a", "creado": "2017-07-28T23:54:49.837Z", "modificado": "2017-07-28T23:54:49.837Z", "title": "Tierra Luna", "summary": "", "body": "Title: Tierra Luna\r\nDate: 2014/02/28 23:02\r\nCategory: Audioteca\r\nTags: lang:es, poesia, trova\r\nSlug: tierra-luna\r\nAuthor: Javier Sanchez Toledano\r\nemail: javier@namespace.mx\r\nSummary: De Mario Benedetti, basada en una obra de Boris Vian, musicalizada por Alberto Favero. Interpretada por Eugenia Le\u00f3n.\r\n\r\n\r\nLa **Audioteca Toledana** inicia su tercera etapa, con una canci\u00f3n definitiva. Me enamor\u00e9 de *Eugenia Le\u00f3n* por su interpretaci\u00f3n de esta canci\u00f3n. Pero esta canci\u00f3n tiene una historia entreverada que vale la pena contar.\r\n\r\nBoris Vian, el autor del poema original[^1], un ingeniero, m\u00fasico, escritor y poeta, no solo escribi\u00f3 el poema que inspira esta canci\u00f3n. Tambi\u00e9n escribi\u00f3 el cuento \u00abEl Lobo Hombre\u00bb que el grupo de rock espa\u00f1ol La Uni\u00f3n, recre\u00f3 en una popular canci\u00f3n llamada \u00abLobo Hombre en Par\u00eds\u00bb. Mario Benedetti, poeta uruguayo, hace la letra de esta obra y la titula \u00abVariaciones a un tema de Boris Vian\u00bb. Alberto Favero la musicaliza para que sea interpretada por la cantante argentina Nacha Guevara.\r\n\r\n[^1]: La verdad es que no he encontra **nunca** cual es el tema de Boris Vian del que habla Benedetti, por otro lado, no tengo porque no creerle.\r\n\r\nPero la interpretaci\u00f3n de Eugenia Le\u00f3n, supera a cualquier comentario.\r\n\r\n### Tierra Luna\r\n\r\nAutor: Mario Benedetti, basado en una obra de Boris Vian  \r\nM\u00fasica: Alberto Favero  \r\nInt\u00e9rprete: Eugenia Le\u00f3n  \r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\nvar songlist = new Array(1);\r\nsonglist[0] = new Object();\r\nsonglist[0].mp3 = \"//media.toledano.org/audioteca/tierra-luna.mp3\";\r\nsonglist[0].ogg = \"//media.toledano.org/audioteca/tierra-luna.ogg\";\r\nsonglist[0].title = \"Tierra Luna\";\r\nsonglist[0].cover = \"//media.toledano.org/audioteca/tierra-luna.jpg\";\r\nsonglist[0].artist = \"Eugenia Le\u00f3n\";\r\n$(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\r\n</script>\r\n\r\n>\r\nCuando me canse de escuchar  \r\nllantos de ni\u00f1os en la brisa  \r\ncuando me canse de mirar  \r\npueblos que apenas son ceniza  \r\n>  \r\nme ir\u00e9 con lluvias estrelladas  \r\nque son diamantes en el barro  \r\nglacial cometa de miradas  \r\nvivo la noche y desamarro  \r\n\r\n>\r\ny con estrellas miel y flores  \r\nque son rub\u00edes y topacio  \r\ntendr\u00e9 el silencio en los albores  \r\ndel infinito eterno espacio  \r\n\r\n>\r\ncuando me canse de la lluvia  \r\ny de la sangre y de la guerra  \r\ncuando me canse de esta tierra  \r\nme mudar\u00e9 a la luna rubia  \r\n\r\n>\r\nah tierra-luna tierra-luna  \r\natr\u00e1s qued\u00f3 la suerte perra  \r\natr\u00e1s los muertos y la guerra  \r\nadi\u00f3s  \r\n\r\n>\r\nah tierra-luna tierra-luna  \r\nme pongo hoy las alas de oro  \r\ny cielo arriba cual meteoro  \r\nme voy  \r\n\r\n>\r\nas\u00ed que ahora no te asombres  \r\nsi desde esta luna hueca  \r\nme burlo de la tierra seca  \r\ny de los pobres simples hombres  \r\n\r\n>\r\nah tierra-luna tierra-luna  \r\nadi\u00f3s ciudad mi coraz\u00f3n  \r\nglobo tullido de aflicci\u00f3n  \r\nadi\u00f3s  \r\n\r\n>\r\ncuando me canse de esperar  \r\na los ind\u00f3mitos que huyen  \r\ncuando me canse de so\u00f1ar  \r\nsue\u00f1os que siempre se concluyen  \r\n\r\n>\r\nme ir\u00e9 otra vez inoportuno  \r\ny apostar\u00e9 por el que pierde  \r\ny volver\u00e9 cuando ninguno  \r\nme necesite ni recuerde  \r\n\r\n>\r\ny con el t\u00edmido derroche  \r\nde una paciencia vengadora  \r\ntendr\u00e9 las dudas de la noche  \r\nsin las respuestas de la aurora  \r\n\r\n>\r\ncuando me canse la rutina  \r\nde que me ultrajen y me roben  \r\ncuando me canse de esta ruina  \r\nme mudar\u00e9 a la luna joven  \r\n\r\n>\r\nah tierra-luna tierra-luna  \r\natr\u00e1s qued\u00f3 la suerte perra  \r\natr\u00e1s los muertos y la guerra  \r\nadi\u00f3s  \r\n\r\n>\r\nah tierra-luna tierra-luna  \r\nme pongo hoy las alas de oro  \r\ny cielo arriba cual meteoro  \r\nme voy  \r\n\r\n>\r\nalguna vez mi vida quieta  \r\nver\u00e1 estallar en el pasado  \r\nmi triste y c\u00e1ndido planeta  \r\nque se crey\u00f3 civilizado  \r\n\r\n>\r\nah tierra-luna tierra-luna  \r\nmundo ca\u00f3tico y podrido  \r\npierrot de arriba me despido  \r\nadi\u00f3s", "extend": "", "pub_date": "2014-03-01T05:02:00Z", "summary_html": "", "body_html": "<p>La <strong>Audioteca Toledana</strong> inicia su tercera etapa, con una canci\u00f3n definitiva. Me enamor\u00e9 de <em>Eugenia Le\u00f3n</em> por su interpretaci\u00f3n de esta canci\u00f3n. Pero esta canci\u00f3n tiene una historia entreverada que vale la pena contar.</p>\n<p>Boris Vian, el autor del poema original<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>, un ingeniero, m\u00fasico, escritor y poeta, no solo escribi\u00f3 el poema que inspira esta canci\u00f3n. Tambi\u00e9n escribi\u00f3 el cuento \u00abEl Lobo Hombre\u00bb que el grupo de rock espa\u00f1ol La Uni\u00f3n, recre\u00f3 en una popular canci\u00f3n llamada \u00abLobo Hombre en Par\u00eds\u00bb. Mario Benedetti, poeta uruguayo, hace la letra de esta obra y la titula \u00abVariaciones a un tema de Boris Vian\u00bb. Alberto Favero la musicaliza para que sea interpretada por la cantante argentina Nacha Guevara.</p>\n<p>Pero la interpretaci\u00f3n de Eugenia Le\u00f3n, supera a cualquier comentario.</p>\n<h3 id=\"tierra-luna\">Tierra Luna</h3>\n<p>Autor: Mario Benedetti, basado en una obra de Boris Vian<br>\nM\u00fasica: Alberto Favero<br>\nInt\u00e9rprete: Eugenia Le\u00f3n  </p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\nvar songlist = new Array(1);\nsonglist[0] = new Object();\nsonglist[0].mp3 = \"//media.toledano.org/audioteca/tierra-luna.mp3\";\nsonglist[0].ogg = \"//media.toledano.org/audioteca/tierra-luna.ogg\";\nsonglist[0].title = \"Tierra Luna\";\nsonglist[0].cover = \"//media.toledano.org/audioteca/tierra-luna.jpg\";\nsonglist[0].artist = \"Eugenia Le\u00f3n\";\n$(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\n</script>\n\n<blockquote>\n<p>Cuando me canse de escuchar<br>\nllantos de ni\u00f1os en la brisa<br>\ncuando me canse de mirar<br>\npueblos que apenas son ceniza  </p>\n<p>me ir\u00e9 con lluvias estrelladas<br>\nque son diamantes en el barro<br>\nglacial cometa de miradas<br>\nvivo la noche y desamarro  </p>\n<p>y con estrellas miel y flores<br>\nque son rub\u00edes y topacio<br>\ntendr\u00e9 el silencio en los albores<br>\ndel infinito eterno espacio  </p>\n<p>cuando me canse de la lluvia<br>\ny de la sangre y de la guerra<br>\ncuando me canse de esta tierra<br>\nme mudar\u00e9 a la luna rubia  </p>\n<p>ah tierra-luna tierra-luna<br>\natr\u00e1s qued\u00f3 la suerte perra<br>\natr\u00e1s los muertos y la guerra<br>\nadi\u00f3s  </p>\n<p>ah tierra-luna tierra-luna<br>\nme pongo hoy las alas de oro<br>\ny cielo arriba cual meteoro<br>\nme voy  </p>\n<p>as\u00ed que ahora no te asombres<br>\nsi desde esta luna hueca<br>\nme burlo de la tierra seca<br>\ny de los pobres simples hombres  </p>\n<p>ah tierra-luna tierra-luna<br>\nadi\u00f3s ciudad mi coraz\u00f3n<br>\nglobo tullido de aflicci\u00f3n<br>\nadi\u00f3s  </p>\n<p>cuando me canse de esperar<br>\na los ind\u00f3mitos que huyen<br>\ncuando me canse de so\u00f1ar<br>\nsue\u00f1os que siempre se concluyen  </p>\n<p>me ir\u00e9 otra vez inoportuno<br>\ny apostar\u00e9 por el que pierde<br>\ny volver\u00e9 cuando ninguno<br>\nme necesite ni recuerde  </p>\n<p>y con el t\u00edmido derroche<br>\nde una paciencia vengadora<br>\ntendr\u00e9 las dudas de la noche<br>\nsin las respuestas de la aurora  </p>\n<p>cuando me canse la rutina<br>\nde que me ultrajen y me roben<br>\ncuando me canse de esta ruina<br>\nme mudar\u00e9 a la luna joven  </p>\n<p>ah tierra-luna tierra-luna<br>\natr\u00e1s qued\u00f3 la suerte perra<br>\natr\u00e1s los muertos y la guerra<br>\nadi\u00f3s  </p>\n<p>ah tierra-luna tierra-luna<br>\nme pongo hoy las alas de oro<br>\ny cielo arriba cual meteoro<br>\nme voy  </p>\n<p>alguna vez mi vida quieta<br>\nver\u00e1 estallar en el pasado<br>\nmi triste y c\u00e1ndido planeta<br>\nque se crey\u00f3 civilizado  </p>\n<p>ah tierra-luna tierra-luna<br>\nmundo ca\u00f3tico y podrido<br>\npierrot de arriba me despido<br>\nadi\u00f3s</p>\n</blockquote>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>La verdad es que no he encontra <strong>nunca</strong> cual es el tema de Boris Vian del que habla Benedetti, por otro lado, no tengo porque no creerle.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "tierra-luna", "status": 1, "featured": false, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 12, "fields": {"idx": "8ea64b6b-d684-45ca-b989-1cd1b3d5caa4", "creado": "2017-07-28T23:59:45.030Z", "modificado": "2017-07-29T00:04:43.772Z", "title": "Hoy", "summary": "", "body": "Title: Hoy\r\nDate: 2014/03/07 23:33\r\nCategory: Audioteca\r\nTags: grupera, lang:es\r\nSlug: hoy\r\nCover: https://media.toledano.org/images/audioteca/hoy.jpg\r\nSummary: Letra y m\u00fasica de la canci\u00f3n \u00abHoy\u00bb con Los Solitarios. Un cl\u00e1sico del ayer.\r\n\r\nDe la exclusiva _Audioteca Toledana_ les traigo para ustedes una joya de la m\u00fasica del ayer. El origen de la m\u00fasica _\"grupera\"_ tan de moda en la actualidad tiene su origen en grupos de m\u00fasica rom\u00e1ntica que en los a\u00f1os 70's hicieron la delicia de esas generaciones. Uno de estos grupos fue __Los Solitarios__, que interpretan esta canci\u00f3n. \r\n\r\n__T\u00edtulo__: Hoy    \r\n__Int\u00e9rprete__: Los Solitarios  \r\n__Autor__: Agust\u00edn Villegas\r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\n  var songlist = new Array(1);\r\n  songlist[0] = new Object();\r\n  songlist[0].mp3 = \"https://media.toledano.org/audioteca/hoy.mp3\";\r\n  songlist[0].ogg = \"https://media.toledano.org/audioteca/hoy.ogg\"\r\n  songlist[0].title = \"Hoy\";\r\n  songlist[0].cover = \"https:///media.toledano.org/audioteca/hoy.jpg\";\r\n  songlist[0].artist = \"Los Solitarios\";\r\n</script>\r\n\r\n> \r\nHoy   \r\nque me encuentro tan solo  \r\nas\u00ed me doy cuenta  \r\ndel grande cari\u00f1o  \r\nque tuve por t\u00ed.  \r\n>\r\nHoy,  \r\nrecordando el pasado,  \r\nviviendo el recuerdo  \r\nde aquellos momentos  \r\nen que fui feliz.  \r\n>  \r\nVoy caminando sin rumbo,  \r\nsin hallar en la vida  \r\nun consuelo a mis penas  \r\n>  \r\nHoy,  \r\nque perd\u00ed tu cari\u00f1o,  \r\ny estoy solo en el mundo  \r\nbusco en bocas ajenas  \r\n>    \r\nQui\u00e9n  \r\na olvidarte me ayude  \r\ny a olvider lo que tuve  \r\ncuando tu eras mi reina  \r\n>  \r\nHoy,  \r\nque me voy de tu lado,  \r\nquisiera que nunca  \r\nsintieras lo mismo  \r\nque hoy siento por ti  \r\n>  \r\nHoy,  \r\nrecordando el pasado,  \r\nviviendo el recuerdo  \r\nde aquellos momentos  \r\nen que fui feliz  \r\n>  \r\nVoy caminando sin rumbo,  \r\nsin hallar en la vida  \r\nun consuelo a mis penas  \r\n>  \r\nHoy,  \r\nque perd\u00ed tu cari\u00f1o...", "extend": "", "pub_date": "2014-03-08T05:33:00Z", "summary_html": "", "body_html": "<p>De la exclusiva <em>Audioteca Toledana</em> les traigo para ustedes una joya de la m\u00fasica del ayer. El origen de la m\u00fasica <em>&ldquo;grupera&rdquo;</em> tan de moda en la actualidad tiene su origen en grupos de m\u00fasica rom\u00e1ntica que en los a\u00f1os 70&rsquo;s hicieron la delicia de esas generaciones. Uno de estos grupos fue <strong>Los Solitarios</strong>, que interpretan esta canci\u00f3n. </p>\n<p><strong>T\u00edtulo</strong>: Hoy  <br>\n<strong>Int\u00e9rprete</strong>: Los Solitarios<br>\n<strong>Autor</strong>: Agust\u00edn Villegas</p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\n  var songlist = new Array(1);\n  songlist[0] = new Object();\n  songlist[0].mp3 = \"https://media.toledano.org/audioteca/hoy.mp3\";\n  songlist[0].ogg = \"https://media.toledano.org/audioteca/hoy.ogg\"\n  songlist[0].title = \"Hoy\";\n  songlist[0].cover = \"https:///media.toledano.org/audioteca/hoy.jpg\";\n  songlist[0].artist = \"Los Solitarios\";\n</script>\n\n<blockquote>\n<p>Hoy <br>\nque me encuentro tan solo<br>\nas\u00ed me doy cuenta<br>\ndel grande cari\u00f1o<br>\nque tuve por t\u00ed.  </p>\n<p>Hoy,<br>\nrecordando el pasado,<br>\nviviendo el recuerdo<br>\nde aquellos momentos<br>\nen que fui feliz.  </p>\n<p>Voy caminando sin rumbo,<br>\nsin hallar en la vida<br>\nun consuelo a mis penas  </p>\n<p>Hoy,<br>\nque perd\u00ed tu cari\u00f1o,<br>\ny estoy solo en el mundo<br>\nbusco en bocas ajenas  </p>\n<p>Qui\u00e9n<br>\na olvidarte me ayude<br>\ny a olvider lo que tuve<br>\ncuando tu eras mi reina  </p>\n<p>Hoy,<br>\nque me voy de tu lado,<br>\nquisiera que nunca<br>\nsintieras lo mismo<br>\nque hoy siento por ti  </p>\n<p>Hoy,<br>\nrecordando el pasado,<br>\nviviendo el recuerdo<br>\nde aquellos momentos<br>\nen que fui feliz  </p>\n<p>Voy caminando sin rumbo,<br>\nsin hallar en la vida<br>\nun consuelo a mis penas  </p>\n<p>Hoy,<br>\nque perd\u00ed tu cari\u00f1o&hellip;</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "https://media.toledano.org/images/audioteca/hoy.jpg", "slug": "hoy", "status": 1, "featured": true, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 13, "fields": {"idx": "c0117614-d8f2-4fc6-8a96-ef93c8d52831", "creado": "2017-07-29T00:05:36.064Z", "modificado": "2017-07-29T00:05:36.064Z", "title": "Si te vas", "summary": "", "body": "Title: Si te vas\r\nDate: 2015-08-09 2:26:36 p.m.\r\nCategory: Audioteca\r\nTags: lang:es, pop\r\nAuthor: Javier Sanchez Toledano\r\nFavorito: True\r\nCover: https://media.toledano.org/images/Meg-Ryan-meg-ryan-20771683-1600-1200.jpg\r\nSummary: \r\n\r\n\r\nEn 1999, cas\u00ed 10 a\u00f1os despu\u00e9s de su separaci\u00f3n[^1], el grupo __Flans__ vuelve a unirse bajo el concepto llamado _\u00abEl reencuentro del milenio\u00bb_. Para este magno evento editaron un disco con canciones in\u00e9ditas: __Hadas__ de donde surgieron \u00e9xitos como Hadas, Tu eterna pesadilla y Rufino.\r\n\r\nDe este disco, la Audioteca Toledana les presenta __Si te vas__, una melanc\u00f3lica canci\u00f3n que no tiene grandes exigencias lo cual la hace perfecta para ser interpretada por Ilse[^2].\r\n\r\n__Si te vas__ es una canci\u00f3n de amor y desesperanza, triste, donde parece que uno reconoce una derrota al estar enamorado. El video tiene un concepto brillante, pero una producci\u00f3n muy pobre.\r\n\r\n<!--more-->\r\n\r\nEn fin, ya que Flans es ahora un concepto nost\u00e1lgico y que el grupo, ahora llamado __\u00abIlse, Ivonne y Mim\u00ed\u00bb__ no tienen una producci\u00f3n, le dejo esta canci\u00f3n que es el \u00faltimo \u00e9xito del grupo pop m\u00e1s influyente de la segunda mitad del siglo XX, __Si te vas__.\r\n\r\nT\u00edtulo: __Si te vas__\r\nAutor: __Aar\u00f3n Montalvo__  \r\nAlbum: __Hadas__  \r\nInt\u00e9rprete: __Flans__\r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\nvar songlist = new Array(1);\r\nsonglist[0] = new Object();\r\nsonglist[0].mp3 = \"https://media.toledano.org/audioteca/si-te-vas.mp3\";\r\nsonglist[0].ogg = \"https://media.toledano.org/audioteca/si-te-vas.ogg\"\r\nsonglist[0].title = \"Si te vas\";\r\nsonglist[0].cover = \"https://media.toledano.org/audioteca/si-te-vas.jpg\";\r\nsonglist[0].artist = \"Flans\";     \r\n$(\"#player\").xeMusicPlayer({songlist: songlist, theme: 1, mode: 2});\r\n</script>\r\n\r\n\r\n> Otro d\u00eda m\u00e1s  \r\nQue invades mis ideas y   \r\nNo est\u00e1s   \r\nQuien iba a pensar  \r\nQue me ibas a golpear y ser  \r\nM\u00ed realidad  \r\n<br>\r\n> Te has vuelto indispensable   \r\nQue hasta mis huesos   \r\nExtra\u00f1an tu calor   \r\n<br>\r\n> S\u00ed te vas   \r\nMe pierdo s\u00ed te vas   \r\nS\u00ed te vas   \r\nLas horas pesan no es igual   \r\n<br>\r\n> C\u00f3mo controlar   \r\nLas tantas ganas de ara\u00f1ar   \r\nTu piel   \r\nY es que tu sabes provocar   \r\nMuy bien   \r\nEl punto exacto aqu\u00ed   \r\nEn mi ser   \r\nEres tan necesario   \r\nQue hasta mi cuerpo   \r\nSe olvida de existir   \r\n<br>  \r\n> Si te vas  \r\nMe pierdo si te vas   \r\nSi te vas   \r\nLas horas pesan no es igual   \r\nSi no est\u00e1s   \r\nEl silencio es total   \r\nSi no est\u00e1s   \r\nSi no est\u00e1s   \r\nSi tu no est\u00e1s   \r\n<br>\r\n> Si no est\u00e1s \r\nSi no escucho tu voz \r\nEs mortal  \r\nEs mortal  \r\nSi tu no est\u00e1s   \r\n<br>\r\n> Te has vuelto indispensable  \r\nQue hasta mis huesos    \r\nExtra\u00f1an tu calor    \r\nSi te vas   \r\nMe pierdo  \r\nSi te vas  \r\nSi te vas  \r\nLas horas pesan no es igual  \r\nSi no est\u00e1s  \r\nEl silencio es total  \r\nSi no est\u00e1s  \r\nSi no est\u00e1s  \r\nSi tu no est\u00e1s  \r\nSi no est\u00e1s  \r\nSi no escucho tu voz   \r\nEs mortal   \r\nEs mortal   \r\nSi tu no est\u00e1s \r\n<br>\r\n> Y es que tu sabes provocar  \r\nMuy bien   \r\nEl punto exacto aqu\u00ed   \r\nEn mi piel  \r\n\r\n[^1]: Por culpa de Ivonne, es justo decirlo.\r\n[^2]: Por si no se han dado cuenta, todo esto de Flans es \u00fanicamente por Ilse.", "extend": "", "pub_date": "2015-08-09T19:26:00Z", "summary_html": "", "body_html": "<p>En 1999, cas\u00ed 10 a\u00f1os despu\u00e9s de su separaci\u00f3n<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>, el grupo <strong>Flans</strong> vuelve a unirse bajo el concepto llamado <em>\u00abEl reencuentro del milenio\u00bb</em>. Para este magno evento editaron un disco con canciones in\u00e9ditas: <strong>Hadas</strong> de donde surgieron \u00e9xitos como Hadas, Tu eterna pesadilla y Rufino.</p>\n<p>De este disco, la Audioteca Toledana les presenta <strong>Si te vas</strong>, una melanc\u00f3lica canci\u00f3n que no tiene grandes exigencias lo cual la hace perfecta para ser interpretada por Ilse<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>.</p>\n<p><strong>Si te vas</strong> es una canci\u00f3n de amor y desesperanza, triste, donde parece que uno reconoce una derrota al estar enamorado. El video tiene un concepto brillante, pero una producci\u00f3n muy pobre.</p>\n<!--more-->\n\n<p>En fin, ya que Flans es ahora un concepto nost\u00e1lgico y que el grupo, ahora llamado <strong>\u00abIlse, Ivonne y Mim\u00ed\u00bb</strong> no tienen una producci\u00f3n, le dejo esta canci\u00f3n que es el \u00faltimo \u00e9xito del grupo pop m\u00e1s influyente de la segunda mitad del siglo XX, <strong>Si te vas</strong>.</p>\n<p>T\u00edtulo: <strong>Si te vas</strong>\nAutor: <strong>Aar\u00f3n Montalvo</strong><br>\nAlbum: <strong>Hadas</strong><br>\nInt\u00e9rprete: <strong>Flans</strong></p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\nvar songlist = new Array(1);\nsonglist[0] = new Object();\nsonglist[0].mp3 = \"https://media.toledano.org/audioteca/si-te-vas.mp3\";\nsonglist[0].ogg = \"https://media.toledano.org/audioteca/si-te-vas.ogg\"\nsonglist[0].title = \"Si te vas\";\nsonglist[0].cover = \"https://media.toledano.org/audioteca/si-te-vas.jpg\";\nsonglist[0].artist = \"Flans\";     \n$(\"#player\").xeMusicPlayer({songlist: songlist, theme: 1, mode: 2});\n</script>\n\n<blockquote>\n<p>Otro d\u00eda m\u00e1s<br>\nQue invades mis ideas y <br>\nNo est\u00e1s <br>\nQuien iba a pensar<br>\nQue me ibas a golpear y ser<br>\nM\u00ed realidad<br>\n<br>\nTe has vuelto indispensable <br>\nQue hasta mis huesos <br>\nExtra\u00f1an tu calor <br>\n<br>\nS\u00ed te vas <br>\nMe pierdo s\u00ed te vas <br>\nS\u00ed te vas <br>\nLas horas pesan no es igual <br>\n<br>\nC\u00f3mo controlar <br>\nLas tantas ganas de ara\u00f1ar <br>\nTu piel <br>\nY es que tu sabes provocar <br>\nMuy bien <br>\nEl punto exacto aqu\u00ed <br>\nEn mi ser <br>\nEres tan necesario <br>\nQue hasta mi cuerpo <br>\nSe olvida de existir <br>\n<br><br>\nSi te vas<br>\nMe pierdo si te vas <br>\nSi te vas <br>\nLas horas pesan no es igual <br>\nSi no est\u00e1s <br>\nEl silencio es total <br>\nSi no est\u00e1s <br>\nSi no est\u00e1s <br>\nSi tu no est\u00e1s <br>\n<br>\nSi no est\u00e1s \nSi no escucho tu voz \nEs mortal<br>\nEs mortal<br>\nSi tu no est\u00e1s <br>\n<br>\nTe has vuelto indispensable<br>\nQue hasta mis huesos  <br>\nExtra\u00f1an tu calor  <br>\nSi te vas <br>\nMe pierdo<br>\nSi te vas<br>\nSi te vas<br>\nLas horas pesan no es igual<br>\nSi no est\u00e1s<br>\nEl silencio es total<br>\nSi no est\u00e1s<br>\nSi no est\u00e1s<br>\nSi tu no est\u00e1s<br>\nSi no est\u00e1s<br>\nSi no escucho tu voz <br>\nEs mortal <br>\nEs mortal <br>\nSi tu no est\u00e1s \n<br>\nY es que tu sabes provocar<br>\nMuy bien <br>\nEl punto exacto aqu\u00ed <br>\nEn mi piel  </p>\n</blockquote>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Por culpa de Ivonne, es justo decirlo.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Por si no se han dado cuenta, todo esto de Flans es \u00fanicamente por Ilse.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "https://media.toledano.org/images/Meg-Ryan-meg-ryan-20771683-1600-1200.jpg", "slug": "si-te-vas", "status": 1, "featured": true, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 14, "fields": {"idx": "e5df4242-6b3e-45af-b356-568a02199694", "creado": "2017-07-29T00:10:22.558Z", "modificado": "2017-07-29T00:10:22.559Z", "title": "Take Five", "summary": "Take Five interpretada por Carmen McRae", "body": "Title: Take Five\r\nDate: 2015-04-20 19:54:48\r\nCategory: audioteca\r\nTags:  jazz, lang:en\r\nAuthor: Javier Sanchez Toledano\r\nSummary: Take Five interpretada por Carmen McRae\r\n\r\nDicen los entendidos que _Take Five_ debe su nombre a un inusual comp\u00e1s de 5/4 inspirada en la \u00abm\u00e9trica b\u00falgara\u00bb, sea eso lo que sea. El hecho es que esta pieza escrita por __Paul Desmond__ e interpretada por __Teh Dave Brubeck Quartet__ en 1959 es el \u00fanico \u00e9xito de esta banda y por otro lado es la pieza de jazz m\u00e1s vendida de todos los tiempos.\r\n\r\nCarmen Mercedes McRae, __Carmen McRae__ fue una extraordinaria int\u00e9rprete de jazz, de ra\u00edces costarricenses y jamaiquinas, que particip\u00f3 con los mas grandes jazzistas de su \u00e9poca.\r\n\r\nPues en 1961 grab\u00f3 un album en vivo junto con Dave Brubeck llamado _Take Five Live_ (por cierto que no fue la primera vez que estos dos grandes del jazz trabajaban juntos). Adem\u00e1s que la letra, autor\u00eda de Brubeck, la firma como _I. Brubeck_ o __Iola Brubeck__.\r\n\r\nEn fin, les presento __Take Five__.\r\n\r\n__T\u00edtulo__: Take Five  \r\n__Int\u00e9rprete__: Carmen McRae  \r\n__M\u00fasica__: Paul Desmond\r\n__Letra__: Dave Brubeck, firma como I. Brubeck\r\n__Album__: Take Five Live\r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\n  var songlist = new Array(1);\r\n  songlist[0] = new Object();\r\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/take-five.mp3\";\r\n  songlist[0].ogg = \"//media.toledano.org/audioteca/take-five.ogg\";\r\n  songlist[0].cover = \"//media.toledano.org/audioteca/take-five.jpg\";\r\n  songlist[0].title = \"Take Five\";\r\n  songlist[0].artist = \"Carmen McRae\";\r\n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\r\n</script>\r\n\r\n\r\n<blockquote>\r\n<p>\r\nWon't you stop and take<br>\r\nA little time out with me<br>\r\nJust take five<br>\r\nStop your busy day<br>\r\nAnd take the time out<br>\r\nTo see if I'm alive.\r\n</p>\r\n<p>\r\nThough I'm going out of my way<br>\r\nJust so I can pass by each day<br>\r\nNot a single word do we say<br>\r\nIt's a pantomime and not a play\r\n</p>\r\n<p>\r\nStill, I know our eyes often meet<br>\r\nI feel tingles down to my feet<br>\r\nWhen you smile, that's much too discreet<br>\r\nSends me on my way\r\n</p>\r\n<p>\r\nWouldn't it be better<br>\r\nNot to be so polite<br>\r\nYou could offer a light<br>\r\nStart a little conversation now<br>\r\nIt's alright, just take five<br>\r\nJust take five\r\n</p>\r\n<p>\r\nThough I'm going out of my way<br>\r\nJust so I can pass by each day<br>\r\nNot a single word do we say<br>\r\nIt's a pantomime and not a play\r\n</p>\r\n<p>\r\nStill, I know our eyes often meet<br>\r\nI feel tingles down to my feet<br>\r\nWhen you smile, that's much too discreet<br>\r\nSends me on my way\r\n</p>\r\n<p>\r\nWouldn't it be better<br>\r\ndon't be polite<br>\r\ni'm  going to offer you a light<br>\r\nStart a little conversation now<br>\r\nIt's alright, just take five<br>\r\nJust take five\r\n</p>\r\n<p>\r\nYou better take five<br>\r\nif you want to stay alive<br>\r\nevery now and then grab five.<br>\r\n<br>\r\nNot ten. Just five.<br>\r\nI'm will give you five<br>\r\nyou better<br>\r\nbetter<br>\r\nyou better take five<br>\r\n</p>\r\n</blockquote>", "extend": "", "pub_date": "2015-04-21T00:54:48Z", "summary_html": "<p>Take Five interpretada por Carmen McRae</p>", "body_html": "<p>Dicen los entendidos que <em>Take Five</em> debe su nombre a un inusual comp\u00e1s de 5/4 inspirada en la \u00abm\u00e9trica b\u00falgara\u00bb, sea eso lo que sea. El hecho es que esta pieza escrita por <strong>Paul Desmond</strong> e interpretada por <strong>Teh Dave Brubeck Quartet</strong> en 1959 es el \u00fanico \u00e9xito de esta banda y por otro lado es la pieza de jazz m\u00e1s vendida de todos los tiempos.</p>\n<p>Carmen Mercedes McRae, <strong>Carmen McRae</strong> fue una extraordinaria int\u00e9rprete de jazz, de ra\u00edces costarricenses y jamaiquinas, que particip\u00f3 con los mas grandes jazzistas de su \u00e9poca.</p>\n<p>Pues en 1961 grab\u00f3 un album en vivo junto con Dave Brubeck llamado <em>Take Five Live</em> (por cierto que no fue la primera vez que estos dos grandes del jazz trabajaban juntos). Adem\u00e1s que la letra, autor\u00eda de Brubeck, la firma como <em>I. Brubeck</em> o <strong>Iola Brubeck</strong>.</p>\n<p>En fin, les presento <strong>Take Five</strong>.</p>\n<p><strong>T\u00edtulo</strong>: Take Five<br>\n<strong>Int\u00e9rprete</strong>: Carmen McRae<br>\n<strong>M\u00fasica</strong>: Paul Desmond\n<strong>Letra</strong>: Dave Brubeck, firma como I. Brubeck\n<strong>Album</strong>: Take Five Live</p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\n  var songlist = new Array(1);\n  songlist[0] = new Object();\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/take-five.mp3\";\n  songlist[0].ogg = \"//media.toledano.org/audioteca/take-five.ogg\";\n  songlist[0].cover = \"//media.toledano.org/audioteca/take-five.jpg\";\n  songlist[0].title = \"Take Five\";\n  songlist[0].artist = \"Carmen McRae\";\n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\n</script>\n\n<blockquote>\n<p>\nWon't you stop and take<br>\nA little time out with me<br>\nJust take five<br>\nStop your busy day<br>\nAnd take the time out<br>\nTo see if I'm alive.\n</p>\n<p>\nThough I'm going out of my way<br>\nJust so I can pass by each day<br>\nNot a single word do we say<br>\nIt's a pantomime and not a play\n</p>\n<p>\nStill, I know our eyes often meet<br>\nI feel tingles down to my feet<br>\nWhen you smile, that's much too discreet<br>\nSends me on my way\n</p>\n<p>\nWouldn't it be better<br>\nNot to be so polite<br>\nYou could offer a light<br>\nStart a little conversation now<br>\nIt's alright, just take five<br>\nJust take five\n</p>\n<p>\nThough I'm going out of my way<br>\nJust so I can pass by each day<br>\nNot a single word do we say<br>\nIt's a pantomime and not a play\n</p>\n<p>\nStill, I know our eyes often meet<br>\nI feel tingles down to my feet<br>\nWhen you smile, that's much too discreet<br>\nSends me on my way\n</p>\n<p>\nWouldn't it be better<br>\ndon't be polite<br>\ni'm  going to offer you a light<br>\nStart a little conversation now<br>\nIt's alright, just take five<br>\nJust take five\n</p>\n<p>\nYou better take five<br>\nif you want to stay alive<br>\nevery now and then grab five.<br>\n<br>\nNot ten. Just five.<br>\nI'm will give you five<br>\nyou better<br>\nbetter<br>\nyou better take five<br>\n</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "take-five", "status": 1, "featured": false, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 15, "fields": {"idx": "32733821-2d39-4202-987f-0133e396d4e2", "creado": "2017-07-29T00:11:21.740Z", "modificado": "2017-07-29T00:11:21.740Z", "title": "Lo que te queda", "summary": "Letra y m\u00fasica de \u00abLo que te queda\u00bb con el grupo \u00abLos Pulpos\u00bb.", "body": "Title: Lo que te queda\r\nDate: 2015-04-26 20:42:41\r\nCategory: audioteca\r\nTags: lang:es, grupera\r\nAuthor: Javier Sanchez Toledano\r\nSummary: Letra y m\u00fasica de \u00abLo que te queda\u00bb con el grupo \u00abLos Pulpos\u00bb.\r\n\r\n__Los Pulpos__ eran un grupo sonorense de los a\u00f1os 60 y 70's que cantaban baladas rom\u00e1nticas, de las que se usaban en esa \u00e9poca. Despu\u00e9s de desaparecer formaron el _Grupo Yndio_ que tambi\u00e9n tuvo algo de fama en aquel tiempo.\r\n\r\nSolo grabaron 3 discos. Pero rescatamos esta breve joya del pasado, llamada __Lo que te queda__ escrita por el cantautor argentino __Yaco Monti__ y la presentamos hoy en la _Audioteca Toledana_.\r\n\r\nT\u00edtulo: __Lo que te queda__  \r\nInt\u00e9rprete: __Los Pulpos__  \r\nAutor: Julio C\u00e9sar Eugenio, firma como __Yaco Monti__  \r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\n  var songlist = new Array(1);\r\n  songlist[0] = new Object();\r\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/loquetequeda.mp3\";\r\n  songlist[0].ogg = \"//media.toledano.org/audioteca/loquetequeda.ogg\";\r\n  songlist[0].cover = \"//media.toledano.org/audioteca/loquetequeda.jpg\";\r\n  songlist[0].title = \"Lo que te queda\";\r\n  songlist[0].artist = \"Los Pulpos\";     \r\n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\r\n</script>\r\n\r\n> Ayer me dijeron  \r\nque de vez en cuando  \r\npreguntas por m\u00ed  \r\n>\r\nTambi\u00e9n me dijeron  \r\nque cuando lo haces  \r\nlloras por m\u00ed  \r\n>\r\nS\u00ed lo hubieras hecho antes de partir.  \r\nS\u00ed lo hubieras hecho antes de sufrir,  \r\nhoy tuvieras tanto tanto tanto amor  \r\ny solo te queda  \r\nel hablar de m\u00ed.\r\n>\r\nEn m\u00ed ya no hay nada,  \r\napenitas cosas  \r\nque me hablan de ti.  \r\nY yo me pregunto  \r\ncuando alguien me dice  \r\nque lloras por m\u00ed  \r\n>\r\nS\u00ed lo hubieras hecho antes de partir.  \r\nS\u00ed lo hubieras hecho antes de sufrir,  \r\nhoy tuvieras tanto tanto tanto amor  \r\ny solo te queda  \r\nel hablar de m\u00ed.\r\n>\r\nEn m\u00ed ya no hay nada,  \r\napenitas cosas  \r\nque me hablan de ti.  \r\nY yo me pregunto  \r\ncuando alguien me dice  \r\nque lloras por m\u00ed  \r\n>\r\nS\u00ed lo hubieras hecho antes de partir.  \r\nS\u00ed lo hubieras hecho antes de sufrir,  \r\nhoy tuvieras tanto tanto tanto amor  \r\ny solo te queda  \r\nel hablar de m\u00ed.", "extend": "", "pub_date": "2015-04-27T01:42:41Z", "summary_html": "<p>Letra y m\u00fasica de \u00abLo que te queda\u00bb con el grupo \u00abLos Pulpos\u00bb.</p>", "body_html": "<p><strong>Los Pulpos</strong> eran un grupo sonorense de los a\u00f1os 60 y 70&rsquo;s que cantaban baladas rom\u00e1nticas, de las que se usaban en esa \u00e9poca. Despu\u00e9s de desaparecer formaron el <em>Grupo Yndio</em> que tambi\u00e9n tuvo algo de fama en aquel tiempo.</p>\n<p>Solo grabaron 3 discos. Pero rescatamos esta breve joya del pasado, llamada <strong>Lo que te queda</strong> escrita por el cantautor argentino <strong>Yaco Monti</strong> y la presentamos hoy en la <em>Audioteca Toledana</em>.</p>\n<p>T\u00edtulo: <strong>Lo que te queda</strong><br>\nInt\u00e9rprete: <strong>Los Pulpos</strong><br>\nAutor: Julio C\u00e9sar Eugenio, firma como <strong>Yaco Monti</strong>  </p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\n  var songlist = new Array(1);\n  songlist[0] = new Object();\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/loquetequeda.mp3\";\n  songlist[0].ogg = \"//media.toledano.org/audioteca/loquetequeda.ogg\";\n  songlist[0].cover = \"//media.toledano.org/audioteca/loquetequeda.jpg\";\n  songlist[0].title = \"Lo que te queda\";\n  songlist[0].artist = \"Los Pulpos\";     \n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\n</script>\n\n<blockquote>\n<p>Ayer me dijeron<br>\nque de vez en cuando<br>\npreguntas por m\u00ed  </p>\n<p>Tambi\u00e9n me dijeron<br>\nque cuando lo haces<br>\nlloras por m\u00ed  </p>\n<p>S\u00ed lo hubieras hecho antes de partir.<br>\nS\u00ed lo hubieras hecho antes de sufrir,<br>\nhoy tuvieras tanto tanto tanto amor<br>\ny solo te queda<br>\nel hablar de m\u00ed.</p>\n<p>En m\u00ed ya no hay nada,<br>\napenitas cosas<br>\nque me hablan de ti.<br>\nY yo me pregunto<br>\ncuando alguien me dice<br>\nque lloras por m\u00ed  </p>\n<p>S\u00ed lo hubieras hecho antes de partir.<br>\nS\u00ed lo hubieras hecho antes de sufrir,<br>\nhoy tuvieras tanto tanto tanto amor<br>\ny solo te queda<br>\nel hablar de m\u00ed.</p>\n<p>En m\u00ed ya no hay nada,<br>\napenitas cosas<br>\nque me hablan de ti.<br>\nY yo me pregunto<br>\ncuando alguien me dice<br>\nque lloras por m\u00ed  </p>\n<p>S\u00ed lo hubieras hecho antes de partir.<br>\nS\u00ed lo hubieras hecho antes de sufrir,<br>\nhoy tuvieras tanto tanto tanto amor<br>\ny solo te queda<br>\nel hablar de m\u00ed.</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "lo-que-te-queda", "status": 1, "featured": false, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 16, "fields": {"idx": "6e8c6400-ad44-4101-8d50-5c3f2af5c062", "creado": "2017-07-29T00:15:13.755Z", "modificado": "2017-07-29T00:15:13.755Z", "title": "Funeral de un labrador", "summary": "Una triste canci\u00f3n basada en una obra de teatro y un libro de poemas que narra la triste vida de los agricultores brasile\u00f1os durante la reforma agraria de aquel pa\u00eds.", "body": "Title: Funeral de un labrador\r\nDate: 2015-06-07 22:29:35\r\nCategory: audioteca\r\nTags:  lang:pr, poesia\r\nAuthor: Javier Sanchez Toledano\r\nSummary: Una triste canci\u00f3n basada en una obra de teatro y un libro de poemas.\r\n\r\nLa canci\u00f3n _\u00abFuneral de um lavrador\u00bb_ compuesta por Chico Buarque de Hollanda en 1965 para el Grupo de Teatro de la Universidad Cat\u00f3lica de S\u00e3o Paulo, para la puesta en escena de Jo\u00e3o Cabral de Melo Neto llamada _Morte e vida severina_.\r\n\r\nEsta canci\u00f3n fue presentada en 1966, y fue grabada por la cantante Odete Lara en ese mismo a\u00f1o para el album _Contrastes_, con el nombre _\u00abFuneral do lavrador\u00bb_. Chico Buarque la incluir\u00eda, dos a\u00f1os m\u00e1s tarde,  en su tercer LP con la participaci\u00f3n del grupo MPB4. Y esta es la versi\u00f3n que les presentamos en esta ocasi\u00f3n.\r\n\r\nLa letra en si misma es una encrucijada de varias cuestiones de cr\u00edtica social, tanto en el teatro como en los espect\u00e1culos de los a\u00f1os 60's. Hay una necesidad de distanciamiento cr\u00edtico, tantas veces ausente en la famosa \"izquierda festiva\", pero tambi\u00e9n hay una necesidad de movilizaci\u00f3n de individuos y de las fuerzas sociales se organizan.\r\n\r\nEs una canci\u00f3n triste, sin sentimentalismos melanc\u00f3licos, sin esa idea equivocada de que una canci\u00f3n ser\u00eda un agente de cambio hist\u00f3rico, que la alineaci\u00f3n de las masas oprimidas ser\u00eda resuelta por la clase media, con guitarras...\r\n\r\n_Es una tumba granda, para tan poca carne, mas a tierra regalada, no se abre la boca_.\r\n\r\nEn fin, escuchen la canci\u00f3n.\r\n\r\n- **Autor**: Francisco Buarque de Holanda (_Chico Buarque_), basada en una obra de _Jo\u00e3o Cabral de Melo Neto_\r\n- **Album**: Chico Buarque de Hollanda, vol.3\r\n\r\n## Funeral de um lavrador\r\n\r\n> Esta cova em que est\u00e1s com palmos medida  \r\n\u00c9 a conta menor que tiraste em vida  \r\n\u00c9 a conta menor que tiraste em vida  \r\n\r\n> \u00c9 de bom tamanho nem largo nem fundo  \r\n\u00c9 a parte que te cabe deste latif\u00fandio  \r\n\u00c9 a parte que te cabe deste latif\u00fandio  \r\n\r\n>N\u00e3o \u00e9 cova grande, \u00e9 cova medida  \r\n\u00c9 a terra que querias ver dividida  \r\n\u00c9 a terra que querias ver dividida  \r\n\r\n> \u00c9 uma cova grande pra teu pouco defunto  \r\nMas estar\u00e1s mais ancho que estavas no mundo  \r\nestar\u00e1s mais ancho que estavas no mundo  \r\n\r\n> \u00c9 uma cova grande pra teu defunto parco  \r\nPor\u00e9m mais que no mundo te sentir\u00e1s largo  \r\nPor\u00e9m mais que no mundo te sentir\u00e1s largo  \r\n\r\n> \u00c9 uma cova grande pra tua carne pouca  \r\nMas a terra dada, n\u00e3o se abre a boca  \r\n\u00c9 a conta menor que tiraste em vida  \r\n\u00c9 a parte que te cabe deste latif\u00fandio  \r\n\u00c9 a terra que querias ver dividida  \r\nEstar\u00e1s mais ancho que estavas no mundo  \r\nMas a terra dada, n\u00e3o se abre a boca.", "extend": "", "pub_date": "2015-06-08T03:29:35Z", "summary_html": "<p>Una triste canci\u00f3n basada en una obra de teatro y un libro de poemas que narra la triste vida de los agricultores brasile\u00f1os durante la reforma agraria de aquel pa\u00eds.</p>", "body_html": "<p>La canci\u00f3n <em>\u00abFuneral de um lavrador\u00bb</em> compuesta por Chico Buarque de Hollanda en 1965 para el Grupo de Teatro de la Universidad Cat\u00f3lica de S\u00e3o Paulo, para la puesta en escena de Jo\u00e3o Cabral de Melo Neto llamada <em>Morte e vida severina</em>.</p>\n<p>Esta canci\u00f3n fue presentada en 1966, y fue grabada por la cantante Odete Lara en ese mismo a\u00f1o para el album <em>Contrastes</em>, con el nombre <em>\u00abFuneral do lavrador\u00bb</em>. Chico Buarque la incluir\u00eda, dos a\u00f1os m\u00e1s tarde,  en su tercer LP con la participaci\u00f3n del grupo MPB4. Y esta es la versi\u00f3n que les presentamos en esta ocasi\u00f3n.</p>\n<p>La letra en si misma es una encrucijada de varias cuestiones de cr\u00edtica social, tanto en el teatro como en los espect\u00e1culos de los a\u00f1os 60&rsquo;s. Hay una necesidad de distanciamiento cr\u00edtico, tantas veces ausente en la famosa &ldquo;izquierda festiva&rdquo;, pero tambi\u00e9n hay una necesidad de movilizaci\u00f3n de individuos y de las fuerzas sociales se organizan.</p>\n<p>Es una canci\u00f3n triste, sin sentimentalismos melanc\u00f3licos, sin esa idea equivocada de que una canci\u00f3n ser\u00eda un agente de cambio hist\u00f3rico, que la alineaci\u00f3n de las masas oprimidas ser\u00eda resuelta por la clase media, con guitarras&hellip;</p>\n<p><em>Es una tumba granda, para tan poca carne, mas a tierra regalada, no se abre la boca</em>.</p>\n<p>En fin, escuchen la canci\u00f3n.</p>\n<ul>\n<li><strong>Autor</strong>: Francisco Buarque de Holanda (<em>Chico Buarque</em>), basada en una obra de <em>Jo\u00e3o Cabral de Melo Neto</em></li>\n<li><strong>Album</strong>: Chico Buarque de Hollanda, vol.3</li>\n</ul>\n<h2 id=\"funeral-de-um-lavrador\">Funeral de um lavrador</h2>\n<blockquote>\n<p>Esta cova em que est\u00e1s com palmos medida<br>\n\u00c9 a conta menor que tiraste em vida<br>\n\u00c9 a conta menor que tiraste em vida  </p>\n<p>\u00c9 de bom tamanho nem largo nem fundo<br>\n\u00c9 a parte que te cabe deste latif\u00fandio<br>\n\u00c9 a parte que te cabe deste latif\u00fandio  </p>\n<p>N\u00e3o \u00e9 cova grande, \u00e9 cova medida<br>\n\u00c9 a terra que querias ver dividida<br>\n\u00c9 a terra que querias ver dividida  </p>\n<p>\u00c9 uma cova grande pra teu pouco defunto<br>\nMas estar\u00e1s mais ancho que estavas no mundo<br>\nestar\u00e1s mais ancho que estavas no mundo  </p>\n<p>\u00c9 uma cova grande pra teu defunto parco<br>\nPor\u00e9m mais que no mundo te sentir\u00e1s largo<br>\nPor\u00e9m mais que no mundo te sentir\u00e1s largo  </p>\n<p>\u00c9 uma cova grande pra tua carne pouca<br>\nMas a terra dada, n\u00e3o se abre a boca<br>\n\u00c9 a conta menor que tiraste em vida<br>\n\u00c9 a parte que te cabe deste latif\u00fandio<br>\n\u00c9 a terra que querias ver dividida<br>\nEstar\u00e1s mais ancho que estavas no mundo<br>\nMas a terra dada, n\u00e3o se abre a boca.</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "funeral-de-un-labrador", "status": 1, "featured": false, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 17, "fields": {"idx": "4b9ed8b2-bd2c-4920-a8e3-970e39292282", "creado": "2017-07-29T00:18:46.029Z", "modificado": "2017-07-29T00:18:46.029Z", "title": "Dream a Little Dream of Me", "summary": "", "body": "Title: Dream a Little Dream of Me\r\nDate: 2015-08-15 9:38:27 a.m.\r\nCategory: Audioteca\r\nTags:  lang:en, jazz\r\nSummary:\r\nFavorito: 1\r\nCover: https://media.toledano.org/images/audioteca/20150815-dream-a-little-dream.jpg\r\n\r\n\r\nEn 1950 dos de los m\u00e1s grandes exponentes del Jazz grabaron a d\u00fao esta canci\u00f3n y les qued\u00f3 de _rechupete_. **Lady Ella** como tambi\u00e9n se le conoce a la _Reina del Jazz_ y Louis _Pops_ Armstrong interpretan de forma deliciosa este cl\u00e1sico de cl\u00e1sicos y hoy la Audioteca Toledana les rinde un homenaje.\r\n\r\n_Dream a Little Dream of Me_ es una canci\u00f3n dulce, rom\u00e1ntica y divertida que pese a sus 80 y tantos a\u00f1os no pierde vigencia. Se nota la impecable voz y la improvisaci\u00f3n de Ella, as\u00ed como la notas met\u00e1licas de la trompeta de Armstrong, junto con su voz, siempre inconfundible.\r\n\r\nNo digo m\u00e1s, porque hay que escucharla ya.\r\n\r\n__Letra:__  Gus Kahn  \r\n__M\u00fasica:__ Fabian Andre y Wilbur Schwandt  \r\n__Int\u00e9rpretes:__ Ella Fitzgerald y Louis Armstrong  \r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\n  var songlist = new Array(1);\r\n  songlist[0] = new Object();\r\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/dream-a-little.mp3\";\r\n  songlist[0].ogg = \"//media.toledano.org/audioteca/dream-a-little.ogg\";\r\n  songlist[0].cover = \"//media.toledano.org/audioteca/dream-a-little.jpg\";\r\n  songlist[0].title = \"Dream a Little Dream of Me\";\r\n  songlist[0].artist = \"Ella Fitzgerald ft. Louis Armstrong\";\r\n</script>\r\n\r\n>\r\nStars shining bright above you;  \r\nNight breezes seem to whisper 'I love you'.  \r\nBirds singing in the sycamore tree.  \r\nDream a little dream of me.  \r\n>\r\nSay nighty-night and kiss me;  \r\nJust hold me tight and tell me you'll miss me.  \r\nWhile I'm alone, blue as can be,  \r\nDream a little dream of me.  \r\n>\r\nStars fading but I linger on, dear  \r\nStill craving your kiss.  \r\nI'm longing to linger till dawn, dear,  \r\nJust saying this...  \r\n>\r\nSweet dreams till sunbeams find you  \r\nSweet dreams that leave all worries behind you.  \r\nBut in your dreams, whatever they be,  \r\nDream a little dream of me.\r\n>\r\nStars fading but I linger on, dear  \r\nStill craving your kiss.  \r\nI'm longing to linger till dawn, dear,  \r\nJust saying this...  \r\n>\r\nSweet dreams till sunbeams find you   \r\nSweet dreams that leave all worries far behind you.  \r\nBut in your dreams, whatever they be,  \r\nDream a little dream of me.", "extend": "", "pub_date": "2015-08-15T14:38:00Z", "summary_html": "", "body_html": "<p>En 1950 dos de los m\u00e1s grandes exponentes del Jazz grabaron a d\u00fao esta canci\u00f3n y les qued\u00f3 de <em>rechupete</em>. <strong>Lady Ella</strong> como tambi\u00e9n se le conoce a la <em>Reina del Jazz</em> y Louis <em>Pops</em> Armstrong interpretan de forma deliciosa este cl\u00e1sico de cl\u00e1sicos y hoy la Audioteca Toledana les rinde un homenaje.</p>\n<p><em>Dream a Little Dream of Me</em> es una canci\u00f3n dulce, rom\u00e1ntica y divertida que pese a sus 80 y tantos a\u00f1os no pierde vigencia. Se nota la impecable voz y la improvisaci\u00f3n de Ella, as\u00ed como la notas met\u00e1licas de la trompeta de Armstrong, junto con su voz, siempre inconfundible.</p>\n<p>No digo m\u00e1s, porque hay que escucharla ya.</p>\n<p><strong>Letra:</strong>  Gus Kahn<br>\n<strong>M\u00fasica:</strong> Fabian Andre y Wilbur Schwandt<br>\n<strong>Int\u00e9rpretes:</strong> Ella Fitzgerald y Louis Armstrong  </p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\n  var songlist = new Array(1);\n  songlist[0] = new Object();\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/dream-a-little.mp3\";\n  songlist[0].ogg = \"//media.toledano.org/audioteca/dream-a-little.ogg\";\n  songlist[0].cover = \"//media.toledano.org/audioteca/dream-a-little.jpg\";\n  songlist[0].title = \"Dream a Little Dream of Me\";\n  songlist[0].artist = \"Ella Fitzgerald ft. Louis Armstrong\";\n</script>\n\n<blockquote>\n<p>Stars shining bright above you;<br>\nNight breezes seem to whisper &lsquo;I love you&rsquo;.<br>\nBirds singing in the sycamore tree.<br>\nDream a little dream of me.  </p>\n<p>Say nighty-night and kiss me;<br>\nJust hold me tight and tell me you&rsquo;ll miss me.<br>\nWhile I&rsquo;m alone, blue as can be,<br>\nDream a little dream of me.  </p>\n<p>Stars fading but I linger on, dear<br>\nStill craving your kiss.<br>\nI&rsquo;m longing to linger till dawn, dear,<br>\nJust saying this&hellip;  </p>\n<p>Sweet dreams till sunbeams find you<br>\nSweet dreams that leave all worries behind you.<br>\nBut in your dreams, whatever they be,<br>\nDream a little dream of me.</p>\n<p>Stars fading but I linger on, dear<br>\nStill craving your kiss.<br>\nI&rsquo;m longing to linger till dawn, dear,<br>\nJust saying this&hellip;  </p>\n<p>Sweet dreams till sunbeams find you <br>\nSweet dreams that leave all worries far behind you.<br>\nBut in your dreams, whatever they be,<br>\nDream a little dream of me.</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "https://media.toledano.org/images/audioteca/20150815-dream-a-little-dream.jpg", "slug": "dream-little-dream-me", "status": 1, "featured": true, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 18, "fields": {"idx": "22bee804-e360-4f3f-a650-4fd3ff942b9a", "creado": "2017-07-29T00:20:23.736Z", "modificado": "2017-07-29T00:20:23.736Z", "title": "La ruta de fuego", "summary": "", "body": "Title: La ruta de fuego\r\nDate: 2015-08-09 12:39:38 a.m.\r\nCategory: opinion  \r\nTags:  novela, sci-fi, critica\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nHubo un tiempo en que buscaba libros que tuvieran ciertas caracter\u00edsticas, por ejemplo que fueran baratos y que estuvieran pesados. Mucho mejor que tuvieran esas dos cosas. La tem\u00e1tica no importaba, pero si pod\u00eda elegir, me gustaban de ciencia ficci\u00f3n, hist\u00f3ricos o apocal\u00edpticos.\r\n\r\nResulta que me encontr\u00e9 con **La Ruta de Fuego** de _Ann Benson_ que ten\u00eda todo lo que yo buscaba: era barato, era un _librote_, de ciencia ficci\u00f3n e hist\u00f3rico.\r\n\r\n## La trilog\u00eda\r\n\r\nEs la segunda parte de una trilog\u00eda que se ha dado en llamar _Los Cuentos de la Plaga_, compuesta por _The Plague Tales_, _The Burning Road_ y _The Physician's Tale_. La verdad, no import\u00f3 mucho no haber le\u00eddo la primera parte, no hace falta. Cierto que es la continuaci\u00f3n y se nota en algunos puntos, pero en general, la historia es completa.\r\n\r\nA mi parecer es tambi\u00e9n el mejor libro de la trilog\u00eda. \r\n\r\n## Historias paralelas\r\n\r\nSon dos historias, una de ellas en la Edad Media, en el siglo XIV, durante la epidemia de la __Peste Negra__; la otra historia transcurre en un futuro no muy lejano, devastado igualmente por una pandemia[^1]. Nos cuentan de como dos personas, un m\u00e9dico jud\u00edo en el pasado y una doctora viuda en el presente luchan contra la epidemia y contra los miedos y prejuicios de la sociedad.\r\n\r\n### Opini\u00f3n\r\nHay algunas cosas que no me gustaron, pero no me gustan de ning\u00fan libro, dicho sea de paso. Es un libro de encargo, que tiene que cubrir un determinado n\u00famero de palabras; eso obliga a la autora a usar rellenos innecesarios, como describir una planta, el cielo, etc. \r\n\r\nPero este exceso descriptivo falla porque _Ann Benson_ no lo aprovecha para contarnos su visi\u00f3n de la sociedad medieval. Como si el mundo no existiera y toda la historia ocurriera a tres metros de los protagonistas.\r\n\r\nTal vez porque comparo los libros que tratan sobre la Edad Media con __El Nombre de la Rosa__ de _Umberto Eco_, siento que a _The Burning Road_ le falta erudicci\u00f3n, un desarrollo narrativo y descritivo m\u00e1s completo de la \u00e9poca.\r\n\r\nEs tambi\u00e9n el mejor libro de la trilog\u00eda. El primero es bueno, el tercero es demasiado ambicioso. __The Burning Road__ es el m\u00e1s balanceado de una trilog\u00eda que pudo dar m\u00e1s de si.\r\n\r\nCalificaci\u00f3n: 3, donde 1 es la menor y 5 es la mayor.\r\n\r\n[^1]: De origen mexicano, por cierto: El _Drug Resistant Staphylococcus Aureus Mexicanis_ o DR SAM.\r\n\r\n<script type=\"application/ld+json\">\r\n{\r\n  \"@context\" : \"http://schema.org\",\r\n  \"@type\" : \"Book\",\r\n  \"name\" : \"La ruta de fuego\",\r\n  \"image\" : \"\",\r\n  \"inLanguage\" : \"es_ES\",\r\n  \"genre\" : \"sci-fi\",\r\n  \"author\" : {\r\n    \"@type\" : \"Person\",\r\n    \"name\" : \"Ann Benson\"\r\n  },\r\n  \"review\" : {\r\n    \"@type\" : \"Review\",\r\n    \"author\": {\r\n      \"@type\": \"Person\",\r\n      \"name\": \"Javier Sanchez Toledano\"\r\n    },\r\n    \"reviewRating\" : {\r\n      \"@type\" : \"Rating\",\r\n      \"ratingValue\" : \"4.5\",\r\n      \"bestRating\" : \"1\",\r\n      \"worstRating\" : \"5\"\r\n    }\r\n  }\r\n}\r\n</script>", "extend": "", "pub_date": "2015-08-09T05:29:00Z", "summary_html": "", "body_html": "<p>Hubo un tiempo en que buscaba libros que tuvieran ciertas caracter\u00edsticas, por ejemplo que fueran baratos y que estuvieran pesados. Mucho mejor que tuvieran esas dos cosas. La tem\u00e1tica no importaba, pero si pod\u00eda elegir, me gustaban de ciencia ficci\u00f3n, hist\u00f3ricos o apocal\u00edpticos.</p>\n<p>Resulta que me encontr\u00e9 con <strong>La Ruta de Fuego</strong> de <em>Ann Benson</em> que ten\u00eda todo lo que yo buscaba: era barato, era un <em>librote</em>, de ciencia ficci\u00f3n e hist\u00f3rico.</p>\n<h2 id=\"la-trilogia\">La trilog\u00eda</h2>\n<p>Es la segunda parte de una trilog\u00eda que se ha dado en llamar <em>Los Cuentos de la Plaga</em>, compuesta por <em>The Plague Tales</em>, <em>The Burning Road</em> y <em>The Physician&rsquo;s Tale</em>. La verdad, no import\u00f3 mucho no haber le\u00eddo la primera parte, no hace falta. Cierto que es la continuaci\u00f3n y se nota en algunos puntos, pero en general, la historia es completa.</p>\n<p>A mi parecer es tambi\u00e9n el mejor libro de la trilog\u00eda. </p>\n<h2 id=\"historias-paralelas\">Historias paralelas</h2>\n<p>Son dos historias, una de ellas en la Edad Media, en el siglo XIV, durante la epidemia de la <strong>Peste Negra</strong>; la otra historia transcurre en un futuro no muy lejano, devastado igualmente por una pandemia<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>. Nos cuentan de como dos personas, un m\u00e9dico jud\u00edo en el pasado y una doctora viuda en el presente luchan contra la epidemia y contra los miedos y prejuicios de la sociedad.</p>\n<h3 id=\"opinion\">Opini\u00f3n</h3>\n<p>Hay algunas cosas que no me gustaron, pero no me gustan de ning\u00fan libro, dicho sea de paso. Es un libro de encargo, que tiene que cubrir un determinado n\u00famero de palabras; eso obliga a la autora a usar rellenos innecesarios, como describir una planta, el cielo, etc. </p>\n<p>Pero este exceso descriptivo falla porque <em>Ann Benson</em> no lo aprovecha para contarnos su visi\u00f3n de la sociedad medieval. Como si el mundo no existiera y toda la historia ocurriera a tres metros de los protagonistas.</p>\n<p>Tal vez porque comparo los libros que tratan sobre la Edad Media con <strong>El Nombre de la Rosa</strong> de <em>Umberto Eco</em>, siento que a <em>The Burning Road</em> le falta erudicci\u00f3n, un desarrollo narrativo y descritivo m\u00e1s completo de la \u00e9poca.</p>\n<p>Es tambi\u00e9n el mejor libro de la trilog\u00eda. El primero es bueno, el tercero es demasiado ambicioso. <strong>The Burning Road</strong> es el m\u00e1s balanceado de una trilog\u00eda que pudo dar m\u00e1s de si.</p>\n<p>Calificaci\u00f3n: 3, donde 1 es la menor y 5 es la mayor.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\" : \"http://schema.org\",\n  \"@type\" : \"Book\",\n  \"name\" : \"La ruta de fuego\",\n  \"image\" : \"\",\n  \"inLanguage\" : \"es_ES\",\n  \"genre\" : \"sci-fi\",\n  \"author\" : {\n    \"@type\" : \"Person\",\n    \"name\" : \"Ann Benson\"\n  },\n  \"review\" : {\n    \"@type\" : \"Review\",\n    \"author\": {\n      \"@type\": \"Person\",\n      \"name\": \"Javier Sanchez Toledano\"\n    },\n    \"reviewRating\" : {\n      \"@type\" : \"Rating\",\n      \"ratingValue\" : \"4.5\",\n      \"bestRating\" : \"1\",\n      \"worstRating\" : \"5\"\n    }\n  }\n}\n</script>\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>De origen mexicano, por cierto: El <em>Drug Resistant Staphylococcus Aureus Mexicanis</em> o DR SAM.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "la-ruta-de-fuego", "status": 1, "featured": false, "category": 5, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 19, "fields": {"idx": "57d9d3b4-ac21-4f3a-b199-4b6ea77eaddf", "creado": "2017-07-29T00:24:30.566Z", "modificado": "2017-07-29T00:50:22.473Z", "title": "Melanie", "summary": "", "body": "Title: Melanie     \r\nDate: 2015-12-21 18:14:09\r\nCategory: opinion  \r\nTags: sci-fi, zombies, critica\r\nSummary: \r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-4 col-sm-12\">\r\n        <img class=\"aligncenter size-full wp-image-633\" src=\"https://media.toledano.org/wp-content/uploads/2015/09/07230342/melanie.jpg\" alt=\"melanie\" width=\"2000\" height=\"3026\" />\r\n    </div>\r\n    <div class=\"col-md-8 col-sm-12\" style=\"padding-left:50px;\">\r\n        Cada ma\u00f1ana, Melanie espera en su celda a que vayan a buscarla para llevarla a clase. Cuando la puerta se abre, el sargento le apunta con su pistola mientras dos de sus hombres la atan a la silla de ruedas. Ella cree que no les gusta. Bromea diciendo que no les morder\u00e1, pero ellos no se r\u00eden. Melanie es una ni\u00f1a muy especial\u2026\r\n    </div>\r\n</div>\r\n\r\n\r\nMike Carey es un autor ingl\u00e9s que escribe historietas, o sea <em>comics</em>, generalmente para X-Men. Y yo ni por enterado porque nunca me fijo en qui\u00e9n es el autor[^1]. En el 2014 public\u00f3 esta novela, llamada en ingl\u00e9s <em>The Girl with All the Gifts</em>, \"La ni\u00f1a con todos los dones\", pero pues le pusieron \"Melanie\".\r\n\r\nEs de zombies, como ya les hab\u00eda dicho. Y una de sus mejores caracter\u00edsticas es que se lee _rapidito_. Es una novela f\u00e1cil, sin complicaciones y entretenida. Con personajes simples, que pretenden ser complicados, pero que en realidad no lo son.\r\n\r\nSon zombies, hay ego\u00edstas, hay gente entregada, temerosos, etc. Pero lo que m\u00e1s me gusta es que los zombies no son producto de un virus de laboratorio, sino de una variaci\u00f3n de un hongo que existe en la naturaleza[^2].\r\n\r\nLa verdad es que al final me queda un mal sabor de boca. La purga gen\u00e9tica, o soluci\u00f3n final[^3] es un recurso muy socorrido, pero al igual que con los zombies, tampoco debe usarse a la ligera. No me gusta que para todo acaben matando a una \"raza\" para que surja una \"raza superior\".\r\n\r\nEst\u00e1n haciendo una pel\u00edcula de esta novela, con Gleen Close y Gemma Artenton que se estrenar\u00e1 el pr\u00f3ximo a\u00f1o.\r\n\r\nSi quieren el libro, lo encuentran en [Amazon M\u00e9xico](http://amzn.to/1O9xOnZ).\r\n\r\n[^1]: Prometo que voy a cambiar.\r\n\r\n[^2]: No es un _spoiler_, siempre se ha sabido que lo m\u00e1s seguro es que el inminente __Apocalipsis Zombie__ sea producto del hongo [_Cordyceps unilateralis_](https://es.wikipedia.org/wiki/Cordyceps_unilateralis).\r\n\r\n[^3]: Ya saben, se llama _\"Endl\u00f6sung\"_.", "extend": "", "pub_date": "2015-12-22T00:14:09Z", "summary_html": "", "body_html": "<div class=\"row\">\n    <div class=\"col-md-4 col-sm-12\">\n        <img class=\"aligncenter size-full wp-image-633\" src=\"https://media.toledano.org/wp-content/uploads/2015/09/07230342/melanie.jpg\" alt=\"melanie\" width=\"2000\" height=\"3026\" />\n    </div>\n    <div class=\"col-md-8 col-sm-12\" style=\"padding-left:50px;\">\n        Cada ma\u00f1ana, Melanie espera en su celda a que vayan a buscarla para llevarla a clase. Cuando la puerta se abre, el sargento le apunta con su pistola mientras dos de sus hombres la atan a la silla de ruedas. Ella cree que no les gusta. Bromea diciendo que no les morder\u00e1, pero ellos no se r\u00eden. Melanie es una ni\u00f1a muy especial\u2026\n    </div>\n</div>\n\n<p>Mike Carey es un autor ingl\u00e9s que escribe historietas, o sea <em>comics</em>, generalmente para X-Men. Y yo ni por enterado porque nunca me fijo en qui\u00e9n es el autor<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>. En el 2014 public\u00f3 esta novela, llamada en ingl\u00e9s <em>The Girl with All the Gifts</em>, &ldquo;La ni\u00f1a con todos los dones&rdquo;, pero pues le pusieron &ldquo;Melanie&rdquo;.</p>\n<p>Es de zombies, como ya les hab\u00eda dicho. Y una de sus mejores caracter\u00edsticas es que se lee <em>rapidito</em>. Es una novela f\u00e1cil, sin complicaciones y entretenida. Con personajes simples, que pretenden ser complicados, pero que en realidad no lo son.</p>\n<p>Son zombies, hay ego\u00edstas, hay gente entregada, temerosos, etc. Pero lo que m\u00e1s me gusta es que los zombies no son producto de un virus de laboratorio, sino de una variaci\u00f3n de un hongo que existe en la naturaleza<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>.</p>\n<p>La verdad es que al final me queda un mal sabor de boca. La purga gen\u00e9tica, o soluci\u00f3n final<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup> es un recurso muy socorrido, pero al igual que con los zombies, tampoco debe usarse a la ligera. No me gusta que para todo acaben matando a una &ldquo;raza&rdquo; para que surja una &ldquo;raza superior&rdquo;.</p>\n<p>Est\u00e1n haciendo una pel\u00edcula de esta novela, con Gleen Close y Gemma Artenton que se estrenar\u00e1 el pr\u00f3ximo a\u00f1o.</p>\n<p>Si quieren el libro, lo encuentran en <a href=\"http://amzn.to/1O9xOnZ\">Amazon M\u00e9xico</a>.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Prometo que voy a cambiar.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>No es un <em>spoiler</em>, siempre se ha sabido que lo m\u00e1s seguro es que el inminente <strong>Apocalipsis Zombie</strong> sea producto del hongo <a href=\"https://es.wikipedia.org/wiki/Cordyceps_unilateralis\"><em>Cordyceps unilateralis</em></a>.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>Ya saben, se llama <em>&ldquo;Endl\u00f6sung&rdquo;</em>.&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "melanie", "status": 1, "featured": false, "category": 5, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 20, "fields": {"idx": "228e66af-0511-429a-8dfb-acc26ba18bc3", "creado": "2017-07-29T00:32:03.415Z", "modificado": "2017-07-29T01:23:32.540Z", "title": "Naturaleza Oscura", "summary": "", "body": "Title: Naturaleza Oscura    \r\nDate: 2015-10-04 3:31:07 p.m.\r\nCategory: opinion\r\nTags: critica, steampunk, sci-fi    \r\n\r\n<div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-4 col-xs-6\">\r\n    <img src=\"https://media.toledano.org/images/2015/naturaleza_oscura.jpg\" alt=\"Porta del Libro \u00abNaturaleza Oscura\u00bb\" />\r\n  </div>\r\n  <div class=\"col-md-8 col-xs-12\" style=\"padding-left:50px;\">\r\nDe regreso al l\u00fagubre Londres victoriano, Juliet Moreau trata de reconstruir la vida que conoci\u00f3 en otro tiempo. Han pasado varios meses desde que escap\u00f3 de la isla de su padre\u2026 y de los secretos que all\u00ed descubri\u00f3. Pese a todo, la oscuridad persigue a Juliet como una maldici\u00f3n.\r\n\r\n<p>Por una parte, las operaciones a las que la someti\u00f3 su padre la obligan a llevar a cabo experimentos secretos en una buhardilla de Covent Garden con la esperanza de hallar la cura a su enfermedad. Por otra, personas del entorno de Juliet est\u00e1n sucumbiendo a un sanguinario asesino que tiene en jaque a Scotland Yard. Una fiera cuyos cr\u00edmenes recuerdan demasiado al terror que campaba a sus anchas por la isla. El espanto de un pasado que Juliet cre\u00eda superado ha regresado con m\u00e1s violencia que nunca.</p>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n> Inspirada en el cl\u00e1sico de Robert Louis Stevenson El extra\u00f1o caso del doctor Jekyll y Mr. Hyde, Naturaleza oscura es la continuaci\u00f3n de [__Naturaleza Salvaje__](http://yo.toledano.org/naturaleza-salvaje/), un thriller de ambientaci\u00f3n g\u00f3tica sobre la delgada l\u00ednea que separa el bien del mal.\r\n\r\nPues si, exactamente. Es un _spin-off_ de otra c\u00e9lebre novela decimon\u00f3nica. Y que le vamos a hacer, tambi\u00e9n la le\u00ed. Total, ya hab\u00eda le\u00eddo la primera parte.\r\n\r\nEsta novela, un poco m\u00e1s elaborada que la anterior, supongo que es m\u00e1s entretenida, porque aunque tiene mas p\u00e1ginas, la le\u00ed en menos tiempo. Una suerte, porque no hubiera aguantado dos d\u00edas leyendo esta novela de __Megan Shepherd__.\r\n\r\nEn fin, que se hila perfectamente con la primera parte y abre la puerta para la tercera parte con la derivaci\u00f3n de una de la m\u00e1s c\u00e9lebre novela g\u00f3tica de ciencia ficci\u00f3n, pero esa, es otra historia.\r\n\r\nCompren el libro, que cuesta solo 96 pesitos en la tienda [Kindle de Amazon M\u00e9xico](http://goo.gl/o6hTys).", "extend": "", "pub_date": "2015-10-04T20:31:00Z", "summary_html": "", "body_html": "<div>\n<div class=\"row\">\n  <div class=\"col-md-4 col-xs-6\">\n    <img src=\"https://media.toledano.org/images/2015/naturaleza_oscura.jpg\" alt=\"Porta del Libro \u00abNaturaleza Oscura\u00bb\" />\n  </div>\n  <div class=\"col-md-8 col-xs-12\" style=\"padding-left:50px;\">\nDe regreso al l\u00fagubre Londres victoriano, Juliet Moreau trata de reconstruir la vida que conoci\u00f3 en otro tiempo. Han pasado varios meses desde que escap\u00f3 de la isla de su padre\u2026 y de los secretos que all\u00ed descubri\u00f3. Pese a todo, la oscuridad persigue a Juliet como una maldici\u00f3n.\n\n<p>Por una parte, las operaciones a las que la someti\u00f3 su padre la obligan a llevar a cabo experimentos secretos en una buhardilla de Covent Garden con la esperanza de hallar la cura a su enfermedad. Por otra, personas del entorno de Juliet est\u00e1n sucumbiendo a un sanguinario asesino que tiene en jaque a Scotland Yard. Una fiera cuyos cr\u00edmenes recuerdan demasiado al terror que campaba a sus anchas por la isla. El espanto de un pasado que Juliet cre\u00eda superado ha regresado con m\u00e1s violencia que nunca.</p>\n  </div>\n</div>\n</div>\n\n<blockquote>\n<p>Inspirada en el cl\u00e1sico de Robert Louis Stevenson El extra\u00f1o caso del doctor Jekyll y Mr. Hyde, Naturaleza oscura es la continuaci\u00f3n de <a href=\"http://yo.toledano.org/naturaleza-salvaje/\"><strong>Naturaleza Salvaje</strong></a>, un thriller de ambientaci\u00f3n g\u00f3tica sobre la delgada l\u00ednea que separa el bien del mal.</p>\n</blockquote>\n<p>Pues si, exactamente. Es un <em>spin-off</em> de otra c\u00e9lebre novela decimon\u00f3nica. Y que le vamos a hacer, tambi\u00e9n la le\u00ed. Total, ya hab\u00eda le\u00eddo la primera parte.</p>\n<p>Esta novela, un poco m\u00e1s elaborada que la anterior, supongo que es m\u00e1s entretenida, porque aunque tiene mas p\u00e1ginas, la le\u00ed en menos tiempo. Una suerte, porque no hubiera aguantado dos d\u00edas leyendo esta novela de <strong>Megan Shepherd</strong>.</p>\n<p>En fin, que se hila perfectamente con la primera parte y abre la puerta para la tercera parte con la derivaci\u00f3n de una de la m\u00e1s c\u00e9lebre novela g\u00f3tica de ciencia ficci\u00f3n, pero esa, es otra historia.</p>\n<p>Compren el libro, que cuesta solo 96 pesitos en la tienda <a href=\"http://goo.gl/o6hTys\">Kindle de Amazon M\u00e9xico</a>.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "naturaleza-oscura", "status": 1, "featured": false, "category": 5, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 21, "fields": {"idx": "4912eca9-9493-4cad-8064-09ad0b0573a6", "creado": "2017-07-29T01:24:29.813Z", "modificado": "2017-07-29T01:31:03.724Z", "title": "Naturaleza Salvaje", "summary": "Una novela ciberpunk victoriana. Un fork de La Isla del Doctor Mureau. No aporta gran cosa al g\u00e9nero.", "body": "Title: Naturaleza Salvaje    \r\nDate: 2015-10-04 1:38:55 p.m.\r\nCategory: opinion\r\nTags:  critica, steampunk, sci-fi\r\nSummary:\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-4 col-sm-12\">\r\n    <img class=\"align center size-full\" src=\"https://media.toledano.org/images/2015/naturaleza_salvaje.jpg\" alt=\"Porta del Libro \u00abNaturaleza Salvaje\u00bb\" />\r\n  </div>\r\n  <div class=\"col-md-8 col-sm-12\" style=\"padding-left:50px; padding-top:15px;\">\r\n    <cite>\r\n      La vida de Juliet Moreau en la l\u00f3brega ciudad de Londres del siglo XIX est\u00e1 envuelta en la tristeza. Trabaja sin cesar mientras trata de no pensar en el esc\u00e1ndalo que le arruin\u00f3 la vida. Al fin y al cabo, nadie ha logrado demostrar que los rumores que corren sobre los truculentos experimentos de su padre fueran ciertos. Sin embargo, cuando descubre que \u00e9l pudo haberla abandonado y desaparecido para seguir ejerciendo su trabajo en una isla tropical remota, decide averiguar si las sospechas que le arruinaron la vida son verdad o mentira.\r\n    </cite>\r\n  </div>\r\n</div>\r\n\r\nTengo muy mala suerte a la hora de elegir libros. Y bueno, es que la elecci\u00f3n es al azar. Usando el algoritmo matem\u00e1tico llamado _recocido simulado_ (tambi\u00e9n llamado _Simulated annealing_ o _de Tin Mar\u00edn de Do Ping\u00fc\u00e9_), no s\u00e9 porqu\u00e9 siempre me tocan libros muy malos que acabo leyendo como si fuera una manda o un castigo.\r\n\r\nEl libro __Naturaleza Salvaje__ est\u00e1 clasificado como Literatura Infantil y Juvenil[^1] y es un _spin-off_ de _\u00abLa Isla del Dr. Moreau\u00bb_ de H.G Well, una novela muy audaz y atrvida para su \u00e9poca[^2].\r\n\r\nUn _spin-off_ es una derivaci\u00f3n de la historia original, tal vez con personajes secundarios, ahora como protagonistas y con una argumento independiente de la historia original.\r\n\r\nPero _Naturaleza Salvaje_ es adem\u00e1s, y como no si es una moda, una historia de amor y hero\u00edsmo, donde la protagonista (claro que ten\u00eda que ser una jovencita) debe elegir entre dos amores, como cualquier saga de este g\u00e9nero en la actualidad.\r\n\r\nM\u00e1s o menos entretenida, se lee en un par de horas. Y tiene una continuaci\u00f3n y una tercera parte. Derivadas estas tambi\u00e9n de cl\u00e1sicos de la literatura g\u00f3tica de terror del siglo XIX. Ya hablaremos del resto de la saga en otra ocasi\u00f3n.\r\n\r\nBueno, digamos que eso es original. Por cierto la autora, __Megan Sheperd__ es muy joven y guapa[^3].\r\n\r\nLa saga est\u00e9 en venta en [Amazon M\u00e9xico](http://www.amazon.com.mx/Naturaleza-salvaje-Saga-ebook/dp/B00FFBV738/ref=sr_1_fkmr0_1?ie=UTF8&qid=1443983560&sr=8-1-fkmr0&keywords=naturaleza+salvaje+megan+shepard) y solo vale cien pesotes.\r\n\r\n\r\n[^1]: Por lo tanto, soy un _chavo ruco_.\r\n\r\n[^2]: Fue publicada en 1896 y fue muy criticada por la crudeza de sus descripciones y por el tema.\r\n\r\n[^3]: Irrelevante cuando se trata de criticar un libro, lo s\u00e9.", "extend": "", "pub_date": "2015-10-04T18:38:00Z", "summary_html": "<p>Una novela ciberpunk victoriana. Un fork de La Isla del Doctor Mureau. No aporta gran cosa al g\u00e9nero.</p>", "body_html": "<div class=\"row\">\n  <div class=\"col-md-4 col-sm-12\">\n    <img class=\"align center size-full\" src=\"https://media.toledano.org/images/2015/naturaleza_salvaje.jpg\" alt=\"Porta del Libro \u00abNaturaleza Salvaje\u00bb\" />\n  </div>\n  <div class=\"col-md-8 col-sm-12\" style=\"padding-left:50px; padding-top:15px;\">\n    <cite>\n      La vida de Juliet Moreau en la l\u00f3brega ciudad de Londres del siglo XIX est\u00e1 envuelta en la tristeza. Trabaja sin cesar mientras trata de no pensar en el esc\u00e1ndalo que le arruin\u00f3 la vida. Al fin y al cabo, nadie ha logrado demostrar que los rumores que corren sobre los truculentos experimentos de su padre fueran ciertos. Sin embargo, cuando descubre que \u00e9l pudo haberla abandonado y desaparecido para seguir ejerciendo su trabajo en una isla tropical remota, decide averiguar si las sospechas que le arruinaron la vida son verdad o mentira.\n    </cite>\n  </div>\n</div>\n\n<p>Tengo muy mala suerte a la hora de elegir libros. Y bueno, es que la elecci\u00f3n es al azar. Usando el algoritmo matem\u00e1tico llamado <em>recocido simulado</em> (tambi\u00e9n llamado <em>Simulated annealing</em> o <em>de Tin Mar\u00edn de Do Ping\u00fc\u00e9</em>), no s\u00e9 porqu\u00e9 siempre me tocan libros muy malos que acabo leyendo como si fuera una manda o un castigo.</p>\n<p>El libro <strong>Naturaleza Salvaje</strong> est\u00e1 clasificado como Literatura Infantil y Juvenil<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> y es un <em>spin-off</em> de <em>\u00abLa Isla del Dr. Moreau\u00bb</em> de H.G Well, una novela muy audaz y atrvida para su \u00e9poca<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>.</p>\n<p>Un <em>spin-off</em> es una derivaci\u00f3n de la historia original, tal vez con personajes secundarios, ahora como protagonistas y con una argumento independiente de la historia original.</p>\n<p>Pero <em>Naturaleza Salvaje</em> es adem\u00e1s, y como no si es una moda, una historia de amor y hero\u00edsmo, donde la protagonista (claro que ten\u00eda que ser una jovencita) debe elegir entre dos amores, como cualquier saga de este g\u00e9nero en la actualidad.</p>\n<p>M\u00e1s o menos entretenida, se lee en un par de horas. Y tiene una continuaci\u00f3n y una tercera parte. Derivadas estas tambi\u00e9n de cl\u00e1sicos de la literatura g\u00f3tica de terror del siglo XIX. Ya hablaremos del resto de la saga en otra ocasi\u00f3n.</p>\n<p>Bueno, digamos que eso es original. Por cierto la autora, <strong>Megan Sheperd</strong> es muy joven y guapa<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup>.</p>\n<p>La saga est\u00e9 en venta en <a href=\"http://www.amazon.com.mx/Naturaleza-salvaje-Saga-ebook/dp/B00FFBV738/ref=sr_1_fkmr0_1?ie=UTF8&amp;qid=1443983560&amp;sr=8-1-fkmr0&amp;keywords=naturaleza+salvaje+megan+shepard\">Amazon M\u00e9xico</a> y solo vale cien pesotes.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Por lo tanto, soy un <em>chavo ruco</em>.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Fue publicada en 1896 y fue muy criticada por la crudeza de sus descripciones y por el tema.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>Irrelevante cuando se trata de criticar un libro, lo s\u00e9.&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "naturaleza-salvaje", "status": 1, "featured": false, "category": 5, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 22, "fields": {"idx": "22f1b190-8a8f-4c68-8f93-4885c40d5223", "creado": "2017-07-29T01:32:57.173Z", "modificado": "2017-07-29T01:34:34.934Z", "title": "Sin Alma", "summary": "Una mezcla, esta vez, exitosa de novela rosa, de vampiros, steampunk y victoriana. Es una serie muy entretenida, aunque sea para adolescentes.", "body": "Title: Sin Alma    \r\nDate: 2015-10-05 11:05:02 p.m.\r\nCategory: opinion\r\nTags: critica, fantasia, steampunk  \r\n\r\n<div class=\"row\" style=\"padding-bottom: 20px\">\r\n  <div class=\"col-md-4 col-sm-12\">\r\n    <img class=\"align center size-full\" src=\"https://media.toledano.org/images/2015/sinalma.jpg\" alt=\"Porta del Libro - Sin Alma\" />\r\n  </div>\r\n  <div class=\"col-md-8 col-sm-12\" style=\"padding:55px;\">\r\n    <cite>\r\n      <strong>Alexia Tarabotti</strong> tiene muchos y muy grandes problemas sociales. En primera, no tiene alma. Segundo, es una solterona hija de un italiano, que sin embargo, est\u00e1 muerto. Tercero, fue atacada de forma muy grosera por un vampiro  sin ning\u00fan respeto por la etiqueta social.\r\n    </cite>\r\n  </div>\r\n</div>\r\n\r\nLuego hay hombres-lobo y la Reina Victoria y muchas tazas de t\u00e9.\r\n\r\nSin embargo, este libro __\u00abSin Alma\u00bb__ y en general toda la saga de _\u00abEl protectorado de la sombrilla\u00bb_ tiene dos cosas muy buenas: la primera la original presencia de la autora, que se viste como si viviera en la \u00e9poca victoriana y el g\u00e9nero que es __*steampuk*__, muy descuidado y que es una genialidad.\r\n\r\nFuera de eso, parece una de las novelas in\u00e9ditas de Corin Tellado. Adem\u00e1s, la traducci\u00f3n deja mucho que desear[^1].\r\n\r\nPero l\u00e9anla, lean toda la saga, nom\u00e1s para mantener vivo el genero steampunk, que es com\u00fan con los _cosplayer_, pero raro en la literatura.\r\n\r\nSin cinco libros, aunque el \u00faltimo no ha salido en espa\u00f1ol: Sin alma, Sin cambios, Sin culpa, Sin coraz\u00f3n y _Timeless_[^2].\r\n\r\nEs muy dif\u00edcil de conseguir, pero lo encuentran en [La casa del libro](http://goo.gl/cLyhKh) aunque un poco caro para mi gusto, pero es en papel. Mejor si le hacen al ingl\u00e9s, compren la saga completa, que ha de estar en unos 30 d\u00f3lares para el Kindle, en [Amazon](http://amzn.to/1jakEf0).\r\n\r\n\r\n[^1]: Bueno, por lo menos la que me toc\u00f3.\r\n\r\n[^2]: Supongo que se llamar\u00e1 _Sin Tiempo_.", "extend": "", "pub_date": "2015-10-06T04:05:00Z", "summary_html": "<p>Una mezcla, esta vez, exitosa de novela rosa, de vampiros, steampunk y victoriana. Es una serie muy entretenida, aunque sea para adolescentes.</p>", "body_html": "<div class=\"row\" style=\"padding-bottom: 20px\">\n  <div class=\"col-md-4 col-sm-12\">\n    <img class=\"align center size-full\" src=\"https://media.toledano.org/images/2015/sinalma.jpg\" alt=\"Porta del Libro - Sin Alma\" />\n  </div>\n  <div class=\"col-md-8 col-sm-12\" style=\"padding:55px;\">\n    <cite>\n      <strong>Alexia Tarabotti</strong> tiene muchos y muy grandes problemas sociales. En primera, no tiene alma. Segundo, es una solterona hija de un italiano, que sin embargo, est\u00e1 muerto. Tercero, fue atacada de forma muy grosera por un vampiro  sin ning\u00fan respeto por la etiqueta social.\n    </cite>\n  </div>\n</div>\n\n<p>Luego hay hombres-lobo y la Reina Victoria y muchas tazas de t\u00e9.</p>\n<p>Sin embargo, este libro <strong>\u00abSin Alma\u00bb</strong> y en general toda la saga de <em>\u00abEl protectorado de la sombrilla\u00bb</em> tiene dos cosas muy buenas: la primera la original presencia de la autora, que se viste como si viviera en la \u00e9poca victoriana y el g\u00e9nero que es <strong><em>steampuk</em></strong>, muy descuidado y que es una genialidad.</p>\n<p>Fuera de eso, parece una de las novelas in\u00e9ditas de Corin Tellado. Adem\u00e1s, la traducci\u00f3n deja mucho que desear<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>.</p>\n<p>Pero l\u00e9anla, lean toda la saga, nom\u00e1s para mantener vivo el genero steampunk, que es com\u00fan con los <em>cosplayer</em>, pero raro en la literatura.</p>\n<p>Sin cinco libros, aunque el \u00faltimo no ha salido en espa\u00f1ol: Sin alma, Sin cambios, Sin culpa, Sin coraz\u00f3n y <em>Timeless</em><sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>.</p>\n<p>Es muy dif\u00edcil de conseguir, pero lo encuentran en <a href=\"http://goo.gl/cLyhKh\">La casa del libro</a> aunque un poco caro para mi gusto, pero es en papel. Mejor si le hacen al ingl\u00e9s, compren la saga completa, que ha de estar en unos 30 d\u00f3lares para el Kindle, en <a href=\"http://amzn.to/1jakEf0\">Amazon</a>.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Bueno, por lo menos la que me toc\u00f3.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Supongo que se llamar\u00e1 <em>Sin Tiempo</em>.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "sin-alma", "status": 1, "featured": false, "category": 5, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 23, "fields": {"idx": "b4659cc5-e34a-4476-a21d-ddabb16df726", "creado": "2017-07-29T01:35:40.400Z", "modificado": "2017-07-29T01:39:06.307Z", "title": "Que es el Kanban", "summary": "", "body": "Title: Que es el Kanban\r\nDate: 2014/03/04 19:17\r\nCategory: calidad\r\nTags: kanban, productividad\r\nSlug: que-es-kanban\r\nAuthor: Javier Sanchez Toledano\r\nemail: javier@namespace.mx\r\nSummary: Qu\u00e9 es el Kanban y como puede ayudarme a aumentar mi productividad personal y laboral.\r\n\r\nEncontrar formas de hacer las cosas m\u00e1s eficientemente se ha convertido en una necesidad, no importa cu\u00e1l sea tu negocio o tu organizaci\u00f3n, y eso requiere herramientas para un aprendizaje y una mejora efectiva. _\"Lean\"_ o \"ligero\" es un t\u00e9rmino general para encontrar formas de eliminar el desperdicio y aumentar la eficiencia. Aunque las metodolog\u00edas ligeras se desarrollaron para entornos de manufactura, muchos principios _ligeros_ pueden ser aplicados a cualquier tipo de organizaci\u00f3n o actividad; desde desarrollo de software hasta contabilidad o las tareas del hogar.\r\n\r\nLos principios _Lean_ se mencionaron por primera vez en el 2003, en el libro _Lean Software Development: An Agile Toolkit_, escrito por Mary y Tom Poppendiek. Y establecieron una serie de principios y herramientas que eran aplicables a cualquier tipo de proyecto:\r\n\r\nEliminar el desperdicio\r\n:\t\ten donde desperdicio significa cualquier cosa o actividad que no agregue valor.\r\n\r\nAprendizaje amplificado\r\n:   crear herramientas y pr\u00e1cticas que permitan el aprendizaje en el caminio.\r\n\r\nDecidir lo m\u00e1s tarde posible.\r\n:   para evitar el retrabajo y cuando nos enfrentamos al cambio.\r\n\r\nEntregar lo m\u00e1s pronto posible\r\n:   para obtener retroalimentaci\u00f3n y entregar el producto r\u00e1pidamente.\r\n\r\nFortalecer al equipo\r\n:   para que la gente que hace el trabajo encuentre la mejor forma de hacerlo.\r\n\r\nTrabajar con integridad\r\n:   Es mejor hacer las cosas bien a la primera, que arreglar lo problemas despu\u00e9s.\r\n\r\nVer el todo\r\n:   reconocer que todas las tareas del proyecto son parte de un sistema y se deben apoyar unas con otras.\r\n\r\nMuchas personas familizarizadas con _Lean_ ven esto como una caja de herramientas que contiene una variedad de ellas. Diferentes herramientas pueden aplicarse a diferentes actividades o procesos, o de acuerdo al problema que quiere resolverse. Es m\u00e1s, las herramientas _Lean_ pueden adaptarse o modificarse muy f\u00e1cilmente para adaptarse a necesidades espec\u00edficas. Una de las herramientas _Lean_ m\u00e1s \u00fatiles y populares es la conocida como __kanban__. En este caso, vamos a hablar de una de las derivaciones de kanban conocida como __M\u00e9todo Kanban__, desarrollado por David Anderson para el desarrollo de software, pero que puede aplicarse a una amplia variedad de situaciones.\r\n\r\n## \u00bfQu\u00e9 es el M\u00e9todo Kanban?\r\n\r\nLa mayor\u00eda de los proyectos pueden visualizarse como un proceso, una serie de pasos o actividades que buscan lograr alg\u00fan resultado[^1]. En este sentido podemos clasificar a los proyectos como simples o complejos, individuales o por equipo, a corto, mediano o largo plazo. Incluso podemos dividir un proyecto en una serie de proyectos m\u00e1s peque\u00f1os.\r\n\r\nEl M\u00e9todo Kanban es una herramienta para administrar, visualizar y medir el flujo de materiales o informaci\u00f3n (o lo que sea) en un proceso. No contar con los materiales, o refacciones o un documento o informaci\u00f3n del cliente, en el momento en que se necesita puede causar retrasos y desperdicios. Por otro lado, tener demasiadas refacciones, meteria prima o trabajo en proceso tambi\u00e9n es una forma de desperdicio. El M\u00e9todo Kanban es una herramienta que sirve para descrubir y admnistrar un flujo \u00f3ptimo de trabajo dentro de un sistema.\r\n\r\nHay cinco reglas b\u00e1sicas para implementar el M\u00e9todo Kanban:\r\n\r\nVisualiza el flujo de trabajo\r\n:   Una representaci\u00f3n visual del trabajo te permite ver exactamente que tareas han paso de \"sin hacer\" a \"bien hechas\". Entre m\u00e1s complejo sea un proceso, m\u00e1s \u00fatil e importante ser\u00e1 visualizar el flujo de trabajo, pero el Kanban puede usarse incluso si hay solo unos cuantos pasos (por hacer, haciendo, hecho) o muchos (planeaci\u00f3n, dise\u00f1o, desarrollo, pruebas, implementaci\u00f3n, integraci\u00f3n, despliegue). Sin importar que tan grande sea un proyecto, crear un tablero Kanban te permitir\u00e1 ver el estatus que guarda el trabajo de un solo vistazo.\r\n\r\nLimita el Trabajo En Proceso (TEP)\r\n:   Haz m\u00e1s haciendo menos. Puede parecer contraintuitivo, pero es una poderosa idea que ha sido probada una y otra vez. Existe un l\u00edmite de cosas en las que puedes trabajar y hacerlas bien, y ese l\u00edmite es menor de lo que podr\u00edas imaginarte. No importa si es un proyecto simple o complejo. No importa si tu equipo es grande o peque\u00f1o. Hay una cantidad \u00f3ptima de trabajo que puede estar en proceso en un momento determinado sin sacrificar eficiencia. Por eso no es raro que a veces estemos tratando de hacer diez cosas al mismo tiempo te toma una semana; pero hacer solo dos cosas al mismo tiempo te lleva solo unas cuantas horas, y al final de la semana hiciste veinte. El medici\u00f3n del Kanban te permite encontrar ese n\u00famero \u00f3ptimo.\r\n\r\nMedir y Mejorar el Flujo de Trabajo\r\n:   La mejora debe basarse en objetivos medibles, y con el Kanban es lo mismo. Encontrar y aplicar buenas m\u00e9tricas es por lo general un paso un tanto complicado, pero unas cuantas mediciones autom\u00e1ticamente generadas por una aplicaci\u00f3n como Kanbanery[^2] pueden darte la informaci\u00f3n que necesitas para ajustar tu proceso a un flujo \u00f3ptimo y maximizar la eficiencia.\r\n\r\nCrea pol\u00edticas expl\u00edcitas\r\n: Debes ser claro acerca de lo qu\u00e9 haces y por qu\u00e9 lo haces. Escribe estas reglas, porque sin una comprensi\u00f3n com\u00fan, es dif\u00edcil ajustar y mejorar.\r\n\r\nMejora colaborativamente\r\n:   Usa modelos y el m\u00e9todo cient\u00edfico. Los modelos de pensamiento, como la Teor\u00eda de las Restricciones, permiten al equipo predecir el impacto de los cambios; y la predicci\u00f3n seguida de las pruebas son la clave del m\u00e9todo cient\u00edfico.\r\n\r\nUna de las mejores cosas del M\u00e9todo Kanban es que puedes aplicarlo a tus procesos actuales. Simplemente te ayudar\u00e1 a identificar formar de mejorar lo que est\u00e1s haciendo actualmente, para que no tengas que empezar desde el principio. Sin cambios repentinos, no hay riesgo al aplicar el M\u00e9todo Kanban para mejorar las jornadas laborales.\r\n\r\n!!! notice \"El M\u00e9todo Kanban y el Cuadro de Mando\"\r\n    Recientemente me di cuenta que si no hac\u00eda algo para cambiar la situaci\u00f3n actual en mi trabajo, no iba a lograr el objetivo de terminar la aplicaci\u00f3n de las metas del servicio profesional a tiempo. Entonces decid\u00ed aplicar el __M\u00e9todo Kanban__ para el desarrollo del CMI y estoy convenciendo a mi jefe para que lo aplique con el equipo.\r\n\r\n    Ne pierdas la serie [#kanban](/tag/kanban/) sobre mi experiencia aplicando el M\u00e9too Kanban en mi trabajo. Espero que puedas aplicarlo o compartir conmigo tu propia experiencia.\r\n\r\n[^1]: Aunque la definici\u00f3n oficial que usamos en la organizaci\u00f3n es \"Un proceso es un conjunto de actividades que transforman elementos de entrada en resultados\".\r\n\r\n[^2]: Kanberry es un aplicaci\u00f3n comercial que encuentras aqui: http://conxb.com/ns-kanbanery", "extend": "", "pub_date": "2014-03-05T01:17:00Z", "summary_html": "", "body_html": "<p>Encontrar formas de hacer las cosas m\u00e1s eficientemente se ha convertido en una necesidad, no importa cu\u00e1l sea tu negocio o tu organizaci\u00f3n, y eso requiere herramientas para un aprendizaje y una mejora efectiva. <em>&ldquo;Lean&rdquo;</em> o &ldquo;ligero&rdquo; es un t\u00e9rmino general para encontrar formas de eliminar el desperdicio y aumentar la eficiencia. Aunque las metodolog\u00edas ligeras se desarrollaron para entornos de manufactura, muchos principios <em>ligeros</em> pueden ser aplicados a cualquier tipo de organizaci\u00f3n o actividad; desde desarrollo de software hasta contabilidad o las tareas del hogar.</p>\n<p>Los principios <em>Lean</em> se mencionaron por primera vez en el 2003, en el libro <em>Lean Software Development: An Agile Toolkit</em>, escrito por Mary y Tom Poppendiek. Y establecieron una serie de principios y herramientas que eran aplicables a cualquier tipo de proyecto:</p>\n<dl>\n<dt>Eliminar el desperdicio</dt>\n<dd>\n<p>en donde desperdicio significa cualquier cosa o actividad que no agregue valor.</p>\n</dd>\n<dt>Aprendizaje amplificado</dt>\n<dd>crear herramientas y pr\u00e1cticas que permitan el aprendizaje en el caminio.</dd>\n<dt>Decidir lo m\u00e1s tarde posible.</dt>\n<dd>para evitar el retrabajo y cuando nos enfrentamos al cambio.</dd>\n<dt>Entregar lo m\u00e1s pronto posible</dt>\n<dd>para obtener retroalimentaci\u00f3n y entregar el producto r\u00e1pidamente.</dd>\n<dt>Fortalecer al equipo</dt>\n<dd>para que la gente que hace el trabajo encuentre la mejor forma de hacerlo.</dd>\n<dt>Trabajar con integridad</dt>\n<dd>Es mejor hacer las cosas bien a la primera, que arreglar lo problemas despu\u00e9s.</dd>\n<dt>Ver el todo</dt>\n<dd>reconocer que todas las tareas del proyecto son parte de un sistema y se deben apoyar unas con otras.</dd>\n</dl>\n<p>Muchas personas familizarizadas con <em>Lean</em> ven esto como una caja de herramientas que contiene una variedad de ellas. Diferentes herramientas pueden aplicarse a diferentes actividades o procesos, o de acuerdo al problema que quiere resolverse. Es m\u00e1s, las herramientas <em>Lean</em> pueden adaptarse o modificarse muy f\u00e1cilmente para adaptarse a necesidades espec\u00edficas. Una de las herramientas <em>Lean</em> m\u00e1s \u00fatiles y populares es la conocida como <strong>kanban</strong>. En este caso, vamos a hablar de una de las derivaciones de kanban conocida como <strong>M\u00e9todo Kanban</strong>, desarrollado por David Anderson para el desarrollo de software, pero que puede aplicarse a una amplia variedad de situaciones.</p>\n<h2 id=\"que-es-el-metodo-kanban\">\u00bfQu\u00e9 es el M\u00e9todo Kanban?</h2>\n<p>La mayor\u00eda de los proyectos pueden visualizarse como un proceso, una serie de pasos o actividades que buscan lograr alg\u00fan resultado<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>. En este sentido podemos clasificar a los proyectos como simples o complejos, individuales o por equipo, a corto, mediano o largo plazo. Incluso podemos dividir un proyecto en una serie de proyectos m\u00e1s peque\u00f1os.</p>\n<p>El M\u00e9todo Kanban es una herramienta para administrar, visualizar y medir el flujo de materiales o informaci\u00f3n (o lo que sea) en un proceso. No contar con los materiales, o refacciones o un documento o informaci\u00f3n del cliente, en el momento en que se necesita puede causar retrasos y desperdicios. Por otro lado, tener demasiadas refacciones, meteria prima o trabajo en proceso tambi\u00e9n es una forma de desperdicio. El M\u00e9todo Kanban es una herramienta que sirve para descrubir y admnistrar un flujo \u00f3ptimo de trabajo dentro de un sistema.</p>\n<p>Hay cinco reglas b\u00e1sicas para implementar el M\u00e9todo Kanban:</p>\n<dl>\n<dt>Visualiza el flujo de trabajo</dt>\n<dd>Una representaci\u00f3n visual del trabajo te permite ver exactamente que tareas han paso de &ldquo;sin hacer&rdquo; a &ldquo;bien hechas&rdquo;. Entre m\u00e1s complejo sea un proceso, m\u00e1s \u00fatil e importante ser\u00e1 visualizar el flujo de trabajo, pero el Kanban puede usarse incluso si hay solo unos cuantos pasos (por hacer, haciendo, hecho) o muchos (planeaci\u00f3n, dise\u00f1o, desarrollo, pruebas, implementaci\u00f3n, integraci\u00f3n, despliegue). Sin importar que tan grande sea un proyecto, crear un tablero Kanban te permitir\u00e1 ver el estatus que guarda el trabajo de un solo vistazo.</dd>\n<dt>Limita el Trabajo En Proceso (TEP)</dt>\n<dd>Haz m\u00e1s haciendo menos. Puede parecer contraintuitivo, pero es una poderosa idea que ha sido probada una y otra vez. Existe un l\u00edmite de cosas en las que puedes trabajar y hacerlas bien, y ese l\u00edmite es menor de lo que podr\u00edas imaginarte. No importa si es un proyecto simple o complejo. No importa si tu equipo es grande o peque\u00f1o. Hay una cantidad \u00f3ptima de trabajo que puede estar en proceso en un momento determinado sin sacrificar eficiencia. Por eso no es raro que a veces estemos tratando de hacer diez cosas al mismo tiempo te toma una semana; pero hacer solo dos cosas al mismo tiempo te lleva solo unas cuantas horas, y al final de la semana hiciste veinte. El medici\u00f3n del Kanban te permite encontrar ese n\u00famero \u00f3ptimo.</dd>\n<dt>Medir y Mejorar el Flujo de Trabajo</dt>\n<dd>La mejora debe basarse en objetivos medibles, y con el Kanban es lo mismo. Encontrar y aplicar buenas m\u00e9tricas es por lo general un paso un tanto complicado, pero unas cuantas mediciones autom\u00e1ticamente generadas por una aplicaci\u00f3n como Kanbanery<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> pueden darte la informaci\u00f3n que necesitas para ajustar tu proceso a un flujo \u00f3ptimo y maximizar la eficiencia.</dd>\n<dt>Crea pol\u00edticas expl\u00edcitas</dt>\n<dd>Debes ser claro acerca de lo qu\u00e9 haces y por qu\u00e9 lo haces. Escribe estas reglas, porque sin una comprensi\u00f3n com\u00fan, es dif\u00edcil ajustar y mejorar.</dd>\n<dt>Mejora colaborativamente</dt>\n<dd>Usa modelos y el m\u00e9todo cient\u00edfico. Los modelos de pensamiento, como la Teor\u00eda de las Restricciones, permiten al equipo predecir el impacto de los cambios; y la predicci\u00f3n seguida de las pruebas son la clave del m\u00e9todo cient\u00edfico.</dd>\n</dl>\n<p>Una de las mejores cosas del M\u00e9todo Kanban es que puedes aplicarlo a tus procesos actuales. Simplemente te ayudar\u00e1 a identificar formar de mejorar lo que est\u00e1s haciendo actualmente, para que no tengas que empezar desde el principio. Sin cambios repentinos, no hay riesgo al aplicar el M\u00e9todo Kanban para mejorar las jornadas laborales.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">El M\u00e9todo Kanban y el Cuadro de Mando</p>\n<p>Recientemente me di cuenta que si no hac\u00eda algo para cambiar la situaci\u00f3n actual en mi trabajo, no iba a lograr el objetivo de terminar la aplicaci\u00f3n de las metas del servicio profesional a tiempo. Entonces decid\u00ed aplicar el <strong>M\u00e9todo Kanban</strong> para el desarrollo del CMI y estoy convenciendo a mi jefe para que lo aplique con el equipo.</p>\n<p>Ne pierdas la serie <a href=\"/tag/kanban/\">#kanban</a> sobre mi experiencia aplicando el M\u00e9too Kanban en mi trabajo. Espero que puedas aplicarlo o compartir conmigo tu propia experiencia.</p>\n</div>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Aunque la definici\u00f3n oficial que usamos en la organizaci\u00f3n es &ldquo;Un proceso es un conjunto de actividades que transforman elementos de entrada en resultados&rdquo;.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Kanberry es un aplicaci\u00f3n comercial que encuentras aqui: http://conxb.com/ns-kanbanery&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "que-es-el-kanban", "status": 1, "featured": false, "category": 4, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 24, "fields": {"idx": "ee75f533-8107-4671-8b52-287d24361f42", "creado": "2017-07-29T01:40:02.508Z", "modificado": "2017-07-29T01:40:02.508Z", "title": "El Manual de la Calidad en la norma ISO 9001", "summary": "C\u00f3mo cumplir con el requisito del manual de la calidad.", "body": "Title: El Manual de la Calidad en la norma ISO 9001  \r\nDate: 2015-07-25 19:46:01  \r\nCategory: Calidad  \r\nTags:  iso9001, requisitos\r\nAuthor: Javier Sanchez Toledano  \r\nSummary: C\u00f3mo cumplir con el requisito del manual de la calidad.  \r\n\r\nLa norma ISO 9001:2008 requiere que se establezca y se mantenga un manual de la calidad dentro de la documentaci\u00f3n del sistema. Este requisito se ha eliminado en la versi\u00f3n 9001:2015, pero puede mantenerse dentro de la informaci\u00f3n documentada si la organizaci\u00f3n lo requiere.\r\n\r\n## Qu\u00e9 es un manual de la calidad\r\n\r\nLa norma **ISO 9000:2005** define un manual de la calidad como *el documento que especifica al sistema de gesti\u00f3n de la calidad de una organizaci\u00f3n*. Por lo tanto, no se pretende que el manual sea una respuesta a los requisitos de la norma ISO 9001[^1]. En tanto que es un documento de alto nivel que describe el sistema de gesti\u00f3n de la calidad, especifica como se asegura una organizaci\u00f3n que puede entregar de manera consistente productos o servicios[^2] que satisfagan tanto a los clientes como a los requisitos legales y reglamentarios.\r\n\r\nUn manual de la calidad que parafrasea los requisitos de la norma no aporta ning\u00fan valor. No tiene ning\u00fan uso para la direcci\u00f3n, el personal o los auditores. Y pude haber quien piense que es \u00fatil para los clientes, la verdad es que un manual no da m\u00e1s confianza que, por ejemplo, el certificado de calidad.\r\n\r\n## Por qu\u00e9 es necesario\r\n\r\nEste requisito responde al principio de *Enfoque de Sistemas*[^3].\r\n\r\nSe requiere una descripci\u00f3n del sistema de gesti\u00f3n como una forma de mostrar como todos los procesos est\u00e1n interconectados y como interact\u00faan para, de forma colectiva, entregar el producto o servicio intencionado. Tiene varios usos, por ejemplo:\r\n\r\n- un medio para comunicar la visi\u00f3n, valores, misi\u00f3n, pol\u00edtica y objetivos de la organizaci\u00f3m;\r\n- para mostrar como se dise\u00f1\u00f3 el sistema;\r\n- explicar el flujo de procesos;\r\n- una forma de explicar *qui\u00e9n* hace *qu\u00e9*;\r\n- un ayuda para entrenar a personal nuevo;\r\n- una herramienta en el an\u00e1lisis de mejoras potenciales;\r\n- para demostrar cumplimiento con regulaciones o normas externas.\r\n\r\n## C\u00f3mo se demuestra\r\n\r\nCuando se formulan las pol\u00edticas, objetivos y se determinan los procesos necesarios para alcanzarlos, el manual de la calidad proporciona un medio conveniente para contener dicha informaci\u00f3n. Si todo esto se mantiene por separado, ser\u00e1 m\u00e1s dif\u00edcil ver como se enlazan.\r\n\r\nEl requisito proporciona un marco de trabajo para el manual. Por ejemplo, si el manual es un documento impreso, podr\u00eda contener algo como lo sigiente:\r\n\r\n- Introducci\u00f3n\r\n- Prop\u00f3sito (del manual)\r\n- Alcance (del manual)\r\n- Aplicaci\u00f3n (del manual)\r\n- Definiciones (de los t\u00e9rminos usados en el manual)\r\n- Entorno de la organizaci\u00f3n\r\n    - Naturaleza de la organizaci\u00f3n, el alcance de sus actividades, sus productos y servicios,\r\n    - Las partes interesadas de la organizaci\u00f3n (clientes, empleados, reguladores, inversionistas, proveedores, due\u00f1os, etc.)\r\n    - Un diagrama que muestre como se relaciona la organizaci\u00f3n con el entrno,\r\n    - Visi\u00f3n y Valores\r\n    - Misi\u00f3n,\r\n- Sobre la organizaci\u00f3n\r\n    - Descripci\u00f3n de funciones,\r\n    - Organigrama,\r\n    - Sitios y alcance de las actividades,\r\n- Procesos de la organizaci\u00f3n\r\n    - Un mapa de procesos que muestre los procesos clave y como est\u00e1n interconectados,\r\n    - Indicadores de desempe\u00f1o del sistema y los m\u00e9todos de medici\u00f3n,\r\n    - Descripci\u00f3n de los proceso de direcci\u00f3n,\r\n    - Descripci\u00f3n de los procesos de gesti\u00f3n de recursos,\r\n    - Descripci\u00f3n de los procesos de dise\u00f1o de productos y/o servicios,\r\n    - Descripci\u00f3n de los procesos de cumplimiento de requisitos.\r\n- Matriz de funciones (relaci\u00f3n entre funciones y procesos),\r\n- Matriz de sitios (relaci\u00f3n entre sitios y procesos),\r\n- Matrices de cumplimiento de requisitos\r\n\r\n## Otras opciones\r\n\r\nLa descripci\u00f3n de los procesos puede estar aparte, y en el manual debe aparecer una referencia. \r\n\r\nTal vez, ya que el manual contiene una descripci\u00f3n del sistema de gesti\u00f3n, un nombre m\u00e1s adecuado sea *Manual del Sistema de Gesti\u00f3n* o tal vez se prefiera un t\u00edtulo que corresponda al prop\u00f3sito, como *Descripci\u00f3n del Sistema de Gesti\u00f3n* o algo as\u00ed. Adem\u00e1s, se puede crear un documento mucho m\u00e1s peque\u00f1o que responda a los requisitos de la norma ISO 9001 y de otras, como la ISO 14001. \r\n\r\nAhora bien, si tu **Manual de la Calidad** lo haces como un conjunto de p\u00e1ginas web, el \u00edndice que puse arriba podr\u00eda ser una colecci\u00f3n de hiperenlaces y ser\u00eda m\u00e1s f\u00e1cil, incluso, mantenerlo actualizado.\r\n\r\nLuego les platico como es el que usamos nosotros.\r\n\r\n[^1]: Aunque yo mismo hize el manual de la calidad, como una copia *tropicalizada* de la ISO 9001.\r\n[^2]: Aprovecho que la versi\u00f3n ISO 9001:2015 ya hace la distinci\u00f3n entre *producto* y *servicio*.\r\n[^3]: Tal vez como ya no existe (expl\u00edcitamente) este principio en la 9001:2015, tampoco el manual es un requisito.", "extend": "", "pub_date": "2015-07-26T00:46:01Z", "summary_html": "<p>C\u00f3mo cumplir con el requisito del manual de la calidad.</p>", "body_html": "<p>La norma ISO 9001:2008 requiere que se establezca y se mantenga un manual de la calidad dentro de la documentaci\u00f3n del sistema. Este requisito se ha eliminado en la versi\u00f3n 9001:2015, pero puede mantenerse dentro de la informaci\u00f3n documentada si la organizaci\u00f3n lo requiere.</p>\n<h2 id=\"que-es-un-manual-de-la-calidad\">Qu\u00e9 es un manual de la calidad</h2>\n<p>La norma <strong>ISO 9000:2005</strong> define un manual de la calidad como <em>el documento que especifica al sistema de gesti\u00f3n de la calidad de una organizaci\u00f3n</em>. Por lo tanto, no se pretende que el manual sea una respuesta a los requisitos de la norma ISO 9001<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>. En tanto que es un documento de alto nivel que describe el sistema de gesti\u00f3n de la calidad, especifica como se asegura una organizaci\u00f3n que puede entregar de manera consistente productos o servicios<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> que satisfagan tanto a los clientes como a los requisitos legales y reglamentarios.</p>\n<p>Un manual de la calidad que parafrasea los requisitos de la norma no aporta ning\u00fan valor. No tiene ning\u00fan uso para la direcci\u00f3n, el personal o los auditores. Y pude haber quien piense que es \u00fatil para los clientes, la verdad es que un manual no da m\u00e1s confianza que, por ejemplo, el certificado de calidad.</p>\n<h2 id=\"por-que-es-necesario\">Por qu\u00e9 es necesario</h2>\n<p>Este requisito responde al principio de <em>Enfoque de Sistemas</em><sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup>.</p>\n<p>Se requiere una descripci\u00f3n del sistema de gesti\u00f3n como una forma de mostrar como todos los procesos est\u00e1n interconectados y como interact\u00faan para, de forma colectiva, entregar el producto o servicio intencionado. Tiene varios usos, por ejemplo:</p>\n<ul>\n<li>un medio para comunicar la visi\u00f3n, valores, misi\u00f3n, pol\u00edtica y objetivos de la organizaci\u00f3m;</li>\n<li>para mostrar como se dise\u00f1\u00f3 el sistema;</li>\n<li>explicar el flujo de procesos;</li>\n<li>una forma de explicar <em>qui\u00e9n</em> hace <em>qu\u00e9</em>;</li>\n<li>un ayuda para entrenar a personal nuevo;</li>\n<li>una herramienta en el an\u00e1lisis de mejoras potenciales;</li>\n<li>para demostrar cumplimiento con regulaciones o normas externas.</li>\n</ul>\n<h2 id=\"como-se-demuestra\">C\u00f3mo se demuestra</h2>\n<p>Cuando se formulan las pol\u00edticas, objetivos y se determinan los procesos necesarios para alcanzarlos, el manual de la calidad proporciona un medio conveniente para contener dicha informaci\u00f3n. Si todo esto se mantiene por separado, ser\u00e1 m\u00e1s dif\u00edcil ver como se enlazan.</p>\n<p>El requisito proporciona un marco de trabajo para el manual. Por ejemplo, si el manual es un documento impreso, podr\u00eda contener algo como lo sigiente:</p>\n<ul>\n<li>Introducci\u00f3n</li>\n<li>Prop\u00f3sito (del manual)</li>\n<li>Alcance (del manual)</li>\n<li>Aplicaci\u00f3n (del manual)</li>\n<li>Definiciones (de los t\u00e9rminos usados en el manual)</li>\n<li>Entorno de la organizaci\u00f3n<ul>\n<li>Naturaleza de la organizaci\u00f3n, el alcance de sus actividades, sus productos y servicios,</li>\n<li>Las partes interesadas de la organizaci\u00f3n (clientes, empleados, reguladores, inversionistas, proveedores, due\u00f1os, etc.)</li>\n<li>Un diagrama que muestre como se relaciona la organizaci\u00f3n con el entrno,</li>\n<li>Visi\u00f3n y Valores</li>\n<li>Misi\u00f3n,</li>\n</ul>\n</li>\n<li>Sobre la organizaci\u00f3n<ul>\n<li>Descripci\u00f3n de funciones,</li>\n<li>Organigrama,</li>\n<li>Sitios y alcance de las actividades,</li>\n</ul>\n</li>\n<li>Procesos de la organizaci\u00f3n<ul>\n<li>Un mapa de procesos que muestre los procesos clave y como est\u00e1n interconectados,</li>\n<li>Indicadores de desempe\u00f1o del sistema y los m\u00e9todos de medici\u00f3n,</li>\n<li>Descripci\u00f3n de los proceso de direcci\u00f3n,</li>\n<li>Descripci\u00f3n de los procesos de gesti\u00f3n de recursos,</li>\n<li>Descripci\u00f3n de los procesos de dise\u00f1o de productos y/o servicios,</li>\n<li>Descripci\u00f3n de los procesos de cumplimiento de requisitos.</li>\n</ul>\n</li>\n<li>Matriz de funciones (relaci\u00f3n entre funciones y procesos),</li>\n<li>Matriz de sitios (relaci\u00f3n entre sitios y procesos),</li>\n<li>Matrices de cumplimiento de requisitos</li>\n</ul>\n<h2 id=\"otras-opciones\">Otras opciones</h2>\n<p>La descripci\u00f3n de los procesos puede estar aparte, y en el manual debe aparecer una referencia. </p>\n<p>Tal vez, ya que el manual contiene una descripci\u00f3n del sistema de gesti\u00f3n, un nombre m\u00e1s adecuado sea <em>Manual del Sistema de Gesti\u00f3n</em> o tal vez se prefiera un t\u00edtulo que corresponda al prop\u00f3sito, como <em>Descripci\u00f3n del Sistema de Gesti\u00f3n</em> o algo as\u00ed. Adem\u00e1s, se puede crear un documento mucho m\u00e1s peque\u00f1o que responda a los requisitos de la norma ISO 9001 y de otras, como la ISO 14001. </p>\n<p>Ahora bien, si tu <strong>Manual de la Calidad</strong> lo haces como un conjunto de p\u00e1ginas web, el \u00edndice que puse arriba podr\u00eda ser una colecci\u00f3n de hiperenlaces y ser\u00eda m\u00e1s f\u00e1cil, incluso, mantenerlo actualizado.</p>\n<p>Luego les platico como es el que usamos nosotros.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Aunque yo mismo hize el manual de la calidad, como una copia <em>tropicalizada</em> de la ISO 9001.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Aprovecho que la versi\u00f3n ISO 9001:2015 ya hace la distinci\u00f3n entre <em>producto</em> y <em>servicio</em>.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>Tal vez como ya no existe (expl\u00edcitamente) este principio en la 9001:2015, tampoco el manual es un requisito.&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "el-manual-de-la-calidad-en-la-norma-iso-9001", "status": 1, "featured": false, "category": 4, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 25, "fields": {"idx": "5b7b4a57-41ba-4f2c-a5ad-dbe0c7309ca2", "creado": "2017-07-29T01:49:08.745Z", "modificado": "2017-07-29T01:49:08.745Z", "title": "La T\u00e9cnica Pomodoro", "summary": "", "body": "Title: La T\u00e9cnica Pomodoro\r\nDate: 2013/11/23 17:15\r\nCategory: Calidad \r\nTags: pomodoro, productividad \r\nSlug: la-tecnica-pomodoro\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\n###Qu\u00e9 es la T\u00e9cnica Pomodoro\r\n\r\nLa T\u00e9cnica Pomodoro es un m\u00e9todo de administraci\u00f3n del tiempo que puede ser usado para cualquier clase de tarea. Para muchas personas, el tiempo es un enemigo. La ansiedad que genera el *\u00abtic-tac\u00bb* del reloj, especialmente cuando hay una fecha l\u00edmite de por medio, producto de h\u00e1bitos de estudio y de trabajo ineficientes se traducen en procrastinaci\u00f3n o aplazamientos.\r\n\r\nEl objetivo de la T\u00e9cnica Pomodoro es usar el tiempo como un aliado valioso para completar cualquier cosa que estemos haciendo de la forma en la que queramos lograrlo, y permitir mejorar continuamente nuestros h\u00e1bitos de estudio y trabajo.\r\n\r\n### Los objetivos\r\n\r\nLa T\u00e9cnica Pomodoro proporciona un conjunto de herramientas y procesos simples para mejorar la productividad (la tuya propia y la de tu equipo) al conseguir lo siguiente:\r\n\r\n- Aliviar la ansiedad llegada a las prisas \r\n- Mejorar la concentraci\u00f3n al disminuir las interrupciones \r\n- Aumentar la claridad en la toma de decisiones \r\n- Aumentar y mantener la motivaci\u00f3n \r\n- Fortalecer la determinaci\u00f3n de alcanzar tus objetivos \r\n- Refinar la capacidad de estimaci\u00f3n, en t\u00e9rminos cualitativos y cuantitativos \r\n- Mejorar los h\u00e1bitos de estudio o trabajo \r\n- Fortalecer tu determinaci\u00f3n para enfrentar situaciones complejas \r\n\r\n### Las herramientas\r\n\r\nPara empezar a utilizar la T\u00e9cnica Pomodoro s\u00f3lo se requieren algunas sencillas herramientas:\r\n\r\n- Un reloj de cocina, de los que tienen forma de manzana o jitomate \r\n- Un l\u00e1piz \r\n- Una lista de pendientes \r\n- Un inventario de tareas \r\n- Una hoja de registro \r\n\r\nPuedes bajar e imprimir plantillas para estas hojas de aqu\u00ed mismo o del sitio web de Pomodoro Techniques.\r\n\r\n### Lo b\u00e1sico\r\n\r\nEscribe todas las actividades que tengas que terminar en el \u00abInventario de Actividad\u00bb. Al principio del d\u00eda selecciona las tareas que necesitas completar y c\u00f3pialas en la \u00abLista de Pendientes\u00bb.\r\n\r\nEmpieza a trabajar:\r\n\r\n- Selecciona la primera tarea de la lista \r\n- Configura el \u00abpomodoro\u00bb a 25 minutos \r\n- Trabaja en la tarea hasta que suene el pomodoro \r\n- Marca la tarea con una \u00ab\u00d7\u00bb en la \u00abLista de Pendientes\u00bb \r\n- Toma un descanso corto (de 3 a 5 minutos) \r\n- Sigue trabajando en la tarea. Pomodoro tras Pomodoro hasta que la tarea entre manos est\u00e9 finalizada, entonces t\u00e9stala o r\u00e1yala en la \u00abLista de Pendientes\u00bb.\r\n\r\nCada 4 Pomodoros toma un descanso mas largo (de 15 a 30 minutos).\r\n\r\n### Reglas y Consejos\r\n\r\n- Un Pomodoro es indivisible \r\n- Si una tarea toma mas de 5 a 7 Pomodores debes divirla \r\n- Si la tarea toma menos de un Pomodoro, entonces combinarla con otra tarea \r\n- Una vez que inicia el Pomodoro, debe sonar la alarma \r\n- El siguiente Pomodoro ir\u00e1 mejor \r\n- La T\u00e9cnica Pomodoro no debe usarse para actividades que llevas a cabo en tu tiempo libre. \u00a1Disfruta tu tiempo libre!", "extend": "", "pub_date": "2013-11-23T23:15:00Z", "summary_html": "", "body_html": "<h3 id=\"que-es-la-tecnica-pomodoro\">Qu\u00e9 es la T\u00e9cnica Pomodoro</h3>\n<p>La T\u00e9cnica Pomodoro es un m\u00e9todo de administraci\u00f3n del tiempo que puede ser usado para cualquier clase de tarea. Para muchas personas, el tiempo es un enemigo. La ansiedad que genera el <em>\u00abtic-tac\u00bb</em> del reloj, especialmente cuando hay una fecha l\u00edmite de por medio, producto de h\u00e1bitos de estudio y de trabajo ineficientes se traducen en procrastinaci\u00f3n o aplazamientos.</p>\n<p>El objetivo de la T\u00e9cnica Pomodoro es usar el tiempo como un aliado valioso para completar cualquier cosa que estemos haciendo de la forma en la que queramos lograrlo, y permitir mejorar continuamente nuestros h\u00e1bitos de estudio y trabajo.</p>\n<h3 id=\"los-objetivos\">Los objetivos</h3>\n<p>La T\u00e9cnica Pomodoro proporciona un conjunto de herramientas y procesos simples para mejorar la productividad (la tuya propia y la de tu equipo) al conseguir lo siguiente:</p>\n<ul>\n<li>Aliviar la ansiedad llegada a las prisas </li>\n<li>Mejorar la concentraci\u00f3n al disminuir las interrupciones </li>\n<li>Aumentar la claridad en la toma de decisiones </li>\n<li>Aumentar y mantener la motivaci\u00f3n </li>\n<li>Fortalecer la determinaci\u00f3n de alcanzar tus objetivos </li>\n<li>Refinar la capacidad de estimaci\u00f3n, en t\u00e9rminos cualitativos y cuantitativos </li>\n<li>Mejorar los h\u00e1bitos de estudio o trabajo </li>\n<li>Fortalecer tu determinaci\u00f3n para enfrentar situaciones complejas </li>\n</ul>\n<h3 id=\"las-herramientas\">Las herramientas</h3>\n<p>Para empezar a utilizar la T\u00e9cnica Pomodoro s\u00f3lo se requieren algunas sencillas herramientas:</p>\n<ul>\n<li>Un reloj de cocina, de los que tienen forma de manzana o jitomate </li>\n<li>Un l\u00e1piz </li>\n<li>Una lista de pendientes </li>\n<li>Un inventario de tareas </li>\n<li>Una hoja de registro </li>\n</ul>\n<p>Puedes bajar e imprimir plantillas para estas hojas de aqu\u00ed mismo o del sitio web de Pomodoro Techniques.</p>\n<h3 id=\"lo-basico\">Lo b\u00e1sico</h3>\n<p>Escribe todas las actividades que tengas que terminar en el \u00abInventario de Actividad\u00bb. Al principio del d\u00eda selecciona las tareas que necesitas completar y c\u00f3pialas en la \u00abLista de Pendientes\u00bb.</p>\n<p>Empieza a trabajar:</p>\n<ul>\n<li>Selecciona la primera tarea de la lista </li>\n<li>Configura el \u00abpomodoro\u00bb a 25 minutos </li>\n<li>Trabaja en la tarea hasta que suene el pomodoro </li>\n<li>Marca la tarea con una \u00ab\u00d7\u00bb en la \u00abLista de Pendientes\u00bb </li>\n<li>Toma un descanso corto (de 3 a 5 minutos) </li>\n<li>Sigue trabajando en la tarea. Pomodoro tras Pomodoro hasta que la tarea entre manos est\u00e9 finalizada, entonces t\u00e9stala o r\u00e1yala en la \u00abLista de Pendientes\u00bb.</li>\n</ul>\n<p>Cada 4 Pomodoros toma un descanso mas largo (de 15 a 30 minutos).</p>\n<h3 id=\"reglas-y-consejos\">Reglas y Consejos</h3>\n<ul>\n<li>Un Pomodoro es indivisible </li>\n<li>Si una tarea toma mas de 5 a 7 Pomodores debes divirla </li>\n<li>Si la tarea toma menos de un Pomodoro, entonces combinarla con otra tarea </li>\n<li>Una vez que inicia el Pomodoro, debe sonar la alarma </li>\n<li>El siguiente Pomodoro ir\u00e1 mejor </li>\n<li>La T\u00e9cnica Pomodoro no debe usarse para actividades que llevas a cabo en tu tiempo libre. \u00a1Disfruta tu tiempo libre!</li>\n</ul>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "la-tecnica-pomodoro", "status": 1, "featured": false, "category": 4, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 26, "fields": {"idx": "ba4652dd-0d5d-4c99-bdd0-4ed9f43af6bd", "creado": "2017-07-29T01:53:36.261Z", "modificado": "2017-07-29T01:53:36.261Z", "title": "Borrador final de la ISO 9001:2015", "summary": "", "body": "Title: Borrador final de la ISO 9001:2015\r\nDate: 2015-08-09 12:41:31 a.m.\r\nCategory: Calidad\r\nTags:  iso9001\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nMas o menos por noviembre de 2015 se va a publicar el borrador final de la norma ISO 9001:2015 y trae importantes cambios con respecto a la versi\u00f3n 2008.\r\n\r\nEsta es una versi\u00f3n muy esperada porque hay cambios de estructuras y de conceptos verdaderamente profundos.\r\n\r\n## Cambios en la estructura\r\n\r\nEl primer cambio importante de la norma ISO 9001:2008 es la estructura. Las tres primeras cl\u00e1usulas[^1] se mantienen, pero el contenido de las dem\u00e1s se ha distribuido en siete cl\u00e1usulas que son:\r\n\r\n* Contexto de la organizaci\u00f3n\r\n* Liderazgo\r\n* Planificaci\u00f3n\r\n* Apoyo\r\n* Operaciones\r\n* Evaluaci\u00f3n del desempe\u00f1o \r\n* Mejora\r\n\r\nLa estructura de la norma ahora utiliza los principios de la calidad de una forma m\u00e1s enf\u00e1tica, por lo tanto se ha puesto mayor \u00e9nfasis en el _Liderazgo_ y en la _evaluaci\u00f3n del desempe\u00f1o_ que se ha pasado al final de la norma.\r\n\r\n## Productos y Servicios\r\n\r\nEl segundo cambio es la inclusi\u00f3n del termino __servicio__ en _\u00abproductos y servicios\u00bb_ y no solo __producto__. Era muy complicado explicar que un servicio, ya que era el resultado de un proceso, era un producto. Enfatizar el concepto de servicio sirve para dejar claro que la norma se aplica en su totalidad al sector de servicios[^2].\r\n\r\n## Enfoque basado en el riesgo\r\n\r\nSe agrega un nuevo principio de la calidad, el _\u00abenfoque basado en riesgos\u00bb[^3]_, lo que podr\u00eda significar evaluar los riesgos en los procesos m\u00e1s cr\u00edticos del negocio. En la vida real, este principio es la evoluci\u00f3n de las __Acciones Preventivas__, con un enfoque m\u00e1s proactivo, ya que ahora se provocar\u00e1n con base en la evaluaci\u00f3n del riesgo.\r\n\r\n## Priorizaci\u00f3n de procesos\r\n\r\nAhora se reconoce que algunos procesos son m\u00e1s importantes (o cr\u00edticos) para la organizaci\u00f3n en relaci\u00f3n con el impacto que tienen con la conformidad del producto o servicio o con el logro de los resultados planificados, por lo que ahora la gesti\u00f3n de procesos permite a las organizaciones priorizar y, al mismo tiempo, mantener su enfoque de procesos.\r\n\r\n## Compras\r\n\r\nEn la organizaci\u00f3n donde trabajo ten\u00edamos un gran problema con el proceso de __Compras__. Nuestro producto, lo fabricaba _Oficinas Centrales_, o sea nosotros mismo. No pod\u00edamos cambiar de proveedor y no pod\u00edamos realmente controlarlo.\r\n\r\nLa gesti\u00f3n de compras en la norma ISO 9001:2015 ha sido sustituida por la expresi\u00f3n _\u00absuministros y servicios externos\u00bb_, que tambi\u00e9n incluye los procesos externalizados. Se presta m\u00e1s atenci\u00f3n al tipo y alcance de los controles adecuados a cada proveedor externos y a todo suministro externo de productos y servicios. \r\n\r\n## Otros cambios\r\n\r\n* __Manual de la calidad.__ Ya no es un requisito, pero las organizaciones que lo crean necesario lo pueden mantener[^4].\r\n* __Representante de la direcci\u00f3n__. Sigue siendo importante que una persona sea la encargada de la coordinaci\u00f3n y la implantaci\u00f3n del sistema, pero cada organizaci\u00f3n decide como llamar a esta persona.\r\n* __Liderazgo__. Se busca ahora provocar una participaci\u00f3n m\u00e1s activa de la alta direcci\u00f3n, se promueve el liderazgo.\r\n* __Cambio en el estilo de redacci\u00f3n__. Ahora es m\u00e1s simple y sencillo, coherente con las pr\u00e1cticas empresariales modernas, lo que significa que la calidad no es una consecuencia, sino un objetivo en el plan de negocios de la organizaci\u00f3n.\r\n\r\n\r\nPoco a poco iremos descubriendo los cambios en la nueva versi\u00f3n de la norma ISO 9001, as\u00ed que no se pierdan los pr\u00f3ximos art\u00edculos.\r\n\r\n\r\n[^1]: Alcance, Normas de referencia, T\u00e9rminos y definiciones. Por cierto que no contienen requisitos.\r\n[^2]: Y por supuesto al gobierno. La aplicaci\u00f3n de la norma ISO 9001 facilita mucho la _accountability_ o rendici\u00f3n de cuentas.\r\n[^3]: En ingl\u00e9s _Risk based thinking_.\r\n[^4]: Para nosotros el manual es muy importante para la r\u00e9plica de nuestro modelo a nivel nacional, y se convertir\u00e1 en nuestra norma interna, por lo tanto lo conservamos.", "extend": "", "pub_date": "2015-08-09T05:41:00Z", "summary_html": "", "body_html": "<p>Mas o menos por noviembre de 2015 se va a publicar el borrador final de la norma ISO 9001:2015 y trae importantes cambios con respecto a la versi\u00f3n 2008.</p>\n<p>Esta es una versi\u00f3n muy esperada porque hay cambios de estructuras y de conceptos verdaderamente profundos.</p>\n<h2 id=\"cambios-en-la-estructura\">Cambios en la estructura</h2>\n<p>El primer cambio importante de la norma ISO 9001:2008 es la estructura. Las tres primeras cl\u00e1usulas<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> se mantienen, pero el contenido de las dem\u00e1s se ha distribuido en siete cl\u00e1usulas que son:</p>\n<ul>\n<li>Contexto de la organizaci\u00f3n</li>\n<li>Liderazgo</li>\n<li>Planificaci\u00f3n</li>\n<li>Apoyo</li>\n<li>Operaciones</li>\n<li>Evaluaci\u00f3n del desempe\u00f1o </li>\n<li>Mejora</li>\n</ul>\n<p>La estructura de la norma ahora utiliza los principios de la calidad de una forma m\u00e1s enf\u00e1tica, por lo tanto se ha puesto mayor \u00e9nfasis en el <em>Liderazgo</em> y en la <em>evaluaci\u00f3n del desempe\u00f1o</em> que se ha pasado al final de la norma.</p>\n<h2 id=\"productos-y-servicios\">Productos y Servicios</h2>\n<p>El segundo cambio es la inclusi\u00f3n del termino <strong>servicio</strong> en <em>\u00abproductos y servicios\u00bb</em> y no solo <strong>producto</strong>. Era muy complicado explicar que un servicio, ya que era el resultado de un proceso, era un producto. Enfatizar el concepto de servicio sirve para dejar claro que la norma se aplica en su totalidad al sector de servicios<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>.</p>\n<h2 id=\"enfoque-basado-en-el-riesgo\">Enfoque basado en el riesgo</h2>\n<p>Se agrega un nuevo principio de la calidad, el <em>\u00abenfoque basado en riesgos\u00bb<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup></em>, lo que podr\u00eda significar evaluar los riesgos en los procesos m\u00e1s cr\u00edticos del negocio. En la vida real, este principio es la evoluci\u00f3n de las <strong>Acciones Preventivas</strong>, con un enfoque m\u00e1s proactivo, ya que ahora se provocar\u00e1n con base en la evaluaci\u00f3n del riesgo.</p>\n<h2 id=\"priorizacion-de-procesos\">Priorizaci\u00f3n de procesos</h2>\n<p>Ahora se reconoce que algunos procesos son m\u00e1s importantes (o cr\u00edticos) para la organizaci\u00f3n en relaci\u00f3n con el impacto que tienen con la conformidad del producto o servicio o con el logro de los resultados planificados, por lo que ahora la gesti\u00f3n de procesos permite a las organizaciones priorizar y, al mismo tiempo, mantener su enfoque de procesos.</p>\n<h2 id=\"compras\">Compras</h2>\n<p>En la organizaci\u00f3n donde trabajo ten\u00edamos un gran problema con el proceso de <strong>Compras</strong>. Nuestro producto, lo fabricaba <em>Oficinas Centrales</em>, o sea nosotros mismo. No pod\u00edamos cambiar de proveedor y no pod\u00edamos realmente controlarlo.</p>\n<p>La gesti\u00f3n de compras en la norma ISO 9001:2015 ha sido sustituida por la expresi\u00f3n <em>\u00absuministros y servicios externos\u00bb</em>, que tambi\u00e9n incluye los procesos externalizados. Se presta m\u00e1s atenci\u00f3n al tipo y alcance de los controles adecuados a cada proveedor externos y a todo suministro externo de productos y servicios. </p>\n<h2 id=\"otros-cambios\">Otros cambios</h2>\n<ul>\n<li><strong>Manual de la calidad.</strong> Ya no es un requisito, pero las organizaciones que lo crean necesario lo pueden mantener<sup id=\"fnref-4\"><a class=\"footnote-ref\" href=\"#fn-4\">4</a></sup>.</li>\n<li><strong>Representante de la direcci\u00f3n</strong>. Sigue siendo importante que una persona sea la encargada de la coordinaci\u00f3n y la implantaci\u00f3n del sistema, pero cada organizaci\u00f3n decide como llamar a esta persona.</li>\n<li><strong>Liderazgo</strong>. Se busca ahora provocar una participaci\u00f3n m\u00e1s activa de la alta direcci\u00f3n, se promueve el liderazgo.</li>\n<li><strong>Cambio en el estilo de redacci\u00f3n</strong>. Ahora es m\u00e1s simple y sencillo, coherente con las pr\u00e1cticas empresariales modernas, lo que significa que la calidad no es una consecuencia, sino un objetivo en el plan de negocios de la organizaci\u00f3n.</li>\n</ul>\n<p>Poco a poco iremos descubriendo los cambios en la nueva versi\u00f3n de la norma ISO 9001, as\u00ed que no se pierdan los pr\u00f3ximos art\u00edculos.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Alcance, Normas de referencia, T\u00e9rminos y definiciones. Por cierto que no contienen requisitos.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Y por supuesto al gobierno. La aplicaci\u00f3n de la norma ISO 9001 facilita mucho la <em>accountability</em> o rendici\u00f3n de cuentas.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>En ingl\u00e9s <em>Risk based thinking</em>.&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-4\">\n<p>Para nosotros el manual es muy importante para la r\u00e9plica de nuestro modelo a nivel nacional, y se convertir\u00e1 en nuestra norma interna, por lo tanto lo conservamos.&#160;<a class=\"footnote-backref\" href=\"#fnref-4\" title=\"Jump back to footnote 4 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "borrador-final-de-la-iso-90012015", "status": 1, "featured": false, "category": 4, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 27, "fields": {"idx": "2ebd716e-2b18-4aa4-a572-9e0fae4fe570", "creado": "2017-07-29T01:54:14.342Z", "modificado": "2017-07-29T01:54:14.342Z", "title": "Enfoque al Cliente", "summary": "", "body": "Title: Enfoque al Cliente\r\nDate: 2014-08-22 21:15:26\r\nCategory: Calidad\r\nTags:  iso9001, principios \r\nAuthor: Javier Sanchez Toledano\r\nSummary: En qu\u00e9 consiste el enfoque al cliente y qu\u00e9 caracter\u00edsticas tienen las organizaciones que lo aplican.\r\n\r\nEste principio se expresa como sigue:\r\n\r\n> Las organizaciones dependen de sus clientes y por lo tanto deber\u00edan comprender las necesidades actuales y futuras del cliente, satisfacer los requisitos del cliente y esforzarse en exceder las expectativas del cliente.\r\n\r\nUna organizaci\u00f3n que aplica el principio de enfoque al cliente tiene las siguientes caracter\u00edsticas:\r\n\r\n+ Entiende las necesidades y expectativas del cliente;\r\n+ Cumple con los requisitos del cliente de modo tal que tambi\u00e9n cumple las necesidades y expectativas de todas las partes interesadas;\r\n+ Comunica estas necesidades y expectativas a trav\u00e9s de toda la organizaci\u00f3n;\r\n+ Tiene el conocimiento, las habilidades y los recursos para satisfacer las necesidades de sus clientes;\r\n+ Mide la satisfacci\u00f3n del cliente y act\u00faa seg\u00fan los resultados;\r\n+ Entiende y administra las relaciones con sus clientes;\r\n+ Puede relacionar sus acciones y objetivos directamenta con las necedidades y expectativas del cliente;\r\n+ Es sensible a las preferencias del cliente y actua de forma que pone al cliente primero.", "extend": "", "pub_date": "2014-08-23T02:15:26Z", "summary_html": "", "body_html": "<p>Este principio se expresa como sigue:</p>\n<blockquote>\n<p>Las organizaciones dependen de sus clientes y por lo tanto deber\u00edan comprender las necesidades actuales y futuras del cliente, satisfacer los requisitos del cliente y esforzarse en exceder las expectativas del cliente.</p>\n</blockquote>\n<p>Una organizaci\u00f3n que aplica el principio de enfoque al cliente tiene las siguientes caracter\u00edsticas:</p>\n<ul>\n<li>Entiende las necesidades y expectativas del cliente;</li>\n<li>Cumple con los requisitos del cliente de modo tal que tambi\u00e9n cumple las necesidades y expectativas de todas las partes interesadas;</li>\n<li>Comunica estas necesidades y expectativas a trav\u00e9s de toda la organizaci\u00f3n;</li>\n<li>Tiene el conocimiento, las habilidades y los recursos para satisfacer las necesidades de sus clientes;</li>\n<li>Mide la satisfacci\u00f3n del cliente y act\u00faa seg\u00fan los resultados;</li>\n<li>Entiende y administra las relaciones con sus clientes;</li>\n<li>Puede relacionar sus acciones y objetivos directamenta con las necedidades y expectativas del cliente;</li>\n<li>Es sensible a las preferencias del cliente y actua de forma que pone al cliente primero.</li>\n</ul>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "enfoque-al-cliente", "status": 1, "featured": false, "category": 4, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 28, "fields": {"idx": "75dbc3c9-8c42-4a97-95f2-af9b8192df3a", "creado": "2017-07-29T01:55:18.945Z", "modificado": "2017-07-29T01:55:18.945Z", "title": "Liderazgo, 8 principios de la calidad", "summary": "", "body": "Title: Liderazgo, 8 principios de la calidad \r\nDate: 2014-08-23 21:31:37\r\nCategory: Calidad\r\nTags:  principios, iso9001\r\nAuthor: Javier Sanchez Toledano\r\nSummary: Qu\u00e9 es el principio de Liderazgo y como nos sirve para generar calidad, seg\u00fan la norma ISO 9001.\r\n\r\n**Liderazgo** es uno los 8 principios de la calidad y se expresa de la siguiente forma:\r\n\r\n> Los l\u00edderes establecen la unidad de prop\u00f3sito y la orientaci\u00f3n de la organizaci\u00f3n. Deber\u00edan crear y mantener un ambiente internos en el cual las personas pueden llegar a involucrarse totalmente en el logro de los objetivos de la organizaci\u00f3n.\r\n\r\nUna organizaci\u00f3n que aplica el principio de **Liderazgo** es aquella en la que los l\u00edderes\r\n\r\n* Establecen y comunican una visi\u00f3n clara del futuro de la organizaci\u00f3n;\r\n* Establecen y comparten valores y roles \u00e9ticos en todos los niveles de la organizaci\u00f3n;\r\n* Son proactivos y predican con el ejemplo;\r\n* Entienden y responden a los cambios de entornos externos;\r\n* Consideran las necesidades de todas las partes interesadas;\r\n* Construyen confianza y eliminan el miedo;\r\n* Proporcionan a la gente los recursos necesarios y la libertad de actuar con responsabilidad y rendici\u00f3n de cuentas;\r\n* Promueven una comunicaci\u00f3n abierta y honesta;\r\n* Educan, entrenan y son los coaches de las personas;\r\n* Establecen objetivos retadores, pero alcanzables, alineados con la misi\u00f3n y la visi\u00f3n de la organizaci\u00f3n;\r\n* Establecen indicadores de desempe\u00f1o que promueven una conducta que favorece el logro de los objetivos.\r\n\r\n\r\n[^1]: Debe haber una manera de decir _coaching_ en espa\u00f1ol.", "extend": "", "pub_date": "2014-08-24T02:31:37Z", "summary_html": "", "body_html": "<p><strong>Liderazgo</strong> es uno los 8 principios de la calidad y se expresa de la siguiente forma:</p>\n<blockquote>\n<p>Los l\u00edderes establecen la unidad de prop\u00f3sito y la orientaci\u00f3n de la organizaci\u00f3n. Deber\u00edan crear y mantener un ambiente internos en el cual las personas pueden llegar a involucrarse totalmente en el logro de los objetivos de la organizaci\u00f3n.</p>\n</blockquote>\n<p>Una organizaci\u00f3n que aplica el principio de <strong>Liderazgo</strong> es aquella en la que los l\u00edderes</p>\n<ul>\n<li>Establecen y comunican una visi\u00f3n clara del futuro de la organizaci\u00f3n;</li>\n<li>Establecen y comparten valores y roles \u00e9ticos en todos los niveles de la organizaci\u00f3n;</li>\n<li>Son proactivos y predican con el ejemplo;</li>\n<li>Entienden y responden a los cambios de entornos externos;</li>\n<li>Consideran las necesidades de todas las partes interesadas;</li>\n<li>Construyen confianza y eliminan el miedo;</li>\n<li>Proporcionan a la gente los recursos necesarios y la libertad de actuar con responsabilidad y rendici\u00f3n de cuentas;</li>\n<li>Promueven una comunicaci\u00f3n abierta y honesta;</li>\n<li>Educan, entrenan y son los coaches de las personas;</li>\n<li>Establecen objetivos retadores, pero alcanzables, alineados con la misi\u00f3n y la visi\u00f3n de la organizaci\u00f3n;</li>\n<li>Establecen indicadores de desempe\u00f1o que promueven una conducta que favorece el logro de los objetivos.</li>\n</ul>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Debe haber una manera de decir <em>coaching</em> en espa\u00f1ol.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "liderazgo-8-principios-de-la-calidad", "status": 1, "featured": false, "category": 4, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 29, "fields": {"idx": "7863c802-904b-4be6-9bf3-792ec0971ba9", "creado": "2017-07-29T01:58:01.338Z", "modificado": "2017-07-29T01:58:01.338Z", "title": "Secuencia e Interacci\u00f3n", "summary": "", "body": "Title: Secuencia e Interacci\u00f3n\r\nDate: 2015-08-09 12:37:42 a.m.\r\nCategory: calidad\r\nTags:  iso9001, definiciones\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\n\r\nLa norma ISO 9001:2008 dice la organizaci\u00f3n debe _determinar la secuencia e interacci\u00f3n_ de los procesos que determina necesarios para el sistema de gesti\u00f3n de la calidad. La descripci\u00f3n es una explicaci\u00f3n detallada y ordenada, pero no tiene porque ser escrita. Dicen que una imagen vale m\u00e1s que mil palabras y para cumplir con el requisito de la norma 4.1.d y 4.2.2.c (que se refiere al manual de la calidad) este dicho nos cae del cielo.\r\n<!--more-->\r\n\r\n## La secuencia\r\n\r\nLa __secuencia__ tal vez sea el concepto m\u00e1s simple de entender y de cumplir. Debemos determinar los pasos necesarios para la realizaci\u00f3n de un producto o servicio[^1]. Por ejemplo, si nuestro servicio es vender tortillas, el proceso empieza desde la preparaci\u00f3n de la masa hasta la entrega del kilo de tortillas a la persona[^2] que compre.\r\n\r\nDigamos que ser\u00eda algo as\u00ed:\r\n\r\n* Preparar la masa\r\n* Ponerla en la m\u00e1quina\r\n* Encender la maquina tortilladora\r\n* Hacer tortillas\r\n* Empaquetarlo y entregarlo\r\n\r\n<iframe frameborder=\"0\" style=\"width:100%;height:221px\" src=\"https://www.draw.io/?chrome=0&gapi=0#Dtortillas.xml\"></iframe>\r\n\r\nEn una secuencia no podemos saltarnos un paso, porque correos el riesgo de no cumplir con alg\u00fan requisito.\r\n\r\n> Muchos auditores, sobre todo los mas perros, buscan en la documentaci\u00f3n acciones a llevar a cabo si alguno de esos procesos falla. La forma tradicional de los _expertos_ es decir que si un proceso falla el sistema no fluye. En espa\u00f1ol quiere decir que si alg\u00fan proceso falla, todo se detiene hasta que se corrige. Bien f\u00e1cil.\r\n\r\n## La interacci\u00f3n\r\n\r\nLa secuencia entre los procesos, entonces, es clara. Pero la interacci\u00f3n no lo es tanto.\r\n\r\nLa interacci\u00f3n es la forma en que un proceso afecta a otro. Cuando lo modifica. Los procesos de medici\u00f3n generalmente interact\u00faan con los procesos medidos, ya que con frecuencia se tiene que actuar para realizar ajustes. En nuestro proceso de tortillas, el proceso final de entrega interact\u00faa con el de hacer tortillas, se van juntando hasta hacer un kilo.\r\n\r\nPero en muchas ocasiones, los auditores con malicia piden algo m\u00e1s con respecto a las interacciones: piden que se identifique la __interface__. Esto es el medio y el modo en el que ocurre la interacci\u00f3n. Definir la interface no es un requisito de la norma ISO 9001:2008, sin embargo hacerlo es de mucho valor.\r\n\r\nCon bastante frecuencia es en la interface donde ocurren los problemas del enfoque de sistemas y del enfoque de procesos.\r\n\r\nLa interface es el punto donde los procesos se encuentra. Es tambi\u00e9n la forma en la que la salida de un proceso se convierte en la entrada del siguiente. Es en la interface donde se negocian y se revisan los requisitos. Es donde _el flujo_ del sistema se interrumpe.\r\n\r\nEn los procesos de gobierno (donde yo me form\u00e9) la interface casi siempre es humana y se identifica f\u00e1cilmente la forma. Por ejemplo, cuando entregamos o recibimos informaci\u00f3n lo hacemos por medio de un oficio.\r\n\r\nEs ese momento donde se entrega la informaci\u00f3n, se recibe el oficio, se firma de recibido, etc., donde est\u00e1 la interface del proceso. Si el oficio o la informaci\u00f3n tiene alguna falla ah\u00ed es donde se identifica, el proceso se interrumpe, el sistema no fluye.\r\n\r\nEn el ejemplo de las tortillas, una interface muy importante es la del pedido y cobro de las tortillas. Donde se entrega el kilo (que debe ser suficientemente aproximado para no recibir quejas) y se cobra la cantidad estipulada.\r\n\r\nIdentificar otras interfaces es m\u00e1s complicado, pero podr\u00edamos intentarlo. Una de las interfaces m\u00e1s importantes es la que forman en contenedor de la masa y los rodillos que aplanan y cortan las tortillas. La masa debe tener la consistencia adecuada (que se logra en esa cubeta) y el grosor adecuado para que la tortilla se cueza en el proceso.\r\n\r\nCuando la masa no tiene la consistencia adecuada o el rodillo no hace suficiente presi\u00f3n, el proceso falla.\r\n\r\n## La descripci\u00f3n\r\n\r\nEs obvio que la forma m\u00e1s f\u00e1cil de describir la secuencia y la interacci\u00f3n de los procesos es en forma gr\u00e1fica. Y la norma ISO 9001:2008 no dice __c\u00f3mo__ debe ser esta descripci\u00f3n.\r\n\r\nLa secuencia se describe con l\u00edneas cont\u00ednuas y la ineracci\u00f3n con otro tipo de l\u00edneas, tal vez punteadas o con guiones, y generalmente se anotan en el intercambio de datos.\r\n\r\nEso facilita mucho el cumplimiento de este requisito y la comprensi\u00f3n en general del sistema.\r\n\r\nPero identificar y definir correctamente la interacci\u00f3n tiene mucho valor, no solo para una auditor\u00eda sino para el mismo sistema de gestion de la calidad.\r\n\r\n[^1]: Que complicado es el concepto de producto. Un servicio es el resultado de un proceso y por lo tanto cabe en la definici\u00f3n de __producto__. Eso va a cambiar en la nueva versi\u00f3n de la norma ISO 9001.\r\n\r\n[^2]: Y debemos decir personas para asegurar la equidad de g\u00e9nero.", "extend": "", "pub_date": "2015-08-09T05:37:00Z", "summary_html": "", "body_html": "<p>La norma ISO 9001:2008 dice la organizaci\u00f3n debe <em>determinar la secuencia e interacci\u00f3n</em> de los procesos que determina necesarios para el sistema de gesti\u00f3n de la calidad. La descripci\u00f3n es una explicaci\u00f3n detallada y ordenada, pero no tiene porque ser escrita. Dicen que una imagen vale m\u00e1s que mil palabras y para cumplir con el requisito de la norma 4.1.d y 4.2.2.c (que se refiere al manual de la calidad) este dicho nos cae del cielo.\n<!--more--></p>\n<h2 id=\"la-secuencia\">La secuencia</h2>\n<p>La <strong>secuencia</strong> tal vez sea el concepto m\u00e1s simple de entender y de cumplir. Debemos determinar los pasos necesarios para la realizaci\u00f3n de un producto o servicio<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>. Por ejemplo, si nuestro servicio es vender tortillas, el proceso empieza desde la preparaci\u00f3n de la masa hasta la entrega del kilo de tortillas a la persona<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> que compre.</p>\n<p>Digamos que ser\u00eda algo as\u00ed:</p>\n<ul>\n<li>Preparar la masa</li>\n<li>Ponerla en la m\u00e1quina</li>\n<li>Encender la maquina tortilladora</li>\n<li>Hacer tortillas</li>\n<li>Empaquetarlo y entregarlo</li>\n</ul>\n<iframe frameborder=\"0\" style=\"width:100%;height:221px\" src=\"https://www.draw.io/?chrome=0&gapi=0#Dtortillas.xml\"></iframe>\n\n<p>En una secuencia no podemos saltarnos un paso, porque correos el riesgo de no cumplir con alg\u00fan requisito.</p>\n<blockquote>\n<p>Muchos auditores, sobre todo los mas perros, buscan en la documentaci\u00f3n acciones a llevar a cabo si alguno de esos procesos falla. La forma tradicional de los <em>expertos</em> es decir que si un proceso falla el sistema no fluye. En espa\u00f1ol quiere decir que si alg\u00fan proceso falla, todo se detiene hasta que se corrige. Bien f\u00e1cil.</p>\n</blockquote>\n<h2 id=\"la-interaccion\">La interacci\u00f3n</h2>\n<p>La secuencia entre los procesos, entonces, es clara. Pero la interacci\u00f3n no lo es tanto.</p>\n<p>La interacci\u00f3n es la forma en que un proceso afecta a otro. Cuando lo modifica. Los procesos de medici\u00f3n generalmente interact\u00faan con los procesos medidos, ya que con frecuencia se tiene que actuar para realizar ajustes. En nuestro proceso de tortillas, el proceso final de entrega interact\u00faa con el de hacer tortillas, se van juntando hasta hacer un kilo.</p>\n<p>Pero en muchas ocasiones, los auditores con malicia piden algo m\u00e1s con respecto a las interacciones: piden que se identifique la <strong>interface</strong>. Esto es el medio y el modo en el que ocurre la interacci\u00f3n. Definir la interface no es un requisito de la norma ISO 9001:2008, sin embargo hacerlo es de mucho valor.</p>\n<p>Con bastante frecuencia es en la interface donde ocurren los problemas del enfoque de sistemas y del enfoque de procesos.</p>\n<p>La interface es el punto donde los procesos se encuentra. Es tambi\u00e9n la forma en la que la salida de un proceso se convierte en la entrada del siguiente. Es en la interface donde se negocian y se revisan los requisitos. Es donde <em>el flujo</em> del sistema se interrumpe.</p>\n<p>En los procesos de gobierno (donde yo me form\u00e9) la interface casi siempre es humana y se identifica f\u00e1cilmente la forma. Por ejemplo, cuando entregamos o recibimos informaci\u00f3n lo hacemos por medio de un oficio.</p>\n<p>Es ese momento donde se entrega la informaci\u00f3n, se recibe el oficio, se firma de recibido, etc., donde est\u00e1 la interface del proceso. Si el oficio o la informaci\u00f3n tiene alguna falla ah\u00ed es donde se identifica, el proceso se interrumpe, el sistema no fluye.</p>\n<p>En el ejemplo de las tortillas, una interface muy importante es la del pedido y cobro de las tortillas. Donde se entrega el kilo (que debe ser suficientemente aproximado para no recibir quejas) y se cobra la cantidad estipulada.</p>\n<p>Identificar otras interfaces es m\u00e1s complicado, pero podr\u00edamos intentarlo. Una de las interfaces m\u00e1s importantes es la que forman en contenedor de la masa y los rodillos que aplanan y cortan las tortillas. La masa debe tener la consistencia adecuada (que se logra en esa cubeta) y el grosor adecuado para que la tortilla se cueza en el proceso.</p>\n<p>Cuando la masa no tiene la consistencia adecuada o el rodillo no hace suficiente presi\u00f3n, el proceso falla.</p>\n<h2 id=\"la-descripcion\">La descripci\u00f3n</h2>\n<p>Es obvio que la forma m\u00e1s f\u00e1cil de describir la secuencia y la interacci\u00f3n de los procesos es en forma gr\u00e1fica. Y la norma ISO 9001:2008 no dice <strong>c\u00f3mo</strong> debe ser esta descripci\u00f3n.</p>\n<p>La secuencia se describe con l\u00edneas cont\u00ednuas y la ineracci\u00f3n con otro tipo de l\u00edneas, tal vez punteadas o con guiones, y generalmente se anotan en el intercambio de datos.</p>\n<p>Eso facilita mucho el cumplimiento de este requisito y la comprensi\u00f3n en general del sistema.</p>\n<p>Pero identificar y definir correctamente la interacci\u00f3n tiene mucho valor, no solo para una auditor\u00eda sino para el mismo sistema de gestion de la calidad.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Que complicado es el concepto de producto. Un servicio es el resultado de un proceso y por lo tanto cabe en la definici\u00f3n de <strong>producto</strong>. Eso va a cambiar en la nueva versi\u00f3n de la norma ISO 9001.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Y debemos decir personas para asegurar la equidad de g\u00e9nero.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "secuencia-e-interaccion", "status": 1, "featured": false, "category": 4, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 30, "fields": {"idx": "0adf07d7-9a3e-48ea-becc-37f843ebec05", "creado": "2017-07-29T01:58:56.359Z", "modificado": "2017-07-29T01:59:43.374Z", "title": "Destellos", "summary": "", "body": "Title: Destellos\r\nDate: 2014/03/07 23:17\r\nCategory: Fototeca\r\nTags: iglesias, tlaxcala\r\nSlug: destellos\r\nAuthor: Javier Sanchez Toledano\r\nSummary: Una fotograf\u00eda del centro de Tlaxcala al aterdecer.\r\n\r\n![Destellos](https://media.toledano.org/images/destellos.jpg)\r\n\r\nSe aprecia la parroquia de San Jos\u00e9, la c\u00fapula ya la torre. La fotograf\u00eda esta hecha con Hisptamatic, usando la lente Roboto Glitter y la pel\u00edcula Alfredo Infrared.", "extend": "", "pub_date": "2014-03-08T05:17:00Z", "summary_html": "", "body_html": "<p><img alt=\"Destellos\" src=\"https://media.toledano.org/images/destellos.jpg\"></p>\n<p>Se aprecia la parroquia de San Jos\u00e9, la c\u00fapula ya la torre. La fotograf\u00eda esta hecha con Hisptamatic, usando la lente Roboto Glitter y la pel\u00edcula Alfredo Infrared.</p>", "extend_html": "", "enable_comments": true, "cover": "https://media.toledano.org/images/destellos.jpg", "slug": "destellos", "status": 1, "featured": false, "category": 3, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 31, "fields": {"idx": "6c576755-8c03-48f6-8cd5-99acd9f917f8", "creado": "2017-07-29T02:01:00.409Z", "modificado": "2017-07-29T02:01:00.409Z", "title": "Amanecer en Los Pirules", "summary": "Una fotograf\u00eda del amanecer en Los Pirules", "body": "Title: Amanecer en Los Pirules\r\nDate: 2014/03/02 17:45\r\nCategory: Fototeca\r\nTags: tlaxcala, paisajes\r\nSlug: amanecer-los-pirules\r\nAuthor: Javier Sanchez Toledano\r\nemail: javier@namespace.mx\r\nSummary: Una fotograf\u00eda del amanecer en Los Pirules\r\n\r\n<iframe src=\"http://www.flickr.com/photos/toledano/9544307943/in/photostream/player/\" width=\"800\" height=\"800\" frameborder=\"0\" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>", "extend": "", "pub_date": "2014-03-03T02:59:43Z", "summary_html": "<p>Una fotograf\u00eda del amanecer en Los Pirules</p>", "body_html": "<iframe src=\"http://www.flickr.com/photos/toledano/9544307943/in/photostream/player/\" width=\"800\" height=\"800\" frameborder=\"0\" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "amanecer-en-los-pirules", "status": 1, "featured": false, "category": 3, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 32, "fields": {"idx": "c3acb925-32c2-4812-9587-3ff723b7a53a", "creado": "2017-07-29T02:13:36.980Z", "modificado": "2017-07-29T02:13:36.980Z", "title": "El Zen de Python", "summary": "La filosof\u00eda de Python con un poco de humor", "body": "Title: El Zen de Python\r\nDate: 2013/11/18 18:59\r\nCategory: Desarrollo \r\nTags: python, patterns \r\nSlug: el-zen-de-python\r\nAuthor: Javier Sanchez Toledano\r\nSummary: La filosof\u00eda de Python con un poco de humor\r\n\r\n* Lo bello es mejor que lo feo\r\n* Lo expl\u00edcito es mejor que lo impl\u00edcito\r\n* Lo simple es mejor que lo complejo\r\n* Lo lineal es mejor que lo enredado\r\n* Escaso es mejor que denso\r\n* La legibilidad cuenta\r\n* Los casos especiales no son tan especiales como para romper las reglas\r\n* El pragm\u00e1tico vence al purista\r\n* Los errores no deben pasar en silencio\r\n* A menos que se silencien expl\u00edcitamente\r\n* Frente a la ambig\u00fcedad, resiste la tentaci\u00f3n de adivinar\r\n* Debe haber una, y de preferencia solo una, manera obvia de hacer las cosas\r\n* Aunque no sea tan obvia al principio, a menos que seas \"El Holandes\" (o sea Guido van Rossum)\r\n* Ahora es mejor que nunca\r\n* Pero nunca es mejor que ahora mismo\r\n* Si la implementaci\u00f3n resulta dif\u00edcil de explicar, entonces es una mala idea\r\n* Si la implementaci\u00f3n es f\u00e1cil de explicar, entonces es una buena idea\r\n* Los Espacios de Nombres (namespaces) son una buena idea, tengamos mas de esos", "extend": "", "pub_date": "2013-11-17T00:59:00Z", "summary_html": "<p>La filosof\u00eda de Python con un poco de humor</p>", "body_html": "<ul>\n<li>Lo bello es mejor que lo feo</li>\n<li>Lo expl\u00edcito es mejor que lo impl\u00edcito</li>\n<li>Lo simple es mejor que lo complejo</li>\n<li>Lo lineal es mejor que lo enredado</li>\n<li>Escaso es mejor que denso</li>\n<li>La legibilidad cuenta</li>\n<li>Los casos especiales no son tan especiales como para romper las reglas</li>\n<li>El pragm\u00e1tico vence al purista</li>\n<li>Los errores no deben pasar en silencio</li>\n<li>A menos que se silencien expl\u00edcitamente</li>\n<li>Frente a la ambig\u00fcedad, resiste la tentaci\u00f3n de adivinar</li>\n<li>Debe haber una, y de preferencia solo una, manera obvia de hacer las cosas</li>\n<li>Aunque no sea tan obvia al principio, a menos que seas &ldquo;El Holandes&rdquo; (o sea Guido van Rossum)</li>\n<li>Ahora es mejor que nunca</li>\n<li>Pero nunca es mejor que ahora mismo</li>\n<li>Si la implementaci\u00f3n resulta dif\u00edcil de explicar, entonces es una mala idea</li>\n<li>Si la implementaci\u00f3n es f\u00e1cil de explicar, entonces es una buena idea</li>\n<li>Los Espacios de Nombres (namespaces) son una buena idea, tengamos mas de esos</li>\n</ul>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "el-zen-de-python", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 33, "fields": {"idx": "d09a0882-74a2-4d66-97d8-63e37172a1b4", "creado": "2017-07-29T02:23:26.619Z", "modificado": "2017-07-29T02:23:26.619Z", "title": "Agrupar resultados con MySQL", "summary": "", "body": "Title: Agrupar resultados con MySQL\r\nDate: 2013/11/18 19:03\r\nCategory: Desarrollo \r\nTags: mysql, sql \r\nSlug: agrupar-resultados-con-mysql\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nUna tarea muy com\u00fan es obtener un total de una consulta que \u201cagrupe\u201d los resultados; es decir, que nos de, por ejemplo, el resultado de sumar las ventas de una compan\u00eda y que este resultado sea mostrado por vendedor.\r\n\r\nPara obtener este resultado, debemos usar `GROUP BY` en nuestra consulta.\r\n\r\n    :::sql\r\n    SELECT vendendor, SUM(ventas) \r\n    FROM tblVentas\r\n    GROUP BY vendedor\r\n\r\nEs necesario que el campo que usamos para agrupar se muestre en el conjunto de resultados. En este ejemplo, el campo es `vendedor`.\r\n\r\nY podemos usar funciones para agrupar los resultados. Por ejemplo, para saber cu\u00e1ntos alumnos nacieron en cada a\u00f1o, usando su CURP, podemos usar la funci\u00f3n `SUBSTRING`, de esta manera:\r\n\r\n    :::SQL\r\n    SELECT SUBSTRING(curp, 6,6) as ANIO, COUNT(curp)\r\n    FROM tblAlumnos\r\n    GROUP BY SUBSTRING(curp, 6,6)\r\n\r\nLa consulta puede ser mas compleja y puede abarcar varias tablas o usar otro tipo de criterios, ya de ordenaci\u00f3n o de selecci\u00f3n. Pero esa es la idea b\u00e1sica.", "extend": "", "pub_date": "2013-11-19T01:03:00Z", "summary_html": "", "body_html": "<p>Una tarea muy com\u00fan es obtener un total de una consulta que \u201cagrupe\u201d los resultados; es decir, que nos de, por ejemplo, el resultado de sumar las ventas de una compan\u00eda y que este resultado sea mostrado por vendedor.</p>\n<p>Para obtener este resultado, debemos usar <code>GROUP BY</code> en nuestra consulta.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">SELECT</span> <span class=\"n\">vendendor</span><span class=\"p\">,</span> <span class=\"k\">SUM</span><span class=\"p\">(</span><span class=\"n\">ventas</span><span class=\"p\">)</span> \n<span class=\"k\">FROM</span> <span class=\"n\">tblVentas</span>\n<span class=\"k\">GROUP</span> <span class=\"k\">BY</span> <span class=\"n\">vendedor</span>\n</pre></div>\n\n\n<p>Es necesario que el campo que usamos para agrupar se muestre en el conjunto de resultados. En este ejemplo, el campo es <code>vendedor</code>.</p>\n<p>Y podemos usar funciones para agrupar los resultados. Por ejemplo, para saber cu\u00e1ntos alumnos nacieron en cada a\u00f1o, usando su CURP, podemos usar la funci\u00f3n <code>SUBSTRING</code>, de esta manera:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">SELECT</span> <span class=\"k\">SUBSTRING</span><span class=\"p\">(</span><span class=\"n\">curp</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ANIO</span><span class=\"p\">,</span> <span class=\"k\">COUNT</span><span class=\"p\">(</span><span class=\"n\">curp</span><span class=\"p\">)</span>\n<span class=\"k\">FROM</span> <span class=\"n\">tblAlumnos</span>\n<span class=\"k\">GROUP</span> <span class=\"k\">BY</span> <span class=\"k\">SUBSTRING</span><span class=\"p\">(</span><span class=\"n\">curp</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>La consulta puede ser mas compleja y puede abarcar varias tablas o usar otro tipo de criterios, ya de ordenaci\u00f3n o de selecci\u00f3n. Pero esa es la idea b\u00e1sica.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "agrupar-resultados-con-mysql", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 34, "fields": {"idx": "a962d97e-5888-4a18-a9c0-36e39bf72b09", "creado": "2017-07-29T02:24:53.534Z", "modificado": "2017-07-29T02:24:53.534Z", "title": "Buscar y reemplazar con Vim", "summary": "", "body": "Title: Buscar y reemplazar con Vim\r\nDate: 2013/11/18 19:06\r\nCategory: Desarrollo \r\nTags: editores, tools \r\nSlug: buscar-y-reemplazar-con-vim\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\n<p><a href=\"http://www.vim.org/\">Vim</a> es uno de los mejores editores que existen. Es tan bueno que muchos editores lo usan. Y es uno de los pocos que puedes manejar a trav\u00e9s de un enlace telef\u00f3nico.</p>\r\n\r\n<p>Bueno, el caso es que este es el procedimiento para buscar un texto y reemplazarlo por otro:</p>\r\n\r\n    :%s/antes/despues/g\r\n\r\n<p>Reemplaza <code>antes</code> por <code>despues</code>, la <code>g</code> es necesaria para sustituya en todo el documento.</p>\r\n\r\n    :%s/antes/despues/gc", "extend": "", "pub_date": "2013-11-19T01:06:00Z", "summary_html": "", "body_html": "<p><a href=\"http://www.vim.org/\">Vim</a> es uno de los mejores editores que existen. Es tan bueno que muchos editores lo usan. Y es uno de los pocos que puedes manejar a trav\u00e9s de un enlace telef\u00f3nico.</p>\n\n<p>Bueno, el caso es que este es el procedimiento para buscar un texto y reemplazarlo por otro:</p>\n\n<div class=\"codehilite\"><pre><span></span>:%s/antes/despues/g\n</pre></div>\n\n\n<p>Reemplaza <code>antes</code> por <code>despues</code>, la <code>g</code> es necesaria para sustituya en todo el documento.</p>\n\n<div class=\"codehilite\"><pre><span></span>:%s/antes/despues/gc\n</pre></div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "buscar-y-reemplazar-con-vim", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 35, "fields": {"idx": "eaeef96f-289c-400f-b273-9513027b2a91", "creado": "2017-07-29T02:39:30.633Z", "modificado": "2017-11-26T21:01:02.176Z", "title": "pcal \u2013 Generador de calendarios en PostScript y HTML", "summary": "", "body": "Title: pcal \u2013 Generador de calendarios en PostScript y HTML\r\nDate: 2013/11/18 19:14\r\nCategory: Desarrollo \r\nTags: tools, \r\nSlug: pcal-generador-de-calendarios-en-postscript-y-html\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nRecientemente redescubr\u00ed `pcal`. Un programa que genera archivos `ps` o `html` con un calendario. Este calendario puede estar vac\u00edo o puede tener la informaci\u00f3n que quieras incluir en un archivo especial. El calendario puede ser vertical (_portrait_) u horizontal (_landscape_ ) y estar en una variedad de idiomas, entre ellos el espa\u00f1ol.\r\n\r\nLa sintaxis del archivo de calendario no es f\u00e1cil, pero una vez que la dominas, puedes incluir incluso im\u00e1genes. Mira un ejemplo del archivo de calendario, llamado `~/.calendar`.\r\n\r\n    input-language es  # define el idioma en el que escribes los d\u00edas\r\n    opt -P letter  # define el tama\u00f1o de la hoja\r\n    opt -m  # muestra un iciono de la la fase lunar\r\n    opt -a es  # define el idioma de impresi\u00f3n (en este caso, espa\u00f1ol)\r\n    opt -J   # agrega el dia juliano a los dias\r\n    opt -E  # utiliza el estilo de fechas europeo (dd/mmm/aaa)\r\n    opt -r Latin1  # define la codificacion de salida\r\n    opt -Y-50   # mueve el calendario 50 puntos abajo (para engargolarlo)\r\n    opt -y .90   #escala el calendario al 90% (para engargolarlo)\r\n\r\n    # Pone el n\u00famero de la semana en cada lunes\r\n    all lun in all  Semana %w\r\n\r\n    # El d\u00eda 15 o el d\u00eda h\u00e1bil pr\u00f3ximo anterior escribe \"D\u00edas de Quincena\"\r\n    workday on_or_before all 15 Dias de Quincena\r\n\r\n    # Mi cumplea\u00f1os\r\n    3 dic Mi cumple\r\n\r\nPor \u00faltimo con esta l\u00ednea generas el calendario para todo el 2006, imprimiendo un mes por hoja, en un archivo llamado `2006.ps`.\r\n\r\n    pcal -o 2006.ps  2006\r\n\r\n!!! notice \"\u00a1Precauci\u00f3n!\" \r\n    Esta entrada se public\u00f3 originalmente el 23 de enero de 2006 en el blog <strong>\u00abYo, Toledano\u00bb</strong>. Su contenido podr\u00eda no estar actualizado.", "extend": "", "pub_date": "2013-11-19T01:14:00Z", "summary_html": "", "body_html": "<p>Recientemente redescubr\u00ed <code>pcal</code>. Un programa que genera archivos <code>ps</code> o <code>html</code> con un calendario. Este calendario puede estar vac\u00edo o puede tener la informaci\u00f3n que quieras incluir en un archivo especial. El calendario puede ser vertical (<em>portrait</em>) u horizontal (<em>landscape</em> ) y estar en una variedad de idiomas, entre ellos el espa\u00f1ol.</p>\n<p>La sintaxis del archivo de calendario no es f\u00e1cil, pero una vez que la dominas, puedes incluir incluso im\u00e1genes. Mira un ejemplo del archivo de calendario, llamado <code>~/.calendar</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">input-language</span> <span class=\"n\">es</span>  <span class=\"c c-Singleline\"># define el idioma en el que escribes los d\u00edas</span>\n<span class=\"n\">opt</span> -<span class=\"n\">P</span> <span class=\"n\">letter</span>  <span class=\"c c-Singleline\"># define el tama\u00f1o de la hoja</span>\n<span class=\"n\">opt</span> -<span class=\"sr\">m  # muestra un iciono de la la fase lunar</span>\n<span class=\"sr\">opt -a es  #</span> <span class=\"n\">define</span> <span class=\"n\">el</span> <span class=\"n\">idioma</span> <span class=\"n\">de</span> <span class=\"n\">impresi\u00f3n</span> (<span class=\"n\">en</span> <span class=\"n\">este</span> <span class=\"n\">caso</span>, <span class=\"n\">espa\u00f1ol</span>)\n<span class=\"n\">opt</span> -<span class=\"n\">J</span>   <span class=\"c c-Singleline\"># agrega el dia juliano a los dias</span>\n<span class=\"n\">opt</span> -<span class=\"n\">E</span>  <span class=\"c c-Singleline\"># utiliza el estilo de fechas europeo (dd/mmm/aaa)</span>\n<span class=\"n\">opt</span> -<span class=\"n\">r</span> <span class=\"n\">Latin1</span>  <span class=\"c c-Singleline\"># define la codificacion de salida</span>\n<span class=\"n\">opt</span> -<span class=\"n\">Y-50</span>   <span class=\"c c-Singleline\"># mueve el calendario 50 puntos abajo (para engargolarlo)</span>\n<span class=\"n\">opt</span> -<span class=\"n\">y</span> <span class=\"mf\">.90</span>   <span class=\"c c-Singleline\">#escala el calendario al 90% (para engargolarlo)</span>\n\n<span class=\"c c-Singleline\"># Pone el n\u00famero de la semana en cada lunes</span>\n<span class=\"nb\">all</span> <span class=\"n\">lun</span> <span class=\"n\">in</span> <span class=\"nb\">all</span>  <span class=\"n\">Semana</span> <span class=\"nv\">%w</span>\n\n<span class=\"c c-Singleline\"># El d\u00eda 15 o el d\u00eda h\u00e1bil pr\u00f3ximo anterior escribe &quot;D\u00edas de Quincena&quot;</span>\n<span class=\"n\">workday</span> <span class=\"n\">on_or_before</span> <span class=\"nb\">all</span> <span class=\"mi\">15</span> <span class=\"n\">Dias</span> <span class=\"n\">de</span> <span class=\"n\">Quincena</span>\n\n<span class=\"c c-Singleline\"># Mi cumplea\u00f1os</span>\n<span class=\"mi\">3</span> <span class=\"n\">dic</span> <span class=\"n\">Mi</span> <span class=\"n\">cumple</span>\n</pre></div>\n\n\n<p>Por \u00faltimo con esta l\u00ednea generas el calendario para todo el 2006, imprimiendo un mes por hoja, en un archivo llamado <code>2006.ps</code>.</p>\n<div class=\"codehilite\"><pre><span></span>pcal -o 2006.ps  2006\n</pre></div>\n\n\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">\u00a1Precauci\u00f3n!</p>\n<p>Esta entrada se public\u00f3 originalmente el 23 de enero de 2006 en el blog <strong>\u00abYo, Toledano\u00bb</strong>. Su contenido podr\u00eda no estar actualizado.</p>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "pcal-generador-de-calendarios-en-postscript", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 36, "fields": {"idx": "7e4f9c07-0aec-4ff4-b0a8-4c9a422ef1c8", "creado": "2017-07-29T02:42:23.108Z", "modificado": "2017-07-29T02:44:43.995Z", "title": "Llenado de formularios HTML con Python", "summary": "", "body": "Title: Llenado de formularios HTML con Python\r\nDate: 2013/11/18 19:20\r\nCategory: Desarrollo \r\nTags: python, librerias \r\nSlug: llenado-de-formularios-html-con-python\r\nSummary: \r\n\r\nEl problema que trato de resolver es el siguiente:\r\n\r\n> Quiero verficar en una p\u00e1gina web que se genera autom\u00e1ticamente si aparece cierta cadena de texto, si no aparece ejecutar ciertas acciones que hacen que la cadena de b\u00fasqueda aparezca.\r\n\r\nPara poner un ejemplo, seg\u00fan leo en **Enchilame** que es posible hacer trampa en **blogsmexico**[^1] y ponen un ejemplo que usa `wget`. Es muy f\u00e1cil, pero como aqu\u00ed se trata de aprender haremos esto mismo en un gui\u00f3n de Python.\r\n\r\n_Debo aclarar que no estoy de acuerdo con este tipo de pr\u00e1cticas, pero es evidente que algunos blogueros la usan de manera constante, apareciendo en la portada de manera injusta._\r\n\r\n[^1]: Ambos sitios, ench\u00edlame y blogsmexico ya murieron por la patria.\r\n\r\nEl problema es de blogsmexico y est\u00e1 en sus manos la soluci\u00f3n (poniendo _captchas_, por ejemplo) y en tanto no lo arreglen, usuarios sin escr\u00fapulos seguir\u00e1n explot\u00e1ndolo. Aqu\u00ed esta la soluci\u00f3n para combatir estas malas pr\u00e1cticas: _competir en igualdad de circunstancias_.\r\n\r\nY bueno, tambi\u00e9n quiero probar mi generador de c\u00f3digo coloreado basado en Geshi:\r\n\r\n    :::python\r\n    #!/usr/bin/env python\r\n    #-*- coding: utf-8 -*-\r\n    import urllib\r\n\r\n    bmexico = 'http://blogsmexico.com'\r\n    titulo = 'Yo, Toledano'\r\n    url=\"http://yo.toledano.org/\"\r\n    ping =\"http://www.blogsmexico.com/hacerping.php?\"\r\n\r\n    data = urllib.urlencode({\"titulo\" : titulo, \"url\" : url})\r\n    f = urllib.urlopen(bmexico).read().find('toledano')\r\n    if f > 0:\r\n        print 'Est\u00e1s en la portada'\r\n    else:\r\n    f = urllib.urlopen(ping+data)\r\n\r\nEl plugin se llama **Transcode**, est\u00e1 escrito en Perl y usa PHP para comunicarse con Geshi, fue escrito por Ben Artin de Periodic Kigdom.\r\n\r\nPara usarlo lo \u00fanico que tenemos que hacer es colocar el filtro `transcode=\"1\"` a la marca `MTEntryBody` en cada uno de las plantillas en las que aparezca este c\u00f3digo. Y al colocar el c\u00f3digo usando las marcas `<pre>` y `<code>` agregar a continuaci\u00f3n `transcode-language:` y el nombre del lenguaje, algo asi:\r\n\r\n    :::html\r\n    transcode-language: python\r\n    print 'Hola Mundo'\r\n\r\n!!! notice \"Precauci\u00f3n\" \r\n    Esta entrada apareci\u00f3 orignalmente en el blog \u00abYo, Toledano\u00bb el 4 de septiembre de 2006. Su contenido podr\u00eda estar desactualizado.", "extend": "", "pub_date": "2013-11-19T01:20:00Z", "summary_html": "", "body_html": "<p>El problema que trato de resolver es el siguiente:</p>\n<blockquote>\n<p>Quiero verficar en una p\u00e1gina web que se genera autom\u00e1ticamente si aparece cierta cadena de texto, si no aparece ejecutar ciertas acciones que hacen que la cadena de b\u00fasqueda aparezca.</p>\n</blockquote>\n<p>Para poner un ejemplo, seg\u00fan leo en <strong>Enchilame</strong> que es posible hacer trampa en <strong>blogsmexico</strong><sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> y ponen un ejemplo que usa <code>wget</code>. Es muy f\u00e1cil, pero como aqu\u00ed se trata de aprender haremos esto mismo en un gui\u00f3n de Python.</p>\n<p><em>Debo aclarar que no estoy de acuerdo con este tipo de pr\u00e1cticas, pero es evidente que algunos blogueros la usan de manera constante, apareciendo en la portada de manera injusta.</em></p>\n<p>El problema es de blogsmexico y est\u00e1 en sus manos la soluci\u00f3n (poniendo <em>captchas</em>, por ejemplo) y en tanto no lo arreglen, usuarios sin escr\u00fapulos seguir\u00e1n explot\u00e1ndolo. Aqu\u00ed esta la soluci\u00f3n para combatir estas malas pr\u00e1cticas: <em>competir en igualdad de circunstancias</em>.</p>\n<p>Y bueno, tambi\u00e9n quiero probar mi generador de c\u00f3digo coloreado basado en Geshi:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\">#-*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">urllib</span>\n\n<span class=\"n\">bmexico</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://blogsmexico.com&#39;</span>\n<span class=\"n\">titulo</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Yo, Toledano&#39;</span>\n<span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://yo.toledano.org/&quot;</span>\n<span class=\"n\">ping</span> <span class=\"o\">=</span><span class=\"s2\">&quot;http://www.blogsmexico.com/hacerping.php?&quot;</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">urlencode</span><span class=\"p\">({</span><span class=\"s2\">&quot;titulo&quot;</span> <span class=\"p\">:</span> <span class=\"n\">titulo</span><span class=\"p\">,</span> <span class=\"s2\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"n\">url</span><span class=\"p\">})</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"n\">bmexico</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s1\">&#39;toledano&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">f</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span> <span class=\"s1\">&#39;Est\u00e1s en la portada&#39;</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"n\">ping</span><span class=\"o\">+</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>El plugin se llama <strong>Transcode</strong>, est\u00e1 escrito en Perl y usa PHP para comunicarse con Geshi, fue escrito por Ben Artin de Periodic Kigdom.</p>\n<p>Para usarlo lo \u00fanico que tenemos que hacer es colocar el filtro <code>transcode=\"1\"</code> a la marca <code>MTEntryBody</code> en cada uno de las plantillas en las que aparezca este c\u00f3digo. Y al colocar el c\u00f3digo usando las marcas <code>&lt;pre&gt;</code> y <code>&lt;code&gt;</code> agregar a continuaci\u00f3n <code>transcode-language:</code> y el nombre del lenguaje, algo asi:</p>\n<div class=\"codehilite\"><pre><span></span>transcode-language: python\nprint &#39;Hola Mundo&#39;\n</pre></div>\n\n\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Precauci\u00f3n</p>\n<p>Esta entrada apareci\u00f3 orignalmente en el blog \u00abYo, Toledano\u00bb el 4 de septiembre de 2006. Su contenido podr\u00eda estar desactualizado.</p>\n</div>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Ambos sitios, ench\u00edlame y blogsmexico ya murieron por la patria.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "llenado-de-formularios-html-con-python", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 37, "fields": {"idx": "24ee9b9a-3f2d-457d-b93b-ee61cc09de81", "creado": "2017-07-29T02:45:22.363Z", "modificado": "2017-07-29T02:45:22.363Z", "title": "C\u00f3mo subir un directorio con FTP", "summary": "", "body": "Title: C\u00f3mo subir un directorio con FTP\r\nDate: 2013/11/18 19:24\r\nCategory: Desarrollo \r\nTags: ftp, tools \r\nSlug: como-subir-un-directorio-con-ftp\r\nSummary: \r\n\r\n<p>Si el \u00fanico acceso que tienes a tu sitio web es con <span class=\"caps\">FTP</span> y quieres subir un directorio, puedes usar el comando mput para subir m\u00faltiples archivos. Pudes hacerlo de manera autom\u00e1tica o puedes autorizar cada trasnferencia.</p>\r\n\r\n<p>Para autorizar cada transferencia sigue estos pasos:</p>\r\n\r\n    ftp servidor.com     # Te concectas al servidor\r\n    cd directorio        # para cambiarse al directorio\r\n    mput *.*             # para subir todos los archivos\r\n\r\n<p>Para transferir los archivos sin que el programa solicite autorizaci\u00f3n:</p>\r\n\r\n    ftp -i servidor.com    # Te concetas al servidor\r\n    cd directorio          # para cambiarse al directorio\r\n    mput *.*               # para subir todos los archivos\r\n\r\n<p>Esas son las dos opciones.</p>\r\n\r\n<p class=\"alert alert-error\">Esta entrada apareci\u00f3 orignalmente en el blog <em>\u00abYo, Toledano\u00bb</em> el 10 de junio de 2007. Su contenido <strong>podr\u00eda</strong> estar desactualizado.</p>", "extend": "", "pub_date": "2013-11-19T01:24:00Z", "summary_html": "", "body_html": "<p>Si el \u00fanico acceso que tienes a tu sitio web es con <span class=\"caps\">FTP</span> y quieres subir un directorio, puedes usar el comando mput para subir m\u00faltiples archivos. Pudes hacerlo de manera autom\u00e1tica o puedes autorizar cada trasnferencia.</p>\n\n<p>Para autorizar cada transferencia sigue estos pasos:</p>\n\n<div class=\"codehilite\"><pre><span></span>ftp servidor.com     # Te concectas al servidor\ncd directorio        # para cambiarse al directorio\nmput *.*             # para subir todos los archivos\n</pre></div>\n\n\n<p>Para transferir los archivos sin que el programa solicite autorizaci\u00f3n:</p>\n\n<div class=\"codehilite\"><pre><span></span>ftp -i servidor.com    # Te concetas al servidor\ncd directorio          # para cambiarse al directorio\nmput *.*               # para subir todos los archivos\n</pre></div>\n\n\n<p>Esas son las dos opciones.</p>\n\n<p class=\"alert alert-error\">Esta entrada apareci\u00f3 orignalmente en el blog <em>\u00abYo, Toledano\u00bb</em> el 10 de junio de 2007. Su contenido <strong>podr\u00eda</strong> estar desactualizado.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-subir-un-directorio-con-ftp", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 38, "fields": {"idx": "b7ce50f4-f928-44a6-b5e6-47bc49bed0a4", "creado": "2017-07-29T02:47:17.776Z", "modificado": "2017-07-29T02:47:17.776Z", "title": "Configurar Django con LiteSpeed", "summary": "", "body": "Title: Configurar Django con LiteSpeed\r\nDate: 2013/11/18 19:26\r\nCategory: Desarrollo \r\nTags: admin, linux \r\nSlug: configurar-django-con-litespeed\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nPara poder usar Django con LiteSpeed, la mejor configuraci\u00f3n que encontr\u00e9 fue con `ajp-wsgi`. Este programa[^1] es un servidor WSGI, escrito enteramente en C, implementa una compuerta tipo AJP[^2] entre el servidor y Django que incorpora al int\u00e9rprete Python[^3], por lo que es m\u00e1s r\u00e1pido que implementaciones hechas solo en Python.\r\n\r\nPara poder compilarlo necesitamos el paquete de desarrollo de Python y el paquete b\u00e1sico de desarrollo de Ubuntu.\r\n\r\n    sudo apt-get install python-pip python-dev build-essential\r\n\r\nA continuaci\u00f3n bajamos las fuentes del servidor AJP m\u00e1s recientes, las desempaquetamos, configuramos y realizamos la compilaci\u00f3n.\r\n\r\n    wget http://www.saddi.com/software/ajp-wsgi/dist/ajp-wsgi-1.1.tar.bz2\r\n    tar xvfj ajp-wsgi-1.1.tar.bz2\r\n    cd ajp-wsgi-1.1/\r\n    python configure.py\r\n    make\r\n    sudo cp ajp-wsgi /usr/local/bin/\r\n\r\nLuego creamos el archivo `run_ajp.py` que crea el servidor WSGI de Django.\r\n\r\n    #!/usr/bin/env python\r\n    # run_ajp.py\r\n    import os\r\n    os.environ[\"DJANGO_SETTINGS_MODULE\"]=\"conxb.settings\"\r\n\r\n    from django.core.handlers.wsgi import WSGIHandler\r\n    app = WSGIHandler()\r\n\r\nPor \u00faltimo, creamos un archivo para ejecutarlo f\u00e1cilmente.\r\n\r\n    #!/usr/bin/env bash\r\n    cd /home/javier/conxb.com/sitio\r\n    /usr/local/bin/ajp-wsgi run_ajp app -B -l /dev/null\r\n\r\nNota que enviamos la salida al vac\u00edo (`/dev/null`) porque un sitio en producci\u00f3n puede crear un registro de cientos de megas de espacio. Pero si est\u00e1s haciendo pruebas, enviar el registro a un archivo log puede ayudarte a encontrar errores.\r\n\r\nUna forma de mejorar este archivo[^4] ser\u00eda crear un gui\u00f3n de arranque que lance el `run_ajp.py` cada vez que se reinicia el servidor o bien una entrada cron que verifique cada cierto tiempo que el servidor se est\u00e9 ejecutando y tome acciones al respecto.\r\n\r\nPero eso ser\u00e1 tema para otro art\u00edculo.\r\n\r\n[^1]: El autor es Allan Saddi, lo encuentran aqu\u00ed: http://goo.gl/4v8jq\r\n[^2]: Por si les interesa, la referencia al protocolo AJP de Apache: http://goo.gl/UzYPQ\r\n[^3]: La propuesta 333 explica esta interface: http://goo.gl/vZPec\r\n[^4]: La gu\u00eda original es de LiteSpeed Tech: http://goo.gl/aA2Aa", "extend": "", "pub_date": "2013-11-19T01:26:00Z", "summary_html": "", "body_html": "<p>Para poder usar Django con LiteSpeed, la mejor configuraci\u00f3n que encontr\u00e9 fue con <code>ajp-wsgi</code>. Este programa<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> es un servidor WSGI, escrito enteramente en C, implementa una compuerta tipo AJP<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> entre el servidor y Django que incorpora al int\u00e9rprete Python<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup>, por lo que es m\u00e1s r\u00e1pido que implementaciones hechas solo en Python.</p>\n<p>Para poder compilarlo necesitamos el paquete de desarrollo de Python y el paquete b\u00e1sico de desarrollo de Ubuntu.</p>\n<div class=\"codehilite\"><pre><span></span>sudo apt-get install python-pip python-dev build-essential\n</pre></div>\n\n\n<p>A continuaci\u00f3n bajamos las fuentes del servidor AJP m\u00e1s recientes, las desempaquetamos, configuramos y realizamos la compilaci\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span>wget http://www.saddi.com/software/ajp-wsgi/dist/ajp-wsgi-1.1.tar.bz2\ntar xvfj ajp-wsgi-1.1.tar.bz2\ncd ajp-wsgi-1.1/\npython configure.py\nmake\nsudo cp ajp-wsgi /usr/local/bin/\n</pre></div>\n\n\n<p>Luego creamos el archivo <code>run_ajp.py</code> que crea el servidor WSGI de Django.</p>\n<table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1\n2\n3\n4\n5\n6\n7</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># run_ajp.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">&quot;DJANGO_SETTINGS_MODULE&quot;</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"s2\">&quot;conxb.settings&quot;</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.handlers.wsgi</span> <span class=\"kn\">import</span> <span class=\"n\">WSGIHandler</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">WSGIHandler</span><span class=\"p\">()</span>\n</pre></div>\n</td></tr></table>\n\n<p>Por \u00faltimo, creamos un archivo para ejecutarlo f\u00e1cilmente.</p>\n<table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1\n2\n3</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span><span class=\"ch\">#!/usr/bin/env bash</span>\n<span class=\"nb\">cd</span> /home/javier/conxb.com/sitio\n/usr/local/bin/ajp-wsgi run_ajp app -B -l /dev/null\n</pre></div>\n</td></tr></table>\n\n<p>Nota que enviamos la salida al vac\u00edo (<code>/dev/null</code>) porque un sitio en producci\u00f3n puede crear un registro de cientos de megas de espacio. Pero si est\u00e1s haciendo pruebas, enviar el registro a un archivo log puede ayudarte a encontrar errores.</p>\n<p>Una forma de mejorar este archivo<sup id=\"fnref-4\"><a class=\"footnote-ref\" href=\"#fn-4\">4</a></sup> ser\u00eda crear un gui\u00f3n de arranque que lance el <code>run_ajp.py</code> cada vez que se reinicia el servidor o bien una entrada cron que verifique cada cierto tiempo que el servidor se est\u00e9 ejecutando y tome acciones al respecto.</p>\n<p>Pero eso ser\u00e1 tema para otro art\u00edculo.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>El autor es Allan Saddi, lo encuentran aqu\u00ed: http://goo.gl/4v8jq&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Por si les interesa, la referencia al protocolo AJP de Apache: http://goo.gl/UzYPQ&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>La propuesta 333 explica esta interface: http://goo.gl/vZPec&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-4\">\n<p>La gu\u00eda original es de LiteSpeed Tech: http://goo.gl/aA2Aa&#160;<a class=\"footnote-backref\" href=\"#fnref-4\" title=\"Jump back to footnote 4 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "configurar-django-con-litespeed", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 39, "fields": {"idx": "97019006-fb5a-4b94-85c2-1531fb85c492", "creado": "2017-07-29T02:48:41.486Z", "modificado": "2017-07-29T02:48:41.486Z", "title": "C\u00f3mo crear una portada personalizada en WordPress usando Genesis Framework", "summary": "", "body": "Title: C\u00f3mo crear una portada personalizada en WordPress usando Genesis Framework\r\nDate: 2013/11/19 15:36\r\nCategory: Desarrollo\r\nTags: php, genesiswp, wordpress\r\nSlug: como-crear-una-portada-personalizada-en-wordpress-\r\nAuthor: Javier Sanchez Toledano\r\nSummary:\r\n\r\nLes comparto el siguiente escenario: quiero que mi portada, la de <strong>Cyberia.MX</strong> muestre las entradas de algunas categor\u00edas, pero no todas. Tambi\u00e9n quiero que muestro los tipos de entradas personalizados que he creado (<em>Custom Post Types</em>), por ejemplo, pel\u00edculas, aplicaciones, libros, sitios web.\r\n\r\nLa soluci\u00f3n era, por supuesto un <em>loop</em> personalizado, pero para evitar llenar mi archivo <code>functions.php</code> de c\u00f3digo que solo se ejecutar\u00eda en una sola p\u00e1gina, decid\u00ed crear una p\u00e1gina personalizada y asignarla como mi p\u00e1gina principal.\r\n\r\n\r\nEs cierto que <a href=\"http://ito.mx/genesis\"><strong>Genesis Framework</strong></a> permite especificar las categor\u00edas que quieres excluir \u2014 con referencia a la primera parte de mi problema \u2014, pero me parece que me da un mejor control especificarlo dentro de los argumentos de mi <em>loop</em> personalizado.\r\n\r\nAdem\u00e1s, por alguna raz\u00f3n, en <strong>Prose</strong> (el tema que utiliza este sitio) esa configuraci\u00f3n no era tomada en cuenta.\r\n\r\nLa soluci\u00f3n total a esta serie de caracter\u00edsticas es una p\u00e1gina personalizada asignada como p\u00e1gina est\u00e1tica \u2014 que no es una p\u00e1gina est\u00e1tica, pero de eso hablar\u00e9 en otro momento \u2014.\r\n\r\nPara poder incluir el c\u00f3digo en esta <em>p\u00e1gina est\u00e1tica</em> debemos crear primero una plantilla de p\u00e1gina y esto es simple porque solo es necesario un comentario en el archivo <code>.php</code>, aunque para efectos de clarificar el c\u00f3digo, agrego algunos comentarios que ayudan a comprender el objetivo de la plantilla.\r\n\r\n```php\r\n<?php\r\n/**\r\n * Este archivo crea la plantilla Portada para Cyberia.MX\r\n *\r\n * @author Javier Sanchez\r\n * @package Prose\r\n * @subpackage Personalizaci\u00f3n\r\n */\r\n\r\n /*\r\nTemplate Name: Portada\r\n*/\r\n```\r\n\r\nEso es suficiente para que esta plantilla aparezca como opci\u00f3n al momento de editar una p\u00e1gina.\r\n\r\n<img class=\"aligncenter size-full wp-image-1227\" title=\"wordpress_atributos_de_la_pagina\" src=\"http://cyberia.mx/media/wordpress_atributos_de_la_pagina.jpg\" alt=\"wordpress_atributos_de_la_pagina\" width=\"202\" height=\"197\" />\r\n\r\nEl siguiente paso es eliminar el <em>loop</em> por defecto y agregar una acci\u00f3n con el nuestro:\r\n\r\n    :::php\r\n    remove_action('genesis_loop', 'genesis_do_loop');\r\n    add_action ('genesis_loop', 'cyberia_home_loop');\r\n\r\nAhora que hemos declarado que el <em>loop</em> lo va a proporcionar la funci\u00f3n <code>cyberia_home_loop</code> vamos a declarar los argumentos para nuestro <em>loop</em>. Estos argumentos tienen el formato que se utiliza para la funci\u00f3n <strong><a href=\"http://codex.wordpress.org/Class_Reference/WP_Query\">WP_Query</a></strong>, ya que <code>genesis_custom_loop</code> es una forma m\u00e1s potente y simplificada que la funci\u00f3n original.\r\n\r\n    :::php\r\n    $args = array (\r\n      'post_type' => array( 'post','peliculas', 'libros', 'apps'),\r\n      'paged' => get_query_var('page') ? get_query_var('page') : 1,\r\n      'category__not_in' => array (34, 35, 36, 236,72, 210, 229,72,4,1,213)\r\n    );\r\n\r\nLo primero que hacemos es llamar a la variable global <code>$paged</code> para asegurar la correcta paginaci\u00f3n del blog en la portada personalizada. La siguiente l\u00ednea crea la variable <code>$args</code> como un arreglo que contiene los tres argumentos de mi consulta personalizada:\r\n<ul>\r\n    <li><code>post_type</code> \u2014 indica en un arreglo qu\u00e9 tipos de entradas van a consultarse, ya que de forma est\u00e1ndar solo se incluye el tipo <code>'post'</code>, pero en mi caso hay tres tipos de entradas m\u00e1s.</li>\r\n    <li><code>paged</code> \u2014 indica que debe seguirse el orden de paginaci\u00f3n previamente configurado.</li>\r\n    <li><code>category__not_in</code> \u2014 este es el que m\u00e1s me interesa, establece en un arreglo cu\u00e1les categor\u00edas <strong>no deben incluirse</strong> en la salida de la consulta.</li>\r\n</ul>\r\nEsta variable <code>$args</code> la pasamos como argumento a la funci\u00f3n <code>genesis_custom_loop</code> en la siguiente l\u00ednea de nuestra funci\u00f3n:\r\n\r\n    :::php\r\n    genesis_custom_loop ( $args  );\r\n\r\nLa \u00faltima l\u00ednea de nuestra p\u00e1gina personalizada es la llamada al motor de nuestro blog:\r\n\r\n    :::php  \r\n    genesis();\r\n\r\nA continuaci\u00f3n te muestro el c\u00f3digo completo:\r\n\r\n    :::php\r\n    <?php\r\n    /**\r\n     * Este archivo crea la plantilla Portada para Cyberia.MX\r\n     *\r\n     * @author Javier Sanchez\r\n     * @package Prose\r\n     * @subpackage Personalizaci\u00f3n\r\n     */\r\n\r\n     /*\r\n    Template Name: Portada\r\n    */\r\n\r\n    remove_action('genesis_loop', 'genesis_do_loop');\r\n    add_action ('genesis_loop', 'cyberia_home_loop');\r\n    function cyberia_home_loop () {\r\n\r\n      $args = array (\r\n        'post_type' => array( 'post','peliculas', 'libros', 'apps'),\r\n        'paged' => get_query_var('page') ? get_query_var('page') : 1,\r\n        'category__not_in' => array (34, 35, 36, 236,72, 210, 229,72,4,1,213)\r\n      );\r\n      genesis_custom_loop ( $args  );\r\n    }\r\n\r\n    genesis();\r\n\r\n    ?>\r\n\r\nNuestra p\u00e1gina no debe tener ning\u00fan contenido, al elegir esta plantilla el contenido se genera autom\u00e1ticamente. Y por supuesto tenemos todos los <em>hook</em> y <em>filtros</em> acostumbrados.\r\n\r\nLa ventaja de crear p\u00e1ginas personalizadas en <a href=\"http://ito.mx/genesis\"><strong>Genesis Framework</strong></a> es que todas no es necesario crear pruebas condicionales para activar c\u00f3digos cuando vemos la portada. Esta plantilla se llama autom\u00e1ticamente y todo el c\u00f3digo dentro se ejecuta. Es como un archivo <code>functions.php</code> exclusivo para la Portada.\r\n\r\nY claro que podemos tener plantillas personalizadas para categor\u00edas, post espec\u00edficos, etiquetas, etc. Pero poco a poco iremos conociendo esta potente caracter\u00edstica de <a href=\"http://ito.mx/genesis\"><strong>Genesis Framework</strong></a>.\r\n\r\n<strong>Actualizaci\u00f3n:</strong> Republico esta entrada porque el c\u00f3digo anterior ten\u00eda un error que ocasionaba que siempre se presentara la p\u00e1gina 1 en la portada. Por alguna raz\u00f3n que desconozco la variable global <strong>$paged</strong> no se tomaba en cuenta. Ahora s\u00ed.\r\n\r\nAgregu\u00e9 esta l\u00ednea que hace que todo funcione con normalidad.\r\n\r\n    :::php\r\n    'paged' => get_query_var('page') ? get_query_var('page') : 1,\r\n\r\n!!! alert-info \"Se necesita Genesis Framework\"\r\n    Recuerda, para poder utilizar el c\u00f3digo mostrado en este art\u00edculo, es necesario contar con [Genesis FrameWork](http://ito.mx/genesis).", "extend": "", "pub_date": "2013-11-19T21:36:00Z", "summary_html": "", "body_html": "<p>Les comparto el siguiente escenario: quiero que mi portada, la de <strong>Cyberia.MX</strong> muestre las entradas de algunas categor\u00edas, pero no todas. Tambi\u00e9n quiero que muestro los tipos de entradas personalizados que he creado (<em>Custom Post Types</em>), por ejemplo, pel\u00edculas, aplicaciones, libros, sitios web.</p>\n<p>La soluci\u00f3n era, por supuesto un <em>loop</em> personalizado, pero para evitar llenar mi archivo <code>functions.php</code> de c\u00f3digo que solo se ejecutar\u00eda en una sola p\u00e1gina, decid\u00ed crear una p\u00e1gina personalizada y asignarla como mi p\u00e1gina principal.</p>\n<p>Es cierto que <a href=\"http://ito.mx/genesis\"><strong>Genesis Framework</strong></a> permite especificar las categor\u00edas que quieres excluir \u2014 con referencia a la primera parte de mi problema \u2014, pero me parece que me da un mejor control especificarlo dentro de los argumentos de mi <em>loop</em> personalizado.</p>\n<p>Adem\u00e1s, por alguna raz\u00f3n, en <strong>Prose</strong> (el tema que utiliza este sitio) esa configuraci\u00f3n no era tomada en cuenta.</p>\n<p>La soluci\u00f3n total a esta serie de caracter\u00edsticas es una p\u00e1gina personalizada asignada como p\u00e1gina est\u00e1tica \u2014 que no es una p\u00e1gina est\u00e1tica, pero de eso hablar\u00e9 en otro momento \u2014.</p>\n<p>Para poder incluir el c\u00f3digo en esta <em>p\u00e1gina est\u00e1tica</em> debemos crear primero una plantilla de p\u00e1gina y esto es simple porque solo es necesario un comentario en el archivo <code>.php</code>, aunque para efectos de clarificar el c\u00f3digo, agrego algunos comentarios que ayudan a comprender el objetivo de la plantilla.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?php</span>\n<span class=\"sd\">/**</span>\n<span class=\"sd\"> * Este archivo crea la plantilla Portada para Cyberia.MX</span>\n<span class=\"sd\"> *</span>\n<span class=\"sd\"> * @author Javier Sanchez</span>\n<span class=\"sd\"> * @package Prose</span>\n<span class=\"sd\"> * @subpackage Personalizaci\u00f3n</span>\n<span class=\"sd\"> */</span>\n\n <span class=\"cm\">/*</span>\n<span class=\"cm\">Template Name: Portada</span>\n<span class=\"cm\">*/</span>\n</pre></div>\n\n\n<p>Eso es suficiente para que esta plantilla aparezca como opci\u00f3n al momento de editar una p\u00e1gina.</p>\n<p><img class=\"aligncenter size-full wp-image-1227\" title=\"wordpress_atributos_de_la_pagina\" src=\"http://cyberia.mx/media/wordpress_atributos_de_la_pagina.jpg\" alt=\"wordpress_atributos_de_la_pagina\" width=\"202\" height=\"197\" /></p>\n<p>El siguiente paso es eliminar el <em>loop</em> por defecto y agregar una acci\u00f3n con el nuestro:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">remove_action(&#39;genesis_loop&#39;, &#39;genesis_do_loop&#39;);</span>\n<span class=\"x\">add_action (&#39;genesis_loop&#39;, &#39;cyberia_home_loop&#39;);</span>\n</pre></div>\n\n\n<p>Ahora que hemos declarado que el <em>loop</em> lo va a proporcionar la funci\u00f3n <code>cyberia_home_loop</code> vamos a declarar los argumentos para nuestro <em>loop</em>. Estos argumentos tienen el formato que se utiliza para la funci\u00f3n <strong><a href=\"http://codex.wordpress.org/Class_Reference/WP_Query\">WP_Query</a></strong>, ya que <code>genesis_custom_loop</code> es una forma m\u00e1s potente y simplificada que la funci\u00f3n original.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">$args = array (</span>\n<span class=\"x\">  &#39;post_type&#39; =&gt; array( &#39;post&#39;,&#39;peliculas&#39;, &#39;libros&#39;, &#39;apps&#39;),</span>\n<span class=\"x\">  &#39;paged&#39; =&gt; get_query_var(&#39;page&#39;) ? get_query_var(&#39;page&#39;) : 1,</span>\n<span class=\"x\">  &#39;category__not_in&#39; =&gt; array (34, 35, 36, 236,72, 210, 229,72,4,1,213)</span>\n<span class=\"x\">);</span>\n</pre></div>\n\n\n<p>Lo primero que hacemos es llamar a la variable global <code>$paged</code> para asegurar la correcta paginaci\u00f3n del blog en la portada personalizada. La siguiente l\u00ednea crea la variable <code>$args</code> como un arreglo que contiene los tres argumentos de mi consulta personalizada:\n<ul>\n    <li><code>post_type</code> \u2014 indica en un arreglo qu\u00e9 tipos de entradas van a consultarse, ya que de forma est\u00e1ndar solo se incluye el tipo <code>&lsquo;post&rsquo;</code>, pero en mi caso hay tres tipos de entradas m\u00e1s.</li>\n    <li><code>paged</code> \u2014 indica que debe seguirse el orden de paginaci\u00f3n previamente configurado.</li>\n    <li><code>category__not_in</code> \u2014 este es el que m\u00e1s me interesa, establece en un arreglo cu\u00e1les categor\u00edas <strong>no deben incluirse</strong> en la salida de la consulta.</li>\n</ul>\nEsta variable <code>$args</code> la pasamos como argumento a la funci\u00f3n <code>genesis_custom_loop</code> en la siguiente l\u00ednea de nuestra funci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">genesis_custom_loop ( $args  );</span>\n</pre></div>\n\n\n<p>La \u00faltima l\u00ednea de nuestra p\u00e1gina personalizada es la llamada al motor de nuestro blog:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">genesis();</span>\n</pre></div>\n\n\n<p>A continuaci\u00f3n te muestro el c\u00f3digo completo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?php</span>\n<span class=\"sd\">/**</span>\n<span class=\"sd\"> * Este archivo crea la plantilla Portada para Cyberia.MX</span>\n<span class=\"sd\"> *</span>\n<span class=\"sd\"> * @author Javier Sanchez</span>\n<span class=\"sd\"> * @package Prose</span>\n<span class=\"sd\"> * @subpackage Personalizaci\u00f3n</span>\n<span class=\"sd\"> */</span>\n\n <span class=\"cm\">/*</span>\n<span class=\"cm\">Template Name: Portada</span>\n<span class=\"cm\">*/</span>\n\n<span class=\"nx\">remove_action</span><span class=\"p\">(</span><span class=\"s1\">&#39;genesis_loop&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;genesis_do_loop&#39;</span><span class=\"p\">);</span>\n<span class=\"nx\">add_action</span> <span class=\"p\">(</span><span class=\"s1\">&#39;genesis_loop&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cyberia_home_loop&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">function</span> <span class=\"nf\">cyberia_home_loop</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n\n  <span class=\"nv\">$args</span> <span class=\"o\">=</span> <span class=\"k\">array</span> <span class=\"p\">(</span>\n    <span class=\"s1\">&#39;post_type&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"k\">array</span><span class=\"p\">(</span> <span class=\"s1\">&#39;post&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;peliculas&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;libros&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;apps&#39;</span><span class=\"p\">),</span>\n    <span class=\"s1\">&#39;paged&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">get_query_var</span><span class=\"p\">(</span><span class=\"s1\">&#39;page&#39;</span><span class=\"p\">)</span> <span class=\"o\">?</span> <span class=\"nx\">get_query_var</span><span class=\"p\">(</span><span class=\"s1\">&#39;page&#39;</span><span class=\"p\">)</span> <span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;category__not_in&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"k\">array</span> <span class=\"p\">(</span><span class=\"mi\">34</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">236</span><span class=\"p\">,</span><span class=\"mi\">72</span><span class=\"p\">,</span> <span class=\"mi\">210</span><span class=\"p\">,</span> <span class=\"mi\">229</span><span class=\"p\">,</span><span class=\"mi\">72</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">213</span><span class=\"p\">)</span>\n  <span class=\"p\">);</span>\n  <span class=\"nx\">genesis_custom_loop</span> <span class=\"p\">(</span> <span class=\"nv\">$args</span>  <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">genesis</span><span class=\"p\">();</span>\n\n<span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n</pre></div>\n\n\n<p>Nuestra p\u00e1gina no debe tener ning\u00fan contenido, al elegir esta plantilla el contenido se genera autom\u00e1ticamente. Y por supuesto tenemos todos los <em>hook</em> y <em>filtros</em> acostumbrados.</p>\n<p>La ventaja de crear p\u00e1ginas personalizadas en <a href=\"http://ito.mx/genesis\"><strong>Genesis Framework</strong></a> es que todas no es necesario crear pruebas condicionales para activar c\u00f3digos cuando vemos la portada. Esta plantilla se llama autom\u00e1ticamente y todo el c\u00f3digo dentro se ejecuta. Es como un archivo <code>functions.php</code> exclusivo para la Portada.</p>\n<p>Y claro que podemos tener plantillas personalizadas para categor\u00edas, post espec\u00edficos, etiquetas, etc. Pero poco a poco iremos conociendo esta potente caracter\u00edstica de <a href=\"http://ito.mx/genesis\"><strong>Genesis Framework</strong></a>.</p>\n<p><strong>Actualizaci\u00f3n:</strong> Republico esta entrada porque el c\u00f3digo anterior ten\u00eda un error que ocasionaba que siempre se presentara la p\u00e1gina 1 en la portada. Por alguna raz\u00f3n que desconozco la variable global <strong>$paged</strong> no se tomaba en cuenta. Ahora s\u00ed.</p>\n<p>Agregu\u00e9 esta l\u00ednea que hace que todo funcione con normalidad.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&#39;paged&#39; =&gt; get_query_var(&#39;page&#39;) ? get_query_var(&#39;page&#39;) : 1,</span>\n</pre></div>\n\n\n<div class=\"admonition alert-info\">\n<p class=\"admonition-title\">Se necesita Genesis Framework</p>\n<p>Recuerda, para poder utilizar el c\u00f3digo mostrado en este art\u00edculo, es necesario contar con <a href=\"http://ito.mx/genesis\">Genesis FrameWork</a>.</p>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-crear-una-portada-personalizada-en-wordpress-", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 40, "fields": {"idx": "0d6d7066-ffe2-49ad-9fd3-8a50acf14fb0", "creado": "2017-07-29T02:54:21.194Z", "modificado": "2017-07-29T02:58:00.149Z", "title": "C\u00f3mo sobreescribir el m\u00e9todo save() en Django", "summary": "", "body": "Title: C\u00f3mo sobreescribir el m\u00e9todo save() en Django\r\nDate: 2013/11/19 19:40\r\nCategory: Desarrollo\r\nTags: patterns, python, django, metodos\r\nSlug: como-sobreescribir-el-metodo-save-en-django\r\nAuthor: Javier Sanchez Toledano\r\nSummary:\r\n\r\nPara el nuevo indicador, que mide el tiempo en el que distribuimos nuestro producto desde las subdelegaciones hasta los centros de atenci\u00f3n a clientes, capturamos los siguientes datos:\r\n\r\n- id del sitio,\r\n- fecha de corte,\r\n- lote de producci\u00f3n,\r\n- fecha y hora (timestamp) de recepci\u00f3n en la subdelegaci\u00f3n, y\r\n- fecha y hora de recepci\u00f3n en el centro de atenci\u00f3n.\r\n\r\nNecesitamos saber la diferencia en horas entre las fechas de recepci\u00f3n, pero como ya sabemos lo complicado que es hacer c\u00e1lculos en consultas con Django, en esta ocasi\u00f3n vamos a generar la diferencia al momento de guardar la tabla, sobreescribiendo el m\u00e9todo `save()` de nuestro modelo.\r\n\r\n### Sobreescribiendo el m\u00e9todo `save()` en Django\r\n\r\nPrimero veamos nuestro modelo:\r\n\r\n```python\r\nclass Distribucion (models.Model):\r\n    mac           = models.CharField (max_length = 6)\r\n    fecha_corte   = models.DateField (default=timezone.now)\r\n    lote          = models.CharField (max_length = 13)\r\n    recibidoVRD   = models.DateTimeField ()\r\n    disponibleMAC = models.DateTimeField ()\r\n    diferencia    = models.IntegerField ()\r\n\r\n    def __unicode__ (self):\r\n        return \"%s - %s - %s\" % (self.mac, self.lote, self.fecha_corte)\r\n```\r\n\r\nComo pueden ver, existe un campo llamado `diferencia` que ser\u00e1 nuestro campo calculado, para eso creamos el m\u00e9todo `save` dentro de nuestro modelo y ponemos el valor calculado en segundos.\r\n\r\n    :::python\r\n    def save(self):\r\n        difFecha = self.disponibleMAC - self.recibidoVRD\r\n        self.diferencia = difFecha.seconds\r\n        super (Distribucion, self).save()\r\n\r\nCon esto, cada vez que actualicemos o agreguemos un registro, se calcular\u00e1n los segundos de diferencia entre las dos fechas, en nuestra vista, podemos convertir estos segundos en el formato de nuestra preferencia.", "extend": "", "pub_date": "2013-11-20T01:40:00Z", "summary_html": "", "body_html": "<p>Para el nuevo indicador, que mide el tiempo en el que distribuimos nuestro producto desde las subdelegaciones hasta los centros de atenci\u00f3n a clientes, capturamos los siguientes datos:</p>\n<ul>\n<li>id del sitio,</li>\n<li>fecha de corte,</li>\n<li>lote de producci\u00f3n,</li>\n<li>fecha y hora (timestamp) de recepci\u00f3n en la subdelegaci\u00f3n, y</li>\n<li>fecha y hora de recepci\u00f3n en el centro de atenci\u00f3n.</li>\n</ul>\n<p>Necesitamos saber la diferencia en horas entre las fechas de recepci\u00f3n, pero como ya sabemos lo complicado que es hacer c\u00e1lculos en consultas con Django, en esta ocasi\u00f3n vamos a generar la diferencia al momento de guardar la tabla, sobreescribiendo el m\u00e9todo <code>save()</code> de nuestro modelo.</p>\n<h3 id=\"sobreescribiendo-el-metodo-save-en-django\">Sobreescribiendo el m\u00e9todo <code>save()</code> en Django</h3>\n<p>Primero veamos nuestro modelo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Distribucion</span> <span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">mac</span>           <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span> <span class=\"p\">(</span><span class=\"n\">max_length</span> <span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n    <span class=\"n\">fecha_corte</span>   <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span> <span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">)</span>\n    <span class=\"n\">lote</span>          <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span> <span class=\"p\">(</span><span class=\"n\">max_length</span> <span class=\"o\">=</span> <span class=\"mi\">13</span><span class=\"p\">)</span>\n    <span class=\"n\">recibidoVRD</span>   <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span> <span class=\"p\">()</span>\n    <span class=\"n\">disponibleMAC</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span> <span class=\"p\">()</span>\n    <span class=\"n\">diferencia</span>    <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span> <span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__unicode__</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\"> - </span><span class=\"si\">%s</span><span class=\"s2\"> - </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mac</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lote</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fecha_corte</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Como pueden ver, existe un campo llamado <code>diferencia</code> que ser\u00e1 nuestro campo calculado, para eso creamos el m\u00e9todo <code>save</code> dentro de nuestro modelo y ponemos el valor calculado en segundos.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">save</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">difFecha</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">disponibleMAC</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">recibidoVRD</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">diferencia</span> <span class=\"o\">=</span> <span class=\"n\">difFecha</span><span class=\"o\">.</span><span class=\"n\">seconds</span>\n    <span class=\"nb\">super</span> <span class=\"p\">(</span><span class=\"n\">Distribucion</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>Con esto, cada vez que actualicemos o agreguemos un registro, se calcular\u00e1n los segundos de diferencia entre las dos fechas, en nuestra vista, podemos convertir estos segundos en el formato de nuestra preferencia.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-sobreescribir-el-metodo-save-en-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 41, "fields": {"idx": "d52d150d-4817-4913-a529-f82a42471e35", "creado": "2017-07-29T02:58:45.194Z", "modificado": "2017-07-29T02:58:45.194Z", "title": "Uso de Managers en Modelos de Datos", "summary": "", "body": "Title: Uso de Managers en Modelos de Datos\r\nDate: 2013/11/19 19:58\r\nCategory: Desarrollo \r\nTags: patterns, python, django, models \r\nSlug: uso-de-managers-en-modelos-de-datos\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nEl nuevo indicador mide el tiempo que tarda nuestro producto en fabricarse. La producci\u00f3n implica una serie de pasos que generan un *timestamp*, es decir el registro de la fecha y hora exacta en la que el producto entr\u00f3 en un estado particular. Existen 27 pasos posibles y los controlamos todos.\r\n\r\nNos interesa saber inicialmente saber el tiempo que tarda desde que se recibe el pedido hasta que se pone disponible para el cliente[^1]. Dependiendo del sitio d\u00f3nde se hace el pedido, pueden ser 14 o 18 d\u00edas.\r\n\r\nTambi\u00e9n nos interesa el tiempo que tarda el producto desde que se recibe el producto hasta que se autoriza su fabricaci\u00f3n. Este lapso depende tambi\u00e9n del sitio y puede ser de 7 a 10 d\u00edas.\r\n\r\nEl primer reto para este indicador, llamado *Disponibilidad* es que la identificaci\u00f3n del sitio no est\u00e1 presente en los registros, sino inclu\u00edda en el \u00edndice principal, el n\u00famero de control. Este n\u00famero de control esta formado por 13 d\u00edgitos, los dos primeros corresponden al a\u00f1o, luego siguen 6 d\u00edgitos que corresponden a la identificaci\u00f3n del sitio, luego 5 d\u00edgitos para un consecutivo por sitio.\r\n\r\nEl problema es que tenemos que usar funciones de agregado de dominio con filtros, no podemos hacerlo con valores calculados. Por ejemplo, **contar cu\u00e1ntas solicitudes hay en el sitio 121**.\r\n\r\n    :::python\r\n    Disponibilidad.objects.filter(fuar[2:6]='121').count()\r\n\r\nAunque la idea es buena, no podemos usar claves en expresiones. La soluci\u00f3n puede parecer complicada, pero es bastante elegante y muy pythonica.\r\n\r\n## Manejadores de Modelos en Django\r\n\r\nUn Manejador o *Manager* es una interface entre las operaciones de consultas de la base de datos y los modelos en Django. De hecho, todos los modelos tienen un manejador en autom\u00e1tico llamado `objects`.\r\n\r\nLo que vamos a hacer es crear un Manejador que agregue el campo modulo a nuestro modelo y sobre este manejador hacer las consultas que necesitamos.\r\n\r\n    :::python\r\n    class ModuloManager (models.Manager):\r\n        modulo = {'modulo':\"SUBSTR(fuar, 3, 6)\"}\r\n        def get_query_set(self):\r\n            return super(ModuloManager, self).get_query_set().extra(select={'modulo':\"SUBSTR(fuar, 3, 6)\"})\r\n\r\nLo que hacemos en este c\u00f3digo es modificar las consultas a nuestro modelo para que agreguen este fragmento al SQL que generan:\r\n\r\n    :::SQL\r\n    SELECT SUBSTR(fuar, 3, 6) AS modulo\r\n\r\nPara activar el manejador debemos agregar estas l\u00edneas a la definici\u00f3n de clase de nuestro modelo.\r\n\r\n    :::python\r\n    modulos = ModuloManager()\r\n    objects = models.Manager()\r\n\r\nEs decir, mantenemos el manejador por default y agregamos el nuestro que adiciona a las consultas el sitio.\r\n\r\n### Consultas extra en el ORM de Django\r\n\r\nYa podemos visualizar el sitio, con el nombre de modulo, sin embargo sigue siendo una expresi\u00f3n calculada y no podemos usarla con filtros, pero podemos usar la empresi\u00f3n extra para crear una consulta m\u00e1s espec\u00edfica.\r\n\r\nAhora podemos usar este nuevo campo para hacer filtros en una *view*.\r\n\r\n    :::python\r\n    Disponibilidad.modulos.extra(where=['modulo = \"290121\"'])\r\n\r\n[^1]: Nuestro compromiso es tener el producto en un tiempo especificado, pero el cliente puede ir por su pedido cuando quiera.", "extend": "", "pub_date": "2013-11-20T01:58:00Z", "summary_html": "", "body_html": "<p>El nuevo indicador mide el tiempo que tarda nuestro producto en fabricarse. La producci\u00f3n implica una serie de pasos que generan un <em>timestamp</em>, es decir el registro de la fecha y hora exacta en la que el producto entr\u00f3 en un estado particular. Existen 27 pasos posibles y los controlamos todos.</p>\n<p>Nos interesa saber inicialmente saber el tiempo que tarda desde que se recibe el pedido hasta que se pone disponible para el cliente<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>. Dependiendo del sitio d\u00f3nde se hace el pedido, pueden ser 14 o 18 d\u00edas.</p>\n<p>Tambi\u00e9n nos interesa el tiempo que tarda el producto desde que se recibe el producto hasta que se autoriza su fabricaci\u00f3n. Este lapso depende tambi\u00e9n del sitio y puede ser de 7 a 10 d\u00edas.</p>\n<p>El primer reto para este indicador, llamado <em>Disponibilidad</em> es que la identificaci\u00f3n del sitio no est\u00e1 presente en los registros, sino inclu\u00edda en el \u00edndice principal, el n\u00famero de control. Este n\u00famero de control esta formado por 13 d\u00edgitos, los dos primeros corresponden al a\u00f1o, luego siguen 6 d\u00edgitos que corresponden a la identificaci\u00f3n del sitio, luego 5 d\u00edgitos para un consecutivo por sitio.</p>\n<p>El problema es que tenemos que usar funciones de agregado de dominio con filtros, no podemos hacerlo con valores calculados. Por ejemplo, <strong>contar cu\u00e1ntas solicitudes hay en el sitio 121</strong>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">Disponibilidad</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">fuar</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"s1\">&#39;121&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>Aunque la idea es buena, no podemos usar claves en expresiones. La soluci\u00f3n puede parecer complicada, pero es bastante elegante y muy pythonica.</p>\n<h2 id=\"manejadores-de-modelos-en-django\">Manejadores de Modelos en Django</h2>\n<p>Un Manejador o <em>Manager</em> es una interface entre las operaciones de consultas de la base de datos y los modelos en Django. De hecho, todos los modelos tienen un manejador en autom\u00e1tico llamado <code>objects</code>.</p>\n<p>Lo que vamos a hacer es crear un Manejador que agregue el campo modulo a nuestro modelo y sobre este manejador hacer las consultas que necesitamos.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">ModuloManager</span> <span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Manager</span><span class=\"p\">):</span>\n    <span class=\"n\">modulo</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;modulo&#39;</span><span class=\"p\">:</span><span class=\"s2\">&quot;SUBSTR(fuar, 3, 6)&quot;</span><span class=\"p\">}</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_query_set</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">ModuloManager</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_query_set</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">extra</span><span class=\"p\">(</span><span class=\"n\">select</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;modulo&#39;</span><span class=\"p\">:</span><span class=\"s2\">&quot;SUBSTR(fuar, 3, 6)&quot;</span><span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Lo que hacemos en este c\u00f3digo es modificar las consultas a nuestro modelo para que agreguen este fragmento al SQL que generan:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">SELECT</span> <span class=\"n\">SUBSTR</span><span class=\"p\">(</span><span class=\"n\">fuar</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"n\">modulo</span>\n</pre></div>\n\n\n<p>Para activar el manejador debemos agregar estas l\u00edneas a la definici\u00f3n de clase de nuestro modelo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">modulos</span> <span class=\"o\">=</span> <span class=\"n\">ModuloManager</span><span class=\"p\">()</span>\n<span class=\"n\">objects</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Manager</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>Es decir, mantenemos el manejador por default y agregamos el nuestro que adiciona a las consultas el sitio.</p>\n<h3 id=\"consultas-extra-en-el-orm-de-django\">Consultas extra en el ORM de Django</h3>\n<p>Ya podemos visualizar el sitio, con el nombre de modulo, sin embargo sigue siendo una expresi\u00f3n calculada y no podemos usarla con filtros, pero podemos usar la empresi\u00f3n extra para crear una consulta m\u00e1s espec\u00edfica.</p>\n<p>Ahora podemos usar este nuevo campo para hacer filtros en una <em>view</em>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">Disponibilidad</span><span class=\"o\">.</span><span class=\"n\">modulos</span><span class=\"o\">.</span><span class=\"n\">extra</span><span class=\"p\">(</span><span class=\"n\">where</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;modulo = &quot;290121&quot;&#39;</span><span class=\"p\">])</span>\n</pre></div>\n\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Nuestro compromiso es tener el producto en un tiempo especificado, pero el cliente puede ir por su pedido cuando quiera.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "uso-de-managers-en-modelos-de-datos", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 42, "fields": {"idx": "113a1645-0d2b-4861-8eb0-9d9756a8c834", "creado": "2017-07-29T02:59:45.215Z", "modificado": "2017-07-29T02:59:45.215Z", "title": "Encapsulamiento y Generalizaci\u00f3n en Python", "summary": "", "body": "Title: Encapsulamiento y Generalizaci\u00f3n en Python\r\nDate: 2013/11/20 16:28\r\nCategory: Desarrollo\r\nTags: patterns, python\r\nSlug: encapsulamiento-y-generalizacion-en-python\r\nAuthor: Javier Sanchez Toledano\r\nSummary:\r\n\r\n<p>El <strong>encapsulamiento</strong> es el proceso de envolver una pieza de c&oacute;digo en una funci&oacute;n, permiti&eacute;ndole tomar ventaja de todas las bondades de las funciones. Generalizar significa tomar algo espec&iacute;fico, como imprimir los m&uacute;ltiplos de 2, y hacerlo m&aacute;s general para imprimir los m&uacute;ltiplos de cualquier n&uacute;mero.</p>\r\n<p>Por ejemplo si tenemos el siguiente ciclo en Python:</p>\r\n\r\n```python\r\ni = 1\r\nwhile i &lt;= 6:\r\n   print 2 * i, '\\',\r\n   i = i + 1\r\nprint\r\n```\r\n\r\n<p>La siguiente funci&oacute;n encapsula el ciclo anterior y lo generaliza para imprimir los m&uacute;ltipos de <code>n</code>:</p>\r\n\r\n    :::Python\r\n    def imprimeMultiplos(n):\r\n        i = 1\r\n        while i &lt;= 6:\r\n            print n * i, '\\',\r\n            i = i + 1\r\n        print\r\n\r\n<p>Para <em>encapsularla</em>, todo lo que tuvimos que hacer fue agregar la primera linea, que declara el nombre de la funci&oacute;n y la lista de par&aacute;metros. Para <em>generalizar</em>, todo lo que tenemos que hacer es reemplazar el valor de 2 con el par&aacute;metro <code>n</code>.</p>\r\n<p>Si llamamos a esta funci&oacute;n con el par&aacute;metro 2, obtenemos la misma salida que antes. Con el par&aacute;metro 3, la salida es la siguiente:</p>\r\n\r\n    :::Python\r\n    >>> imprimeMultiplos(3)\r\n    3     6     9     12     15     18\r\n\r\n<p>Con cuatro como argumento, la salida es esta:</p>\r\n\r\n    :::python\r\n    >>> imprimeMultiplos(4)\r\n    4     8     12     16     20     24\r\n\r\n<p>Seguramente ya habr&aacute;s adivinado como imprimir una tabla de multiplicar &mdash; llamando a <code>imprimeMultiplos</code> repetidamente con diferentes argumentos. De hecho, podemos usar otro ciclo:</p>\r\n\r\n\r\n    :::python\r\n    i = 1\r\n    while i &lt;= 6:\r\n        imprimeMultiplos (i)\r\n        i = i + 1\r\n\r\n<p>Observa que similar es este ciclo al que est&aacute; dentro de <code>imprimeMultiplos</code>. Todo lo que hicimos fue reemplazar el enunciado print con una llamada a la funci&oacute;n.</p>\r\n<p>La salida de este programa es una tabla de multiplicar:</p>\r\n\r\n    1   2   3   4   5   6\r\n    2   4   6   8   10   12\r\n    3   6   9   12   15   18\r\n    4   8   12   16   20   24\r\n    5   10   15   20   25   30\r\n    6   12   18   24   30   36", "extend": "", "pub_date": "2013-11-20T22:28:00Z", "summary_html": "", "body_html": "<p>El <strong>encapsulamiento</strong> es el proceso de envolver una pieza de c&oacute;digo en una funci&oacute;n, permiti&eacute;ndole tomar ventaja de todas las bondades de las funciones. Generalizar significa tomar algo espec&iacute;fico, como imprimir los m&uacute;ltiplos de 2, y hacerlo m&aacute;s general para imprimir los m&uacute;ltiplos de cualquier n&uacute;mero.</p>\n\n<p>Por ejemplo si tenemos el siguiente ciclo en Python:</p>\n\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n   <span class=\"k\">print</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\&#39;</span><span class=\"s1\">,</span>\n   <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n<span class=\"k\">print</span>\n</pre></div>\n\n\n<p>La siguiente funci&oacute;n encapsula el ciclo anterior y lo generaliza para imprimir los m&uacute;ltipos de <code>n</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">imprimeMultiplos</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span> <span class=\"n\">n</span> <span class=\"o\">*</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\&#39;</span><span class=\"s1\">,</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n    <span class=\"k\">print</span>\n</pre></div>\n\n\n<p>Para <em>encapsularla</em>, todo lo que tuvimos que hacer fue agregar la primera linea, que declara el nombre de la funci&oacute;n y la lista de par&aacute;metros. Para <em>generalizar</em>, todo lo que tenemos que hacer es reemplazar el valor de 2 con el par&aacute;metro <code>n</code>.</p>\n\n<p>Si llamamos a esta funci&oacute;n con el par&aacute;metro 2, obtenemos la misma salida que antes. Con el par&aacute;metro 3, la salida es la siguiente:</p>\n\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">imprimeMultiplos</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"mi\">3</span>     <span class=\"mi\">6</span>     <span class=\"mi\">9</span>     <span class=\"mi\">12</span>     <span class=\"mi\">15</span>     <span class=\"mi\">18</span>\n</pre></div>\n\n\n<p>Con cuatro como argumento, la salida es esta:</p>\n\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">imprimeMultiplos</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"mi\">4</span>     <span class=\"mi\">8</span>     <span class=\"mi\">12</span>     <span class=\"mi\">16</span>     <span class=\"mi\">20</span>     <span class=\"mi\">24</span>\n</pre></div>\n\n\n<p>Seguramente ya habr&aacute;s adivinado como imprimir una tabla de multiplicar &mdash; llamando a <code>imprimeMultiplos</code> repetidamente con diferentes argumentos. De hecho, podemos usar otro ciclo:</p>\n\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n    <span class=\"n\">imprimeMultiplos</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n</pre></div>\n\n\n<p>Observa que similar es este ciclo al que est&aacute; dentro de <code>imprimeMultiplos</code>. Todo lo que hicimos fue reemplazar el enunciado print con una llamada a la funci&oacute;n.</p>\n\n<p>La salida de este programa es una tabla de multiplicar:</p>\n\n<div class=\"codehilite\"><pre><span></span>1   2   3   4   5   6\n2   4   6   8   10   12\n3   6   9   12   15   18\n4   8   12   16   20   24\n5   10   15   20   25   30\n6   12   18   24   30   36\n</pre></div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "encapsulamiento-y-generalizacion-en-python", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 43, "fields": {"idx": "449180ac-e60a-4fc8-a91b-4af8e355e40d", "creado": "2017-07-29T03:00:17.489Z", "modificado": "2017-07-29T03:00:17.489Z", "title": "Extraer audio de un archivo AVI", "summary": "", "body": "Title: Extraer audio de un archivo AVI\r\nDate: 2013/11/20 16:57\r\nCategory: Desarrollo \r\nTags: tools, audio \r\nSlug: extraer-audio-de-un-archivo-avi\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nSupongo que sirve para extraer audio de cualquier video, pero yo hice la prueba con un archivo `.avi`. Use la herramienta `mplayer`.\r\n\r\nMuy simple todo, solo tengo que escribir en la l\u00ednea de comandos lo siguiente:\r\n\r\n    :::Bash\r\n    mplayer -quiet -vc dummy  -vo null -ao pcm:waveheader:file=salida.wav entrada.avi\r\n\r\nUna vez que termina, en realidad muy r\u00e1pido en mi Pentium III a 1.6Ghz, lo convertimos a `.mp3` usando `lame`:\r\n\r\n    lame salida.wav", "extend": "", "pub_date": "2013-11-20T22:57:00Z", "summary_html": "", "body_html": "<p>Supongo que sirve para extraer audio de cualquier video, pero yo hice la prueba con un archivo <code>.avi</code>. Use la herramienta <code>mplayer</code>.</p>\n<p>Muy simple todo, solo tengo que escribir en la l\u00ednea de comandos lo siguiente:</p>\n<div class=\"codehilite\"><pre><span></span>mplayer -quiet -vc dummy  -vo null -ao pcm:waveheader:file<span class=\"o\">=</span>salida.wav entrada.avi\n</pre></div>\n\n\n<p>Una vez que termina, en realidad muy r\u00e1pido en mi Pentium III a 1.6Ghz, lo convertimos a <code>.mp3</code> usando <code>lame</code>:</p>\n<div class=\"codehilite\"><pre><span></span>lame salida.wav\n</pre></div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "extraer-audio-de-un-archivo-avi", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 44, "fields": {"idx": "16ee184c-869c-4086-8af6-23b69c0393cb", "creado": "2017-07-29T03:01:16.633Z", "modificado": "2017-07-29T03:01:16.633Z", "title": "Destacados con etiquetas en WordPress", "summary": "", "body": "Title: Destacados con etiquetas\r\nDate: 2013/11/20 17:47\r\nCategory: Desarrollo\r\nTags: php, wp_query, wordpress\r\nSlug: destacados-con-etiquetas\r\nAuthor: Javier Sanchez Toledano\r\nSummary:\r\n\r\nDesde hace mucho quer\u00eda saber como hacer que un post se destacara de alguna manera sin tener que asignarle una categor\u00eda especia, sino con etiquetas, claro que es mas dif\u00edcil que en WordPress, pero si se puede.\r\n\r\nEsta es la forma.\r\n\r\n```php\r\n<?php $starred = new WP_Query('tag=star&showposts=2'); ?>\r\n  <?php if ($starred->have_posts()) : ?>\r\n    <?php while ($starred->have_posts()) : $starred->the_post(); ?>\r\n      <h4><?php the_title(); ?></h4>\r\n      <?php the_content(); ?>\r\n    <?php endwhile; ?>\r\n  <?php else : ?>\r\n<?php endif; ?>\r\n```\r\n\r\nEs importante usar `WP_Query` para evitar conflictos con el *loop* principal.", "extend": "", "pub_date": "2013-11-20T23:47:00Z", "summary_html": "", "body_html": "<p>Desde hace mucho quer\u00eda saber como hacer que un post se destacara de alguna manera sin tener que asignarle una categor\u00eda especia, sino con etiquetas, claro que es mas dif\u00edcil que en WordPress, pero si se puede.</p>\n<p>Esta es la forma.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?php</span> <span class=\"nv\">$starred</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">WP_Query</span><span class=\"p\">(</span><span class=\"s1\">&#39;tag=star&amp;showposts=2&#39;</span><span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">  </span><span class=\"cp\">&lt;?php</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nv\">$starred</span><span class=\"o\">-&gt;</span><span class=\"na\">have_posts</span><span class=\"p\">())</span> <span class=\"o\">:</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">    </span><span class=\"cp\">&lt;?php</span> <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"nv\">$starred</span><span class=\"o\">-&gt;</span><span class=\"na\">have_posts</span><span class=\"p\">())</span> <span class=\"o\">:</span> <span class=\"nv\">$starred</span><span class=\"o\">-&gt;</span><span class=\"na\">the_post</span><span class=\"p\">();</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">      &lt;h4&gt;</span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">the_title</span><span class=\"p\">();</span> <span class=\"cp\">?&gt;</span><span class=\"x\">&lt;/h4&gt;</span>\n<span class=\"x\">      </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">the_content</span><span class=\"p\">();</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">    </span><span class=\"cp\">&lt;?php</span> <span class=\"k\">endwhile</span><span class=\"p\">;</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">  </span><span class=\"cp\">&lt;?php</span> <span class=\"k\">else</span> <span class=\"o\">:</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"cp\">&lt;?php</span> <span class=\"k\">endif</span><span class=\"p\">;</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n</pre></div>\n\n\n<p>Es importante usar <code>WP_Query</code> para evitar conflictos con el <em>loop</em> principal.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "destacados-con-etiquetas-en-wordpress", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 45, "fields": {"idx": "26956678-1a88-4b21-8aa8-d76e1641c24e", "creado": "2017-07-29T03:06:49.972Z", "modificado": "2017-07-29T03:06:49.972Z", "title": "Excluir el campo de un formulario al llamarlo", "summary": "", "body": "Title: Excluir el campo de un formulario al llamarlo\r\nDate: 2014/03/12 10:23\r\nCategory: Desarrollo\r\nTags: django, python, forms\r\nSlug: excluir-campo-formulario\r\nAuthor: Javier Sanchez Toledano\r\nemail: javier@namespace.mx\r\nSummary: Como excluir el campo de un formulario al llamarlo desde una vista\r\n\r\nEste es mi problema. Hice un formulario para editar los usuarios y al mismo tiempo crear un registro en otro modelo. Es que no encontr\u00e9 otra forma para manejar los permisos de la aplicaci\u00f3n `metas` del Cuadro de Mando.\r\n\r\nEste es el modelo para los usuarios que usan las metas:\r\n\r\n    :::Python\r\n    class Pipol(models.Model):\r\n        perfil = models.ForeignKey(settings.AUTH_USER_MODEL, related_name='pipol', editable=False)\r\n        sitio = models.IntegerField(choices=SITIO)\r\n        puesto = models.CharField (choices=PUESTOS, max_length=5)\r\n        activo = models.BooleanField(default=True)\r\n\r\n        def __unicode__ (self):\r\n            return str(self.perfil)\r\n\r\n        def get_sitio (self):\r\n            return SITIO[self.sitio][1].upper()\r\n\r\n        def is_mspe(self):\r\n            if self.puesto == \"RA\":\r\n                return False\r\n            else:\r\n                return True\r\n\r\n        class Meta:\r\n            verbose_name = 'Perfil'\r\n            verbose_name_plural = 'Perfiles'\r\n\r\nComo pueden ver, usa una clave for\u00e1nea que enlaza a los usuarios del sistema para controlar grupos y permisos.\r\n\r\nEntonces, cuando se trata de agregar a los usuarios uso un formulario que toma ciertos campos para el modelo `django.contrib.auth.models.Users`y estos campos en este modelo `Pipol`.\r\n\r\nEntonces debo agregar un constructor para que cuando se trate de agregar a un usuario se agreguen los campos `password1` y `password2` y cuando se edite, estos campos se exluyan.\r\n\r\nEl constructor es como esto:\r\n\r\n    :::Python\r\n    def __init__ (self, *args, **kwargs):\r\n        edit = kwargs.pop('edit', None)\r\n        super (PipolForm, self).__init__(*args, **kwargs)\r\n        if edit:\r\n            del self.fields['password1']\r\n            del self.fields['password2']\r\n\r\nDe forma que tendr\u00eda que llamar a mi formulario el par\u00e1metro `con_clave=False` para que no aparezcan las contrase\u00f1as.\r\n\r\nLa llamada en la vista es como sigue:\r\n\r\n    :::Python\r\n    form = PipolForm (request.POST, initial=inital, edit=True)\r\n\r\nNo funciona como yo quiero, as\u00ed que seguir\u00e9 investigando.", "extend": "", "pub_date": "2014-03-12T16:23:00Z", "summary_html": "", "body_html": "<p>Este es mi problema. Hice un formulario para editar los usuarios y al mismo tiempo crear un registro en otro modelo. Es que no encontr\u00e9 otra forma para manejar los permisos de la aplicaci\u00f3n <code>metas</code> del Cuadro de Mando.</p>\n<p>Este es el modelo para los usuarios que usan las metas:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Pipol</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">perfil</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">AUTH_USER_MODEL</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;pipol&#39;</span><span class=\"p\">,</span> <span class=\"n\">editable</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">sitio</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">SITIO</span><span class=\"p\">)</span>\n    <span class=\"n\">puesto</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span> <span class=\"p\">(</span><span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">PUESTOS</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"n\">activo</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__unicode__</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">perfil</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_sitio</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">SITIO</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sitio</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">is_mspe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">puesto</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;RA&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">True</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Perfil&#39;</span>\n        <span class=\"n\">verbose_name_plural</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Perfiles&#39;</span>\n</pre></div>\n\n\n<p>Como pueden ver, usa una clave for\u00e1nea que enlaza a los usuarios del sistema para controlar grupos y permisos.</p>\n<p>Entonces, cuando se trata de agregar a los usuarios uso un formulario que toma ciertos campos para el modelo <code>django.contrib.auth.models.Users</code>y estos campos en este modelo <code>Pipol</code>.</p>\n<p>Entonces debo agregar un constructor para que cuando se trate de agregar a un usuario se agreguen los campos <code>password1</code> y <code>password2</code> y cuando se edite, estos campos se exluyan.</p>\n<p>El constructor es como esto:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"fm\">__init__</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">edit</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s1\">&#39;edit&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n    <span class=\"nb\">super</span> <span class=\"p\">(</span><span class=\"n\">PipolForm</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">edit</span><span class=\"p\">:</span>\n        <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"s1\">&#39;password1&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"s1\">&#39;password2&#39;</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>De forma que tendr\u00eda que llamar a mi formulario el par\u00e1metro <code>con_clave=False</code> para que no aparezcan las contrase\u00f1as.</p>\n<p>La llamada en la vista es como sigue:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">PipolForm</span> <span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">POST</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"n\">inital</span><span class=\"p\">,</span> <span class=\"n\">edit</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>No funciona como yo quiero, as\u00ed que seguir\u00e9 investigando.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "excluir-el-campo-de-un-formulario-al-llamarlo", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 46, "fields": {"idx": "5b1f5945-ca6b-4ea8-aae3-f4905fce84cc", "creado": "2017-07-29T03:09:11.993Z", "modificado": "2017-07-29T03:09:11.993Z", "title": "Im\u00e1genes Destacadas en Genesis Framework", "summary": "", "body": "Title: Im\u00e1genes Destacadas en Genesis Framework  \r\nDate: 2014/04/20 12:59  \r\nCategory: Desarrollo  \r\nTags: genesiswp, wordpress, php\r\nSummary: Un repaso r\u00e1pido sobre c\u00f3mo usar las im\u00e1genes destacadas en Genesis Framework.  \r\n\r\nMe doy cuenta que debo de recuperar mi competencia para, no digamos crear temas, simplemente para usar d\u00eda a d\u00eda Framework de WordPress [__Genesis__][gen]. As\u00ed que voy a escribirme un tutorial sobre c\u00f3mo usarlo y espero que a ustedes tambi\u00e9n les ayude.\r\n\r\n## Im\u00e1genes destacadas en WordPress\r\nLas im\u00e1genes destacadas, cuyo nombre es _featured images_ fueron agregadas a la versi\u00f3n 2.9 de WordPress, junto con otra caracter\u00edstica complementaria, las __im\u00e1genes miniatura__ o _post thumbnail_[^1]. Estas miniaturas son muy usadas en los temas tipo _magazine_ o de pel\u00edculas para mostrar los carteles, por ejemplo.\r\n\r\nEsta caracter\u00edstica de _post thumbnail_ proporciona una forma estandarizada de mostrar una imagen de una forma bastante econ\u00f3mica; antes se requer\u00eda que se agregara la imagen en un campo personalizado, lo que hac\u00eda muy tediosa esta actividad; o peor a\u00fan se usaban _script_ que sobrecargaban el servidor o eran presa f\u00e1cil de los _crackers_.\r\n\r\nAfortunadamente [Genesis Framework][gen] proporciona una forma f\u00e1cil de utilizar esta importante caracter\u00edstica.\r\n\r\n### C\u00f3digo para utilizar im\u00e1genes destacadas\r\n\r\nPrimero, debemos asegurarnos que en nuestro archivo `functions.php` exista soporte para esta funci\u00f3n. Esto har\u00e1 que se agregu\u00e9 el cuadro de dialogo a la interface del Escritorio.\r\n\r\n    :::PHP\r\n    add_theme_support( 'post-thumbnails' );\r\n\r\nEsta funci\u00f3n habilita la interface para im\u00e1genes destacadas, tanto en las entradas tipo _Post_ como en las tipo _Page_. Si solo necesitas las im\u00e1genes destacadas en un solo tipo de entrada, entonces tendr\u00edas que usar algo como esto:\r\n\r\n    :::PHP\r\n    add_theme_support( 'post-thumnails', array( 'post' );\r\n    add_theme_support( 'post-thumnails', array( 'page' );\r\n\r\nSimplemente elimina la l\u00ednea que no desees.\r\n\r\nLo siguiente que debemos hacer es especificar las dimensiones de las im\u00e1genes miniatura. Aqu\u00ed tenemos dos opciones: redimencionarla o _box-resizing_ y recortarla o _hard-cropping_.\r\n\r\nLa redimenci\u00f3n o __box-resizing__ significa que se cambia o reduce el tama\u00f1o de la imagen __sin perder proporci\u00f3n__, es decir, sin distorcionarla hasta que _\"quepa\"_ dentro de la caja que especificaste en los par\u00e1metros. Imagina que es una caja de pizza y tienes que reducir el tama\u00f1o de la imagen hasta que quepa en la caja, si cabe en lo ancho, pero no en lo lago, debes seguir reduciendo. Po ejemplo, si tienes una imagen de 100&times;50 y una caja de 50&times;50, la imagen se reducir\u00e1 a la mitad en ambas dimensiones, es decir quedar\u00e1 en 50&times;25. La imagen es m\u00e1s peque\u00f1a pero cabe en la caja. Si quieres que la imagen solo se ajuste del ancho, por ejemplo, en el par\u00e1metro de altura colocamos un valor tipo 9999 o algo as\u00ed de imposible de alcanzar.\r\n\r\n    :::PHP\r\n    set_post_thumbnail_size( 50, 50 );\r\n\r\nLa segunda opci\u00f3n es el recorte o __hard-cropping__. En esta modalidad, la imagen se recorta hasta alcanzar las dimensiones especificadas _exactamente_. La ventaja es que obtienes exactamente lo que pediste. Si pides una miniatura de 50&times;50 obtienes una miniatura de 50&times;50. La desventaja es que tu imagen ser\u00e1 recortada (ya sea de ambos lados o de arriba y abajo) para alcanzar el tama\u00f1o especificado, y perder\u00e1s una parte de tu imagen.\r\n\r\n    :::PHP\r\n    set_post_thumbnail_size( 50, 50, true );\r\n\r\nAhora que hemos habilitado las im\u00e1genes en miniatura, ya podemos usar la en nuestra plantilla.\r\n\r\n### C\u00f3mo usar miniaturas en una plantilla\r\n\r\nExisten varias funciones relacionadas con las miniaturas o __thumbnails__ y las veremos a continuaci\u00f3n.\r\n\r\n- `has_post_thumbnail()`; regresa cierto o falso para indicar si la entrada actual tiene una imagen destacada.\r\n\r\n        :::PHP\r\n        <?php\r\n          if ( has_post_thumbnail() ) {\r\n            // el c\u00f3digo que deseamos\r\n          } else {\r\n            // otra cosa\r\n          }\r\n        ?>\r\n\r\n\r\n- `the_post_thumbnail()`; devuelve la imagen destacada, si existe:\r\n\r\n        :::PHP\r\n        <?php the_post_thumbnail(); ?>\r\n\r\nEstas son las funciones b\u00e1sicas. En el siguiente art\u00edculo de la serie, veremos algunas de las funciones avanzadas.\r\n\r\n!!! notice \"Usa Genesis Framework\"\r\n    [Genesis][gen] te facilita construir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, [Genesis][gen] te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple.  \r\n    **!Empieza a usar hoy mismo [Genesis Framework][gen]!**\r\n\r\n\r\n[gen]: http://j.mp/genesismx\r\n\r\n[^1]: En esto de WordPress hay que usar los nombres en ingl\u00e9s porque as\u00ed se llaman tambi\u00e9n las funciones que usan.", "extend": "", "pub_date": "2014-04-20T17:59:00Z", "summary_html": "", "body_html": "<p>Me doy cuenta que debo de recuperar mi competencia para, no digamos crear temas, simplemente para usar d\u00eda a d\u00eda Framework de WordPress <a href=\"http://j.mp/genesismx\"><strong>Genesis</strong></a>. As\u00ed que voy a escribirme un tutorial sobre c\u00f3mo usarlo y espero que a ustedes tambi\u00e9n les ayude.</p>\n<h2 id=\"imagenes-destacadas-en-wordpress\">Im\u00e1genes destacadas en WordPress</h2>\n<p>Las im\u00e1genes destacadas, cuyo nombre es <em>featured images</em> fueron agregadas a la versi\u00f3n 2.9 de WordPress, junto con otra caracter\u00edstica complementaria, las <strong>im\u00e1genes miniatura</strong> o <em>post thumbnail</em><sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>. Estas miniaturas son muy usadas en los temas tipo <em>magazine</em> o de pel\u00edculas para mostrar los carteles, por ejemplo.</p>\n<p>Esta caracter\u00edstica de <em>post thumbnail</em> proporciona una forma estandarizada de mostrar una imagen de una forma bastante econ\u00f3mica; antes se requer\u00eda que se agregara la imagen en un campo personalizado, lo que hac\u00eda muy tediosa esta actividad; o peor a\u00fan se usaban <em>script</em> que sobrecargaban el servidor o eran presa f\u00e1cil de los <em>crackers</em>.</p>\n<p>Afortunadamente <a href=\"http://j.mp/genesismx\">Genesis Framework</a> proporciona una forma f\u00e1cil de utilizar esta importante caracter\u00edstica.</p>\n<h3 id=\"codigo-para-utilizar-imagenes-destacadas\">C\u00f3digo para utilizar im\u00e1genes destacadas</h3>\n<p>Primero, debemos asegurarnos que en nuestro archivo <code>functions.php</code> exista soporte para esta funci\u00f3n. Esto har\u00e1 que se agregu\u00e9 el cuadro de dialogo a la interface del Escritorio.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">add_theme_support( &#39;post-thumbnails&#39; );</span>\n</pre></div>\n\n\n<p>Esta funci\u00f3n habilita la interface para im\u00e1genes destacadas, tanto en las entradas tipo <em>Post</em> como en las tipo <em>Page</em>. Si solo necesitas las im\u00e1genes destacadas en un solo tipo de entrada, entonces tendr\u00edas que usar algo como esto:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">add_theme_support( &#39;post-thumnails&#39;, array( &#39;post&#39; );</span>\n<span class=\"x\">add_theme_support( &#39;post-thumnails&#39;, array( &#39;page&#39; );</span>\n</pre></div>\n\n\n<p>Simplemente elimina la l\u00ednea que no desees.</p>\n<p>Lo siguiente que debemos hacer es especificar las dimensiones de las im\u00e1genes miniatura. Aqu\u00ed tenemos dos opciones: redimencionarla o <em>box-resizing</em> y recortarla o <em>hard-cropping</em>.</p>\n<p>La redimenci\u00f3n o <strong>box-resizing</strong> significa que se cambia o reduce el tama\u00f1o de la imagen <strong>sin perder proporci\u00f3n</strong>, es decir, sin distorcionarla hasta que <em>&ldquo;quepa&rdquo;</em> dentro de la caja que especificaste en los par\u00e1metros. Imagina que es una caja de pizza y tienes que reducir el tama\u00f1o de la imagen hasta que quepa en la caja, si cabe en lo ancho, pero no en lo lago, debes seguir reduciendo. Po ejemplo, si tienes una imagen de 100&times;50 y una caja de 50&times;50, la imagen se reducir\u00e1 a la mitad en ambas dimensiones, es decir quedar\u00e1 en 50&times;25. La imagen es m\u00e1s peque\u00f1a pero cabe en la caja. Si quieres que la imagen solo se ajuste del ancho, por ejemplo, en el par\u00e1metro de altura colocamos un valor tipo 9999 o algo as\u00ed de imposible de alcanzar.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">set_post_thumbnail_size( 50, 50 );</span>\n</pre></div>\n\n\n<p>La segunda opci\u00f3n es el recorte o <strong>hard-cropping</strong>. En esta modalidad, la imagen se recorta hasta alcanzar las dimensiones especificadas <em>exactamente</em>. La ventaja es que obtienes exactamente lo que pediste. Si pides una miniatura de 50&times;50 obtienes una miniatura de 50&times;50. La desventaja es que tu imagen ser\u00e1 recortada (ya sea de ambos lados o de arriba y abajo) para alcanzar el tama\u00f1o especificado, y perder\u00e1s una parte de tu imagen.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">set_post_thumbnail_size( 50, 50, true );</span>\n</pre></div>\n\n\n<p>Ahora que hemos habilitado las im\u00e1genes en miniatura, ya podemos usar la en nuestra plantilla.</p>\n<h3 id=\"como-usar-miniaturas-en-una-plantilla\">C\u00f3mo usar miniaturas en una plantilla</h3>\n<p>Existen varias funciones relacionadas con las miniaturas o <strong>thumbnails</strong> y las veremos a continuaci\u00f3n.</p>\n<ul>\n<li>\n<p><code>has_post_thumbnail()</code>; regresa cierto o falso para indicar si la entrada actual tiene una imagen destacada.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?php</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">has_post_thumbnail</span><span class=\"p\">()</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// el c\u00f3digo que deseamos</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// otra cosa</span>\n  <span class=\"p\">}</span>\n<span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n</pre></div>\n\n\n</li>\n<li>\n<p><code>the_post_thumbnail()</code>; devuelve la imagen destacada, si existe:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">the_post_thumbnail</span><span class=\"p\">();</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n</pre></div>\n\n\n</li>\n</ul>\n<p>Estas son las funciones b\u00e1sicas. En el siguiente art\u00edculo de la serie, veremos algunas de las funciones avanzadas.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Usa Genesis Framework</p>\n<p><a href=\"http://j.mp/genesismx\">Genesis</a> te facilita construir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, <a href=\"http://j.mp/genesismx\">Genesis</a> te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple.<br>\n<strong>!Empieza a usar hoy mismo <a href=\"http://j.mp/genesismx\">Genesis Framework</a>!</strong></p>\n</div>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>En esto de WordPress hay que usar los nombres en ingl\u00e9s porque as\u00ed se llaman tambi\u00e9n las funciones que usan.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "imagenes-destacadas-en-genesis-framework", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 47, "fields": {"idx": "e6de1413-db28-4d9c-b1e3-97a491db225b", "creado": "2017-07-29T03:10:14.204Z", "modificado": "2017-07-29T03:10:14.204Z", "title": "Redirecci\u00f3n 301 con htaccess", "summary": "", "body": "Title: Redirecci\u00f3n 301 con htaccess\r\nDate: 2013/11/20 17:48\r\nCategory: Desarrollo \r\nTags: admin, apache,  \r\nSlug: redireccion-301-con-htaccess\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nHoy le dije adios a PHP[^1] y regreso a simple y puro HTML. El cambio es mas o menos simple. Ahora en este sitio funciona la publicaci\u00f3n programada, por lo que no hay mayor problema con reconstruir todo el sitio.\r\n\r\n[^1]: Este art\u00edculo lo escrib\u00ed en el 2007, creo, cuando usaba Movable Type.\r\n\r\nLo que ten\u00eda que evitar a toda costa es que Google considerara las nuevas p\u00e1ginas como contenido duplicado, por lo que ten\u00eda que redirigir las p\u00e1ginas anteriores a las nuevas p\u00e1ginas.\r\n\r\nEste es el procedimiento:\r\n\r\nLa mejor forma de redigir el tr\u00e1fico es usar redirecciones en el archivo .htaccess. Este m\u00e9todo no genera ning\u00fan retraso porque antes de servir una p\u00e1gina a los navegadores, el servidor verifica que exista un archivo `.htaccess`, si lo encuentra, la p\u00e1gina anterior nunca se carga, en su lugar a los visitantes se les env\u00eda directamente la nueva p\u00e1gina.\r\n\r\nSi necesitas informaci\u00f3n m\u00e1s t\u00e9cnica, puedes consultar el [tutorial de Apache](http://httpd.apache.org/docs/1.3/howto/htaccess.html).\r\n\r\n### Consideraciones importantes al trabajar con el archivo `.htaccess`.\r\n\r\n* Siempre edita y sube tus archivos en modo ASCII, subirlos en modo binario puede provocar que deje de funcionar tu sitio\r\n* El archivo `.htaccess` no funciona en servidores Windows\r\n* Aseg\u00farate de checar y rechecar los cambios que realices, borra el cach\u00e9 y verifica que los encabezados que env\u00eda el servidor sean 301 (lo que significa que los cambios son permanentes) y no 302 a menos que los cambios sean verdaderamente temporales.\r\n* Algunos sistemas operativos no permiten crear achivos que empiecen con un punto, por lo que tal vez tengas que llamar el archivo htaccess.txt y luego renombrarlo cuando est\u00e1 en el servidor.\r\n* Aseg\u00farate que tu programa FTP puede visualizar los archivos `.htaccess`, puedes usar [Filezilla](http://sourceforge.net/projects/filezilla) que es *Open Source*.\r\n* Recuerda cambiar `ejemplo.com` por tu propio servidor.\r\n\r\n## Ejemplos de redirecciones con .htaccess\r\n\r\n#### Para mover una sola p\u00e1gina\r\n\r\nPara mover una p\u00e1gina sin problemas para los usuarios:\r\n\r\n    Redirect 301 /paginavieja.html http://www.ejemplo.com/nuevapagina.html\r\n\r\n#### Para mover un sitio completo\r\n\r\nEsto atrapar\u00e1 todo el tr\u00e1fico de tu sitio anterior y lo redirigir\u00e1 al \u00edndice de tu nuevo sitio. Si quieres redirigir cada p\u00e1gina a su nueva ubicaci\u00f3n, esta no es tu opci\u00f3n.\r\n\r\n    Redirect 301 / http://www.ejemplo.com/\r\n\r\n#### C\u00f3mo cambiar la extensi\u00f3n de las p\u00e1ginas\r\n\r\nEste ejemplo es exactamente lo que usa este blog para cambiar la extensi\u00f3n de las p\u00e1ginas de php a html. Busca cualquier p\u00e1gina .php y la redirige a `.html` (por ejemplo `http://yo.toledano.org/index.php` lo redirige a `http://yo.toledano.org/index.html`). Debes tener mucho cuidado con esto, ya que redirige todas las p\u00e1ginas `.php`, asi que verfica tus cambios y vu\u00e9lvelos a verificar.\r\n\r\n    RedirectMatch 301 (.*).php$ $1.html", "extend": "", "pub_date": "2013-11-20T23:48:00Z", "summary_html": "", "body_html": "<p>Hoy le dije adios a PHP<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> y regreso a simple y puro HTML. El cambio es mas o menos simple. Ahora en este sitio funciona la publicaci\u00f3n programada, por lo que no hay mayor problema con reconstruir todo el sitio.</p>\n<p>Lo que ten\u00eda que evitar a toda costa es que Google considerara las nuevas p\u00e1ginas como contenido duplicado, por lo que ten\u00eda que redirigir las p\u00e1ginas anteriores a las nuevas p\u00e1ginas.</p>\n<p>Este es el procedimiento:</p>\n<p>La mejor forma de redigir el tr\u00e1fico es usar redirecciones en el archivo .htaccess. Este m\u00e9todo no genera ning\u00fan retraso porque antes de servir una p\u00e1gina a los navegadores, el servidor verifica que exista un archivo <code>.htaccess</code>, si lo encuentra, la p\u00e1gina anterior nunca se carga, en su lugar a los visitantes se les env\u00eda directamente la nueva p\u00e1gina.</p>\n<p>Si necesitas informaci\u00f3n m\u00e1s t\u00e9cnica, puedes consultar el <a href=\"http://httpd.apache.org/docs/1.3/howto/htaccess.html\">tutorial de Apache</a>.</p>\n<h3 id=\"consideraciones-importantes-al-trabajar-con-el-archivo-htaccess\">Consideraciones importantes al trabajar con el archivo <code>.htaccess</code>.</h3>\n<ul>\n<li>Siempre edita y sube tus archivos en modo ASCII, subirlos en modo binario puede provocar que deje de funcionar tu sitio</li>\n<li>El archivo <code>.htaccess</code> no funciona en servidores Windows</li>\n<li>Aseg\u00farate de checar y rechecar los cambios que realices, borra el cach\u00e9 y verifica que los encabezados que env\u00eda el servidor sean 301 (lo que significa que los cambios son permanentes) y no 302 a menos que los cambios sean verdaderamente temporales.</li>\n<li>Algunos sistemas operativos no permiten crear achivos que empiecen con un punto, por lo que tal vez tengas que llamar el archivo htaccess.txt y luego renombrarlo cuando est\u00e1 en el servidor.</li>\n<li>Aseg\u00farate que tu programa FTP puede visualizar los archivos <code>.htaccess</code>, puedes usar <a href=\"http://sourceforge.net/projects/filezilla\">Filezilla</a> que es <em>Open Source</em>.</li>\n<li>Recuerda cambiar <code>ejemplo.com</code> por tu propio servidor.</li>\n</ul>\n<h2 id=\"ejemplos-de-redirecciones-con-htaccess\">Ejemplos de redirecciones con .htaccess</h2>\n<h4 id=\"para-mover-una-sola-pagina\">Para mover una sola p\u00e1gina</h4>\n<p>Para mover una p\u00e1gina sin problemas para los usuarios:</p>\n<div class=\"codehilite\"><pre><span></span>Redirect 301 /paginavieja.html http://www.ejemplo.com/nuevapagina.html\n</pre></div>\n\n\n<h4 id=\"para-mover-un-sitio-completo\">Para mover un sitio completo</h4>\n<p>Esto atrapar\u00e1 todo el tr\u00e1fico de tu sitio anterior y lo redirigir\u00e1 al \u00edndice de tu nuevo sitio. Si quieres redirigir cada p\u00e1gina a su nueva ubicaci\u00f3n, esta no es tu opci\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span>Redirect 301 / http://www.ejemplo.com/\n</pre></div>\n\n\n<h4 id=\"como-cambiar-la-extension-de-las-paginas\">C\u00f3mo cambiar la extensi\u00f3n de las p\u00e1ginas</h4>\n<p>Este ejemplo es exactamente lo que usa este blog para cambiar la extensi\u00f3n de las p\u00e1ginas de php a html. Busca cualquier p\u00e1gina .php y la redirige a <code>.html</code> (por ejemplo <code>http://yo.toledano.org/index.php</code> lo redirige a <code>http://yo.toledano.org/index.html</code>). Debes tener mucho cuidado con esto, ya que redirige todas las p\u00e1ginas <code>.php</code>, asi que verfica tus cambios y vu\u00e9lvelos a verificar.</p>\n<div class=\"codehilite\"><pre><span></span>RedirectMatch 301 (.*).php$ $1.html\n</pre></div>\n\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Este art\u00edculo lo escrib\u00ed en el 2007, creo, cuando usaba Movable Type.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "redireccion-301-con-htaccess", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 48, "fields": {"idx": "4e8552c1-b9bc-44c2-93fd-d0ec3907d0cf", "creado": "2017-07-29T03:10:53.530Z", "modificado": "2017-07-29T03:10:53.530Z", "title": "El poder de los filtros en Genesis Framework", "summary": "", "body": "Title: El poder de los filtros en Genesis Framework\r\nDate: 2013/11/21 16:07\r\nCategory: Desarrollo \r\nTags: php, filtros, genesiswp , wordpress\r\nSlug: el-poder-de-los-filtros-en-genesis-framework\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nLes quiero hablar un poco acerca de los *Rich Snippets*, pero antes les voy a contar como usar los filtros para ampliar las funcionalidades b\u00e1sica de [Genesis Framework](http://ito.mx/genesis).\r\n\r\nPara poder vincular mi sitio a Google Plus, necesitaba agregar a mi perfil de autor un enlace a mi perfil de Google+, sin embargo aunque escrib\u00eda correctamente el c\u00f3digo, este no se imprim\u00eda en la p\u00e1gina.\r\n\r\nLa raz\u00f3n: [Genesis Framework](http://ito.mx/genesis) filtra algunas etiquetas html que pueden ser consideradas inseguras. La soluci\u00f3n burda era insertar el enlace al final de la p\u00e1gina, por ejemplo, usando un *hook*:\r\n\r\n```language-php\r\nadd_action ('genesis_after_endwhile', 'cyberia_author_gplus');\r\nfunction cyberia_author_gplus() { \r\n  if ( is_author() ) {\r\n    $google_profile = get_the_author_meta( 'google_profile' ); ?>\r\n    <div class=\"gplus\">\r\n      <p>El perfil del autor en <a rel=\"me author\" href=\"<?php echo esc_url( $google_profile ); ?>/about?rel=author\">\r\n      <img class=\"plus\" src=\"http://ssl.gstatic.com/images/icons/gplus-16.png\" width=\"16\" height=\"16\" border=\"0\" align=\"\">\r\n      <strong>Google+</strong></a></p>\r\n    </div>\r\n<?php }\r\n}\r\n```\r\n\r\nEsta funci\u00f3n inserta el enlace que toma del perfil del autor y lo inserta al final del *loop*, y de hecho, aparece despu\u00e9s de la navegaci\u00f3n.\r\n\r\nUna soluci\u00f3n mucho m\u00e1s elegante y que adem\u00e1s va con la filosof\u00eda de Genesis es usar **filtros** para modificar el comportamiento de las funciones.\r\n\r\nExiste una funci\u00f3n llamada `genesis_formatting_allowedtags()` que devuelve un arreglo con las etiquetas que est\u00e1n permitidas, y lo que vamos a hacer es agregar la propiedad `rel=` al arreglo de la etiqueta `a`.\r\n\r\n```language-php\r\nadd_filter ('genesis_formatting_allowedtags', 'cyberia_filter_author_description', 5, 1);\r\nfunction cyberia_filter_author_description ($intro_text) {\r\n  $genesis_formatting_allowedtags['a'] = array( 'href' => array(), 'title' => array(), 'rel'=> array(), );\r\n  return $genesis_formatting_allowedtags;\r\n}   \r\n``` \r\n\r\nPrimero llamamos al filtro para que sea aplicado a `genesis_formatting_allowedtags` y el filtro lo que hace es modificar el *array*. Y esta funci\u00f3n hace que el enlace a Google Plus sea correcto.", "extend": "", "pub_date": "2013-11-21T22:07:00Z", "summary_html": "", "body_html": "<p>Les quiero hablar un poco acerca de los <em>Rich Snippets</em>, pero antes les voy a contar como usar los filtros para ampliar las funcionalidades b\u00e1sica de <a href=\"http://ito.mx/genesis\">Genesis Framework</a>.</p>\n<p>Para poder vincular mi sitio a Google Plus, necesitaba agregar a mi perfil de autor un enlace a mi perfil de Google+, sin embargo aunque escrib\u00eda correctamente el c\u00f3digo, este no se imprim\u00eda en la p\u00e1gina.</p>\n<p>La raz\u00f3n: <a href=\"http://ito.mx/genesis\">Genesis Framework</a> filtra algunas etiquetas html que pueden ser consideradas inseguras. La soluci\u00f3n burda era insertar el enlace al final de la p\u00e1gina, por ejemplo, usando un <em>hook</em>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">add_action</span> <span class=\"p\">(</span><span class=\"s1\">&#39;genesis_after_endwhile&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cyberia_author_gplus&#39;</span><span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">cyberia_author_gplus() {</span> \n  <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">is_author</span><span class=\"p\">()</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">$google_profile</span> <span class=\"o\">=</span> <span class=\"nx\">get_the_author_meta</span><span class=\"p\">(</span> <span class=\"s1\">&#39;google_profile&#39;</span> <span class=\"p\">);</span> <span class=\"o\">?&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"kr\">class</span><span class=\"o\">=</span><span class=\"s2\">&quot;gplus&quot;</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">p</span><span class=\"o\">&gt;</span><span class=\"nx\">El</span> <span class=\"nx\">perfil</span> <span class=\"nx\">del</span> <span class=\"nx\">autor</span> <span class=\"nx\">en</span> <span class=\"o\">&lt;</span><span class=\"nx\">a</span> <span class=\"nx\">rel</span><span class=\"o\">=</span><span class=\"s2\">&quot;me author&quot;</span> <span class=\"nx\">href</span><span class=\"o\">=</span><span class=\"s2\">&quot;&lt;?php echo esc_url( $google_profile ); ?&gt;/about?rel=author&quot;</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">img</span> <span class=\"kr\">class</span><span class=\"o\">=</span><span class=\"s2\">&quot;plus&quot;</span> <span class=\"nx\">src</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://ssl.gstatic.com/images/icons/gplus-16.png&quot;</span> <span class=\"nx\">width</span><span class=\"o\">=</span><span class=\"s2\">&quot;16&quot;</span> <span class=\"nx\">height</span><span class=\"o\">=</span><span class=\"s2\">&quot;16&quot;</span> <span class=\"nx\">border</span><span class=\"o\">=</span><span class=\"s2\">&quot;0&quot;</span> <span class=\"nx\">align</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">strong</span><span class=\"o\">&gt;</span><span class=\"nx\">Google</span><span class=\"o\">+&lt;</span><span class=\"err\">/strong&gt;&lt;/a&gt;&lt;/p&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n<span class=\"o\">&lt;?</span><span class=\"nx\">php</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Esta funci\u00f3n inserta el enlace que toma del perfil del autor y lo inserta al final del <em>loop</em>, y de hecho, aparece despu\u00e9s de la navegaci\u00f3n.</p>\n<p>Una soluci\u00f3n mucho m\u00e1s elegante y que adem\u00e1s va con la filosof\u00eda de Genesis es usar <strong>filtros</strong> para modificar el comportamiento de las funciones.</p>\n<p>Existe una funci\u00f3n llamada <code>genesis_formatting_allowedtags()</code> que devuelve un arreglo con las etiquetas que est\u00e1n permitidas, y lo que vamos a hacer es agregar la propiedad <code>rel=</code> al arreglo de la etiqueta <code>a</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">add_filter</span> <span class=\"p\">(</span><span class=\"s1\">&#39;genesis_formatting_allowedtags&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cyberia_filter_author_description&#39;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">cyberia_filter_author_description</span> <span class=\"p\">(</span><span class=\"nx\">$intro_text</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">$genesis_formatting_allowedtags</span><span class=\"p\">[</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">array</span><span class=\"p\">(</span> <span class=\"s1\">&#39;href&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;title&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;rel&#39;</span><span class=\"o\">=&gt;</span> <span class=\"nx\">array</span><span class=\"p\">(),</span> <span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"nx\">$genesis_formatting_allowedtags</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>   \n</pre></div>\n\n\n<p>Primero llamamos al filtro para que sea aplicado a <code>genesis_formatting_allowedtags</code> y el filtro lo que hace es modificar el <em>array</em>. Y esta funci\u00f3n hace que el enlace a Google Plus sea correcto.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "el-poder-de-los-filtros-en-genesis-framework", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 49, "fields": {"idx": "7e11bb24-b37b-4d90-817a-629c9fc75749", "creado": "2017-07-29T03:15:22.168Z", "modificado": "2017-07-29T03:15:22.168Z", "title": "Agregar migas de pan a un blog con Genesis Framework", "summary": "", "body": "Title: Agregar migas de pan a un blog con Genesis Framework\r\nDate: 2013/11/21 16:45\r\nCategory: Desarrollo \r\nTags: php, filtros, wordpress, genesiswp\r\nSlug: agregar-migas-de-pan-un-blog-con-genesis-framework\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nCrear temas con el [Framework Genesis](http://ito.mx/genesis) es realmente f\u00e1cil. Es como jugar con bloques de lego y solo tenemos que agregar los bloques que necesitamos.\r\n\r\nPor ejemplo, si queremos agregar migas de pan a nuestras p\u00e1ginas, algo que favorece el enlazamiento interno, solo tenemos que agregar el siguiente c\u00f3digo al archivo `functions.php`:\r\n\r\n```language-php\r\n/**\r\n * Corrije la migajitas de pan.\r\n *\r\n * @author Javier Sanchez Toledano\r\n * @link http://namespace.mx\r\n *\r\n * @param array $args Los argumentos para las migajitas\r\n * @return array Las migajitas corregidas\r\n */\r\nadd_filter( 'genesis_breadcrumb_args', 'cyberia_breadcrumb_args' );\r\nfunction cyberia_breadcrumb_args( $args ) {\r\n    $args['home']               = 'Portada';\r\n    $args['sep']                = ' &#8594; ';\r\n    $args['labels']['prefix']   = 'Aqui est\u00e1s: ';\r\n    $args['labels']['author']   = 'Archivo de ';\r\n    $args['labels']['category'] = 'Archivo de '; // A partir de Genesis 1.6\r\n    $args['labels']['tag']      = 'Archivo de ';\r\n    $args['labels']['date']     = 'Archivo de ';\r\n    $args['labels']['search']   = 'Buscando ';\r\n    $args['labels']['tax']      = 'Archivo de ';\r\n    $args['labels']['404']      = 'No encontrado: '; // A partir de Genesis 1.5\r\n    return $args;\r\n}    \r\n```\r\n\r\n!!! notice \"Necesitas Genesis Framework\"\r\n    Para poder ejecutar este c\u00f3digo, necesitas contar con [Genesis Framework](http://ito.mx/genesis).", "extend": "", "pub_date": "2013-11-21T22:45:00Z", "summary_html": "", "body_html": "<p>Crear temas con el <a href=\"http://ito.mx/genesis\">Framework Genesis</a> es realmente f\u00e1cil. Es como jugar con bloques de lego y solo tenemos que agregar los bloques que necesitamos.</p>\n<p>Por ejemplo, si queremos agregar migas de pan a nuestras p\u00e1ginas, algo que favorece el enlazamiento interno, solo tenemos que agregar el siguiente c\u00f3digo al archivo <code>functions.php</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/**</span>\n<span class=\"cm\"> * Corrije la migajitas de pan.</span>\n<span class=\"cm\"> *</span>\n<span class=\"cm\"> * @author Javier Sanchez Toledano</span>\n<span class=\"cm\"> * @link http://namespace.mx</span>\n<span class=\"cm\"> *</span>\n<span class=\"cm\"> * @param array $args Los argumentos para las migajitas</span>\n<span class=\"cm\"> * @return array Las migajitas corregidas</span>\n<span class=\"cm\"> */</span>\n<span class=\"nx\">add_filter</span><span class=\"p\">(</span> <span class=\"s1\">&#39;genesis_breadcrumb_args&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cyberia_breadcrumb_args&#39;</span> <span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">cyberia_breadcrumb_args</span><span class=\"p\">(</span> <span class=\"nx\">$args</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">$args</span><span class=\"p\">[</span><span class=\"s1\">&#39;home&#39;</span><span class=\"p\">]</span>               <span class=\"o\">=</span> <span class=\"s1\">&#39;Portada&#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">$args</span><span class=\"p\">[</span><span class=\"s1\">&#39;sep&#39;</span><span class=\"p\">]</span>                <span class=\"o\">=</span> <span class=\"s1\">&#39; &amp;#8594; &#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">$args</span><span class=\"p\">[</span><span class=\"s1\">&#39;labels&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;prefix&#39;</span><span class=\"p\">]</span>   <span class=\"o\">=</span> <span class=\"s1\">&#39;Aqui est\u00e1s: &#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">$args</span><span class=\"p\">[</span><span class=\"s1\">&#39;labels&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;author&#39;</span><span class=\"p\">]</span>   <span class=\"o\">=</span> <span class=\"s1\">&#39;Archivo de &#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">$args</span><span class=\"p\">[</span><span class=\"s1\">&#39;labels&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;category&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Archivo de &#39;</span><span class=\"p\">;</span> <span class=\"c1\">// A partir de Genesis 1.6</span>\n    <span class=\"nx\">$args</span><span class=\"p\">[</span><span class=\"s1\">&#39;labels&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;tag&#39;</span><span class=\"p\">]</span>      <span class=\"o\">=</span> <span class=\"s1\">&#39;Archivo de &#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">$args</span><span class=\"p\">[</span><span class=\"s1\">&#39;labels&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;date&#39;</span><span class=\"p\">]</span>     <span class=\"o\">=</span> <span class=\"s1\">&#39;Archivo de &#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">$args</span><span class=\"p\">[</span><span class=\"s1\">&#39;labels&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;search&#39;</span><span class=\"p\">]</span>   <span class=\"o\">=</span> <span class=\"s1\">&#39;Buscando &#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">$args</span><span class=\"p\">[</span><span class=\"s1\">&#39;labels&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;tax&#39;</span><span class=\"p\">]</span>      <span class=\"o\">=</span> <span class=\"s1\">&#39;Archivo de &#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">$args</span><span class=\"p\">[</span><span class=\"s1\">&#39;labels&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;404&#39;</span><span class=\"p\">]</span>      <span class=\"o\">=</span> <span class=\"s1\">&#39;No encontrado: &#39;</span><span class=\"p\">;</span> <span class=\"c1\">// A partir de Genesis 1.5</span>\n    <span class=\"k\">return</span> <span class=\"nx\">$args</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>    \n</pre></div>\n\n\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Necesitas Genesis Framework</p>\n<p>Para poder ejecutar este c\u00f3digo, necesitas contar con <a href=\"http://ito.mx/genesis\">Genesis Framework</a>.</p>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "agregar-migas-de-pan-un-blog-con-genesis-framework", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 50, "fields": {"idx": "20137bab-db2e-4665-b69f-8c3dcec52300", "creado": "2017-07-29T03:22:39.759Z", "modificado": "2017-07-29T03:22:39.759Z", "title": "Configurar suPHP y userdir en Ubuntu", "summary": "", "body": "Title: Configurar suPHP y userdir en Ubuntu\r\nDate: 2013/11/21 19:02\r\nCategory: Desarrollo \r\nTags: admin, php, apache \r\nSlug: configurar-suphp-y-userdir-en-ubuntu\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nConfigurando mi laptop con Ubuntu 12.04, toc\u00f3 el turno de instalar una copia de WordPress para trabajar de manera local, as\u00ed que proced\u00ed a instalar Apache2, PHP, phpMyAdmin y MySQL. Todo iba bien hasta que para evitar modificar permisos en el sitio por default, decid\u00ed trabajar desde mi directorio, ya saben, con la ruta `http://localhost/~javier`.\r\n\r\nApache2 funciona con su propio usuario y grupo especial, llamado `www-data`, que por su bajo ID tiene al mismo tiempo privilegios y permisos de ejecuci\u00f3n especiales. Por otro lado, `phpmyadmin` usa por defecto `mod_php` para ejecutar al int\u00e9rprete.\r\n\r\nUsar `mod_php` le da mucha velocidad a la ejecuci\u00f3n de *scripts* o guiones PHP, a cambio obliga a Apache2 a cargar al int\u00e9rprete en memoria para cada hilo de ejecuci\u00f3n del daemon `htttd` y restringe su ejecuci\u00f3n al usuario `www-data`.\r\n\r\nEsto se hace notar de inmediato, en la instalaci\u00f3n de WordPress ya que al intentar crear el archivo `wp-config.php`, el int\u00e9rprete carece de los permisos necesarios y la instalaci\u00f3n se detiene. Incluso creando a mano el archivo de configuraci\u00f3n, nuestros problemas seguir\u00edan ya que no tendr\u00edamos cache o la posibilidad de instalar temas, extensiones o *plugins* o subir archivos multimedia.\r\n\r\nLa soluci\u00f3n por la que me decant\u00e9 era usar los directorios personales y PHP con permisos de usuario. La p\u00e9rdida de velocidad es insignificante para mi, que uso una copia local de Cyberia.MX en mi laptop, as\u00ed que no me import\u00f3.\r\n\r\n### C\u00f3mo instalar userdir para Apache2 en Ubuntu\r\n\r\nEsta parte es muy sencilla, solo tenemos que escribir los siguientes comandos en una consola:\r\n\r\n```language-bash\r\na2enmod userdir\r\nsudo service apache2 restart\r\n```\r\n\r\nEl comando `a2emod` habilita cualquiera de los m\u00f3dulos que se encuentran en este directorio `/etc/apache2/mods-available`, creando un enlace simb\u00f3lico a la carpeta `/etc/apache2/mods-enabled`. El comando que hace exactamente lo contrario es `a2dismod`.\r\n\r\nEl segundo comando reinicia el *daemon* `apache2`, deteni\u00e9ndolo y arranc\u00e1ndolo de nuevo, lo que hace que se cargue toda la configuraci\u00f3n.\r\n\r\nPero para que pueda ejecutar guiones de PHP, `userdir` necesita una configuraci\u00f3n especial. Necesitamos habilitar el motor del int\u00e9rprete, este es mi archivo de configuraci\u00f3n de `userdir`: `/etc/apache2/mods-available/userdir.conf`.\r\n\r\n```language-apache\r\n <IfModule mod_userdir.c>\r\n  UserDir public_html\r\n  UserDir disabled root\r\n\r\n  <Directory /home/*/public_html>\r\n    AllowOverride FileInfo AuthConfig Limit Indexes\r\n    Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec\r\n    <Limit GET POST OPTIONS>\r\n      Order allow,deny\r\n      Allow from all\r\n    </Limit>\r\n    <LimitExcept GET POST OPTIONS>\r\n      Order deny,allow\r\n      Deny from all\r\n    </LimitExcept>\r\n  </Directory>\r\n</IfModule>\r\n```\r\n\r\n### C\u00f3mo instalar suPHP en Ubuntu\r\n\r\nEl siguiente paso es instalar suPHP, cuya funci\u00f3n es ejecutar el int\u00e9rprete en el espacio de un usuario, con los permisos y restricciones del propio usuario, es decir, ejecuta PHP como el usuario.  As\u00ed es como funcionan los principales proveedores de hosting, como HostGator y GeekStorage.\r\n\r\nPara poder usar este m\u00f3dulo, necesitamos instalar el paquete `libapache2-mod-suphp`, y configurarlo adecuadamente. A continuaci\u00f3n ver\u00e1s mi archivo de configuraci\u00f3n ubicado en `/etc/apache2/mods-available/suphp.conf`:\r\n\r\n```language-apache\r\n<IfModule mod_suphp.c>\r\n    AddType application/x-httpd-suphp .php .php3 .php4 .php5 .phtml\r\n    suPHP_AddHandler application/x-httpd-suphp\r\n\r\n    <Directory />\r\n        suPHP_Engine on\r\n    </Directory>\r\n\r\n    # By default, disable suPHP for debian packaged web applications as files\r\n    # are owned by root and cannot be executed by suPHP because of min_uid.\r\n    #<Directory /usr/share>\r\n    #    suPHP_Engine off\r\n    #</Directory>\r\n\r\n# # Use a specific php config file (a dir which contains a php.ini file)\r\n#    suPHP_ConfigPath /etc/php4/cgi/suphp/\r\n# # Tells mod_suphp NOT to handle requests with the type <mime-type>.\r\n#    suPHP_RemoveHandler <mime-type>\r\n</IfModule>\r\n```\r\n\r\nObserva que las l\u00edneas 11, 12 y 13 est\u00e1n comentadas y esto es importante para poder ejecutar phpMyAdmin, como veremos m\u00e1s adelante.\r\n\r\nTambi\u00e9n es necesario editar el archivo `/etc/suphp/suphp.conf`, y tomar en cuenta las siguientes l\u00edneas:\r\n\r\n```language-apache\r\n;Path all scripts have to be in\r\ndocroot=/var/www:${HOME}/public_html:/usr/share/phpmyadmin\r\n\r\n;Path to chroot() to before executing script\r\n;chroot=/mychroot\r\n\r\n; Security options\r\nallow_file_group_writeable=true\r\nallow_file_others_writeable=true\r\nallow_directory_group_writeable=true\r\nallow_directory_others_writeable=true\r\n\r\n;Check wheter script is within DOCUMENT_ROOT\r\ncheck_vhost_docroot=false\r\n```\r\n\r\nPara permitirle a PHP la posibilidad de crear archivos y directorios, para evitar que busque la ra\u00edz de un virtual host y para agregar al directorio de phpMyAdmin a la lista de rutas permitidas.\r\n\r\nVerifica que tu archivo contenga estas l\u00edneas.\r\n\r\n### Configurar phpMyAdmin en Ubuntu con suPHP\r\n\r\nAhora toca el turno de configurar a phpMyAdmin, que supongo que ya instalaste y configuraste.\r\n\r\nLo importante en este archivo `/etc/apaches/conf.d/phpmyadmin.conf` es agregar al inicio del archivo, las siguientes dos l\u00edneas:\r\n\r\n```language-apache\r\nServerAdmin webmaster@localhost\r\nDocumentRoot /usr/share/phpmyadmin\r\n```\r\n\r\nCon esto nos aseguramos que sea identificado por `suPHP` como uno de los directorio de ejecuci\u00f3n definidos.\r\n\r\nVolvemos a reiniciar el servidor y estamos listos para usar `suPHP` y `userdir` en Ubuntu.", "extend": "", "pub_date": "2013-11-22T01:02:00Z", "summary_html": "", "body_html": "<p>Configurando mi laptop con Ubuntu 12.04, toc\u00f3 el turno de instalar una copia de WordPress para trabajar de manera local, as\u00ed que proced\u00ed a instalar Apache2, PHP, phpMyAdmin y MySQL. Todo iba bien hasta que para evitar modificar permisos en el sitio por default, decid\u00ed trabajar desde mi directorio, ya saben, con la ruta <code>http://localhost/~javier</code>.</p>\n<p>Apache2 funciona con su propio usuario y grupo especial, llamado <code>www-data</code>, que por su bajo ID tiene al mismo tiempo privilegios y permisos de ejecuci\u00f3n especiales. Por otro lado, <code>phpmyadmin</code> usa por defecto <code>mod_php</code> para ejecutar al int\u00e9rprete.</p>\n<p>Usar <code>mod_php</code> le da mucha velocidad a la ejecuci\u00f3n de <em>scripts</em> o guiones PHP, a cambio obliga a Apache2 a cargar al int\u00e9rprete en memoria para cada hilo de ejecuci\u00f3n del daemon <code>htttd</code> y restringe su ejecuci\u00f3n al usuario <code>www-data</code>.</p>\n<p>Esto se hace notar de inmediato, en la instalaci\u00f3n de WordPress ya que al intentar crear el archivo <code>wp-config.php</code>, el int\u00e9rprete carece de los permisos necesarios y la instalaci\u00f3n se detiene. Incluso creando a mano el archivo de configuraci\u00f3n, nuestros problemas seguir\u00edan ya que no tendr\u00edamos cache o la posibilidad de instalar temas, extensiones o <em>plugins</em> o subir archivos multimedia.</p>\n<p>La soluci\u00f3n por la que me decant\u00e9 era usar los directorios personales y PHP con permisos de usuario. La p\u00e9rdida de velocidad es insignificante para mi, que uso una copia local de Cyberia.MX en mi laptop, as\u00ed que no me import\u00f3.</p>\n<h3 id=\"como-instalar-userdir-para-apache2-en-ubuntu\">C\u00f3mo instalar userdir para Apache2 en Ubuntu</h3>\n<p>Esta parte es muy sencilla, solo tenemos que escribir los siguientes comandos en una consola:</p>\n<div class=\"codehilite\"><pre><span></span>a2enmod userdir\nsudo service apache2 restart\n</pre></div>\n\n\n<p>El comando <code>a2emod</code> habilita cualquiera de los m\u00f3dulos que se encuentran en este directorio <code>/etc/apache2/mods-available</code>, creando un enlace simb\u00f3lico a la carpeta <code>/etc/apache2/mods-enabled</code>. El comando que hace exactamente lo contrario es <code>a2dismod</code>.</p>\n<p>El segundo comando reinicia el <em>daemon</em> <code>apache2</code>, deteni\u00e9ndolo y arranc\u00e1ndolo de nuevo, lo que hace que se cargue toda la configuraci\u00f3n.</p>\n<p>Pero para que pueda ejecutar guiones de PHP, <code>userdir</code> necesita una configuraci\u00f3n especial. Necesitamos habilitar el motor del int\u00e9rprete, este es mi archivo de configuraci\u00f3n de <code>userdir</code>: <code>/etc/apache2/mods-available/userdir.conf</code>.</p>\n<div class=\"codehilite\"><pre><span></span> <span class=\"nt\">&lt;IfModule</span> <span class=\"err\">mod_userdir.c</span><span class=\"nt\">&gt;</span>\n  UserDir public_html\n  UserDir disabled root\n\n  <span class=\"nt\">&lt;Directory</span> <span class=\"err\">/home/*/public_html</span><span class=\"nt\">&gt;</span>\n    AllowOverride FileInfo AuthConfig Limit Indexes\n    Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec\n    <span class=\"nt\">&lt;Limit</span> <span class=\"err\">GET</span> <span class=\"err\">POST</span> <span class=\"err\">OPTIONS</span><span class=\"nt\">&gt;</span>\n      Order allow,deny\n      Allow from all\n    <span class=\"nt\">&lt;/Limit&gt;</span>\n    <span class=\"nt\">&lt;LimitExcept</span> <span class=\"err\">GET</span> <span class=\"err\">POST</span> <span class=\"err\">OPTIONS</span><span class=\"nt\">&gt;</span>\n      Order deny,allow\n      Deny from all\n    <span class=\"nt\">&lt;/LimitExcept&gt;</span>\n  <span class=\"nt\">&lt;/Directory&gt;</span>\n<span class=\"nt\">&lt;/IfModule&gt;</span>\n</pre></div>\n\n\n<h3 id=\"como-instalar-suphp-en-ubuntu\">C\u00f3mo instalar suPHP en Ubuntu</h3>\n<p>El siguiente paso es instalar suPHP, cuya funci\u00f3n es ejecutar el int\u00e9rprete en el espacio de un usuario, con los permisos y restricciones del propio usuario, es decir, ejecuta PHP como el usuario.  As\u00ed es como funcionan los principales proveedores de hosting, como HostGator y GeekStorage.</p>\n<p>Para poder usar este m\u00f3dulo, necesitamos instalar el paquete <code>libapache2-mod-suphp</code>, y configurarlo adecuadamente. A continuaci\u00f3n ver\u00e1s mi archivo de configuraci\u00f3n ubicado en <code>/etc/apache2/mods-available/suphp.conf</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;IfModule</span> <span class=\"err\">mod_suphp.c</span><span class=\"nt\">&gt;</span>\n    AddType application/x-httpd-suphp .php .php3 .php4 .php5 .phtml\n    suPHP_AddHandler application/x-httpd-suphp\n\n    <span class=\"nt\">&lt;Directory</span> <span class=\"nt\">/&gt;</span>\n        suPHP_Engine on\n    <span class=\"nt\">&lt;/Directory&gt;</span>\n\n    # By default, disable suPHP for debian packaged web applications as files\n    # are owned by root and cannot be executed by suPHP because of min_uid.\n    #<span class=\"nt\">&lt;Directory</span> <span class=\"err\">/usr/share</span><span class=\"nt\">&gt;</span>\n    #    suPHP_Engine off\n    #<span class=\"nt\">&lt;/Directory&gt;</span>\n\n# # Use a specific php config file (a dir which contains a php.ini file)\n#    suPHP_ConfigPath /etc/php4/cgi/suphp/\n# # Tells mod_suphp NOT to handle requests with the type <span class=\"nt\">&lt;mime-type&gt;</span>.\n#    suPHP_RemoveHandler <span class=\"nt\">&lt;mime-type&gt;</span>\n<span class=\"nt\">&lt;/IfModule&gt;</span>\n</pre></div>\n\n\n<p>Observa que las l\u00edneas 11, 12 y 13 est\u00e1n comentadas y esto es importante para poder ejecutar phpMyAdmin, como veremos m\u00e1s adelante.</p>\n<p>Tambi\u00e9n es necesario editar el archivo <code>/etc/suphp/suphp.conf</code>, y tomar en cuenta las siguientes l\u00edneas:</p>\n<div class=\"codehilite\"><pre><span></span>;Path all scripts have to be in\ndocroot=/var/www:<span class=\"cp\">${</span><span class=\"n\">HOME</span><span class=\"cp\">}</span>/public_html:/usr/share/phpmyadmin\n\n;Path to chroot() to before executing script\n;chroot=/mychroot\n\n; Security options\nallow_file_group_writeable=true\nallow_file_others_writeable=true\nallow_directory_group_writeable=true\nallow_directory_others_writeable=true\n\n;Check wheter script is within DOCUMENT_ROOT\ncheck_vhost_docroot=false\n</pre></div>\n\n\n<p>Para permitirle a PHP la posibilidad de crear archivos y directorios, para evitar que busque la ra\u00edz de un virtual host y para agregar al directorio de phpMyAdmin a la lista de rutas permitidas.</p>\n<p>Verifica que tu archivo contenga estas l\u00edneas.</p>\n<h3 id=\"configurar-phpmyadmin-en-ubuntu-con-suphp\">Configurar phpMyAdmin en Ubuntu con suPHP</h3>\n<p>Ahora toca el turno de configurar a phpMyAdmin, que supongo que ya instalaste y configuraste.</p>\n<p>Lo importante en este archivo <code>/etc/apaches/conf.d/phpmyadmin.conf</code> es agregar al inicio del archivo, las siguientes dos l\u00edneas:</p>\n<div class=\"codehilite\"><pre><span></span>ServerAdmin webmaster@localhost\nDocumentRoot /usr/share/phpmyadmin\n</pre></div>\n\n\n<p>Con esto nos aseguramos que sea identificado por <code>suPHP</code> como uno de los directorio de ejecuci\u00f3n definidos.</p>\n<p>Volvemos a reiniciar el servidor y estamos listos para usar <code>suPHP</code> y <code>userdir</code> en Ubuntu.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "configurar-suphp-y-userdir-en-ubuntu", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 51, "fields": {"idx": "b4f1191e-f6ab-4600-9a29-25f6325bf742", "creado": "2017-07-29T03:23:29.035Z", "modificado": "2017-07-29T03:23:29.035Z", "title": "C\u00f3mo usar las carpetas compartidas en VirtualBox", "summary": "", "body": "Title: C\u00f3mo usar las carpetas compartidas en VirtualBox\r\nDate: 2013/11/22 15:46\r\nCategory: Desarrollo \r\nTags: tools, virtualbox \r\nSlug: como-usar-las-carpetas-compartidas-en-virtualbox\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nInstalaste tu linux usando VirtualBox, instalaste las \u00abGuest Additions\u00bb, \r\nconfiguraste las carpetas compartidas, pero \u00a1No las puedes usar! Asi me pasaba \r\na mi. Instal\u00e9 openSUSE en MS Windows 7, instal\u00e9 las herramientas de huesped \r\ny configur\u00e9 unas carpetas compartidas, pero no pod\u00eda montarlas.\r\n\r\nAqu\u00ed est\u00e1 la soluci\u00f3n, pero parto de la premisa que las adiciones est\u00e1n \r\ninstaladas y que ya has definido la o las carpetas compartidas que vas \r\na utilizar. Puedes verificar que tu configuraci\u00f3n funciona escribiendo la orden \r\nde montaje en tu consola.\r\n\r\n    sudo mount -o fmask=0133,dmask=0022, -t vboxsf ssh win7\r\n\r\nEn el ejemplo, yo llam\u00e9 `ssh` a mi carpeta compartida y `win7` al directorio en \r\nlinux que va a contenerla. Los par\u00e1metros que paso indican los permisos que \r\ntendr\u00e1n los archivos, ya que al ser una partici\u00f3n de Windows, todos los \r\narchivos quedan por default como ejecutables, es necesario este ajuste: `0133` \r\nen los archivos, le da a estos permisos `644` y en los directorios `0022`, se \r\nconvierte en permisos `0755`. Algo ideal para trabajar con archivos sin \r\npeligros.\r\n\r\nSi funciona, entonces podemos agregar los datos al arranque de openSUSE, ya \r\npara esto debemos crear un archivo en `/etc/init.d/` al que llam\u00e9 `rclocal`. \r\nSeguramente ver\u00e1s en algunos tutoriales que lo llaman `rc.local`, pero openSUSE \r\nno permite esta nomeclatura y con `rclocal` no tendr\u00e1s problemas.\r\n\r\nEste es el contenido de mi archivo:\r\n\r\n    ### BEGIN INIT INFO\r\n    # Provides: rc.local\r\n    # Required-Start: $network $syslog\r\n    # Required-Stop: $network $syslog\r\n    # Default-Start: 3 5\r\n    # Default-Stop: 0 1 2 6\r\n    # Description: Archivo de inicio personalizado para VBBienForjada\r\n    ### END INIT INFO\r\n\r\n    mount -o fmask=0133,dmask=0022,uid=1000 -t vboxsf ssh /home/javier/win7\r\n\r\nLo que sigue es darle permisos de ejecuci\u00f3n con \u00abchmod +x rclocal\u00bb y agregarlo \r\nal sistema de arranque con la orden\r\n\r\n    chkconfig --add rclocal\r\n\r\nDe este modo, al reiniciar, las carpetas compartidas en VirtualBox estar\u00e1n habilitadas.", "extend": "", "pub_date": "2013-11-22T21:46:00Z", "summary_html": "", "body_html": "<p>Instalaste tu linux usando VirtualBox, instalaste las \u00abGuest Additions\u00bb, \nconfiguraste las carpetas compartidas, pero \u00a1No las puedes usar! Asi me pasaba \na mi. Instal\u00e9 openSUSE en MS Windows 7, instal\u00e9 las herramientas de huesped \ny configur\u00e9 unas carpetas compartidas, pero no pod\u00eda montarlas.</p>\n<p>Aqu\u00ed est\u00e1 la soluci\u00f3n, pero parto de la premisa que las adiciones est\u00e1n \ninstaladas y que ya has definido la o las carpetas compartidas que vas \na utilizar. Puedes verificar que tu configuraci\u00f3n funciona escribiendo la orden \nde montaje en tu consola.</p>\n<div class=\"codehilite\"><pre><span></span>sudo mount -o fmask=0133,dmask=0022, -t vboxsf ssh win7\n</pre></div>\n\n\n<p>En el ejemplo, yo llam\u00e9 <code>ssh</code> a mi carpeta compartida y <code>win7</code> al directorio en \nlinux que va a contenerla. Los par\u00e1metros que paso indican los permisos que \ntendr\u00e1n los archivos, ya que al ser una partici\u00f3n de Windows, todos los \narchivos quedan por default como ejecutables, es necesario este ajuste: <code>0133</code> \nen los archivos, le da a estos permisos <code>644</code> y en los directorios <code>0022</code>, se \nconvierte en permisos <code>0755</code>. Algo ideal para trabajar con archivos sin \npeligros.</p>\n<p>Si funciona, entonces podemos agregar los datos al arranque de openSUSE, ya \npara esto debemos crear un archivo en <code>/etc/init.d/</code> al que llam\u00e9 <code>rclocal</code>. \nSeguramente ver\u00e1s en algunos tutoriales que lo llaman <code>rc.local</code>, pero openSUSE \nno permite esta nomeclatura y con <code>rclocal</code> no tendr\u00e1s problemas.</p>\n<p>Este es el contenido de mi archivo:</p>\n<div class=\"codehilite\"><pre><span></span>### BEGIN INIT INFO\n# Provides: rc.local\n# Required-Start: $network $syslog\n# Required-Stop: $network $syslog\n# Default-Start: 3 5\n# Default-Stop: 0 1 2 6\n# Description: Archivo de inicio personalizado para VBBienForjada\n### END INIT INFO\n\nmount -o fmask=0133,dmask=0022,uid=1000 -t vboxsf ssh /home/javier/win7\n</pre></div>\n\n\n<p>Lo que sigue es darle permisos de ejecuci\u00f3n con \u00abchmod +x rclocal\u00bb y agregarlo \nal sistema de arranque con la orden</p>\n<div class=\"codehilite\"><pre><span></span>chkconfig --add rclocal\n</pre></div>\n\n\n<p>De este modo, al reiniciar, las carpetas compartidas en VirtualBox estar\u00e1n habilitadas.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-usar-las-carpetas-compartidas-en-virtualbox", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 52, "fields": {"idx": "6026ee4c-1629-44c1-ba05-ea2337b92d50", "creado": "2017-07-29T03:25:32.257Z", "modificado": "2017-07-29T03:25:32.257Z", "title": "Pelican, un generador de blog est\u00e1ticos", "summary": "", "body": "Title: Pelican, un generador de blog est\u00e1ticos  \r\nDate: 2014/02/15 23:50  \r\nCategory: Desarrollo  \r\nTags: blogging, python, pelican\r\nSlug: pelican-generador-blog-staticos  \r\nAuthor: Javier Sanchez Toledano  \r\nSummary: Pelican es un generador de blogs est\u00e1ticos que permite publicar contenidos de una forma muy econ\u00f3mica.\r\n\r\nEsta historia comienza hace como 8 meses. Un d\u00eda, de la nada, me lleg\u00f3 un dinero a mi cuenta de PayPal enviado por cierta empresa de dominios y hosting (ya saben cual, la del mis\u00f3gino y asesino de animales en extensi\u00f3n). No se porque mandaron el dinero, y tampoco pregunt\u00e9 o hice el intento de devolverlos. Y ah\u00ed empez\u00f3 mi _karma_.\r\n\r\nCon ese dinero pagu\u00e9 todo un a\u00f1o de una VPS super econ\u00f3mica pero llena de caracter\u00edsticas. Y andaba muy bien, la verdad. Siempre en l\u00edna y bastante r\u00e1pida, considerando que era un servidor de mediana calidad.\r\n\r\nPero un d\u00eda desapareci\u00f3. As\u00ed. De la nada. Y se llev\u00f3 mis archivos y mis configuraciones y _mi dinero_. Pero la configuraci\u00f3n que hab\u00eda logrado era muy buena. Y decid\u00ed que era lo que quer\u00eda. Y as\u00ed empez\u00f3 un _periplo_ buscando una VPS de altas caracter\u00edsticas y bajo precio que nunca pude hallar.\r\n\r\nAs\u00ed que decid\u00ed regresar a los or\u00edgenes y usar contenido est\u00e1tico.\r\n\r\nAqu\u00ed es donde encontr\u00e9 a [Pelican](http://j.mp/ns-pelican). Un generador de sitios web basado en Python. Este programa, me permiti\u00f3 aprovechar toda la experiencia que ya ten\u00eda en el desarrollo del blog de **namespace.mx** ya que usa Python, Jinja2 como motor de las plantillas y Markdown para crear el contenido.\r\n\r\nSimplemente jal\u00e9 el contenido del blog en PostgreSQL y el tema que estaba desarrollando reibi\u00f3 unas poqu\u00edsimas modificaciones y todo quedo listo en un d\u00eda.\r\n\r\nEste generador de blogs permite crear p\u00e1ginas web que pueden ser alojadas a muy bajo costo en los grandes servidores de Amazon o Rackspace, o bien en GitHub o en una cuenta de Dropbox completamente gratis.\r\n\r\nEl desarrollo es completamente local y el resultado es que se sube a la nube. Podemos tardarnos un poco en generar los archivos, pero una vez que estan en el servidor, no consumen mas que el espacio y la transferencia. Y todo es muy r\u00e1pido y eficiente.\r\n\r\nEn art\u00edculos posteriores veremos como configurar el blog, como crear un tema y como usar Amazon S3 para subir nuestro blog por unos cuantos centavos de d\u00f3lar al mes.", "extend": "", "pub_date": "2014-02-16T05:50:00Z", "summary_html": "", "body_html": "<p>Esta historia comienza hace como 8 meses. Un d\u00eda, de la nada, me lleg\u00f3 un dinero a mi cuenta de PayPal enviado por cierta empresa de dominios y hosting (ya saben cual, la del mis\u00f3gino y asesino de animales en extensi\u00f3n). No se porque mandaron el dinero, y tampoco pregunt\u00e9 o hice el intento de devolverlos. Y ah\u00ed empez\u00f3 mi <em>karma</em>.</p>\n<p>Con ese dinero pagu\u00e9 todo un a\u00f1o de una VPS super econ\u00f3mica pero llena de caracter\u00edsticas. Y andaba muy bien, la verdad. Siempre en l\u00edna y bastante r\u00e1pida, considerando que era un servidor de mediana calidad.</p>\n<p>Pero un d\u00eda desapareci\u00f3. As\u00ed. De la nada. Y se llev\u00f3 mis archivos y mis configuraciones y <em>mi dinero</em>. Pero la configuraci\u00f3n que hab\u00eda logrado era muy buena. Y decid\u00ed que era lo que quer\u00eda. Y as\u00ed empez\u00f3 un <em>periplo</em> buscando una VPS de altas caracter\u00edsticas y bajo precio que nunca pude hallar.</p>\n<p>As\u00ed que decid\u00ed regresar a los or\u00edgenes y usar contenido est\u00e1tico.</p>\n<p>Aqu\u00ed es donde encontr\u00e9 a <a href=\"http://j.mp/ns-pelican\">Pelican</a>. Un generador de sitios web basado en Python. Este programa, me permiti\u00f3 aprovechar toda la experiencia que ya ten\u00eda en el desarrollo del blog de <strong>namespace.mx</strong> ya que usa Python, Jinja2 como motor de las plantillas y Markdown para crear el contenido.</p>\n<p>Simplemente jal\u00e9 el contenido del blog en PostgreSQL y el tema que estaba desarrollando reibi\u00f3 unas poqu\u00edsimas modificaciones y todo quedo listo en un d\u00eda.</p>\n<p>Este generador de blogs permite crear p\u00e1ginas web que pueden ser alojadas a muy bajo costo en los grandes servidores de Amazon o Rackspace, o bien en GitHub o en una cuenta de Dropbox completamente gratis.</p>\n<p>El desarrollo es completamente local y el resultado es que se sube a la nube. Podemos tardarnos un poco en generar los archivos, pero una vez que estan en el servidor, no consumen mas que el espacio y la transferencia. Y todo es muy r\u00e1pido y eficiente.</p>\n<p>En art\u00edculos posteriores veremos como configurar el blog, como crear un tema y como usar Amazon S3 para subir nuestro blog por unos cuantos centavos de d\u00f3lar al mes.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "pelican-un-generador-de-blog-estaticos", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 53, "fields": {"idx": "8e3bc9cc-502c-40af-b046-263888b4a11b", "creado": "2017-07-29T03:26:28.102Z", "modificado": "2017-07-29T03:26:28.102Z", "title": "Crear plantillas modulares con Jinja2", "summary": "Como crear plantillas modulares con Jinja2", "body": "Title: Crear plantillas modulares con Jinja2  \r\nDate: 2014/02/16 12:17  \r\nCategory: Desarrollo  \r\nTags: jinja2, html5, python\r\nSlug: jinja2-modular-templates  \r\nAuthor: Javier Sanchez Toledano  \r\nSummary: Como crear plantillas modulares con Jinja2  \r\n\r\n[Jinja2][jinja] es un motor de renderizado de plantillas desarrollado en Python dise\u00f1ado para ser flexible, r\u00e1pido y seguro. Si conoces como usar las plantillas de [Django][django] entonces ya conoces lo suficiente para empezar a utilizar Jinja2. Este sistema de plantillas es tambi\u00e9n utilizado por [Pelican][pelican], el generador de contenido est\u00e1tico que utiliza este blog.\r\n\r\n\r\n### Funcionamiento b\u00e1sico de Jinja2 con Pelican\r\n\r\nLa forma m\u00e1s simple de instalar **Jinja2** es usando el programa `pip`:\r\n\r\n    :::bash\r\n    (pelican)namespace:docs javier$ pip install jinja2\r\n\r\nLa forma m\u00e1s b\u00e1sica para usar Jinja2 es usando la clase `jinja2.Template`.\r\n\r\n    :::Python\r\n    In [1]: from jinja2 import Template\r\n    In [2]: template = Template('Hola {{ nombre }}!')\r\n    In [3]: template.render(nombre='Javier Sanchez')\r\n    Out[3]: u'Hola Javier Sanchez!'\r\n\r\nLas etiquetas de **Jinja2** se identifican con corchetes. Los corchetes dobles identifican variables `{{ variable }}`. Estas variables se encuentran en el *contexto* con el que se llama a la plantilla. Las expresiones se colocan entre corchetes y signos de porcentaje: `{% expresion %}`.\r\n\r\nVamos a ver un ejemplo m\u00ednimo de una plantilla o *template* y poco a poco iremos ampliando este ejemplo hasta terminar con la plantilla que usa este blog.\r\n\r\n    :::jinja\r\n    <!DOCTYPE html>\r\n    <html lang=\"es_MX\">\r\n      <head>\r\n        <title>namespace.mx - Hablamos de Desarrollo Web</title>\r\n      </head>\r\n      <body>\r\n        <ul id=\"navigation\">\r\n          {% for opcion in menu %}\r\n            <li><a href=\"{{ opcion.url }}\">{{ opcion.titulo }}</a></li>\r\n          {% endfor %}\r\n        </ul>\r\n\r\n        <h1>namespace</h1>\r\n        {{ una_variable }}\r\n      </body>\r\n    </html>\r\n\r\n**Pelican** pasa las variables a las plantillas para poder usarlas en la plantilla. Las variables en may\u00fasculas del archivo de configuraci\u00f3n `pelicanconf.py` adem\u00e1s de la lista de art\u00edculos, categor\u00edas y etiquetas. En el contexto de un art\u00edculo individual, tambi\u00e9n se incluye la variable art\u00edculo con las propiedades del encabezado del art\u00edculo y el contenido.\r\n\r\nPodemos acceder a las propiedades de las variables usando la sintaxis de punto (`variable.propiedad`) o la sintaxis llamada *subscript* (`[]`). Por ejemplo los siguientes ejemplos hacen lo mismo.\r\n\r\n    :::jinja\r\n    {{ foo.bar }}\r\n    {{ foo['bar']}}\r\n\r\n!!! alert-info \"Implementaci\u00f3n\"\r\n    Aunque de hecho, ambas opciones hacen lo mismo, en la parte de Python el funcionamiento es ligeramente diferente. En el caso de  `foo.bar`:\r\n\r\n    * si no lo hay, verifica si hay un *atributo* `bar` en `foo`,\r\n    * verifica si existe un elemento `'bar'` en `foo`,\r\n    * si no existe regresa un objeto indefinido\r\n\r\n    Por otro lado, en el caso de `foo['bar']` aunque pasa b\u00e1sicamente lo mismo, ocurre en otro orden:\r\n\r\n    * verifica si existe un elemento `'bar'` en `foo`,\r\n    * si no lo hay, verifica si hay un *atributo* `bar` en `foo`,\r\n    * si no existe regresa un objeto indefinido\r\n\r\n    Esto es importante por si un objeto tiene un elemento y un atributo con el mismo nombre. Adicionalmente existe la funci\u00f3n `attr` que busca atributos dentro de la variable.\r\n\r\n## Uso de Jinja2 en Pelican\r\n\r\nLo primero que ocurre cuando Pelican inicia el procesamiento del sitio lee las variables del archivo de configuraci\u00f3n, luego los archivos para extraer los metadatos, e inicia la generaci\u00f3n del sitio utilizando las plantillas con Jinja2.\r\n\r\nPara facilitar el procesamiento, usamos una plantilla b\u00e1sica que contiene la estructura com\u00fan del sitio y los bloques que usamos en los diferentes tipos de plantillas.\r\n\r\nVeamos entonces la primera plantilla de nuestro sitio.\r\n\r\n### La plantilla base\r\n\r\nVamos a mostrar el archivo base, por partes para revisar detalladamente los bloques que contiene.\r\n\r\n#### Encabezado\r\n\r\nEste es el encabezado:\r\n\r\n    :::jinja\r\n    <!DOCTYPE html>\r\n    <html lang=\"es_MX\">\r\n      <head>\r\n        {# Mobile First #}\r\n        <meta charset=\"utf-8\">\r\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\r\n        {# Meta informacion del sitio #}\r\n        <title>{% block title %}{{ SITENAME }}{% endblock title %}</title>\r\n        <meta name=\"description\" content=\"{% block meta_description %}{{ DESCRIPCION }}{% endblock meta_description %}\">\r\n        <meta name=\"keywords\" content=\"{% block metakeywords %}{{ METAKEYS }}{% endblock metakeywords %}\">\r\n        <meta name=\"author\" content=\"{{ AUTHOR }}\">\r\n\r\n        {% block meta_header %}{% endblock meta_header %}\r\n\r\n        {% block metagoogle   %}{% endblock metagoogle   %}\r\n        {% block metafacebook %}{% endblock metafacebook %}\r\n        {% block metatwitter  %}{% endblock metatwitter  %}\r\n        {% block metaheader   %}{% endblock metaheader   %}\r\n\r\n        {# El tema nspace que nos ocupa #}\r\n        <link href=\"/assets/css/nspace.css\" rel=\"stylesheet\">\r\n\r\n        {% include \"modules/ie8.html\" %}\r\n        {% include \"modules/icons.html\" %}\r\n        {% include \"modules/feeds.html\" %}\r\n      </head>\r\n\r\nEsta plantilla est\u00e1 codificada en HTML5, y podemos apreciar el uso de comentarios (`{# Mobile First #}`), que ayudan a comprender el c\u00f3digo pero no son procesados por Jinja2.\r\n\r\nTambi\u00e9n podemos observar el bloque `{% block title %}{{ SITENAME }}{% endblock title %}` que contiene la variable `{{ SITENAME }}`.\r\n\r\n!!! alert-success \"Los bloques\"\r\n    Los bloques son una de las funciones principales de las plantillas de **Jinja2** ya que nos permiten crear la *modularidad* que queremos para nuestro tema. Los bloques **marcan** lugares que podemos llenar con contenido. Los bloques pueden tener contenido predefinido y usarlos autom\u00e1ticamente.\r\n\r\n    Su funcionamiento es similar al de los *hooks* o ganchos en otros sistemas de plantillas como WordPress. Marcamos los ganchos y los utilizamos con variables que dependen del contexto de la plantilla utilizada.\r\n\r\n\r\nAl final de este segmento podemos apreciar la caracter\u00edstica que complementa a nuestro tema modular, la _inclusi\u00f3n_ de archivos. De este modo un tema que puede ser muy grande y complejo se subdivide en partes m\u00e1s peque\u00f1as y manejables.\r\n\r\nUsando estos _includes_ y las variables globales podemos crear temas que nos sirvan para diferentes sitios cambiando solo algunas partes muy espec\u00edficas.\r\n\r\nConforme avance nuestro estudio de __Pelican__ veremos estos m\u00f3dulos m\u00e1s a detalle.\r\n\r\n[jinja]: http://j.mp/ns-jinja\r\n[django]: http://j.mp/ns-django\r\n[pelican]: http://j.mp/ns-pelican", "extend": "", "pub_date": "2014-02-16T18:17:00Z", "summary_html": "<p>Como crear plantillas modulares con Jinja2</p>", "body_html": "<p><a href=\"http://j.mp/ns-jinja\">Jinja2</a> es un motor de renderizado de plantillas desarrollado en Python dise\u00f1ado para ser flexible, r\u00e1pido y seguro. Si conoces como usar las plantillas de <a href=\"http://j.mp/ns-django\">Django</a> entonces ya conoces lo suficiente para empezar a utilizar Jinja2. Este sistema de plantillas es tambi\u00e9n utilizado por <a href=\"http://j.mp/ns-pelican\">Pelican</a>, el generador de contenido est\u00e1tico que utiliza este blog.</p>\n<h3 id=\"funcionamiento-basico-de-jinja2-con-pelican\">Funcionamiento b\u00e1sico de Jinja2 con Pelican</h3>\n<p>La forma m\u00e1s simple de instalar <strong>Jinja2</strong> es usando el programa <code>pip</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>pelican<span class=\"o\">)</span>namespace:docs javier$ pip install jinja2\n</pre></div>\n\n\n<p>La forma m\u00e1s b\u00e1sica para usar Jinja2 es usando la clase <code>jinja2.Template</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">jinja2</span> <span class=\"kn\">import</span> <span class=\"n\">Template</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"s1\">&#39;Hola {{ nombre }}!&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">nombre</span><span class=\"o\">=</span><span class=\"s1\">&#39;Javier Sanchez&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"sa\">u</span><span class=\"s1\">&#39;Hola Javier Sanchez!&#39;</span>\n</pre></div>\n\n\n<p>Las etiquetas de <strong>Jinja2</strong> se identifican con corchetes. Los corchetes dobles identifican variables <code>{{ variable }}</code>. Estas variables se encuentran en el <em>contexto</em> con el que se llama a la plantilla. Las expresiones se colocan entre corchetes y signos de porcentaje: <code>{% expresion %}</code>.</p>\n<p>Vamos a ver un ejemplo m\u00ednimo de una plantilla o <em>template</em> y poco a poco iremos ampliando este ejemplo hasta terminar con la plantilla que usa este blog.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"x\">&lt;html lang=&quot;es_MX&quot;&gt;</span>\n<span class=\"x\">  &lt;head&gt;</span>\n<span class=\"x\">    &lt;title&gt;namespace.mx - Hablamos de Desarrollo Web&lt;/title&gt;</span>\n<span class=\"x\">  &lt;/head&gt;</span>\n<span class=\"x\">  &lt;body&gt;</span>\n<span class=\"x\">    &lt;ul id=&quot;navigation&quot;&gt;</span>\n<span class=\"x\">      </span><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">opcion</span> <span class=\"k\">in</span> <span class=\"nv\">menu</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"x\">        &lt;li&gt;&lt;a href=&quot;</span><span class=\"cp\">{{</span> <span class=\"nv\">opcion.url</span> <span class=\"cp\">}}</span><span class=\"x\">&quot;&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">opcion.titulo</span> <span class=\"cp\">}}</span><span class=\"x\">&lt;/a&gt;&lt;/li&gt;</span>\n<span class=\"x\">      </span><span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"x\">    &lt;/ul&gt;</span>\n\n<span class=\"x\">    &lt;h1&gt;namespace&lt;/h1&gt;</span>\n<span class=\"x\">    </span><span class=\"cp\">{{</span> <span class=\"nv\">una_variable</span> <span class=\"cp\">}}</span><span class=\"x\"></span>\n<span class=\"x\">  &lt;/body&gt;</span>\n<span class=\"x\">&lt;/html&gt;</span>\n</pre></div>\n\n\n<p><strong>Pelican</strong> pasa las variables a las plantillas para poder usarlas en la plantilla. Las variables en may\u00fasculas del archivo de configuraci\u00f3n <code>pelicanconf.py</code> adem\u00e1s de la lista de art\u00edculos, categor\u00edas y etiquetas. En el contexto de un art\u00edculo individual, tambi\u00e9n se incluye la variable art\u00edculo con las propiedades del encabezado del art\u00edculo y el contenido.</p>\n<p>Podemos acceder a las propiedades de las variables usando la sintaxis de punto (<code>variable.propiedad</code>) o la sintaxis llamada <em>subscript</em> (<code>[]</code>). Por ejemplo los siguientes ejemplos hacen lo mismo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">{{</span> <span class=\"nv\">foo.bar</span> <span class=\"cp\">}}</span><span class=\"x\"></span>\n<span class=\"cp\">{{</span> <span class=\"nv\">foo</span><span class=\"o\">[</span><span class=\"s1\">&#39;bar&#39;</span><span class=\"o\">]</span><span class=\"cp\">}}</span><span class=\"x\"></span>\n</pre></div>\n\n\n<div class=\"admonition alert-info\">\n<p class=\"admonition-title\">Implementaci\u00f3n</p>\n<p>Aunque de hecho, ambas opciones hacen lo mismo, en la parte de Python el funcionamiento es ligeramente diferente. En el caso de  <code>foo.bar</code>:</p>\n<ul>\n<li>si no lo hay, verifica si hay un <em>atributo</em> <code>bar</code> en <code>foo</code>,</li>\n<li>verifica si existe un elemento <code>'bar'</code> en <code>foo</code>,</li>\n<li>si no existe regresa un objeto indefinido</li>\n</ul>\n<p>Por otro lado, en el caso de <code>foo['bar']</code> aunque pasa b\u00e1sicamente lo mismo, ocurre en otro orden:</p>\n<ul>\n<li>verifica si existe un elemento <code>'bar'</code> en <code>foo</code>,</li>\n<li>si no lo hay, verifica si hay un <em>atributo</em> <code>bar</code> en <code>foo</code>,</li>\n<li>si no existe regresa un objeto indefinido</li>\n</ul>\n<p>Esto es importante por si un objeto tiene un elemento y un atributo con el mismo nombre. Adicionalmente existe la funci\u00f3n <code>attr</code> que busca atributos dentro de la variable.</p>\n</div>\n<h2 id=\"uso-de-jinja2-en-pelican\">Uso de Jinja2 en Pelican</h2>\n<p>Lo primero que ocurre cuando Pelican inicia el procesamiento del sitio lee las variables del archivo de configuraci\u00f3n, luego los archivos para extraer los metadatos, e inicia la generaci\u00f3n del sitio utilizando las plantillas con Jinja2.</p>\n<p>Para facilitar el procesamiento, usamos una plantilla b\u00e1sica que contiene la estructura com\u00fan del sitio y los bloques que usamos en los diferentes tipos de plantillas.</p>\n<p>Veamos entonces la primera plantilla de nuestro sitio.</p>\n<h3 id=\"la-plantilla-base\">La plantilla base</h3>\n<p>Vamos a mostrar el archivo base, por partes para revisar detalladamente los bloques que contiene.</p>\n<h4 id=\"encabezado\">Encabezado</h4>\n<p>Este es el encabezado:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"x\">&lt;html lang=&quot;es_MX&quot;&gt;</span>\n<span class=\"x\">  &lt;head&gt;</span>\n<span class=\"x\">    </span><span class=\"c\">{# Mobile First #}</span><span class=\"x\"></span>\n<span class=\"x\">    &lt;meta charset=&quot;utf-8&quot;&gt;</span>\n<span class=\"x\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span>\n<span class=\"x\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span>\n\n<span class=\"x\">    </span><span class=\"c\">{# Meta informacion del sitio #}</span><span class=\"x\"></span>\n<span class=\"x\">    &lt;title&gt;</span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">title</span> <span class=\"cp\">%}{{</span> <span class=\"nv\">SITENAME</span> <span class=\"cp\">}}{%</span> <span class=\"k\">endblock</span> <span class=\"nv\">title</span> <span class=\"cp\">%}</span><span class=\"x\">&lt;/title&gt;</span>\n<span class=\"x\">    &lt;meta name=&quot;description&quot; content=&quot;</span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">meta_description</span> <span class=\"cp\">%}{{</span> <span class=\"nv\">DESCRIPCION</span> <span class=\"cp\">}}{%</span> <span class=\"k\">endblock</span> <span class=\"nv\">meta_description</span> <span class=\"cp\">%}</span><span class=\"x\">&quot;&gt;</span>\n<span class=\"x\">    &lt;meta name=&quot;keywords&quot; content=&quot;</span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">metakeywords</span> <span class=\"cp\">%}{{</span> <span class=\"nv\">METAKEYS</span> <span class=\"cp\">}}{%</span> <span class=\"k\">endblock</span> <span class=\"nv\">metakeywords</span> <span class=\"cp\">%}</span><span class=\"x\">&quot;&gt;</span>\n<span class=\"x\">    &lt;meta name=&quot;author&quot; content=&quot;</span><span class=\"cp\">{{</span> <span class=\"nv\">AUTHOR</span> <span class=\"cp\">}}</span><span class=\"x\">&quot;&gt;</span>\n\n<span class=\"x\">    </span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">meta_header</span> <span class=\"cp\">%}{%</span> <span class=\"k\">endblock</span> <span class=\"nv\">meta_header</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n\n<span class=\"x\">    </span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">metagoogle</span>   <span class=\"cp\">%}{%</span> <span class=\"k\">endblock</span> <span class=\"nv\">metagoogle</span>   <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"x\">    </span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">metafacebook</span> <span class=\"cp\">%}{%</span> <span class=\"k\">endblock</span> <span class=\"nv\">metafacebook</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"x\">    </span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">metatwitter</span>  <span class=\"cp\">%}{%</span> <span class=\"k\">endblock</span> <span class=\"nv\">metatwitter</span>  <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"x\">    </span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">metaheader</span>   <span class=\"cp\">%}{%</span> <span class=\"k\">endblock</span> <span class=\"nv\">metaheader</span>   <span class=\"cp\">%}</span><span class=\"x\"></span>\n\n<span class=\"x\">    </span><span class=\"c\">{# El tema nspace que nos ocupa #}</span><span class=\"x\"></span>\n<span class=\"x\">    &lt;link href=&quot;/assets/css/nspace.css&quot; rel=&quot;stylesheet&quot;&gt;</span>\n\n<span class=\"x\">    </span><span class=\"cp\">{%</span> <span class=\"k\">include</span> <span class=\"s2\">&quot;modules/ie8.html&quot;</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"x\">    </span><span class=\"cp\">{%</span> <span class=\"k\">include</span> <span class=\"s2\">&quot;modules/icons.html&quot;</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"x\">    </span><span class=\"cp\">{%</span> <span class=\"k\">include</span> <span class=\"s2\">&quot;modules/feeds.html&quot;</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"x\">  &lt;/head&gt;</span>\n</pre></div>\n\n\n<p>Esta plantilla est\u00e1 codificada en HTML5, y podemos apreciar el uso de comentarios (<code>{# Mobile First #}</code>), que ayudan a comprender el c\u00f3digo pero no son procesados por Jinja2.</p>\n<p>Tambi\u00e9n podemos observar el bloque <code>{% block title %}{{ SITENAME }}{% endblock title %}</code> que contiene la variable <code>{{ SITENAME }}</code>.</p>\n<div class=\"admonition alert-success\">\n<p class=\"admonition-title\">Los bloques</p>\n<p>Los bloques son una de las funciones principales de las plantillas de <strong>Jinja2</strong> ya que nos permiten crear la <em>modularidad</em> que queremos para nuestro tema. Los bloques <strong>marcan</strong> lugares que podemos llenar con contenido. Los bloques pueden tener contenido predefinido y usarlos autom\u00e1ticamente.</p>\n<p>Su funcionamiento es similar al de los <em>hooks</em> o ganchos en otros sistemas de plantillas como WordPress. Marcamos los ganchos y los utilizamos con variables que dependen del contexto de la plantilla utilizada.</p>\n</div>\n<p>Al final de este segmento podemos apreciar la caracter\u00edstica que complementa a nuestro tema modular, la <em>inclusi\u00f3n</em> de archivos. De este modo un tema que puede ser muy grande y complejo se subdivide en partes m\u00e1s peque\u00f1as y manejables.</p>\n<p>Usando estos <em>includes</em> y las variables globales podemos crear temas que nos sirvan para diferentes sitios cambiando solo algunas partes muy espec\u00edficas.</p>\n<p>Conforme avance nuestro estudio de <strong>Pelican</strong> veremos estos m\u00f3dulos m\u00e1s a detalle.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "crear-plantillas-modulares-con-jinja2", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 54, "fields": {"idx": "a6184968-725d-49cb-8240-8806dfb541c4", "creado": "2017-07-29T03:27:46.540Z", "modificado": "2017-07-29T03:27:46.540Z", "title": "Gu\u00eda Git", "summary": "", "body": "Title: Gu\u00eda Git\r\nDate: 2014/02/22 13:49\r\nCategory: Desarrollo\r\nTags: git, tools\r\nSlug: guia-git\r\nAuthor: Javier Sanchez Toledano\r\nemail: javier@namespace.mx\r\nSummary: Una gu\u00eda sencilla para usar el sistema de control de versiones Git.\r\n\r\nEl a\u00f1o pasado, que me mandaron a la reserva nacional de talentos, el jefe de sistemas de la delegaci\u00f3n, me dijo que quer\u00eda participar en el desarrollo del cuadro de mando. Muchos quer\u00edan participar, m\u00e1s que nada para colgarse la medalla.\r\n\r\nEn ese momento se me ocurri\u00f3 usar Git para controlar las contribuciones que ellos pudieran hacer al c\u00f3digo. Al final, por lo avanzado del desarrollo de la versi\u00f3n, no implement\u00e9 el sistema de control de versiones. Por otro lado, nadie ha hecho la m\u00ednima contribuci\u00f3n al c\u00f3digo.\r\n\r\nPero con el proyecto de la nueva versi\u00f3n del __Cuadro de Mando Integral 2014__, tengo una peque\u00f1a oportunidad de aplicar las mejores pr\u00e1cticas de desarrollo web a este proyecto y empezar a reescribir el c\u00f3digo de forma que sea m\u00e1s profesional y m\u00e1s f\u00e1cil de mantener.\r\n\r\nLo primero que tengo que hacer entonces es crear este _repositorio_ de control de versiones. Y aprender a usarlo.\r\n\r\n## Instalaci\u00f3n de GitHub\r\n\r\nLo primero que tenemos que hacer es crear una cuenta en [GitHub][github] y descargar el programa [GitHub para Mac][gitmac] o el que corresponda a tu plataforma.\r\n\r\nCon este programa podemos hacer muchas operaciones con un solo clicl, por ejemplo, podemos:\r\n\r\n* Clonar repositorios\r\n* Buscar en el historial\r\n* Enviar cambios\r\n* Compartir c\u00f3digo en github.com\r\n* Y mucho m\u00e1s.\r\n\r\n<div style=\"max-width:300px; margin: 25px auto;\">\r\n  <!-- nspace_01 -->\r\n  <ins class=\"adsbygoogle\"\r\n       style=\"display:block\"\r\n       data-ad-client=\"ca-pub-9466828947698623\"\r\n       data-ad-slot=\"5225523689\"\r\n       data-ad-format=\"auto\"></ins>\r\n  <script>\r\n    (adsbygoogle = window.adsbygoogle || []).push({});\r\n  </script>\r\n</div>\r\n<div style=\"clear:both;\"></div>\r\n\r\n### Definiciones\r\n\r\nEs bueno tambi\u00e9n entender alguns definiciones importantes cuando hablamos de GitHub, para que todos estemos en el mismo canal.\r\n\r\nBranch o Rama\r\n:   Una rama es una versi\u00f3n paralela de un repositorio. Est\u00e1 contenida dentro del repositorio pero no afecta la rama primaria o `master` lo que nos permite trabajar libremente si afectar con nuestros cambios la versi\u00f3n en producci\u00f3n. Cuando los cambios est\u00e1n listos, puedez unir esta rama en la `master` para publicar los cambios.\r\n\r\nClonar\r\n:   Clonar es hacer una copia de un repositorio que reside en nuestra computadora, en lugar de alg\u00fan sitio web. Un __clon__ es dicha copia. Con un clon podemos editar el c\u00f3digo fuente en nuestro editor preferido y usar Git para que lleve un registro de los cambios que hemos hecho sin necesidad de estar en l\u00ednea. De esto modo, los cambios se sincronizar\u00e1n con la versi\u00f3n remota cuando estemos en l\u00ednea.\r\n\r\nCommit o _Revisi\u00f3n_\r\n:   Un _commit_ o revisi\u00f3n es un cambio individual a un archivo (o a un conjunto de archivos). Es como cuando guardas un archivo, pero en Git, cada vez que guardas se crea un identificador \u00fanico (tambi\u00e9n llamado _firma \"SHA\"_ o huella _\"hash\"_) que permite llevar un registro de los cambios que se han realizado y del autor de los mismo. Los _commits_ usualmente tienen un peqie\u00f1o mensaje que explica el motivo del cambio realizado.\r\n\r\nFetch\r\n:   Hacer un _fetch_ o _fetching_ se refiere a obtener los cambios m\u00e1s recientes del repositorio en l\u00edmea sin mezclarlos con el c\u00f3digo en la rama local para poder compararlos.L\r\n\r\nPull\r\n:   Hacer _pull_ se refiere a traer los cambios y unirlos a la rama local. Por ejemplo, si alguien edita un archivo remoto y tu est\u00e1s trabajando en \u00e9l, cuando hagas el _pull_ ver\u00e1s esos cambios en tu copia local.\r\n\r\nPull Request\r\n:   Las _pull request_ son cambios que los usuarios proponen envi\u00e1ndolos a los repositorios y que los colaboradores pueden aceptar o rechazar. Al igual que los _problemas_ o __issues__, cada _pull request_ tiene su propio foro de discursi\u00f3n.\r\n\r\n## Creaci\u00f3n del Repositorio\r\n\r\n#### Repositorio Local\r\n\r\nVamos a crear entonces nuestro proyecto. Nos vamos a la carpeta de Proyectos y creamos el directorio `cmi`:\r\n\r\n    :::bash\r\n    namespace:Proyectos javier$ mkdir cmi\r\n    namespace:Proyectos javier$ cd cmi\r\n\r\nY dentro de este subdirectorio, creamos el nuevo repositorio con `git`:\r\n\r\n    :::bash\r\n    namespace:cmi javier$ git init\r\n    Initialized empty Git repository in /Users/javier/Documents/Proyectos/cmi/.git/\r\n\r\n#### Repositorio en GitHub\r\n\r\nComo les dec\u00eda este proyecto ser\u00e1 manejado en GitHub, por lo que desde mi cuenta en GitHun, creo un repositorio y creo el archivo `README.md` para facilitar la _clonaci\u00f3n_ en mi computadora.\r\n\r\n![Creaci\u00f3n de un repositorio en GitHub](https://s3.amazonaws.com/krypton/20140222_crea_repo.png \"Crear Repositorio en GitHub\")\r\n\r\nUna vez listo nuestro repositorio en GitHub, podemos _clonarlo_ para trabajar de forma local usando el comando `git clone`,\r\n\r\n    :::bash\r\n    namespace:Proyectos javier$ git clone https://github.com/jstoledano/cmi.git\r\n    Cloning into 'cmi'...\r\n    remote: Counting objects: 3, done.\r\n    remote: Compressing objects: 100% (2/2), done.\r\n    remote: Total 3 (delta 0), reused 0 (delta 0)\r\n    Unpacking objects: 100% (3/3), done.\r\n\r\n!!! alert-info \"Compatibilidad\"\r\n    Es importante aclarar que el proyecyto `cmi` es en realidad la versi\u00f3n 2014 de este sistema. Existi\u00f3 una versi\u00f3n 2012, que ya cas\u00ed se ha perdido y una versi\u00f3n 2013 que todav\u00eda funciona. Entonces debemos mantener la compatilidad con los datos que existen actualmente, por lo que muchos modelos no ser\u00e1n modificados, pero en todo caso se reescribir\u00e1n de una forma m\u00e1s profesional y se crear\u00e1 la documentaci\u00f3n para cada m\u00f3dulo.\r\n\r\nAhora, para seguir practicando con nuestro repositorio vamos a editar el archivo `README.md` con una explicaci\u00f3n de que contiene el proyecto para poder hacer un _commit_ y un _push_.\r\n\r\nEl archivo `README.md` utiliza la sintaxis de [Markdown](http://j-mp/ns-acordeon-md) y es muy f\u00e1cil de aprender. As\u00ed se ve el texto en este archivo:\r\n\r\n    :::markdown\r\n    # Cuadro de Mando Integral 2014\r\n\r\n    >Cuadro de Mando Integral para la Junta Local en Tlaxcala\r\n\r\n    El Cuadro de Mando Integral es un complemento del Sistema de Gesti\u00f3n de la Calidad (SGC) que tiene como facilitar la implementaci\u00f3n y mantenimiento del SGC, incorporando las siguientes funcionalidades:\r\n\r\n    - Gesti\u00f3n de evidencias de metas del Servicio Profesional\r\n    - Control de documentos\r\n    - Control de registros\r\n    - Competencias del personal\r\n    - Gesti\u00f3n de Indicadores\r\n    - Gesti\u00f3n de Avisos\r\n\r\n    Esta informaci\u00f3n esta disponible en la red interna de modo que todos los usuarios pueden consultarla simplemente escribiendo la direcci\u00f3n en un navegador: [http://10.69.0.68](http://10.69.0.68)\r\n\r\n### Env\u00edo de cambios al repositorio\r\n\r\nAhora debemos registrar los cambios usando el comando `add`:\r\n\r\n    :::bash\r\n    namespace:cmi javier$ git add README.md\r\n\r\nEl siguiente paso es hacer _commit_, para crear la revisi\u00f3n:\r\n\r\n    :::bash\r\n    namespace:cmi javier$ git commit -m \"Registro inicial del proyecto\"\r\n    [master 385b261] Registro inicial del proyecto\r\n     1 file changed, 14 insertions(+), 4 deletions(-)\r\n     rewrite README.md (98%)\r\n\r\nComo pueden ver, agregamos un mensaje para aclarar de que va la actualizaci\u00f3n usando el par\u00e1metro `-m`.\r\n\r\nPor \u00faltimo debemos enviar esta revisi\u00f3n al repositorio remoto, usando el comando `push`:\r\n\r\n    :::bash\r\n    namespace:cmi javier$ git push origin master\r\n    Username for 'https://github.com': jstoledano\r\n    Password for 'https://jstoledano@github.com':\r\n    Counting objects: 5, done.\r\n    Delta compression using up to 2 threads.\r\n    Compressing objects: 100% (2/2), done.\r\n    Writing objects: 100% (3/3), 628 bytes, done.\r\n    Total 3 (delta 0), reused 0 (delta 0)\r\n    To https://github.com/jstoledano/cmi.git\r\n       b49f11f..385b261  master -> master\r\n\r\n<div style=\"max-width:300px; margin: 25px auto;\">\r\n  <!-- nspace_01 -->\r\n  <ins class=\"adsbygoogle\"\r\n       style=\"display:block\"\r\n       data-ad-client=\"ca-pub-9466828947698623\"\r\n       data-ad-slot=\"5225523689\"\r\n       data-ad-format=\"auto\"></ins>\r\n  <script>\r\n    (adsbygoogle = window.adsbygoogle || []).push({});\r\n  </script>\r\n</div>\r\n<div style=\"clear:both;\"></div>\r\n\r\n\r\n## La estructura del proyecto\r\n\r\nAhora vamos a continuar con la actalizaci\u00f3n el proyecto, estableciendo el entorno virtual y la estructura b\u00e1sica. Primero creamos el entorno virtual,\r\n\r\n    :::bash\r\n    namespace:cmi javier$ mkvirtualenv cmi\r\n    New python executable in cmi/bin/python\r\n    Installing Setuptools..............................................................................................................................................................................................................................done.\r\n    Installing Pip.....................................................................................................................................................................................................................................................................................................................................done.\r\n\r\nInstalamos Django, usando el comando `pip`, con el entorno activado, que se lee entre par\u00e9ntesis.\r\n\r\n    :::bash\r\n    (cmi)namespace:cmi javier$ pip install django\r\n    Downloading/unpacking django\r\n      Downloading Django-1.6.2.tar.gz (6.6MB): 6.6MB downloaded\r\n      Running setup.py egg_info for package django\r\n\r\n        warning: no previously-included files matching '__pycache__' found under directory '*'\r\n        warning: no previously-included files matching '*.py[co]' found under directory '*'\r\n    Installing collected packages: django\r\n      Running setup.py install for django\r\n        changing mode of build/scripts-2.7/django-admin.py from 644 to 755\r\n\r\n        warning: no previously-included files matching '__pycache__' found under directory '*'\r\n        warning: no previously-included files matching '*.py[co]' found under directory '*'\r\n        changing mode of /Users/javier/entornos/cmi/bin/django-admin.py to 755\r\n    Successfully installed django\r\n    Cleaning up...\r\n\r\nPodemos crear nuestro proyecto junto con la primera aplicaci\u00f3n y definir su estructura:\r\n\r\n    :::bash\r\n    (cmi)namespace:cmi javier$ django-admin.py startproject cmi\r\n    (cmi)namespace:cmi javier$ cd cmi\r\n    (cmi)namespace:cmi javier$ django-admin.py startapp core\r\n\r\n!!! alert-success \"Porque en ingl\u00e9s\"\r\n    Resulta que es m\u00e1s f\u00e1cil escribir algunas funciones y aplicaciones en ingl\u00e9s, porque se integran mejor al c\u00f3digo de Python y porque tambi\u00e9n si tenemos que pedir ayuda, facilita que revisen tu c\u00f3digo si est\u00e1 escrito en un idioma que entiende la mayor\u00eda.\r\n\r\nEsta es la estructura resultante del proyecto:\r\n\r\n![Estructura del Proyecto](https://s3.amazonaws.com/krypton/20140222-django-layout.png \"Estructura del Proyecto\")\r\n\r\n### Registro de cambios\r\n\r\nVamos a repetir el proceso de control de versiones, enviando estos cambios a la rama `master` de nuestro repositorio, siguiendo los mismo pasos que vimos al principio:\r\n\r\n1. Registrar el cambio con `add`\r\n2. Enviar los cambios al `HEAD` con `commit`\r\n3. Enviar la revisi\u00f3n a la rama maestra con `push`\r\n\r\n<pre>\r\n(cmi)namespace:cmi javier$ git add .\r\n(cmi)namespace:cmi javier$ git commit -m \"Creacion del proyecto con Python\"\r\n[master 627d8aa] Creacion del proyecto con Python\r\n8 files changed, 130 insertions(+)\r\ncreate mode 100644 cmi/cmi/__init__.py\r\ncreate mode 100644 cmi/cmi/settings.py\r\ncreate mode 100644 cmi/cmi/urls.py\r\ncreate mode 100644 cmi/cmi/wsgi.py\r\ncreate mode 100644 cmi/core/__init__.py\r\ncreate mode 100644 cmi/core/admin.py\r\ncreate mode 100644 cmi/core/models.py\r\ncreate mode 100644 cmi/core/tests.py\r\ncreate mode 100644 cmi/core/views.py\r\ncreate mode 100644 cmi/manage.py\r\n(cmi)namespace:cmi javier$ git push origin master\r\nCounting objects: 15, done.\r\nDelta compression using up to 2 threads.\r\nCompressing objects: 100% (13/13), done.\r\nWriting objects: 100% (14/14), 2.45 KiB, done.\r\nTotal 14 (delta 0), reused 0 (delta 0)\r\nTo https://github.com/jstoledano/cmi.git\r\n385b261..627d8aa  master -> master\r\n</pre>\r\n\r\nComo pueden ver, ahora use `git add .` para enviar todos los cambios que se encuentren a partir del directorio del proyecto, porque todos los cambios forman parte de la misma revisi\u00f3n.\r\n\r\nEsta es la nueva forma de trabajar con Git. M\u00e1s adelante, conform avence el proyecto veremos otras funciones del control de versiones y como se usan en el cuadro de mando.\r\n\r\n\r\n[github]: http://j-mp/ns-github\r\n[gitmac]:http://j-mp/ns-github-mac", "extend": "", "pub_date": "2014-02-22T19:49:00Z", "summary_html": "", "body_html": "<p>El a\u00f1o pasado, que me mandaron a la reserva nacional de talentos, el jefe de sistemas de la delegaci\u00f3n, me dijo que quer\u00eda participar en el desarrollo del cuadro de mando. Muchos quer\u00edan participar, m\u00e1s que nada para colgarse la medalla.</p>\n<p>En ese momento se me ocurri\u00f3 usar Git para controlar las contribuciones que ellos pudieran hacer al c\u00f3digo. Al final, por lo avanzado del desarrollo de la versi\u00f3n, no implement\u00e9 el sistema de control de versiones. Por otro lado, nadie ha hecho la m\u00ednima contribuci\u00f3n al c\u00f3digo.</p>\n<p>Pero con el proyecto de la nueva versi\u00f3n del <strong>Cuadro de Mando Integral 2014</strong>, tengo una peque\u00f1a oportunidad de aplicar las mejores pr\u00e1cticas de desarrollo web a este proyecto y empezar a reescribir el c\u00f3digo de forma que sea m\u00e1s profesional y m\u00e1s f\u00e1cil de mantener.</p>\n<p>Lo primero que tengo que hacer entonces es crear este <em>repositorio</em> de control de versiones. Y aprender a usarlo.</p>\n<h2 id=\"instalacion-de-github\">Instalaci\u00f3n de GitHub</h2>\n<p>Lo primero que tenemos que hacer es crear una cuenta en <a href=\"http://j-mp/ns-github\">GitHub</a> y descargar el programa <a href=\"http://j-mp/ns-github-mac\">GitHub para Mac</a> o el que corresponda a tu plataforma.</p>\n<p>Con este programa podemos hacer muchas operaciones con un solo clicl, por ejemplo, podemos:</p>\n<ul>\n<li>Clonar repositorios</li>\n<li>Buscar en el historial</li>\n<li>Enviar cambios</li>\n<li>Compartir c\u00f3digo en github.com</li>\n<li>Y mucho m\u00e1s.</li>\n</ul>\n<div style=\"max-width:300px; margin: 25px auto;\">\n  <!-- nspace_01 -->\n  <ins class=\"adsbygoogle\"\n       style=\"display:block\"\n       data-ad-client=\"ca-pub-9466828947698623\"\n       data-ad-slot=\"5225523689\"\n       data-ad-format=\"auto\"></ins>\n  <script>\n    (adsbygoogle = window.adsbygoogle || []).push({});\n  </script>\n</div>\n\n<div style=\"clear:both;\"></div>\n\n<h3 id=\"definiciones\">Definiciones</h3>\n<p>Es bueno tambi\u00e9n entender alguns definiciones importantes cuando hablamos de GitHub, para que todos estemos en el mismo canal.</p>\n<dl>\n<dt>Branch o Rama</dt>\n<dd>Una rama es una versi\u00f3n paralela de un repositorio. Est\u00e1 contenida dentro del repositorio pero no afecta la rama primaria o <code>master</code> lo que nos permite trabajar libremente si afectar con nuestros cambios la versi\u00f3n en producci\u00f3n. Cuando los cambios est\u00e1n listos, puedez unir esta rama en la <code>master</code> para publicar los cambios.</dd>\n<dt>Clonar</dt>\n<dd>Clonar es hacer una copia de un repositorio que reside en nuestra computadora, en lugar de alg\u00fan sitio web. Un <strong>clon</strong> es dicha copia. Con un clon podemos editar el c\u00f3digo fuente en nuestro editor preferido y usar Git para que lleve un registro de los cambios que hemos hecho sin necesidad de estar en l\u00ednea. De esto modo, los cambios se sincronizar\u00e1n con la versi\u00f3n remota cuando estemos en l\u00ednea.</dd>\n<dt>Commit o <em>Revisi\u00f3n</em></dt>\n<dd>Un <em>commit</em> o revisi\u00f3n es un cambio individual a un archivo (o a un conjunto de archivos). Es como cuando guardas un archivo, pero en Git, cada vez que guardas se crea un identificador \u00fanico (tambi\u00e9n llamado <em>firma &ldquo;SHA&rdquo;</em> o huella <em>&ldquo;hash&rdquo;</em>) que permite llevar un registro de los cambios que se han realizado y del autor de los mismo. Los <em>commits</em> usualmente tienen un peqie\u00f1o mensaje que explica el motivo del cambio realizado.</dd>\n<dt>Fetch</dt>\n<dd>Hacer un <em>fetch</em> o <em>fetching</em> se refiere a obtener los cambios m\u00e1s recientes del repositorio en l\u00edmea sin mezclarlos con el c\u00f3digo en la rama local para poder compararlos.L</dd>\n<dt>Pull</dt>\n<dd>Hacer <em>pull</em> se refiere a traer los cambios y unirlos a la rama local. Por ejemplo, si alguien edita un archivo remoto y tu est\u00e1s trabajando en \u00e9l, cuando hagas el <em>pull</em> ver\u00e1s esos cambios en tu copia local.</dd>\n<dt>Pull Request</dt>\n<dd>Las <em>pull request</em> son cambios que los usuarios proponen envi\u00e1ndolos a los repositorios y que los colaboradores pueden aceptar o rechazar. Al igual que los <em>problemas</em> o <strong>issues</strong>, cada <em>pull request</em> tiene su propio foro de discursi\u00f3n.</dd>\n</dl>\n<h2 id=\"creacion-del-repositorio\">Creaci\u00f3n del Repositorio</h2>\n<h4 id=\"repositorio-local\">Repositorio Local</h4>\n<p>Vamos a crear entonces nuestro proyecto. Nos vamos a la carpeta de Proyectos y creamos el directorio <code>cmi</code>:</p>\n<div class=\"codehilite\"><pre><span></span>namespace:Proyectos javier$ mkdir cmi\nnamespace:Proyectos javier$ <span class=\"nb\">cd</span> cmi\n</pre></div>\n\n\n<p>Y dentro de este subdirectorio, creamos el nuevo repositorio con <code>git</code>:</p>\n<div class=\"codehilite\"><pre><span></span>namespace:cmi javier$ git init\nInitialized empty Git repository in /Users/javier/Documents/Proyectos/cmi/.git/\n</pre></div>\n\n\n<h4 id=\"repositorio-en-github\">Repositorio en GitHub</h4>\n<p>Como les dec\u00eda este proyecto ser\u00e1 manejado en GitHub, por lo que desde mi cuenta en GitHun, creo un repositorio y creo el archivo <code>README.md</code> para facilitar la <em>clonaci\u00f3n</em> en mi computadora.</p>\n<p><img alt=\"Creaci\u00f3n de un repositorio en GitHub\" src=\"https://s3.amazonaws.com/krypton/20140222_crea_repo.png\" title=\"Crear Repositorio en GitHub\"></p>\n<p>Una vez listo nuestro repositorio en GitHub, podemos <em>clonarlo</em> para trabajar de forma local usando el comando <code>git clone</code>,</p>\n<div class=\"codehilite\"><pre><span></span>namespace:Proyectos javier$ git clone https://github.com/jstoledano/cmi.git\nCloning into <span class=\"s1\">&#39;cmi&#39;</span>...\nremote: Counting objects: <span class=\"m\">3</span>, <span class=\"k\">done</span>.\nremote: Compressing objects: <span class=\"m\">100</span>% <span class=\"o\">(</span><span class=\"m\">2</span>/2<span class=\"o\">)</span>, <span class=\"k\">done</span>.\nremote: Total <span class=\"m\">3</span> <span class=\"o\">(</span>delta <span class=\"m\">0</span><span class=\"o\">)</span>, reused <span class=\"m\">0</span> <span class=\"o\">(</span>delta <span class=\"m\">0</span><span class=\"o\">)</span>\nUnpacking objects: <span class=\"m\">100</span>% <span class=\"o\">(</span><span class=\"m\">3</span>/3<span class=\"o\">)</span>, <span class=\"k\">done</span>.\n</pre></div>\n\n\n<div class=\"admonition alert-info\">\n<p class=\"admonition-title\">Compatibilidad</p>\n<p>Es importante aclarar que el proyecyto <code>cmi</code> es en realidad la versi\u00f3n 2014 de este sistema. Existi\u00f3 una versi\u00f3n 2012, que ya cas\u00ed se ha perdido y una versi\u00f3n 2013 que todav\u00eda funciona. Entonces debemos mantener la compatilidad con los datos que existen actualmente, por lo que muchos modelos no ser\u00e1n modificados, pero en todo caso se reescribir\u00e1n de una forma m\u00e1s profesional y se crear\u00e1 la documentaci\u00f3n para cada m\u00f3dulo.</p>\n</div>\n<p>Ahora, para seguir practicando con nuestro repositorio vamos a editar el archivo <code>README.md</code> con una explicaci\u00f3n de que contiene el proyecto para poder hacer un <em>commit</em> y un <em>push</em>.</p>\n<p>El archivo <code>README.md</code> utiliza la sintaxis de <a href=\"http://j-mp/ns-acordeon-md\">Markdown</a> y es muy f\u00e1cil de aprender. As\u00ed se ve el texto en este archivo:</p>\n<div class=\"codehilite\"><pre><span></span># Cuadro de Mando Integral 2014\n\n&gt;Cuadro de Mando Integral para la Junta Local en Tlaxcala\n\nEl Cuadro de Mando Integral es un complemento del Sistema de Gesti\u00f3n de la Calidad (SGC) que tiene como facilitar la implementaci\u00f3n y mantenimiento del SGC, incorporando las siguientes funcionalidades:\n\n- Gesti\u00f3n de evidencias de metas del Servicio Profesional\n- Control de documentos\n- Control de registros\n- Competencias del personal\n- Gesti\u00f3n de Indicadores\n- Gesti\u00f3n de Avisos\n\nEsta informaci\u00f3n esta disponible en la red interna de modo que todos los usuarios pueden consultarla simplemente escribiendo la direcci\u00f3n en un navegador: [http://10.69.0.68](http://10.69.0.68)\n</pre></div>\n\n\n<h3 id=\"envio-de-cambios-al-repositorio\">Env\u00edo de cambios al repositorio</h3>\n<p>Ahora debemos registrar los cambios usando el comando <code>add</code>:</p>\n<div class=\"codehilite\"><pre><span></span>namespace:cmi javier$ git add README.md\n</pre></div>\n\n\n<p>El siguiente paso es hacer <em>commit</em>, para crear la revisi\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span>namespace:cmi javier$ git commit -m <span class=\"s2\">&quot;Registro inicial del proyecto&quot;</span>\n<span class=\"o\">[</span>master 385b261<span class=\"o\">]</span> Registro inicial del proyecto\n <span class=\"m\">1</span> file changed, <span class=\"m\">14</span> insertions<span class=\"o\">(</span>+<span class=\"o\">)</span>, <span class=\"m\">4</span> deletions<span class=\"o\">(</span>-<span class=\"o\">)</span>\n rewrite README.md <span class=\"o\">(</span><span class=\"m\">98</span>%<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>Como pueden ver, agregamos un mensaje para aclarar de que va la actualizaci\u00f3n usando el par\u00e1metro <code>-m</code>.</p>\n<p>Por \u00faltimo debemos enviar esta revisi\u00f3n al repositorio remoto, usando el comando <code>push</code>:</p>\n<div class=\"codehilite\"><pre><span></span>namespace:cmi javier$ git push origin master\nUsername <span class=\"k\">for</span> <span class=\"s1\">&#39;https://github.com&#39;</span>: jstoledano\nPassword <span class=\"k\">for</span> <span class=\"s1\">&#39;https://jstoledano@github.com&#39;</span>:\nCounting objects: <span class=\"m\">5</span>, <span class=\"k\">done</span>.\nDelta compression using up to <span class=\"m\">2</span> threads.\nCompressing objects: <span class=\"m\">100</span>% <span class=\"o\">(</span><span class=\"m\">2</span>/2<span class=\"o\">)</span>, <span class=\"k\">done</span>.\nWriting objects: <span class=\"m\">100</span>% <span class=\"o\">(</span><span class=\"m\">3</span>/3<span class=\"o\">)</span>, <span class=\"m\">628</span> bytes, <span class=\"k\">done</span>.\nTotal <span class=\"m\">3</span> <span class=\"o\">(</span>delta <span class=\"m\">0</span><span class=\"o\">)</span>, reused <span class=\"m\">0</span> <span class=\"o\">(</span>delta <span class=\"m\">0</span><span class=\"o\">)</span>\nTo https://github.com/jstoledano/cmi.git\n   b49f11f..385b261  master -&gt; master\n</pre></div>\n\n\n<div style=\"max-width:300px; margin: 25px auto;\">\n  <!-- nspace_01 -->\n  <ins class=\"adsbygoogle\"\n       style=\"display:block\"\n       data-ad-client=\"ca-pub-9466828947698623\"\n       data-ad-slot=\"5225523689\"\n       data-ad-format=\"auto\"></ins>\n  <script>\n    (adsbygoogle = window.adsbygoogle || []).push({});\n  </script>\n</div>\n\n<div style=\"clear:both;\"></div>\n\n<h2 id=\"la-estructura-del-proyecto\">La estructura del proyecto</h2>\n<p>Ahora vamos a continuar con la actalizaci\u00f3n el proyecto, estableciendo el entorno virtual y la estructura b\u00e1sica. Primero creamos el entorno virtual,</p>\n<div class=\"codehilite\"><pre><span></span>namespace:cmi javier$ mkvirtualenv cmi\nNew python executable in cmi/bin/python\nInstalling Setuptools..............................................................................................................................................................................................................................done.\nInstalling Pip.....................................................................................................................................................................................................................................................................................................................................done.\n</pre></div>\n\n\n<p>Instalamos Django, usando el comando <code>pip</code>, con el entorno activado, que se lee entre par\u00e9ntesis.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>cmi<span class=\"o\">)</span>namespace:cmi javier$ pip install django\nDownloading/unpacking django\n  Downloading Django-1.6.2.tar.gz <span class=\"o\">(</span><span class=\"m\">6</span>.6MB<span class=\"o\">)</span>: <span class=\"m\">6</span>.6MB downloaded\n  Running setup.py egg_info <span class=\"k\">for</span> package django\n\n    warning: no previously-included files matching <span class=\"s1\">&#39;__pycache__&#39;</span> found under directory <span class=\"s1\">&#39;*&#39;</span>\n    warning: no previously-included files matching <span class=\"s1\">&#39;*.py[co]&#39;</span> found under directory <span class=\"s1\">&#39;*&#39;</span>\nInstalling collected packages: django\n  Running setup.py install <span class=\"k\">for</span> django\n    changing mode of build/scripts-2.7/django-admin.py from <span class=\"m\">644</span> to <span class=\"m\">755</span>\n\n    warning: no previously-included files matching <span class=\"s1\">&#39;__pycache__&#39;</span> found under directory <span class=\"s1\">&#39;*&#39;</span>\n    warning: no previously-included files matching <span class=\"s1\">&#39;*.py[co]&#39;</span> found under directory <span class=\"s1\">&#39;*&#39;</span>\n    changing mode of /Users/javier/entornos/cmi/bin/django-admin.py to <span class=\"m\">755</span>\nSuccessfully installed django\nCleaning up...\n</pre></div>\n\n\n<p>Podemos crear nuestro proyecto junto con la primera aplicaci\u00f3n y definir su estructura:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>cmi<span class=\"o\">)</span>namespace:cmi javier$ django-admin.py startproject cmi\n<span class=\"o\">(</span>cmi<span class=\"o\">)</span>namespace:cmi javier$ <span class=\"nb\">cd</span> cmi\n<span class=\"o\">(</span>cmi<span class=\"o\">)</span>namespace:cmi javier$ django-admin.py startapp core\n</pre></div>\n\n\n<div class=\"admonition alert-success\">\n<p class=\"admonition-title\">Porque en ingl\u00e9s</p>\n<p>Resulta que es m\u00e1s f\u00e1cil escribir algunas funciones y aplicaciones en ingl\u00e9s, porque se integran mejor al c\u00f3digo de Python y porque tambi\u00e9n si tenemos que pedir ayuda, facilita que revisen tu c\u00f3digo si est\u00e1 escrito en un idioma que entiende la mayor\u00eda.</p>\n</div>\n<p>Esta es la estructura resultante del proyecto:</p>\n<p><img alt=\"Estructura del Proyecto\" src=\"https://s3.amazonaws.com/krypton/20140222-django-layout.png\" title=\"Estructura del Proyecto\"></p>\n<h3 id=\"registro-de-cambios\">Registro de cambios</h3>\n<p>Vamos a repetir el proceso de control de versiones, enviando estos cambios a la rama <code>master</code> de nuestro repositorio, siguiendo los mismo pasos que vimos al principio:</p>\n<ol>\n<li>Registrar el cambio con <code>add</code></li>\n<li>Enviar los cambios al <code>HEAD</code> con <code>commit</code></li>\n<li>Enviar la revisi\u00f3n a la rama maestra con <code>push</code></li>\n</ol>\n<pre>\n(cmi)namespace:cmi javier$ git add .\n(cmi)namespace:cmi javier$ git commit -m \"Creacion del proyecto con Python\"\n[master 627d8aa] Creacion del proyecto con Python\n8 files changed, 130 insertions(+)\ncreate mode 100644 cmi/cmi/__init__.py\ncreate mode 100644 cmi/cmi/settings.py\ncreate mode 100644 cmi/cmi/urls.py\ncreate mode 100644 cmi/cmi/wsgi.py\ncreate mode 100644 cmi/core/__init__.py\ncreate mode 100644 cmi/core/admin.py\ncreate mode 100644 cmi/core/models.py\ncreate mode 100644 cmi/core/tests.py\ncreate mode 100644 cmi/core/views.py\ncreate mode 100644 cmi/manage.py\n(cmi)namespace:cmi javier$ git push origin master\nCounting objects: 15, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (13/13), done.\nWriting objects: 100% (14/14), 2.45 KiB, done.\nTotal 14 (delta 0), reused 0 (delta 0)\nTo https://github.com/jstoledano/cmi.git\n385b261..627d8aa  master -> master\n</pre>\n\n<p>Como pueden ver, ahora use <code>git add .</code> para enviar todos los cambios que se encuentren a partir del directorio del proyecto, porque todos los cambios forman parte de la misma revisi\u00f3n.</p>\n<p>Esta es la nueva forma de trabajar con Git. M\u00e1s adelante, conform avence el proyecto veremos otras funciones del control de versiones y como se usan en el cuadro de mando.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "guia-git", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 55, "fields": {"idx": "aa22e94e-fb62-43c1-8b50-47f168d47dc5", "creado": "2017-07-29T03:28:32.611Z", "modificado": "2017-07-29T03:28:32.611Z", "title": "Implementaci\u00f3n de un sistema de avisos", "summary": "", "body": "Title: Implementaci\u00f3n de un sistema de avisos\r\nDate: 2014/03/01 13:31\r\nCategory: Desarrollo\r\nTags: python, patterns\r\nSlug: sistema-de-avisos-01\r\nAuthor: Javier Sanchez Toledano\r\nemail: javier@namespace.mx\r\nSummary: Inicia la implementaci\u00f3n del sistema de avisos para el cuadro de mando 2014.\r\n\r\nLa primera aplicaci\u00f3n que agregamos al Cuadro de Mando 2014[^1] es `avisos`. La funci\u00f3n es muy simple y es dar a conocer informaci\u00f3n relevante sobre el sistema de gesti\u00f3n de la calidad a los que visitan el sitio. Sin embargo, esta aplicaci\u00f3n es subutilizada. No sabemos qui\u00e9nes leyeron los mensajes y quien nunca han visitado la aplicaci\u00f3n. Por lo tanto queremos darle m\u00e1s relevancia a los avisos.\r\n\r\n[^1]: De ahora en adelante, lo vamos a llamar simplemente **CMI**.\r\n\r\nDentro de nuestro objetivo de aprender Django usando el CMI, la aplicaci\u00f3n `avisos` ser\u00e1 creada como un blog. Es decir, los avisos ser\u00e1n los _posts_, _entries_ o entradas, como quieran decirle. Nuestro primer objetivo es crear la aplicaci\u00f3n que funcione como un blog, ya que solo tiene un t\u00edtulo y el contenido. Un objetivo secundario, ser\u00e1 crear los modelos usando _mixins_ de creaci\u00f3n. Adicionalmente, como segundo objetivo secundario, vamos a utilizar __South__ para preparar nuestro aplicaci\u00f3n para futuras migraciones.\r\n\r\nEl segundo objetivo es mejorar la aplicaci\u00f3n, creando anuncios permantes, como _sticky post_ y anuncios importantes que solo estar\u00e1n resaltados hasta una fecha determinada. Agregaremos dos campos, uno para marcar los _sticky post_ y otro de tipo fecha para indicar la fecha en la que estar\u00e1 disponible el anuncio.  Como la base de datos ya est\u00e1 creada, un objetivo secundario ser\u00e1 aplicar migraciones a un modelo existente.\r\n\r\nEl tercer objetivo es crear un sistema de alertas para indicarle a los usuarios que hay avisos nuevos o no le\u00eddos, usando _badges_ o etiquetas en la barra de navegaci\u00f3n y junto al perfil del usuario[^2]. Como objetivos secundarios, ser\u00e1 aprender el uso de _cookies_ para establecer u obtener el estado de un usuario. Igualmente vamos a aprender como enviar notificaciones entre aplicaciones.\r\n\r\nUna vez definido el _roadmap_ de nuestra aplicaci\u00f3n y los _milistones_ para este proyecto vamos a empezar con el primer paso, que es es crear la aplicaci\u00f3n `avisos`.\r\n\r\n## Aplicaci\u00f3n Avisos, primera parte\r\n\r\nAl terminar este proyecto el Cuadro de Mando Integral contar\u00e1 con una aplicaci\u00f3n que permita dar a conocer a los usuarios informaci\u00f3n y noticias relevantes para el Sistema de Gesti\u00f3n de la Calidad.\r\n\r\n### Objetivos\r\n\r\n1. Crear una aplicaci\u00f3n tipo _blogging_\r\n    1. Crear una aplicaci\u00f3n tipo blogging\r\n    3. Permitir la edici\u00f3n de anuncios usando __Markdonw__\r\n    4. Crear vista para el archivo de avisos\r\n2. Crear un modelo usando _mixins_ para creaci\u00f3n, modificaci\u00f3n y autor.\r\n3. Sincronizar la base usando South para manejar las migraciones.\r\n\r\n### Crear una aplicaci\u00f3n con Django\r\n\r\nLo primero que tenemos que hacer es activar nuestro entorno de trabajo, usando el siguiente comando\r\n\r\n    :::bash\r\n    namespace:cmi javier$ workon cmi\r\n    (cmi)namespace:cmi javier$\r\n\r\nAhora usamos `manage.py` para crear nuestra aplicaci\u00f3n usando el comando `startapp`:\r\n\r\n    :::bash\r\n    (cmi)namespace:cmi javier$ python manage.py startapp avisos\r\n\r\nEsto crea la estructura de la aplicaci\u00f3n que tiene esta forma:\r\n\r\n    :::bash\r\n    (cmi)namespace:avisos javier$ ls -l\r\n    total 32\r\n    -rw-r--r--  1 javier  staff   0 Mar  1 14:07 __init__.py\r\n    -rw-r--r--  1 javier  staff  63 Mar  1 14:07 admin.py\r\n    -rw-r--r--  1 javier  staff  57 Mar  1 14:07 models.py\r\n    -rw-r--r--  1 javier  staff  60 Mar  1 14:07 tests.py\r\n    -rw-r--r--  1 javier  staff  63 Mar  1 14:07 views.py\r\n\r\nEs muy importante, si creamos nuestra aplicaci\u00f3n sin el auxilio de `manage.py` que nos aseguremos que tenemos un archivo `__init__.py` para indicarle a Python que el directorio es un __m\u00f3dulo__.\r\n\r\n### Los Mixins\r\n\r\nLos _mixins_, que podemos traducir como _mezcladores_, son fragmentos de c\u00f3digo reutilizables que sirven como base para crear c\u00f3digo m\u00e1s complejo utilizando la base que proporcionan.\r\n\r\nEn el cuadro de mando, tal como lo indica la Norma ISO 9001, debemos identificar los registros y permitir la trazabilidad. Por lo tanto, debemos agregar a todos los registros de nuestro CMI, el _timestamp_ de la creaci\u00f3n y modificaci\u00f3n del registro, as\u00ed como el autor del mismo.\r\n\r\nTodas las aplicaciones cuentan con estos tres datos, por lo tanto, resulta una buena pr\u00e1ctica crear un modelo base que herede estos campos a todos los modelos del CMI, por lo que creamos el _mixin_ para cumplir con este objetivo.\r\n\r\nCon respecto al usuario, vamos a usar una aproximaci\u00f3n dependiente del modelo y del formulario, pero los campos de _timestamp_ son perfectos para este _mixin_.\r\n\r\nY ya que tenemos una aplicaci\u00f3n que es de uso com\u00fan, llamada `core`, vamos a crear ah\u00ed el _mixin_ del modelo `trazabilidad`.\r\n\r\n    :::Python\r\n    class Trazabilidad(models.Model):\r\n        \"\"\"\r\n        Una clase abstracta que sirve de base para modelos.\r\n        Actualiza autom\u00e1ticamente los campos ``creado`` y ``modificado``.\r\n        \"\"\"\r\n        creado = models.DateTimeField(auto_now_add=True)\r\n        modificado = models.DateTimeField(auto_now=True)\r\n        class Meta:\r\n            abstract = True\r\n\r\nLa caracter\u00edstica principal de este modelo, es que se define como tipo abstracto, es decir, por si mismo, este modelo no puede crear una tabla, sino que usa como base para otros modelos. Es, por definici\u00f3n, un modelo __heredable__. Los campos se definen como `DateTimeField` lo que es equivalente al _timestap_. El campo `creado` se actualiza una sola vez, cuando se crea, pero el campo `modificado` se actualiza _cada vez_ que se modifica el registro.\r\n\r\nY este es precisamente el objetivo de este _mixin_. Heredar estos campos a todos los modelos, con lo que obedecemos el principio DRY de Django.\r\n\r\n### Uso de _mixins_ en modelos de Django\r\n\r\nPara usar este _mixin_ en nuestra aplicaci\u00f3n de avisos, debemos importar este modelo, y usarlo como __constructor__ para nuestra clase `Aviso`.\r\n\r\n    :::Python\r\n    from django.db import models\r\n    from core.models import Trazabilidad\r\n\r\n    class Aviso(Trazabilidad):\r\n\r\nDe esta manera, tenemos disponibles todas las funciones de `models` y `Trazabalidad`. Por lo que ahora solo tenemos que ocuparnos del modelo en si mismo y dejamos la indentificaci\u00f3n y trazabilidad que indica la norma ISO 9001 en manos de nuestro _mixin_.\r\n\r\n### Markdown en modelos de Django\r\n\r\nPara facilitar la redacci\u00f3n de los avisos, vamos a usar __Markdown__, un potente formateador de texto, pero a la vez simple de utilizar[^3].  Entonces, debemos instalar el paquete __Python-Markdown__ en nuestro entorno de desarrollo usando `pip`:\r\n\r\n    :::Bash\r\n    (cmi)namespace:aviso javier$ pip install markdown\r\n    Downloading/unpacking markdown\r\n      Downloading Markdown-2.4.tar.gz (260kB): 260kB downloaded\r\n      Running setup.py egg_info for package markdown\r\n\r\n    Installing collected packages: markdown\r\n      Running setup.py install for markdown\r\n\r\n      [... muchas l\u00edneas m\u00e1s ...]\r\n\r\n        changing mode of /Users/javier/entornos/cmi/bin/markdown_py to 755\r\n    Successfully installed markdown\r\n    Cleaning up...\r\n\r\nMarkdown tiene una serie de extensiones o _plugins_ muy \u00fatiles, incluyendo extenciones que permiten colorear el c\u00f3digo, trabajar m\u00e1s eficientemente con listas, con tablas, con las alertas, con notas al pie, etc.\r\n\r\nVamos a importar el m\u00f3dulo `markdown` a nuestro modelo `avisos` y a definir las extencioes que queremos usar.\r\n\r\n    :::Python\r\n    import markdown\r\n\r\n    MD_EXT = ['meta', 'abbr', 'attr_list', 'def_list', 'fenced_code', 'footnotes', 'smart_strong', 'tables',\r\n              'headerid', 'sane_lists', 'smartypants', 'toc', 'admonition']\r\n\r\n\r\n### Sobreescribir el m\u00e9todo `save()`  en un modelo\r\n\r\nTenemos todo lo necesario para definir nuestro modelo, as\u00ed que vamos a revisarlo y a explicar como trabajaremos con Markdown.\r\n\r\n    :::Python\r\n    class Aviso(Trazabilidad):\r\n        titulo = models.CharField(max_length=60)\r\n        slug = models.SlugField()\r\n        texto_md = models.TextField()\r\n        texto_html = models.TextField()\r\n        autor = models.ForeignKey(User, related_name='avisos', editable=False)\r\n\r\nNuestro modelo tiene siete campos, cinco est\u00e1n definidos en el modelo y dos campos heredados del _mixin_ `Trazabilidad`. Pero de estos siete campos, cinco son autom\u00e1ticos y solo dos son editables por el usuario: `titulo` y `texto_md`. Los dem\u00e1s campos se calculan al momento de guardar el registro, sobreescribiendo el m\u00e9todo `save()`.\r\n\r\n!!! notice \"Markdown: Convi\u00e9rtase antes de usar\"\r\n    Una forma tradicional de utilizar Markdown era mandar el texto directamente a la plantilla y usar un filtro para convertirlo. Este ten\u00eda que pasar cada vez que un usuario solicitaba la p\u00e1gina. Evidentemente, el gasto era excesivo, por eso Django depreci\u00f3 los filtros a partir de la versi\u00f3n 1.5.\r\n\r\n    La forma en la que se hace ahora resulta ser mucho m\u00e1s eficiente. Se almacena el texto en formato `markdown` en un campo y en otro campo el texto convertido en `html` que se actualiza autom\u00e1ticamente cada vez que el campo `markdown` cambia.\r\n\r\n    La conversi\u00f3n a `html` puede ser lenta, pero se hace al momento de edici\u00f3n y no al momento de la presentaci\u00f3n. A los usuarios se les env\u00eda el c\u00f3digo `html` que es la forma m\u00e1s r\u00e1pida de mostrar informaci\u00f3n en la web.\r\n\r\n    Para convertir un texto `markdown` a `html`, usamos el m\u00e9todo `markdown.markdown()` que toma como argumentos `texto_md` que es el campo que contiene el aviso, el formato de salida especificado como HTML5 en `output_format=html5`, `lazy_ol=True` para crear listas numeradas de forma sencilla y la lista de extenciones que ya hab\u00edamos creado en `extensions=MD_EXT`. El texto convertido se guarda en el campo `texto_html` que estar\u00e1 siempre listo para presentaci\u00f3n sin p\u00e9rdidas de tiempo en la conversi\u00f3n.\r\n\r\nAhora vamos a crear una m\u00e9todo `save()` que sobreescribir\u00e1 al m\u00e9todo por default con las funciones que necesita nuestra aplicaci\u00f3n de avisos, que son: la creaci\u00f3n del _slug_ o nombre corto, la conversi\u00f3n del texto de `markdown` a `html`. Nos faltar\u00e1 una m\u00e1s para poblar el campo `autor`, pero eso se har\u00e1 en la secci\u00f3n del panel de control de nuestra aplicaci\u00f3n m\u00e1s adelante.\r\n\r\nEste es el nuevo m\u00e9todo `save()`:\r\n\r\n    :::python\r\n    def save(self, force_insert=False, force_update=False):\r\n        self.texto_html = markdown.markdown(self.texto_md, output_format='html5', lazy_ol=True, extensions=MD_EXT)\r\n        self.slug = slugify(self.titulo)\r\n        super(Aviso, self).save(*args, **kwargs)\r\n\r\nCon este m\u00e9todo nos aseguramos que el texto est\u00e1 en `html` listo para ser presentado y que el aviso tiene un nombre corto para poder usarlo en la URL.\r\n\r\n#### M\u00e9todos adicionales para el modelo `avisos`\r\n\r\nHay dos m\u00e9todos m\u00e1s para nuestro modelo y una clase especial llamada `Meta` que sirve para darle informaci\u00f3n al _framework_ Django sobre nuestro modelo.\r\n\r\n__`__unicode__`__\r\n:    El m\u00e9todo `__unicode__` define la forma en que nuestro modelo responde a las llamadas. Podemos formar una cadenda de texto de respuesta a la llamda de este m\u00e9todo.\r\n\r\n        :::Python\r\n        def __unicode__(self):\r\n            return self.titulo.decode('utf-8')\r\n\r\n__`get_absolute_url`__\r\n:   Este m\u00e9todo devuelve la URL de nuestro aviso, de modo que podamos usarla en nuestra plantilla.\r\n\r\n        :::Python\r\n        def get_absolute_url(self):\r\n            return \"/aviso/%s/%s/\" % (self.creado.strftime(\"%Y/%b/%d\"), self.slug)\r\n\r\n__`class Meta`__\r\n:   En esta clase interna dentro de nuestro modelo de aviso, colocamos informaci\u00f3n que es visible dentro del panel de control del CMI, definimos como llamamos a nuestros registros en singular y en plurar y opciones de ordenaci\u00f3n.\r\n\r\n        :::Python\r\n        class Meta:\r\n            verbose_name = \"Aviso\"\r\n            verbose_name_plural = \"Avisos\"\r\n            ordering = [\"-creado\"]\r\n            get_latest_by = 'creado'\r\n\r\nEste es el c\u00f3digo completo del modelo:\r\n\r\n    :::Python\r\n    # -*- coding: utf-8 -*-\r\n    #    nombre: cmi.avisos.models\r\n    #       app: cmi.avisos\r\n    #      desc: Modelos para la apps de Avisos del Sistema\r\n\r\n    from django.contrib.auth.models import User\r\n    from django.db import models\r\n    from django.template.defaultfilters import slugify\r\n    from core.models import Trazabilidad\r\n\r\n\r\n    class Aviso(Trazabilidad):\r\n        '''\r\n        La aplicaci\u00f3n `aviso` crea post o entradas tipo blog, que funcionar\u00e1n como\r\n        avisos en el cuadro de mando. Y al igual que un blog, podr\u00e1n mostrarse en una lista\r\n        paginada o de forma individual. Se mantienen registros del autor del aviso y de la fecha y\r\n        hora de creaci\u00f3n y de la \u00faltima modificaci\u00f3n.\r\n\r\n        El modelo tiene una propiedad `get_absolute_url` que devuelve la URL en forma de `aaaa/mm/dd/slug`.\r\n\r\n        Los slugs o nombre corto deben ser exclusivos por d\u00eda, es decir, en el mismo d\u00eda no puede\r\n        haber dos slugs iguales.\r\n        '''\r\n        titulo = models.CharField(max_length=60)\r\n        slug = models.SlugField()\r\n        texto_md = models.TextField()\r\n        texto_html = models.TextField()\r\n        autor = models.ForeignKey(User, related_name='avisos', editable=False)\r\n\r\n        def __unicode__(self):\r\n            return self.titulo.decode('utf-8')\r\n\r\n        def save(self, *args, **kwargs):\r\n            self.slug = slugify(self.titulo)\r\n            super(Aviso, self).save(*args, **kwargs)\r\n\r\n        def get_absolute_url(self):\r\n            return \"/aviso/%s/%s/\" % (self.creado.strftime(\"%Y/%b/%d\"), self.slug)\r\n\r\n        class Meta:\r\n            verbose_name = \"Aviso\"\r\n            verbose_name_plural = \"Avisos\"\r\n            ordering = [\"-creado\"]\r\n            get_latest_by = 'creado'\r\n\r\n## El panel de control de `avisos`\r\n\r\nCuando creamos nuestra aplicaci\u00f3n se cre\u00f3 tambi\u00e9n un archivo llamado `admin.py` cuya funci\u00f3n es configurar la parte administrativa de nuestra aplicaci\u00f3n[^4]. Para nuestra aplicaci\u00f3n de avisos, el m\u00f3dulo de administraci\u00f3n es muy simple, como ver\u00e1n a continuaci\u00f3n:\r\n\r\n    :::Python\r\n    # -*- coding: utf-8 -*-\r\n    #    nombre: cmi.avisos.admin\r\n    #       app: cmi.avisos\r\n    #      desc: Clases para la administraci\u00f3n de avisos\r\n\r\n    from django.contrib import admin\r\n    from avisos.models import Aviso\r\n\r\n    class AvisoAdmin(admin.ModelAdmin):\r\n        prepopulated_fields = {\"slug\": (\"titulo\",)}\r\n        search_fields = [\"titulo\"]\r\n\r\n        def save_model(self, request, obj, form, change):\r\n            obj.autor = request.user\r\n            obj.save()\r\n\r\n    admin.site.register(Aviso, AvisoAdmin)\r\n\r\nEl m\u00f3dulo `django.contrib.admin` conecta nuestro modelo con la parte administrativa del _framework_. Al crear la clase indicamos dos propiedades importantes, la primera es `prepopulated_fields` son campos que se rellenan autom\u00e1ticamente. El diccionario indica que el campo `slug` se crea con el `titulo`. Tami\u00e9n indicamos que queremos buscar los avisos usando el `titulo`.\r\n\r\nTambi\u00e9n definimos un nuevo m\u00e9todo `save_model` que se activa, como su nombre lo dice al guardar el modelo. Lo creamos para tomar la solicitud o _request_ y guardar el autor tomando el `request.user` o sea, el usuario registrado.\r\n\r\n## Vistas para la aplicaci\u00f3n `avisos`\r\n\r\nPara cubrir el primer objetivo de esta iteraci\u00f3n vamos a crear la vista que muestre los anuncios m\u00e1s recientes. En los art\u00edculos siguientes de esta serie, para mejorar la presentaci\u00f3n de los anuncios, haremos una vista para presentar los anuncios individuales y crearemos la paginaci\u00f3n para el archivo. En la tercera iteraci\u00f3n, crearemos los formularios para editar y crear avisos.\r\n\r\nPara facilitarnos el trabajo con vistas, nos vamos a apoyar del paquete `django-annoying`[^5] que tiene un decorador o _decorator_ que facilita enormemente la vida. Solo tenemos que invocarlo con el nombre del dominio y regresar la vista con los diccionarios de datos.\r\n\r\nMiren lo que les digo\r\n\r\n    :::Python\r\n    from annoying.decorators import render_to\r\n    from avisos.models import Aviso\r\n\r\n    @render_to('avisos/index.html')\r\n    def index(request):\r\n        avisos = Aviso.objects.all().order_by(\"-creado\")\r\n        return {'avisos':avisos}\r\n\r\nIncluso, podemos colocar en el `return` el _QuerySet_ directamente, con lo que nos ahorramos incluso esa l\u00ednea.\r\n\r\nEsta simple vista nos permite crear la lista de anuncios, con la observaci\u00f3n que todos los avisos aparecen en una sola p\u00e1gina.\r\n\r\nPara terminar con la vista, vamos a crear el patr\u00f3n de b\u00fasqueda que URL que nos permita llamar a esta funci\u00f3n. Para esto usaremos el archivo `urls.py`.\r\n\r\n    :::Python\r\n    from django.conf.urls import patterns, url\r\n\r\n    urlpatterns = patterns('avisos.views',\r\n       url(r\"^$\", \"index\", name=\"avisos\"),\r\n    )\r\n\r\n## La plantilla para `avisos`\r\n\r\nLa \u00faltima parte de esta primera iteaci\u00f3n de la aplicaci\u00f3n `avisos` consiste en crear una plantilla. Nos vamos a concentrar en crear \u00fanicamente la plantilla para avisos porque en este mismo blog puedes encontrar la serie sobre las plantillas modulares.\r\n\r\nLa plantilla, lo \u00fanico que hace es usar un ciclo `for` para recorrer la lista de avisos. Veamos como queda:\r\n\r\n    :::HTML\r\n    {% block contenido %}\r\n    <div class=\"page-header\">\r\n      <h1>Avisos del Sistema</h1>\r\n    </div>\r\n    <!-- avisos  -->\r\n    <div class=\"avisos\">\r\n      {% for aviso in avisos.object_list %}\r\n      <div class\"entry\">\r\n        <h2>{{ aviso.titulo }}</h2>\r\n        <div class=\"meta\">\r\n          <i class=\"icon-calendar\"></i>\r\n            {{ aviso.creado }}\r\n          <i class=\"icon-user\"></i>\r\n            {{aviso.autor.first_name}} {{aviso.autor.last_name}}\r\n          {% if user.is_authenticated %}\r\n            <a href=\"/avisos/editar/{{aviso.id}}/\">\r\n            <i class=\"icon-pencil-2\"></i>\r\n              Editar</a>\r\n          {% endif %}\r\n        </div><!-- ./meta -->\r\n        <p>\r\n          {{ aviso.texto|safe }}\r\n        </p>\r\n        <hr />\r\n      </div><!-- ./entry -->\r\n      {% endfor %}\r\n    </div><!-- ./aviso -->\r\n    {% endblock content %}\r\n\r\n\r\nLo que vemos es que, efectivamente, la plantilla trata a los avisos como un blog y nos prepara para la siguiente fase de mejora: la presentaci\u00f3n de entradas individuales y la edici\u00f3n de los avisos.\r\n\r\n## Sincronizaci\u00f3n de la tabla `avisos`\r\n\r\nPor \u00faltimo, igualmente en preparaci\u00f3n de la segunda y tercera fase de mejora, vamos a sincronizar nuestra tabla `avisos` y a prepararla con `South`[^6] para migrarla a nuevas configuraciones conforme lo requiera la mejora.\r\n\r\nAdem\u00e1s de instalarla con `pip` con el entorno virtual activado, hay que agregar `south` a la lista de aplicaciones instaladas en nuestra configuraci\u00f3n.\r\n\r\nRecordemos que es la primera sincronizaci\u00f3n que vamos a hacer, as\u00ed que veremos este proceso completo, por primera _y \u00fanica_ vez. Y tambi\u00e9n por \u00fanica vez lo haremos __sin nuestro modelo activado__.\r\n\r\nEmpezamos sincronizando la base de datos y creando el usuario administrador. Esta es la salida de este comando:\r\n\r\n    :::Bash\r\n    (cmi)namespace:cmi javier$ python manage.py syncdb\r\n    Syncing...\r\n    Creating tables ...\r\n    Creating table django_admin_log\r\n    Creating table auth_permission\r\n    Creating table auth_group_permissions\r\n    Creating table auth_group\r\n    Creating table auth_user_groups\r\n    Creating table auth_user_user_permissions\r\n    Creating table auth_user\r\n    Creating table django_content_type\r\n    Creating table django_session\r\n    Creating table south_migrationhistory\r\n\r\n    You just installed Django's auth system, which means you don't have any superusers defined.\r\n    Would you like to create one now? (yes/no): yes\r\n    Username (leave blank to use 'javier'): javier\r\n    Email address: javier@namespace.mx\r\n    Password:\r\n    Password (again):\r\n    Superuser created successfully.\r\n    Installing custom SQL ...\r\n    Installing indexes ...\r\n    Installed 0 object(s) from 0 fixture(s)\r\n\r\n    Synced:\r\n     > django.contrib.admin\r\n     > django.contrib.auth\r\n     > django.contrib.contenttypes\r\n     > django.contrib.sessions\r\n     > django.contrib.messages\r\n     > django.contrib.staticfiles\r\n     > south\r\n\r\n    Not synced (use migrations):\r\n     -\r\n    (use ./manage.py migrate to migrate these)\r\n\r\nAhora, agregamos la aplicaci\u00f3n `avisos` a la lista de aplicaciones instaladas y realizamos la migraci\u00f3n inicial. Veamos que es lo que hace este comando:\r\n\r\n    :::Bash\r\n    (cmi)namespace:cmi javier$ python manage.py schemamigration avisos --initial\r\n    Creating migrations directory at '/Users/javier/Documents/Proyectos/cmi/cmi/avisos/migrations'...\r\n    Creating __init__.py in '/Users/javier/Documents/Proyectos/cmi/cmi/avisos/migrations'...\r\n     + Added model avisos.Aviso\r\n    Created 0001_initial.py. You can now apply this migration with: ./manage.py migrate avisos\r\n\r\nCrea el directorio y los scripts de migraci\u00f3n para nuestra aplicaci\u00f3n. Este comando (`python manage.py schemamigration aplicacion --initial`) es el que vamos a ejecutar cada vez que agreguemos nuevos modelos al CMI.\r\n\r\nEn la tercera mejora de `avisos` veremos como aplicar los cambios de nuestros modelos a la base de datos.\r\n\r\n## Conclusi\u00f3n\r\n\r\nCrear la primera aplicaci\u00f3n, un blog, es relativamente sencillo. En las mejoras programadas para esta aplicaci\u00f3n iremos conociendo nuevos patrones de programaci\u00f3n aplicados al Cuadro de Mando.\r\n\r\nTambi\u00e9n empezaremos la aplicaci\u00f3n `metas` que es la m\u00e1s compleja del sistema. Y veremos como representar gr\u00e1ficos estad\u00edsticos con Django.\r\n\r\n[^2]: Como el n\u00famero que sale en Google Chrome junto a la campanita, o el contador de mensajes no le\u00eddos en los clientes de correo.\r\n\r\n[^3]: Puedes consultar la ayuda para usar Markdown directamente en el sitio de su creador, [Daring Fireball](http://j.mp/ns-ayuda-markdown).\r\n\r\n[^4]: La referencia oficial: http://j.mp/ns-doc-django-admin\r\n\r\n[^5]: http://j.mp/ns-django-annoying\r\n\r\n[^6]: http://j.mp/ns-django-south", "extend": "", "pub_date": "2014-03-01T19:31:00Z", "summary_html": "", "body_html": "<p>La primera aplicaci\u00f3n que agregamos al Cuadro de Mando 2014<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> es <code>avisos</code>. La funci\u00f3n es muy simple y es dar a conocer informaci\u00f3n relevante sobre el sistema de gesti\u00f3n de la calidad a los que visitan el sitio. Sin embargo, esta aplicaci\u00f3n es subutilizada. No sabemos qui\u00e9nes leyeron los mensajes y quien nunca han visitado la aplicaci\u00f3n. Por lo tanto queremos darle m\u00e1s relevancia a los avisos.</p>\n<p>Dentro de nuestro objetivo de aprender Django usando el CMI, la aplicaci\u00f3n <code>avisos</code> ser\u00e1 creada como un blog. Es decir, los avisos ser\u00e1n los <em>posts</em>, <em>entries</em> o entradas, como quieran decirle. Nuestro primer objetivo es crear la aplicaci\u00f3n que funcione como un blog, ya que solo tiene un t\u00edtulo y el contenido. Un objetivo secundario, ser\u00e1 crear los modelos usando <em>mixins</em> de creaci\u00f3n. Adicionalmente, como segundo objetivo secundario, vamos a utilizar <strong>South</strong> para preparar nuestro aplicaci\u00f3n para futuras migraciones.</p>\n<p>El segundo objetivo es mejorar la aplicaci\u00f3n, creando anuncios permantes, como <em>sticky post</em> y anuncios importantes que solo estar\u00e1n resaltados hasta una fecha determinada. Agregaremos dos campos, uno para marcar los <em>sticky post</em> y otro de tipo fecha para indicar la fecha en la que estar\u00e1 disponible el anuncio.  Como la base de datos ya est\u00e1 creada, un objetivo secundario ser\u00e1 aplicar migraciones a un modelo existente.</p>\n<p>El tercer objetivo es crear un sistema de alertas para indicarle a los usuarios que hay avisos nuevos o no le\u00eddos, usando <em>badges</em> o etiquetas en la barra de navegaci\u00f3n y junto al perfil del usuario<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>. Como objetivos secundarios, ser\u00e1 aprender el uso de <em>cookies</em> para establecer u obtener el estado de un usuario. Igualmente vamos a aprender como enviar notificaciones entre aplicaciones.</p>\n<p>Una vez definido el <em>roadmap</em> de nuestra aplicaci\u00f3n y los <em>milistones</em> para este proyecto vamos a empezar con el primer paso, que es es crear la aplicaci\u00f3n <code>avisos</code>.</p>\n<h2 id=\"aplicacion-avisos-primera-parte\">Aplicaci\u00f3n Avisos, primera parte</h2>\n<p>Al terminar este proyecto el Cuadro de Mando Integral contar\u00e1 con una aplicaci\u00f3n que permita dar a conocer a los usuarios informaci\u00f3n y noticias relevantes para el Sistema de Gesti\u00f3n de la Calidad.</p>\n<h3 id=\"objetivos\">Objetivos</h3>\n<ol>\n<li>Crear una aplicaci\u00f3n tipo <em>blogging</em><ol>\n<li>Crear una aplicaci\u00f3n tipo blogging</li>\n<li>Permitir la edici\u00f3n de anuncios usando <strong>Markdonw</strong></li>\n<li>Crear vista para el archivo de avisos</li>\n</ol>\n</li>\n<li>Crear un modelo usando <em>mixins</em> para creaci\u00f3n, modificaci\u00f3n y autor.</li>\n<li>Sincronizar la base usando South para manejar las migraciones.</li>\n</ol>\n<h3 id=\"crear-una-aplicacion-con-django\">Crear una aplicaci\u00f3n con Django</h3>\n<p>Lo primero que tenemos que hacer es activar nuestro entorno de trabajo, usando el siguiente comando</p>\n<div class=\"codehilite\"><pre><span></span>namespace:cmi javier$ workon cmi\n<span class=\"o\">(</span>cmi<span class=\"o\">)</span>namespace:cmi javier$\n</pre></div>\n\n\n<p>Ahora usamos <code>manage.py</code> para crear nuestra aplicaci\u00f3n usando el comando <code>startapp</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>cmi<span class=\"o\">)</span>namespace:cmi javier$ python manage.py startapp avisos\n</pre></div>\n\n\n<p>Esto crea la estructura de la aplicaci\u00f3n que tiene esta forma:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>cmi<span class=\"o\">)</span>namespace:avisos javier$ ls -l\ntotal <span class=\"m\">32</span>\n-rw-r--r--  <span class=\"m\">1</span> javier  staff   <span class=\"m\">0</span> Mar  <span class=\"m\">1</span> <span class=\"m\">14</span>:07 __init__.py\n-rw-r--r--  <span class=\"m\">1</span> javier  staff  <span class=\"m\">63</span> Mar  <span class=\"m\">1</span> <span class=\"m\">14</span>:07 admin.py\n-rw-r--r--  <span class=\"m\">1</span> javier  staff  <span class=\"m\">57</span> Mar  <span class=\"m\">1</span> <span class=\"m\">14</span>:07 models.py\n-rw-r--r--  <span class=\"m\">1</span> javier  staff  <span class=\"m\">60</span> Mar  <span class=\"m\">1</span> <span class=\"m\">14</span>:07 tests.py\n-rw-r--r--  <span class=\"m\">1</span> javier  staff  <span class=\"m\">63</span> Mar  <span class=\"m\">1</span> <span class=\"m\">14</span>:07 views.py\n</pre></div>\n\n\n<p>Es muy importante, si creamos nuestra aplicaci\u00f3n sin el auxilio de <code>manage.py</code> que nos aseguremos que tenemos un archivo <code>__init__.py</code> para indicarle a Python que el directorio es un <strong>m\u00f3dulo</strong>.</p>\n<h3 id=\"los-mixins\">Los Mixins</h3>\n<p>Los <em>mixins</em>, que podemos traducir como <em>mezcladores</em>, son fragmentos de c\u00f3digo reutilizables que sirven como base para crear c\u00f3digo m\u00e1s complejo utilizando la base que proporcionan.</p>\n<p>En el cuadro de mando, tal como lo indica la Norma ISO 9001, debemos identificar los registros y permitir la trazabilidad. Por lo tanto, debemos agregar a todos los registros de nuestro CMI, el <em>timestamp</em> de la creaci\u00f3n y modificaci\u00f3n del registro, as\u00ed como el autor del mismo.</p>\n<p>Todas las aplicaciones cuentan con estos tres datos, por lo tanto, resulta una buena pr\u00e1ctica crear un modelo base que herede estos campos a todos los modelos del CMI, por lo que creamos el <em>mixin</em> para cumplir con este objetivo.</p>\n<p>Con respecto al usuario, vamos a usar una aproximaci\u00f3n dependiente del modelo y del formulario, pero los campos de <em>timestamp</em> son perfectos para este <em>mixin</em>.</p>\n<p>Y ya que tenemos una aplicaci\u00f3n que es de uso com\u00fan, llamada <code>core</code>, vamos a crear ah\u00ed el <em>mixin</em> del modelo <code>trazabilidad</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Trazabilidad</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Una clase abstracta que sirve de base para modelos.</span>\n<span class=\"sd\">    Actualiza autom\u00e1ticamente los campos ``creado`` y ``modificado``.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">creado</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">(</span><span class=\"n\">auto_now_add</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">modificado</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">(</span><span class=\"n\">auto_now</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">abstract</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n</pre></div>\n\n\n<p>La caracter\u00edstica principal de este modelo, es que se define como tipo abstracto, es decir, por si mismo, este modelo no puede crear una tabla, sino que usa como base para otros modelos. Es, por definici\u00f3n, un modelo <strong>heredable</strong>. Los campos se definen como <code>DateTimeField</code> lo que es equivalente al <em>timestap</em>. El campo <code>creado</code> se actualiza una sola vez, cuando se crea, pero el campo <code>modificado</code> se actualiza <em>cada vez</em> que se modifica el registro.</p>\n<p>Y este es precisamente el objetivo de este <em>mixin</em>. Heredar estos campos a todos los modelos, con lo que obedecemos el principio DRY de Django.</p>\n<h3 id=\"uso-de-mixins-en-modelos-de-django\">Uso de <em>mixins</em> en modelos de Django</h3>\n<p>Para usar este <em>mixin</em> en nuestra aplicaci\u00f3n de avisos, debemos importar este modelo, y usarlo como <strong>constructor</strong> para nuestra clase <code>Aviso</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">core.models</span> <span class=\"kn\">import</span> <span class=\"n\">Trazabilidad</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Aviso</span><span class=\"p\">(</span><span class=\"n\">Trazabilidad</span><span class=\"p\">):</span>\n</pre></div>\n\n\n<p>De esta manera, tenemos disponibles todas las funciones de <code>models</code> y <code>Trazabalidad</code>. Por lo que ahora solo tenemos que ocuparnos del modelo en si mismo y dejamos la indentificaci\u00f3n y trazabilidad que indica la norma ISO 9001 en manos de nuestro <em>mixin</em>.</p>\n<h3 id=\"markdown-en-modelos-de-django\">Markdown en modelos de Django</h3>\n<p>Para facilitar la redacci\u00f3n de los avisos, vamos a usar <strong>Markdown</strong>, un potente formateador de texto, pero a la vez simple de utilizar<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup>.  Entonces, debemos instalar el paquete <strong>Python-Markdown</strong> en nuestro entorno de desarrollo usando <code>pip</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>cmi<span class=\"o\">)</span>namespace:aviso javier$ pip install markdown\nDownloading/unpacking markdown\n  Downloading Markdown-2.4.tar.gz <span class=\"o\">(</span>260kB<span class=\"o\">)</span>: 260kB downloaded\n  Running setup.py egg_info <span class=\"k\">for</span> package markdown\n\nInstalling collected packages: markdown\n  Running setup.py install <span class=\"k\">for</span> markdown\n\n  <span class=\"o\">[</span>... muchas l\u00edneas m\u00e1s ...<span class=\"o\">]</span>\n\n    changing mode of /Users/javier/entornos/cmi/bin/markdown_py to <span class=\"m\">755</span>\nSuccessfully installed markdown\nCleaning up...\n</pre></div>\n\n\n<p>Markdown tiene una serie de extensiones o <em>plugins</em> muy \u00fatiles, incluyendo extenciones que permiten colorear el c\u00f3digo, trabajar m\u00e1s eficientemente con listas, con tablas, con las alertas, con notas al pie, etc.</p>\n<p>Vamos a importar el m\u00f3dulo <code>markdown</code> a nuestro modelo <code>avisos</code> y a definir las extencioes que queremos usar.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">markdown</span>\n\n<span class=\"n\">MD_EXT</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;meta&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abbr&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;attr_list&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;def_list&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fenced_code&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;footnotes&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;smart_strong&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tables&#39;</span><span class=\"p\">,</span>\n          <span class=\"s1\">&#39;headerid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sane_lists&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;smartypants&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;toc&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;admonition&#39;</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<h3 id=\"sobreescribir-el-metodo-save-en-un-modelo\">Sobreescribir el m\u00e9todo <code>save()</code>  en un modelo</h3>\n<p>Tenemos todo lo necesario para definir nuestro modelo, as\u00ed que vamos a revisarlo y a explicar como trabajaremos con Markdown.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Aviso</span><span class=\"p\">(</span><span class=\"n\">Trazabilidad</span><span class=\"p\">):</span>\n    <span class=\"n\">titulo</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n    <span class=\"n\">slug</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">SlugField</span><span class=\"p\">()</span>\n    <span class=\"n\">texto_md</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n    <span class=\"n\">texto_html</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n    <span class=\"n\">autor</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;avisos&#39;</span><span class=\"p\">,</span> <span class=\"n\">editable</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Nuestro modelo tiene siete campos, cinco est\u00e1n definidos en el modelo y dos campos heredados del <em>mixin</em> <code>Trazabilidad</code>. Pero de estos siete campos, cinco son autom\u00e1ticos y solo dos son editables por el usuario: <code>titulo</code> y <code>texto_md</code>. Los dem\u00e1s campos se calculan al momento de guardar el registro, sobreescribiendo el m\u00e9todo <code>save()</code>.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Markdown: Convi\u00e9rtase antes de usar</p>\n<p>Una forma tradicional de utilizar Markdown era mandar el texto directamente a la plantilla y usar un filtro para convertirlo. Este ten\u00eda que pasar cada vez que un usuario solicitaba la p\u00e1gina. Evidentemente, el gasto era excesivo, por eso Django depreci\u00f3 los filtros a partir de la versi\u00f3n 1.5.</p>\n<p>La forma en la que se hace ahora resulta ser mucho m\u00e1s eficiente. Se almacena el texto en formato <code>markdown</code> en un campo y en otro campo el texto convertido en <code>html</code> que se actualiza autom\u00e1ticamente cada vez que el campo <code>markdown</code> cambia.</p>\n<p>La conversi\u00f3n a <code>html</code> puede ser lenta, pero se hace al momento de edici\u00f3n y no al momento de la presentaci\u00f3n. A los usuarios se les env\u00eda el c\u00f3digo <code>html</code> que es la forma m\u00e1s r\u00e1pida de mostrar informaci\u00f3n en la web.</p>\n<p>Para convertir un texto <code>markdown</code> a <code>html</code>, usamos el m\u00e9todo <code>markdown.markdown()</code> que toma como argumentos <code>texto_md</code> que es el campo que contiene el aviso, el formato de salida especificado como HTML5 en <code>output_format=html5</code>, <code>lazy_ol=True</code> para crear listas numeradas de forma sencilla y la lista de extenciones que ya hab\u00edamos creado en <code>extensions=MD_EXT</code>. El texto convertido se guarda en el campo <code>texto_html</code> que estar\u00e1 siempre listo para presentaci\u00f3n sin p\u00e9rdidas de tiempo en la conversi\u00f3n.</p>\n</div>\n<p>Ahora vamos a crear una m\u00e9todo <code>save()</code> que sobreescribir\u00e1 al m\u00e9todo por default con las funciones que necesita nuestra aplicaci\u00f3n de avisos, que son: la creaci\u00f3n del <em>slug</em> o nombre corto, la conversi\u00f3n del texto de <code>markdown</code> a <code>html</code>. Nos faltar\u00e1 una m\u00e1s para poblar el campo <code>autor</code>, pero eso se har\u00e1 en la secci\u00f3n del panel de control de nuestra aplicaci\u00f3n m\u00e1s adelante.</p>\n<p>Este es el nuevo m\u00e9todo <code>save()</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">save</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">force_insert</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"n\">force_update</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">texto_html</span> <span class=\"o\">=</span> <span class=\"n\">markdown</span><span class=\"o\">.</span><span class=\"n\">markdown</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">texto_md</span><span class=\"p\">,</span> <span class=\"n\">output_format</span><span class=\"o\">=</span><span class=\"s1\">&#39;html5&#39;</span><span class=\"p\">,</span> <span class=\"n\">lazy_ol</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">extensions</span><span class=\"o\">=</span><span class=\"n\">MD_EXT</span><span class=\"p\">)</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">slug</span> <span class=\"o\">=</span> <span class=\"n\">slugify</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">titulo</span><span class=\"p\">)</span>\n    <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Aviso</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Con este m\u00e9todo nos aseguramos que el texto est\u00e1 en <code>html</code> listo para ser presentado y que el aviso tiene un nombre corto para poder usarlo en la URL.</p>\n<h4 id=\"metodos-adicionales-para-el-modelo-avisos\">M\u00e9todos adicionales para el modelo <code>avisos</code></h4>\n<p>Hay dos m\u00e9todos m\u00e1s para nuestro modelo y una clase especial llamada <code>Meta</code> que sirve para darle informaci\u00f3n al <em>framework</em> Django sobre nuestro modelo.</p>\n<dl>\n<dt><strong><code>__unicode__</code></strong></dt>\n<dd>El m\u00e9todo <code>__unicode__</code> define la forma en que nuestro modelo responde a las llamadas. Podemos formar una cadenda de texto de respuesta a la llamda de este m\u00e9todo.<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"fm\">__unicode__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">titulo</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">&#39;utf-8&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n</dd>\n<dt><strong><code>get_absolute_url</code></strong></dt>\n<dd>Este m\u00e9todo devuelve la URL de nuestro aviso, de modo que podamos usarla en nuestra plantilla.<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">get_absolute_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;/aviso/</span><span class=\"si\">%s</span><span class=\"s2\">/</span><span class=\"si\">%s</span><span class=\"s2\">/&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">creado</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s2\">&quot;%Y/%b/</span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">slug</span><span class=\"p\">)</span>\n</pre></div>\n\n\n</dd>\n<dt><strong><code>class Meta</code></strong></dt>\n<dd>En esta clase interna dentro de nuestro modelo de aviso, colocamos informaci\u00f3n que es visible dentro del panel de control del CMI, definimos como llamamos a nuestros registros en singular y en plurar y opciones de ordenaci\u00f3n.<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n    <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Aviso&quot;</span>\n    <span class=\"n\">verbose_name_plural</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Avisos&quot;</span>\n    <span class=\"n\">ordering</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;-creado&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">get_latest_by</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;creado&#39;</span>\n</pre></div>\n\n\n</dd>\n</dl>\n<p>Este es el c\u00f3digo completo del modelo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"c1\">#    nombre: cmi.avisos.models</span>\n<span class=\"c1\">#       app: cmi.avisos</span>\n<span class=\"c1\">#      desc: Modelos para la apps de Avisos del Sistema</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.template.defaultfilters</span> <span class=\"kn\">import</span> <span class=\"n\">slugify</span>\n<span class=\"kn\">from</span> <span class=\"nn\">core.models</span> <span class=\"kn\">import</span> <span class=\"n\">Trazabilidad</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Aviso</span><span class=\"p\">(</span><span class=\"n\">Trazabilidad</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">    La aplicaci\u00f3n `aviso` crea post o entradas tipo blog, que funcionar\u00e1n como</span>\n<span class=\"sd\">    avisos en el cuadro de mando. Y al igual que un blog, podr\u00e1n mostrarse en una lista</span>\n<span class=\"sd\">    paginada o de forma individual. Se mantienen registros del autor del aviso y de la fecha y</span>\n<span class=\"sd\">    hora de creaci\u00f3n y de la \u00faltima modificaci\u00f3n.</span>\n\n<span class=\"sd\">    El modelo tiene una propiedad `get_absolute_url` que devuelve la URL en forma de `aaaa/mm/dd/slug`.</span>\n\n<span class=\"sd\">    Los slugs o nombre corto deben ser exclusivos por d\u00eda, es decir, en el mismo d\u00eda no puede</span>\n<span class=\"sd\">    haber dos slugs iguales.</span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n    <span class=\"n\">titulo</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n    <span class=\"n\">slug</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">SlugField</span><span class=\"p\">()</span>\n    <span class=\"n\">texto_md</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n    <span class=\"n\">texto_html</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n    <span class=\"n\">autor</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;avisos&#39;</span><span class=\"p\">,</span> <span class=\"n\">editable</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__unicode__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">titulo</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">&#39;utf-8&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">save</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">slug</span> <span class=\"o\">=</span> <span class=\"n\">slugify</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">titulo</span><span class=\"p\">)</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Aviso</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_absolute_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;/aviso/</span><span class=\"si\">%s</span><span class=\"s2\">/</span><span class=\"si\">%s</span><span class=\"s2\">/&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">creado</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s2\">&quot;%Y/%b/</span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">slug</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Aviso&quot;</span>\n        <span class=\"n\">verbose_name_plural</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Avisos&quot;</span>\n        <span class=\"n\">ordering</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;-creado&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">get_latest_by</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;creado&#39;</span>\n</pre></div>\n\n\n<h2 id=\"el-panel-de-control-de-avisos\">El panel de control de <code>avisos</code></h2>\n<p>Cuando creamos nuestra aplicaci\u00f3n se cre\u00f3 tambi\u00e9n un archivo llamado <code>admin.py</code> cuya funci\u00f3n es configurar la parte administrativa de nuestra aplicaci\u00f3n<sup id=\"fnref-4\"><a class=\"footnote-ref\" href=\"#fn-4\">4</a></sup>. Para nuestra aplicaci\u00f3n de avisos, el m\u00f3dulo de administraci\u00f3n es muy simple, como ver\u00e1n a continuaci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"c1\">#    nombre: cmi.avisos.admin</span>\n<span class=\"c1\">#       app: cmi.avisos</span>\n<span class=\"c1\">#      desc: Clases para la administraci\u00f3n de avisos</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">avisos.models</span> <span class=\"kn\">import</span> <span class=\"n\">Aviso</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AvisoAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">prepopulated_fields</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;slug&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">&quot;titulo&quot;</span><span class=\"p\">,)}</span>\n    <span class=\"n\">search_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;titulo&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">save_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">form</span><span class=\"p\">,</span> <span class=\"n\">change</span><span class=\"p\">):</span>\n        <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">autor</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span>\n        <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Aviso</span><span class=\"p\">,</span> <span class=\"n\">AvisoAdmin</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>El m\u00f3dulo <code>django.contrib.admin</code> conecta nuestro modelo con la parte administrativa del <em>framework</em>. Al crear la clase indicamos dos propiedades importantes, la primera es <code>prepopulated_fields</code> son campos que se rellenan autom\u00e1ticamente. El diccionario indica que el campo <code>slug</code> se crea con el <code>titulo</code>. Tami\u00e9n indicamos que queremos buscar los avisos usando el <code>titulo</code>.</p>\n<p>Tambi\u00e9n definimos un nuevo m\u00e9todo <code>save_model</code> que se activa, como su nombre lo dice al guardar el modelo. Lo creamos para tomar la solicitud o <em>request</em> y guardar el autor tomando el <code>request.user</code> o sea, el usuario registrado.</p>\n<h2 id=\"vistas-para-la-aplicacion-avisos\">Vistas para la aplicaci\u00f3n <code>avisos</code></h2>\n<p>Para cubrir el primer objetivo de esta iteraci\u00f3n vamos a crear la vista que muestre los anuncios m\u00e1s recientes. En los art\u00edculos siguientes de esta serie, para mejorar la presentaci\u00f3n de los anuncios, haremos una vista para presentar los anuncios individuales y crearemos la paginaci\u00f3n para el archivo. En la tercera iteraci\u00f3n, crearemos los formularios para editar y crear avisos.</p>\n<p>Para facilitarnos el trabajo con vistas, nos vamos a apoyar del paquete <code>django-annoying</code><sup id=\"fnref-5\"><a class=\"footnote-ref\" href=\"#fn-5\">5</a></sup> que tiene un decorador o <em>decorator</em> que facilita enormemente la vida. Solo tenemos que invocarlo con el nombre del dominio y regresar la vista con los diccionarios de datos.</p>\n<p>Miren lo que les digo</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">annoying.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">render_to</span>\n<span class=\"kn\">from</span> <span class=\"nn\">avisos.models</span> <span class=\"kn\">import</span> <span class=\"n\">Aviso</span>\n\n<span class=\"nd\">@render_to</span><span class=\"p\">(</span><span class=\"s1\">&#39;avisos/index.html&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">avisos</span> <span class=\"o\">=</span> <span class=\"n\">Aviso</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s2\">&quot;-creado&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;avisos&#39;</span><span class=\"p\">:</span><span class=\"n\">avisos</span><span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Incluso, podemos colocar en el <code>return</code> el <em>QuerySet</em> directamente, con lo que nos ahorramos incluso esa l\u00ednea.</p>\n<p>Esta simple vista nos permite crear la lista de anuncios, con la observaci\u00f3n que todos los avisos aparecen en una sola p\u00e1gina.</p>\n<p>Para terminar con la vista, vamos a crear el patr\u00f3n de b\u00fasqueda que URL que nos permita llamar a esta funci\u00f3n. Para esto usaremos el archivo <code>urls.py</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls</span> <span class=\"kn\">import</span> <span class=\"n\">patterns</span><span class=\"p\">,</span> <span class=\"n\">url</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s1\">&#39;avisos.views&#39;</span><span class=\"p\">,</span>\n   <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;^$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;index&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;avisos&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n<h2 id=\"la-plantilla-para-avisos\">La plantilla para <code>avisos</code></h2>\n<p>La \u00faltima parte de esta primera iteaci\u00f3n de la aplicaci\u00f3n <code>avisos</code> consiste en crear una plantilla. Nos vamos a concentrar en crear \u00fanicamente la plantilla para avisos porque en este mismo blog puedes encontrar la serie sobre las plantillas modulares.</p>\n<p>La plantilla, lo \u00fanico que hace es usar un ciclo <code>for</code> para recorrer la lista de avisos. Veamos como queda:</p>\n<div class=\"codehilite\"><pre><span></span>{% block contenido %}\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;page-header&quot;</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Avisos del Sistema<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"c\">&lt;!-- avisos  --&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;avisos&quot;</span><span class=\"p\">&gt;</span>\n  {% for aviso in avisos.object_list %}\n  <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"err\">&quot;</span><span class=\"na\">entry</span><span class=\"err\">&quot;</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>{{ aviso.titulo }}<span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;meta&quot;</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">i</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;icon-calendar&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">i</span><span class=\"p\">&gt;</span>\n        {{ aviso.creado }}\n      <span class=\"p\">&lt;</span><span class=\"nt\">i</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;icon-user&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">i</span><span class=\"p\">&gt;</span>\n        {{aviso.autor.first_name}} {{aviso.autor.last_name}}\n      {% if user.is_authenticated %}\n        <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;/avisos/editar/{{aviso.id}}/&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">i</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;icon-pencil-2&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">i</span><span class=\"p\">&gt;</span>\n          Editar<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n      {% endif %}\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span><span class=\"c\">&lt;!-- ./meta --&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      {{ aviso.texto|safe }}\n    <span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">hr</span> <span class=\"p\">/&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span><span class=\"c\">&lt;!-- ./entry --&gt;</span>\n  {% endfor %}\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span><span class=\"c\">&lt;!-- ./aviso --&gt;</span>\n{% endblock content %}\n</pre></div>\n\n\n<p>Lo que vemos es que, efectivamente, la plantilla trata a los avisos como un blog y nos prepara para la siguiente fase de mejora: la presentaci\u00f3n de entradas individuales y la edici\u00f3n de los avisos.</p>\n<h2 id=\"sincronizacion-de-la-tabla-avisos\">Sincronizaci\u00f3n de la tabla <code>avisos</code></h2>\n<p>Por \u00faltimo, igualmente en preparaci\u00f3n de la segunda y tercera fase de mejora, vamos a sincronizar nuestra tabla <code>avisos</code> y a prepararla con <code>South</code><sup id=\"fnref-6\"><a class=\"footnote-ref\" href=\"#fn-6\">6</a></sup> para migrarla a nuevas configuraciones conforme lo requiera la mejora.</p>\n<p>Adem\u00e1s de instalarla con <code>pip</code> con el entorno virtual activado, hay que agregar <code>south</code> a la lista de aplicaciones instaladas en nuestra configuraci\u00f3n.</p>\n<p>Recordemos que es la primera sincronizaci\u00f3n que vamos a hacer, as\u00ed que veremos este proceso completo, por primera <em>y \u00fanica</em> vez. Y tambi\u00e9n por \u00fanica vez lo haremos <strong>sin nuestro modelo activado</strong>.</p>\n<p>Empezamos sincronizando la base de datos y creando el usuario administrador. Esta es la salida de este comando:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>cmi<span class=\"o\">)</span>namespace:cmi javier$ python manage.py syncdb\nSyncing...\nCreating tables ...\nCreating table django_admin_log\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_groups\nCreating table auth_user_user_permissions\nCreating table auth_user\nCreating table django_content_type\nCreating table django_session\nCreating table south_migrationhistory\n\nYou just installed Django<span class=\"s1\">&#39;s auth system, which means you don&#39;</span>t have any superusers defined.\nWould you like to create one now? <span class=\"o\">(</span>yes/no<span class=\"o\">)</span>: yes\nUsername <span class=\"o\">(</span>leave blank to use <span class=\"s1\">&#39;javier&#39;</span><span class=\"o\">)</span>: javier\nEmail address: javier@namespace.mx\nPassword:\nPassword <span class=\"o\">(</span>again<span class=\"o\">)</span>:\nSuperuser created successfully.\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled <span class=\"m\">0</span> object<span class=\"o\">(</span>s<span class=\"o\">)</span> from <span class=\"m\">0</span> fixture<span class=\"o\">(</span>s<span class=\"o\">)</span>\n\nSynced:\n &gt; django.contrib.admin\n &gt; django.contrib.auth\n &gt; django.contrib.contenttypes\n &gt; django.contrib.sessions\n &gt; django.contrib.messages\n &gt; django.contrib.staticfiles\n &gt; south\n\nNot synced <span class=\"o\">(</span>use migrations<span class=\"o\">)</span>:\n -\n<span class=\"o\">(</span>use ./manage.py migrate to migrate these<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>Ahora, agregamos la aplicaci\u00f3n <code>avisos</code> a la lista de aplicaciones instaladas y realizamos la migraci\u00f3n inicial. Veamos que es lo que hace este comando:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>cmi<span class=\"o\">)</span>namespace:cmi javier$ python manage.py schemamigration avisos --initial\nCreating migrations directory at <span class=\"s1\">&#39;/Users/javier/Documents/Proyectos/cmi/cmi/avisos/migrations&#39;</span>...\nCreating __init__.py in <span class=\"s1\">&#39;/Users/javier/Documents/Proyectos/cmi/cmi/avisos/migrations&#39;</span>...\n + Added model avisos.Aviso\nCreated 0001_initial.py. You can now apply this migration with: ./manage.py migrate avisos\n</pre></div>\n\n\n<p>Crea el directorio y los scripts de migraci\u00f3n para nuestra aplicaci\u00f3n. Este comando (<code>python manage.py schemamigration aplicacion --initial</code>) es el que vamos a ejecutar cada vez que agreguemos nuevos modelos al CMI.</p>\n<p>En la tercera mejora de <code>avisos</code> veremos como aplicar los cambios de nuestros modelos a la base de datos.</p>\n<h2 id=\"conclusion\">Conclusi\u00f3n</h2>\n<p>Crear la primera aplicaci\u00f3n, un blog, es relativamente sencillo. En las mejoras programadas para esta aplicaci\u00f3n iremos conociendo nuevos patrones de programaci\u00f3n aplicados al Cuadro de Mando.</p>\n<p>Tambi\u00e9n empezaremos la aplicaci\u00f3n <code>metas</code> que es la m\u00e1s compleja del sistema. Y veremos como representar gr\u00e1ficos estad\u00edsticos con Django.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>De ahora en adelante, lo vamos a llamar simplemente <strong>CMI</strong>.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Como el n\u00famero que sale en Google Chrome junto a la campanita, o el contador de mensajes no le\u00eddos en los clientes de correo.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>Puedes consultar la ayuda para usar Markdown directamente en el sitio de su creador, <a href=\"http://j.mp/ns-ayuda-markdown\">Daring Fireball</a>.&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-4\">\n<p>La referencia oficial: http://j.mp/ns-doc-django-admin&#160;<a class=\"footnote-backref\" href=\"#fnref-4\" title=\"Jump back to footnote 4 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-5\">\n<p>http://j.mp/ns-django-annoying&#160;<a class=\"footnote-backref\" href=\"#fnref-5\" title=\"Jump back to footnote 5 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-6\">\n<p>http://j.mp/ns-django-south&#160;<a class=\"footnote-backref\" href=\"#fnref-6\" title=\"Jump back to footnote 6 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "implementacion-de-un-sistema-de-avisos", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 56, "fields": {"idx": "45688bcf-cfd1-4aaa-9a22-45391b73089c", "creado": "2017-07-29T03:33:45.526Z", "modificado": "2017-07-29T03:34:03.649Z", "title": "Recortar URL con Bitly", "summary": "", "body": "Title: Recortar URL con Bitly\r\nDate: 2014/04/02 10:44\r\nCategory: Desarrollo\r\nTags: tools\r\nSlug: recortar-url-con-bitly\r\nAuthor: Javier Sanchez Toledano\r\nemail: javier@namespace.mx\r\nSummary: C\u00f3mo recortar direcciones URL usando Bitly en Django\r\n\r\n<img src=\u201chttps://s3.amazonaws.com/nspace.mx/assets/img/django.jpg alt=\"Django\" title=\"Django\">\r\n\r\n[bitly.com][1] es un servicio de acortador de URL o direcciones, lo que significa que una direcci\u00f3n web puede compartirse f\u00e1cilmente a trav\u00e9s de redes sociales o mensajes de texto. **bitly** adem\u00e1s caracter\u00edsticas realmente impresionantes:\r\n\r\n* Puedes usar tu propio dominio para los enlaces.\r\n* Puedes usar su potente interface de programaci\u00f3n.\r\n* Genera detalladas estad\u00edsticas del uso de tus enlaces.\r\n\r\nPor ejemplo, la direcci\u00f3n de este art\u00edculo es `https://namespace.mx/django/recortar-url-con-bitly/` puede acortarse `http://bitly.com/1lCdYEN` o incluso a `http://j.mp/1lCdYEN` lo que significa una reducci\u00f3n de 51 caract\u00e9res a __solo 19 caracteres__, esto es: _62% menos_. Si tienes un l\u00edmite de caracteres como en Twitter, este ahorro es muy importante.\r\n\r\n## Usar Bitly en Django\r\n\r\nPara usar la API de Bitly en Django, seleccion\u00e9 el m\u00f3dulo [`python-bitly`][2] que permite aprovechar todo el potencial de la API en tu sitiio web. Las posibilidades son enormes, pero en esta ocasi\u00f3n solo veremos como recortar las URL de nuestro art\u00edculo al momento de guardar.\r\n\r\n## Configurando `python-bitly`\r\n\r\nPara configurar el m\u00f3dulo necesitamos primero una cuenta de __bitly.com__ y un clave para usar su API. Esta clave la obtenemos en este enlace `https://bitly.com/a/oauth_apps`. Una vez que tenemos nuestra cuenta y nuestra clave, debemos instalar el m\u00f3dulo, con `pip`:\r\n\r\n    :::Bash\r\n    (nspace)namespace:~ javier$ pip install django-bitly\r\n    Downloading/unpacking django-bitly\r\n      Downloading django-bitly-0.7.tar.gz\r\n      Running setup.py egg_info for package django-bitly\r\n\r\n    Installing collected packages: django-bitly\r\n      Running setup.py install for django-bitly\r\n\r\n    Successfully installed django-bitly\r\n    Cleaning up...\r\n\r\nUna vez instalada, debemos guardar esta clave en una variable de entorno o en nuestro archivo de configuraci\u00f3n, para poder usarlo m\u00e1s adelante.\r\n\r\n## El modelo `Entry`\r\n\r\nNuestro modelo requiere de una actualizaci\u00f3n para agregar un nuevo campo `bitly` que es de la clase `URLField`. No queremos editarlo, todo es autom\u00e1tico, por lo que no aparece siquiera en los formularios.\r\n\r\n    :::Python\r\n    bitly = models.URLField(editable=False, blank=True)\r\n\r\nTambi\u00e9n debemos asegurarnos que en nuestro modelo exista la funci\u00f3n `gent_absolute_url()` porque el m\u00f3dulo `python-bitly` la usa autom\u00e1ticamente. Yo la defin\u00ed de esta manera:\r\n\r\n    :::python\r\n    def get_absolute_url (self):\r\n        return \"https://namespace.mx/%s/%s/\" % (self.category.slug, self.slug)\r\n\r\nAhora, debemos de modificar el m\u00e9todo `save()` de nuestro modelo para que cuando se guarde una entrada, se actualice la URL recortada.\r\n\r\n### Crear una conexi\u00f3n con Bitly\r\n\r\nLo primero que tenemos que hacer es crear una conexi\u00f3n con bitly. El c\u00f3digo para crear el objeto, es como sigue\r\n\r\n    :::Python\r\n    import bitly_api\r\n    access_token = os.getenv(BITLY_ACCESS_TOKEN)\r\n    bitly = bitly_api.Connection(access_token=access_token)\r\n\r\nEs decir, primero importamos el m\u00f3dulo, luego ponemos la clave de la API en una variable local y a continuaci\u00f3n creamos el objeto `bitly` con el m\u00e9todo `Connection`.\r\n\r\nAhora podemos crear la URL corta usando la propiedad `get_absolute_url` que, haciendo la sustici\u00f3n respectiva, es algo como esto:\r\n\r\n    :::Python\r\n    data = bitly.shorten(\"https://namespace.mx/%s/%s/\" % (self.category.slug, self.slug))\r\n\r\nEsta variable `data` la guardamos en nuestra entrada, en el campo bitly, que ya creamos y podemos usarla en nuestro sitio muy f\u00e1cil y r\u00e1pidamente:\r\n\r\n    :::Jinja2\r\n    <link rel=\"shortlink\" type=\"text/html\" href=\"{{ article.bitly }}\">\r\n\r\n[1]:http://bitly.com\r\n[2]:http://j.mp/ns-bitly_api", "extend": "", "pub_date": "2014-04-02T16:44:00Z", "summary_html": "", "body_html": "<p><img src=\u201chttps://s3.amazonaws.com/nspace.mx/assets/img/django.jpg alt=\"Django\" title=\"Django\"></p>\n<p><a href=\"http://bitly.com\">bitly.com</a> es un servicio de acortador de URL o direcciones, lo que significa que una direcci\u00f3n web puede compartirse f\u00e1cilmente a trav\u00e9s de redes sociales o mensajes de texto. <strong>bitly</strong> adem\u00e1s caracter\u00edsticas realmente impresionantes:</p>\n<ul>\n<li>Puedes usar tu propio dominio para los enlaces.</li>\n<li>Puedes usar su potente interface de programaci\u00f3n.</li>\n<li>Genera detalladas estad\u00edsticas del uso de tus enlaces.</li>\n</ul>\n<p>Por ejemplo, la direcci\u00f3n de este art\u00edculo es <code>https://namespace.mx/django/recortar-url-con-bitly/</code> puede acortarse <code>http://bitly.com/1lCdYEN</code> o incluso a <code>http://j.mp/1lCdYEN</code> lo que significa una reducci\u00f3n de 51 caract\u00e9res a <strong>solo 19 caracteres</strong>, esto es: <em>62% menos</em>. Si tienes un l\u00edmite de caracteres como en Twitter, este ahorro es muy importante.</p>\n<h2 id=\"usar-bitly-en-django\">Usar Bitly en Django</h2>\n<p>Para usar la API de Bitly en Django, seleccion\u00e9 el m\u00f3dulo <a href=\"http://j.mp/ns-bitly_api\"><code>python-bitly</code></a> que permite aprovechar todo el potencial de la API en tu sitiio web. Las posibilidades son enormes, pero en esta ocasi\u00f3n solo veremos como recortar las URL de nuestro art\u00edculo al momento de guardar.</p>\n<h2 id=\"configurando-python-bitly\">Configurando <code>python-bitly</code></h2>\n<p>Para configurar el m\u00f3dulo necesitamos primero una cuenta de <strong>bitly.com</strong> y un clave para usar su API. Esta clave la obtenemos en este enlace <code>https://bitly.com/a/oauth_apps</code>. Una vez que tenemos nuestra cuenta y nuestra clave, debemos instalar el m\u00f3dulo, con <code>pip</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>nspace<span class=\"o\">)</span>namespace:~ javier$ pip install django-bitly\nDownloading/unpacking django-bitly\n  Downloading django-bitly-0.7.tar.gz\n  Running setup.py egg_info <span class=\"k\">for</span> package django-bitly\n\nInstalling collected packages: django-bitly\n  Running setup.py install <span class=\"k\">for</span> django-bitly\n\nSuccessfully installed django-bitly\nCleaning up...\n</pre></div>\n\n\n<p>Una vez instalada, debemos guardar esta clave en una variable de entorno o en nuestro archivo de configuraci\u00f3n, para poder usarlo m\u00e1s adelante.</p>\n<h2 id=\"el-modelo-entry\">El modelo <code>Entry</code></h2>\n<p>Nuestro modelo requiere de una actualizaci\u00f3n para agregar un nuevo campo <code>bitly</code> que es de la clase <code>URLField</code>. No queremos editarlo, todo es autom\u00e1tico, por lo que no aparece siquiera en los formularios.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">bitly</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">URLField</span><span class=\"p\">(</span><span class=\"n\">editable</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Tambi\u00e9n debemos asegurarnos que en nuestro modelo exista la funci\u00f3n <code>gent_absolute_url()</code> porque el m\u00f3dulo <code>python-bitly</code> la usa autom\u00e1ticamente. Yo la defin\u00ed de esta manera:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">get_absolute_url</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;https://namespace.mx/</span><span class=\"si\">%s</span><span class=\"s2\">/</span><span class=\"si\">%s</span><span class=\"s2\">/&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">category</span><span class=\"o\">.</span><span class=\"n\">slug</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">slug</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Ahora, debemos de modificar el m\u00e9todo <code>save()</code> de nuestro modelo para que cuando se guarde una entrada, se actualice la URL recortada.</p>\n<h3 id=\"crear-una-conexion-con-bitly\">Crear una conexi\u00f3n con Bitly</h3>\n<p>Lo primero que tenemos que hacer es crear una conexi\u00f3n con bitly. El c\u00f3digo para crear el objeto, es como sigue</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">bitly_api</span>\n<span class=\"n\">access_token</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"n\">BITLY_ACCESS_TOKEN</span><span class=\"p\">)</span>\n<span class=\"n\">bitly</span> <span class=\"o\">=</span> <span class=\"n\">bitly_api</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"n\">access_token</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Es decir, primero importamos el m\u00f3dulo, luego ponemos la clave de la API en una variable local y a continuaci\u00f3n creamos el objeto <code>bitly</code> con el m\u00e9todo <code>Connection</code>.</p>\n<p>Ahora podemos crear la URL corta usando la propiedad <code>get_absolute_url</code> que, haciendo la sustici\u00f3n respectiva, es algo como esto:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">bitly</span><span class=\"o\">.</span><span class=\"n\">shorten</span><span class=\"p\">(</span><span class=\"s2\">&quot;https://namespace.mx/</span><span class=\"si\">%s</span><span class=\"s2\">/</span><span class=\"si\">%s</span><span class=\"s2\">/&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">category</span><span class=\"o\">.</span><span class=\"n\">slug</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">slug</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>Esta variable <code>data</code> la guardamos en nuestra entrada, en el campo bitly, que ya creamos y podemos usarla en nuestro sitio muy f\u00e1cil y r\u00e1pidamente:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&lt;link rel=&quot;shortlink&quot; type=&quot;text/html&quot; href=&quot;</span><span class=\"cp\">{{</span> <span class=\"nv\">article.bitly</span> <span class=\"cp\">}}</span><span class=\"x\">&quot;&gt;</span>\n</pre></div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "recortar-url-con-bitly", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 57, "fields": {"idx": "a19b8529-6038-4fa8-852d-9c973060ee39", "creado": "2017-07-29T03:41:13.781Z", "modificado": "2017-07-29T03:41:13.781Z", "title": "C\u00f3mo agregar etiquetas de verificaci\u00f3n de Google", "summary": "", "body": "Title: C\u00f3mo agregar etiquetas de verificaci\u00f3n de Google\r\nDate: 2014/04/09 10:00\r\nCategory: Desarrollo\r\nTags: genesiswp, wordpress, php\r\nSummary: C\u00f3mo agregar las etiquetas de verificaci\u00f3n para los buscadores usando los hooks de Genesis Framework para un control m\u00e1s preciso de su localizaci\u00f3n.\r\n\r\nRecientente integr\u00e9 en Yo, Toledano un reproductor de m\u00fasica basado en jQuery 2.0. As\u00ed que me enfrent\u00e9 al problema de cambiar la versi\u00f3n de jQuery en WordPress de la versi\u00f3n 1.10 a la versi\u00f3n m\u00e1s actual 2.0.2.\r\n\r\nAdem\u00e1s debo de a\u00f1adir a la p\u00e1gina los archivos que hace hacen funcionar al reproductor que son dos `js` y una hoja de estilos.\r\n\r\nEn este peque\u00f1o tutorial vamos a ver como reemplazar la versi\u00f3n de jQuery que usa WordPress por la versi\u00f3n m\u00e1s nueva y tambi\u00e9n vamos a agregar los archivos `js` y `css` en la cabecera de nuestro sitio.\r\n\r\n> __Usa Genesis Framework__  \r\n[Genesis][gen] te facilita construir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, [Genesis][gen] te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple.  \r\n**!Empieza a usar hoy mismo [Genesis Framework][gen]!**\r\n[gen]: http://conxb.com/genesismx\r\n\r\n## Cambiar la versi\u00f3n de jQuery en Genesis Framework\r\n\r\nLo primero que vamos a hacer es agregar una acci\u00f3n a uno de los ganchos disponibles en WordPress, el que se llama `wp_enqueue_scripts`. Dentro de este gancho vamos a colocar nuestra funci\u00f3n que hace tres cosas:\r\n\r\n1. Evita que se cargue el jquery por defecto\r\n2. Registra el nuevo jquery para evitar problemas de dependiencias\r\n3. Agrega el script a la cabecera.\r\n\r\nUsamos las funciones `wp_enqueue_script` y `wp_register_script`. Este \u00faltimo registra el script y se asegura que los que dependan de jQuery lo utilicen y el primero lo coloca en el lugar adecuado.\r\n\r\n    :::PHP\r\n    add_action( 'wp_enqueue_scripts', 'jQuery200', 99);\r\n    function jQuery200() {\r\n        wp_deregister_script( 'jquery' );\r\n        wp_register_script( 'jquery', '//code.jquery.com/jquery-2.0.2.min.js' );;\r\n        wp_enqueue_script( 'jquery', '//code.jquery.com/jquery-2.0.2.min.js', array( 'jquery' ), '2.0.2', false );\r\n    }\r\n\r\nLa funci\u00f3n 'wp_enqueue_script' toma 5 argumentos, que son los siguientes:\r\n\r\n+ __`$handle`__, que es el grupo de script que comparten las mismas dependencias. En nuestro ejemplo es `jquery`.\r\n+ __`$src`___, es la URL del scriipt. En el ejemplo uso la CDN de jQuery.\r\n+ __`$deps`__, es un array de las dependencias, en el ejemplo es `array('jquery')` y es un argumento indispensable, porque de este script dependen casi todos los dem\u00e1s.\r\n+ __`$ver`__, este argumento opcional sirve para referencia de la versi\u00f3n utilizada, en nuestro ejemplo es `'2.0.2'` que corresponde a la versi\u00f3n actual de jQuery.\r\n+ __`$in_footer`__, es un valor booleano para indicar si se debe colocar el script al final del documento. En nuestro caso usamos `false`.\r\n\r\n### Agregar scripts a Genesis Framework\r\n\r\nAgregar scripts que no tienen tantas dependencias es mucho m\u00e1s f\u00e1cil, el ejemplo anterior es el caso m\u00e1s completo, pero por lo general agregar archivos ser\u00e1 algo mucho m\u00e1s simple. Veamos el ejemplo del reproductor de m\u00fasica.\r\n\r\nEste requiere 3 l\u00edneas en el encabezado de las p\u00e1ginas: una hoja de estilos, un script para el reproducto de m\u00fasica y uno adicional para el reproductor de videos.\r\n\r\nLa parte m\u00e1s interesante, es que estos archivos solo los necesitamos en las entradas individuales, que es donde aparece el reproductor. As\u00ed que agregu\u00e9 una condicional para asegurarme que solo en estas entradas vamos a tenerlos.\r\n\r\n    :::PHP\r\n    add_action('wp_enqueue_scripts', 'estilos_toledanos'); \r\n    function estilos_toledanos() {\r\n        if (is_single()) {\r\n              wp_enqueue_style('music', '/assets/css/xemusicplayer.css');\r\n            wp_register_script('music', '/assets/js/jquery-xemusicplayer-1.0.0.min.js' );\r\n             wp_enqueue_script('music', '/assets/js/jquery-xemusicplayer-1.0.0.min.js' );\r\n            wp_register_script('video', '//cdnjs.cloudflare.com/ajax/libs/fitvids/1.0.1/jquery.fitvids.min.js');     \r\n             wp_enqueue_script('video', '//cdnjs.cloudflare.com/ajax/libs/fitvids/1.0.1/jquery.fitvids.min.js');\r\n        }\r\n    }\r\n\r\nEste c\u00f3digo funciona excelente en __[Genesis Framework][gen]__, pero en general va a funcionar en cualquier instalaci\u00f3n de WordPress.", "extend": "", "pub_date": "2014-04-09T15:00:00Z", "summary_html": "", "body_html": "<p>Recientente integr\u00e9 en Yo, Toledano un reproductor de m\u00fasica basado en jQuery 2.0. As\u00ed que me enfrent\u00e9 al problema de cambiar la versi\u00f3n de jQuery en WordPress de la versi\u00f3n 1.10 a la versi\u00f3n m\u00e1s actual 2.0.2.</p>\n<p>Adem\u00e1s debo de a\u00f1adir a la p\u00e1gina los archivos que hace hacen funcionar al reproductor que son dos <code>js</code> y una hoja de estilos.</p>\n<p>En este peque\u00f1o tutorial vamos a ver como reemplazar la versi\u00f3n de jQuery que usa WordPress por la versi\u00f3n m\u00e1s nueva y tambi\u00e9n vamos a agregar los archivos <code>js</code> y <code>css</code> en la cabecera de nuestro sitio.</p>\n<blockquote>\n<p><strong>Usa Genesis Framework</strong><br>\n<a href=\"http://conxb.com/genesismx\">Genesis</a> te facilita construir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, <a href=\"http://conxb.com/genesismx\">Genesis</a> te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple.<br>\n<strong>!Empieza a usar hoy mismo <a href=\"http://conxb.com/genesismx\">Genesis Framework</a>!</strong></p>\n</blockquote>\n<h2 id=\"cambiar-la-version-de-jquery-en-genesis-framework\">Cambiar la versi\u00f3n de jQuery en Genesis Framework</h2>\n<p>Lo primero que vamos a hacer es agregar una acci\u00f3n a uno de los ganchos disponibles en WordPress, el que se llama <code>wp_enqueue_scripts</code>. Dentro de este gancho vamos a colocar nuestra funci\u00f3n que hace tres cosas:</p>\n<ol>\n<li>Evita que se cargue el jquery por defecto</li>\n<li>Registra el nuevo jquery para evitar problemas de dependiencias</li>\n<li>Agrega el script a la cabecera.</li>\n</ol>\n<p>Usamos las funciones <code>wp_enqueue_script</code> y <code>wp_register_script</code>. Este \u00faltimo registra el script y se asegura que los que dependan de jQuery lo utilicen y el primero lo coloca en el lugar adecuado.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">add_action( &#39;wp_enqueue_scripts&#39;, &#39;jQuery200&#39;, 99);</span>\n<span class=\"x\">function jQuery200() {</span>\n<span class=\"x\">    wp_deregister_script( &#39;jquery&#39; );</span>\n<span class=\"x\">    wp_register_script( &#39;jquery&#39;, &#39;//code.jquery.com/jquery-2.0.2.min.js&#39; );;</span>\n<span class=\"x\">    wp_enqueue_script( &#39;jquery&#39;, &#39;//code.jquery.com/jquery-2.0.2.min.js&#39;, array( &#39;jquery&#39; ), &#39;2.0.2&#39;, false );</span>\n<span class=\"x\">}</span>\n</pre></div>\n\n\n<p>La funci\u00f3n &lsquo;wp_enqueue_script&rsquo; toma 5 argumentos, que son los siguientes:</p>\n<ul>\n<li><strong><code>$handle</code></strong>, que es el grupo de script que comparten las mismas dependencias. En nuestro ejemplo es <code>jquery</code>.</li>\n<li>__<code>$src</code>___, es la URL del scriipt. En el ejemplo uso la CDN de jQuery.</li>\n<li><strong><code>$deps</code></strong>, es un array de las dependencias, en el ejemplo es <code>array('jquery')</code> y es un argumento indispensable, porque de este script dependen casi todos los dem\u00e1s.</li>\n<li><strong><code>$ver</code></strong>, este argumento opcional sirve para referencia de la versi\u00f3n utilizada, en nuestro ejemplo es <code>'2.0.2'</code> que corresponde a la versi\u00f3n actual de jQuery.</li>\n<li><strong><code>$in_footer</code></strong>, es un valor booleano para indicar si se debe colocar el script al final del documento. En nuestro caso usamos <code>false</code>.</li>\n</ul>\n<h3 id=\"agregar-scripts-a-genesis-framework\">Agregar scripts a Genesis Framework</h3>\n<p>Agregar scripts que no tienen tantas dependencias es mucho m\u00e1s f\u00e1cil, el ejemplo anterior es el caso m\u00e1s completo, pero por lo general agregar archivos ser\u00e1 algo mucho m\u00e1s simple. Veamos el ejemplo del reproductor de m\u00fasica.</p>\n<p>Este requiere 3 l\u00edneas en el encabezado de las p\u00e1ginas: una hoja de estilos, un script para el reproducto de m\u00fasica y uno adicional para el reproductor de videos.</p>\n<p>La parte m\u00e1s interesante, es que estos archivos solo los necesitamos en las entradas individuales, que es donde aparece el reproductor. As\u00ed que agregu\u00e9 una condicional para asegurarme que solo en estas entradas vamos a tenerlos.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">add_action(&#39;wp_enqueue_scripts&#39;, &#39;estilos_toledanos&#39;); </span>\n<span class=\"x\">function estilos_toledanos() {</span>\n<span class=\"x\">    if (is_single()) {</span>\n<span class=\"x\">          wp_enqueue_style(&#39;music&#39;, &#39;/assets/css/xemusicplayer.css&#39;);</span>\n<span class=\"x\">        wp_register_script(&#39;music&#39;, &#39;/assets/js/jquery-xemusicplayer-1.0.0.min.js&#39; );</span>\n<span class=\"x\">         wp_enqueue_script(&#39;music&#39;, &#39;/assets/js/jquery-xemusicplayer-1.0.0.min.js&#39; );</span>\n<span class=\"x\">        wp_register_script(&#39;video&#39;, &#39;//cdnjs.cloudflare.com/ajax/libs/fitvids/1.0.1/jquery.fitvids.min.js&#39;);     </span>\n<span class=\"x\">         wp_enqueue_script(&#39;video&#39;, &#39;//cdnjs.cloudflare.com/ajax/libs/fitvids/1.0.1/jquery.fitvids.min.js&#39;);</span>\n<span class=\"x\">    }</span>\n<span class=\"x\">}</span>\n</pre></div>\n\n\n<p>Este c\u00f3digo funciona excelente en <strong><a href=\"http://conxb.com/genesismx\">Genesis Framework</a></strong>, pero en general va a funcionar en cualquier instalaci\u00f3n de WordPress.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-agregar-etiquetas-de-verificacion-de-google", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 58, "fields": {"idx": "77b91dbb-339f-4a23-8e61-8e7d66f46a79", "creado": "2017-07-29T03:42:14.892Z", "modificado": "2017-07-29T03:42:14.892Z", "title": "Extender el modelo de usuario en Django", "summary": "", "body": "Title: Extender el modelo de usuario en Django\r\nDate: 2015-08-09 12:42:29 a.m.\r\nCategory: Desarrollo\r\nTags:  django, models\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\n\r\nDjango tiene un modelo de usuario que ofrece muchas funcionalidades. El problema con `User` es que no puede ampliarse para incluir m\u00e1s informaci\u00f3n. Por ejemplo, para el *Cuadro de Mando Integral* necesitamos saber el sitio en d\u00f3nde trabajan y el puesto[^1].\r\n\r\nEl modelo `User` hereda de `AbstractBaseUser` de donde vienen todas sus funciones. Al crear un nuevo modelo `Pipol` y heredar de `AbstractBaseUser`, le damos a nuestro modelo las mismas funciones que `User` (ofuscaci\u00f3n de contrase\u00f1a, manejo de sesiones, etc.) y adem\u00e1s le damos la posibilidad de contar con los campos que necesitamos, como `sitio` y `puesto`.\r\n\r\nEn Django, el concepto de una *\u00abaplicaci\u00f3n\u00bb* se usa para organizar el c\u00f3digo de una manera coherente. Una *app* es un m\u00f3dulo que combina el c\u00f3digo de modelos, vistas, serializadores, que est\u00e1n relacionados de alguna manera. Por ejemplo, el primer paso para construir el Cuadro de Mando Integral[^2] ser\u00e1 crear una *app* llama `nucleo`. La aplicaci\u00f3n `nucleo` ser\u00e1 la que contenga el c\u00f3digo para el registro de cuentas, registrarse, salir y otra informaci\u00f3n relevante para el **cmi**.\r\n\r\nCreamos entonces nuestra *app* `nucleo` ejecutando el siguiente c\u00f3digo:\r\n\r\n```language-python\r\n$ python manage.py startapp nucleo\r\n```\r\n\r\nEl modelo `Pipol`\r\n-----------------\r\n\r\nPara empezar, crearemos el modelo `Pipol` que mencionamos antes.\r\n\r\nEn el editor de nuestra preferencia[^3] abrimos el archivo `core/models.py` y lo editamos para que quede como sigue[^4]:\r\n\r\n```language-python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#         app: mx.ine.cmi\r\n#      m\u00f3dulo: core\r\n# descripci\u00f3n: N\u00facleo del CMI\r\n#       autor: Javier Sanchez Toledano\r\n#       fecha: s\u00e1bado, 11 de abril de 2015\r\n\r\nfrom django.contrib.auth.models import AbstractBaseUser\r\nfrom django.db import models\r\n\r\nclass Pipol(AbstractBaseUser):\r\n    '''\r\n    Clase para gestionar los usuarios del cuadro de mando integral.\r\n    Incluye la posibilidad de incluir otras entidades y poder filtrar\r\n    de acuerdo con ello.\r\n    '''\r\n    ENTIDADES = (\r\n        (29, 'Tlaxcala'),\r\n    )\r\n    SITIOS = (\r\n        (0, 'Junta Local'),\r\n        (1, '01 Junta Distrital'),\r\n        (2, '02 Junta Distrital'),\r\n        (3, 'O3 Junta Distrital')\r\n    )\r\n\r\n    VEL = 'VEL'\r\n    VSL = 'VSL'\r\n    VRL = 'VRL'\r\n    VOL = 'VOL'\r\n    VCL = 'VCL'\r\n    VED = 'VED'\r\n    VSD = 'VSD'\r\n    VRD = 'VRD'\r\n    VOD = 'VOD'\r\n    VCD = 'VCD'\r\n    JMM = 'JMM'\r\n    JOSA = 'JOSA'\r\n    JOCE = 'JOCE'\r\n    RA = 'RA'\r\n\r\n    PUESTOS = (\r\n        (VEL, 'Vocal Ejecutivo de Junta Local'),\r\n        (VSL, 'Vocal Secretario de Junta Local'),\r\n        (VRL, 'Vocal del RFE de Junta Local'),\r\n        (VCL, 'Vocal de Capacitaci\u00f3n de Junta Local'),\r\n        (VOL, 'Vocal de Organizaci\u00f3n de Junta Local'),\r\n        (VED, 'Vocal Ejecutivo de Junta Distrital'),\r\n        (VSD, 'Vocal Secretario de Junta Distrital'),\r\n        (VRD, 'Vocal del RFE de Junta Distrital'),\r\n        (VCD, 'Vocal de Capacitaci\u00f3n de Junta Distrital'),\r\n        (VOD, 'Vocal de Organizaci\u00f3n de Junta Distrital'),\r\n        (JOSA, 'JOSA'),\r\n        (JMM, 'Jefe de Monitoreo a M\u00f3dulos'),\r\n        (JOCE, 'Jefe de Cartograf\u00eda'),\r\n        (RA, 'Rama Administrativa')\r\n    )\r\n\r\n    email = models.EmailField(unique=True)\r\n    username = models.CharField(max_length=40, unique=True)\r\n\r\n    nombre = models.CharField(max_length=40, blank=True)\r\n    paterno = models.CharField(max_length=40, blank=True)\r\n    materno = models.CharField(max_length=40, blank=True)\r\n    tagline = models.CharField(max_length=40, blank=True)\r\n\r\n    is_admin = models.BooleanField(default=False)\r\n\r\n    entidad = models.PositiveSmallIntegerField(default=29, choices=ENTIDADES)\r\n    sitio = models.PositiveSmallIntegerField(choices=SITIOS, blank=True, null=True)\r\n    puesto = models.CharField(max_length=4, choices=PUESTOS, blank=True, null=True)\r\n    is_mspe = models.BooleanField(default=False)\r\n    is_activo = models.BooleanField(default=True)\r\n\r\n    created_at = models.DateTimeField(auto_now_add=True)\r\n    updated_at = models.DateTimeField(auto_now=True)\r\n\r\n    objects = PipolManager()\r\n\r\n    USERNAME_FIELD = 'email'\r\n    REQUIRED_FIELDS = ['username']\r\n\r\n    def __unicode__(self):\r\n        return self.email\r\n\r\n    def get_full_name(self):\r\n        return ' '.join([self.nombre, self.paterno, self.materno])\r\n\r\n    def get_short_name(self):\r\n        return self.nombre\r\n\r\n```\r\n\r\nAhora vamos a ver un poco m\u00e1s a detalle este modelo.\r\n\r\n```\r\n    email = models.EmailField(unique=True)\r\n\r\n    # ...\r\n\r\n    USERNAME_FIELD = 'email'\r\n```\r\n\r\nEl modelo `User` predeterminado de Django *necesita* un nombre de usuario. Este se utiliza para registrar el ingreso de los usuarios. Pero en el __cmi__ utilizaremos el correo institucional para este prop\u00f3sito.\r\n\r\nPara indicarle a Django que utilice el correo como nombre de usuario en este modelo, establecemos el atributo `USERNAME_FIELD` como `email`. Este campo debe ser \u00fanico, as\u00ed que creamos el campo con el argumento `unique=True`.\r\n\r\nY aunque vamos a ingresar al __cmi__ con el correo, todav\u00eda necesitamos un nombre de usuario (o _username_) para mostrarlo en las metas o en la URL del perfil de usuario[^5], por lo tanto debe ser \u00fanico.\r\n\r\n```\r\n    username = models.CharField(max_length=40, unique=True)\r\n```\r\n\r\nTambi\u00e9n vamos a colocar m\u00e1s informaci\u00f3n personal sobre nuestros usuarios. Pero para practicidad o para que los usuarios se sientan m\u00e1s confortables vamos a permitir que estos campos queden en blanco.\r\n\r\n```\r\n    nombre = models.CharField(max_length=40, blank=True)\r\n    paterno = models.CharField(max_length=40, blank=True)\r\n    materno = models.CharField(max_length=40, blank=True)\r\n```\r\n\r\nComo ya hab\u00edamos dicho, debemos establecer cierta informaci\u00f3n para ubicar a los usarios, por esta raz\u00f3n inclu\u00edmos los siguientes campos.\r\n\r\n```\r\n    sitio = models.PositiveSmallIntegerField(choices=SITIOS)\r\n    puesto = models.PositiveSmallIntegerField(choices=PUESTOS)\r\n    is_mspe = models.BooleanField(default=False)\r\n```\r\n\r\nY por razones de trazabilidad, agregamos dos campos en el perfil. El primero `created_at` guarda de forma autom\u00e1tica la fecha de creaci\u00f3n del usuario y `updated_at` guarda autom\u00e1ticamente la fecha y hora de la modificaci\u00f3n m\u00e1s reciente.\r\n\r\n```\r\n    created_at = models.DateTimeField(auto_now_add=True)\r\n    updated_at = models.DateTimeField(auto_now=True)\r\n```\r\n\r\nLa diferencia entre `auto_now_add` y `auto_now` es que una vez que se agrega informaci\u00f3n en `auto_now_add` ya no puede modificarse y `auto_now` se modifica cada vez que se edita el perfil.\r\n\r\nCuando queremos obtener una instancia de alg\u00fan mode en Django, usamos una expresi\u00f3n tipo `Modelo.objects.get(**kwargs)`. El atributo `objects` es una clase `Manager` que por lo general se escribe como `<modelo>Manager`. En nuestro caso creamos la clase `PipolManager`, que veremos m\u00e1s adelante.\r\n\r\n```\r\n    objects = PipolManager()\r\n```\r\n\r\nVamos a usar el nombre de usuario en muchos lados. Tambi\u00e9n necesitamos saber _forzosamente_ el sitio y el puesto de los usuarios. Normalmente utilizar\u00edamos el par\u00e1metro `required=True` pero como estamos reemplazando al modelo `User` necesitamos especificar los campos obligatorios:\r\n\r\n```\r\n    REQUIRED_FIELDS = ['username', 'sitio', 'puesto']\r\n```\r\n\r\nCuando trabajamos en el shell, como veremos pr\u00f3ximamente, la representaci\u00f3n en texto de un objeto `Pipol` aparece como `<Pipol: Pipol>`, pero como hay muchas personas en el __cmi__ esto no resulta muy pr\u00e1ctico.  Pero podemos sobreescribir el m\u00e9todo `__unicode__()` para cambiar el comportamiento est\u00e1ndar. En el __cmi__ vamos a mostrar el correo electr\u00f3nico de los usuarios, por lo que la representaci\u00f3n del objeto `Pipol` se ver\u00eda as\u00ed: `<Pipol: javier@example.com`.\r\n\r\n```\r\n    def __unicode__(self):\r\n        return self.email\r\n```\r\n\r\nLas funciones `get_full_name()` y `get_short_name()` est\u00e1n predeterminadas en Django. No las vamos a usar, pero de todos modos es una buena idea asegurarnos que funciones de una manera coherente con el __cmi__.\r\n\r\n```\r\n    def get_full_name(self):\r\n        return ' '.join(self.nombre, self.paterno, self.materno)\r\n\r\n    def get_short_name(self):\r\n        return self.nombre\r\n```\r\n\r\nEn el pr\u00f3ximo art\u00edculo veremos como crear el administrador de objetos para el modelo `Pipol`.\r\n\r\n\r\n### Actualizaci\u00f3n\r\n\r\n> Tuve que hacer algunos cambios porque al probar el c\u00f3digo no funcion\u00f3. Quer\u00eda que `entidad`, `sitio` y `puesto` fueran obligatorios, pero no pude crear objetos as\u00ed. Tuve que migrar el modelo para hacer estos campos opcionales. Adem\u00e1s coloqu\u00e9 las constantes de `CHOICES` __dentro__ del modelo.\r\n\r\n---\r\n\r\n### Notas\r\n\r\n[^1]: Creo que a trav\u00e9s del puesto puedo determinar si es miembro del servicio profesional, pero como no he resuelto la forma de hacerlo, agregu\u00e9 un campo l\u00f3gico.\r\n\r\n[^2]: En adelante al *Cuadro de Mando Integral* lo llamaremos solo **cmi**.\r\n\r\n[^3]: Yo uso [Atom](http://j.mp/1clPzBh), que es gratuito y libre.\r\n\r\n[^4]: Creo que estoy usando otros nombres, pero la idea es la misma.", "extend": "", "pub_date": "2015-08-09T05:42:29Z", "summary_html": "", "body_html": "<p>Django tiene un modelo de usuario que ofrece muchas funcionalidades. El problema con <code>User</code> es que no puede ampliarse para incluir m\u00e1s informaci\u00f3n. Por ejemplo, para el <em>Cuadro de Mando Integral</em> necesitamos saber el sitio en d\u00f3nde trabajan y el puesto<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>.</p>\n<p>El modelo <code>User</code> hereda de <code>AbstractBaseUser</code> de donde vienen todas sus funciones. Al crear un nuevo modelo <code>Pipol</code> y heredar de <code>AbstractBaseUser</code>, le damos a nuestro modelo las mismas funciones que <code>User</code> (ofuscaci\u00f3n de contrase\u00f1a, manejo de sesiones, etc.) y adem\u00e1s le damos la posibilidad de contar con los campos que necesitamos, como <code>sitio</code> y <code>puesto</code>.</p>\n<p>En Django, el concepto de una <em>\u00abaplicaci\u00f3n\u00bb</em> se usa para organizar el c\u00f3digo de una manera coherente. Una <em>app</em> es un m\u00f3dulo que combina el c\u00f3digo de modelos, vistas, serializadores, que est\u00e1n relacionados de alguna manera. Por ejemplo, el primer paso para construir el Cuadro de Mando Integral<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> ser\u00e1 crear una <em>app</em> llama <code>nucleo</code>. La aplicaci\u00f3n <code>nucleo</code> ser\u00e1 la que contenga el c\u00f3digo para el registro de cuentas, registrarse, salir y otra informaci\u00f3n relevante para el <strong>cmi</strong>.</p>\n<p>Creamos entonces nuestra <em>app</em> <code>nucleo</code> ejecutando el siguiente c\u00f3digo:</p>\n<div class=\"codehilite\"><pre><span></span>$ python manage.py startapp nucleo\n</pre></div>\n\n\n<h2 id=\"el-modelo-pipol\">El modelo <code>Pipol</code></h2>\n<p>Para empezar, crearemos el modelo <code>Pipol</code> que mencionamos antes.</p>\n<p>En el editor de nuestra preferencia<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup> abrimos el archivo <code>core/models.py</code> y lo editamos para que quede como sigue<sup id=\"fnref-4\"><a class=\"footnote-ref\" href=\"#fn-4\">4</a></sup>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\"># -*- coding: UTF-8 -*-</span>\n\n<span class=\"c1\">#         app: mx.ine.cmi</span>\n<span class=\"c1\">#      m\u00f3dulo: core</span>\n<span class=\"c1\"># descripci\u00f3n: N\u00facleo del CMI</span>\n<span class=\"c1\">#       autor: Javier Sanchez Toledano</span>\n<span class=\"c1\">#       fecha: s\u00e1bado, 11 de abril de 2015</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractBaseUser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Pipol</span><span class=\"p\">(</span><span class=\"n\">AbstractBaseUser</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">    Clase para gestionar los usuarios del cuadro de mando integral.</span>\n<span class=\"sd\">    Incluye la posibilidad de incluir otras entidades y poder filtrar</span>\n<span class=\"sd\">    de acuerdo con ello.</span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n    <span class=\"n\">ENTIDADES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Tlaxcala&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">SITIOS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Junta Local&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;01 Junta Distrital&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;02 Junta Distrital&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;O3 Junta Distrital&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">VEL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VEL&#39;</span>\n    <span class=\"n\">VSL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VSL&#39;</span>\n    <span class=\"n\">VRL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VRL&#39;</span>\n    <span class=\"n\">VOL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VOL&#39;</span>\n    <span class=\"n\">VCL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VCL&#39;</span>\n    <span class=\"n\">VED</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VED&#39;</span>\n    <span class=\"n\">VSD</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VSD&#39;</span>\n    <span class=\"n\">VRD</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VRD&#39;</span>\n    <span class=\"n\">VOD</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VOD&#39;</span>\n    <span class=\"n\">VCD</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VCD&#39;</span>\n    <span class=\"n\">JMM</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;JMM&#39;</span>\n    <span class=\"n\">JOSA</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;JOSA&#39;</span>\n    <span class=\"n\">JOCE</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;JOCE&#39;</span>\n    <span class=\"n\">RA</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;RA&#39;</span>\n\n    <span class=\"n\">PUESTOS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"n\">VEL</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Vocal Ejecutivo de Junta Local&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">VSL</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Vocal Secretario de Junta Local&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">VRL</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Vocal del RFE de Junta Local&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">VCL</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Vocal de Capacitaci\u00f3n de Junta Local&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">VOL</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Vocal de Organizaci\u00f3n de Junta Local&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">VED</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Vocal Ejecutivo de Junta Distrital&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">VSD</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Vocal Secretario de Junta Distrital&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">VRD</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Vocal del RFE de Junta Distrital&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">VCD</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Vocal de Capacitaci\u00f3n de Junta Distrital&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">VOD</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Vocal de Organizaci\u00f3n de Junta Distrital&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">JOSA</span><span class=\"p\">,</span> <span class=\"s1\">&#39;JOSA&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">JMM</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Jefe de Monitoreo a M\u00f3dulos&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">JOCE</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Jefe de Cartograf\u00eda&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">RA</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Rama Administrativa&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">EmailField</span><span class=\"p\">(</span><span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n    <span class=\"n\">nombre</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">paterno</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">materno</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">tagline</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n    <span class=\"n\">is_admin</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n\n    <span class=\"n\">entidad</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveSmallIntegerField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">ENTIDADES</span><span class=\"p\">)</span>\n    <span class=\"n\">sitio</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveSmallIntegerField</span><span class=\"p\">(</span><span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">SITIOS</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">puesto</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">PUESTOS</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">is_mspe</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">is_activo</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n    <span class=\"n\">created_at</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">(</span><span class=\"n\">auto_now_add</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">updated_at</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">(</span><span class=\"n\">auto_now</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n    <span class=\"n\">objects</span> <span class=\"o\">=</span> <span class=\"n\">PipolManager</span><span class=\"p\">()</span>\n\n    <span class=\"n\">USERNAME_FIELD</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;email&#39;</span>\n    <span class=\"n\">REQUIRED_FIELDS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;username&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__unicode__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">email</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_full_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39; &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nombre</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">paterno</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materno</span><span class=\"p\">])</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_short_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nombre</span>\n</pre></div>\n\n\n<p>Ahora vamos a ver un poco m\u00e1s a detalle este modelo.</p>\n<div class=\"codehilite\"><pre><span></span>    email = models.EmailField(unique=True)\n\n    # ...\n\n    USERNAME_FIELD = &#39;email&#39;\n</pre></div>\n\n\n<p>El modelo <code>User</code> predeterminado de Django <em>necesita</em> un nombre de usuario. Este se utiliza para registrar el ingreso de los usuarios. Pero en el <strong>cmi</strong> utilizaremos el correo institucional para este prop\u00f3sito.</p>\n<p>Para indicarle a Django que utilice el correo como nombre de usuario en este modelo, establecemos el atributo <code>USERNAME_FIELD</code> como <code>email</code>. Este campo debe ser \u00fanico, as\u00ed que creamos el campo con el argumento <code>unique=True</code>.</p>\n<p>Y aunque vamos a ingresar al <strong>cmi</strong> con el correo, todav\u00eda necesitamos un nombre de usuario (o <em>username</em>) para mostrarlo en las metas o en la URL del perfil de usuario[^5], por lo tanto debe ser \u00fanico.</p>\n<div class=\"codehilite\"><pre><span></span>    username = models.CharField(max_length=40, unique=True)\n</pre></div>\n\n\n<p>Tambi\u00e9n vamos a colocar m\u00e1s informaci\u00f3n personal sobre nuestros usuarios. Pero para practicidad o para que los usuarios se sientan m\u00e1s confortables vamos a permitir que estos campos queden en blanco.</p>\n<div class=\"codehilite\"><pre><span></span>    nombre = models.CharField(max_length=40, blank=True)\n    paterno = models.CharField(max_length=40, blank=True)\n    materno = models.CharField(max_length=40, blank=True)\n</pre></div>\n\n\n<p>Como ya hab\u00edamos dicho, debemos establecer cierta informaci\u00f3n para ubicar a los usarios, por esta raz\u00f3n inclu\u00edmos los siguientes campos.</p>\n<div class=\"codehilite\"><pre><span></span>    sitio = models.PositiveSmallIntegerField(choices=SITIOS)\n    puesto = models.PositiveSmallIntegerField(choices=PUESTOS)\n    is_mspe = models.BooleanField(default=False)\n</pre></div>\n\n\n<p>Y por razones de trazabilidad, agregamos dos campos en el perfil. El primero <code>created_at</code> guarda de forma autom\u00e1tica la fecha de creaci\u00f3n del usuario y <code>updated_at</code> guarda autom\u00e1ticamente la fecha y hora de la modificaci\u00f3n m\u00e1s reciente.</p>\n<div class=\"codehilite\"><pre><span></span>    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n</pre></div>\n\n\n<p>La diferencia entre <code>auto_now_add</code> y <code>auto_now</code> es que una vez que se agrega informaci\u00f3n en <code>auto_now_add</code> ya no puede modificarse y <code>auto_now</code> se modifica cada vez que se edita el perfil.</p>\n<p>Cuando queremos obtener una instancia de alg\u00fan mode en Django, usamos una expresi\u00f3n tipo <code>Modelo.objects.get(**kwargs)</code>. El atributo <code>objects</code> es una clase <code>Manager</code> que por lo general se escribe como <code>&lt;modelo&gt;Manager</code>. En nuestro caso creamos la clase <code>PipolManager</code>, que veremos m\u00e1s adelante.</p>\n<div class=\"codehilite\"><pre><span></span>    objects = PipolManager()\n</pre></div>\n\n\n<p>Vamos a usar el nombre de usuario en muchos lados. Tambi\u00e9n necesitamos saber <em>forzosamente</em> el sitio y el puesto de los usuarios. Normalmente utilizar\u00edamos el par\u00e1metro <code>required=True</code> pero como estamos reemplazando al modelo <code>User</code> necesitamos especificar los campos obligatorios:</p>\n<div class=\"codehilite\"><pre><span></span>    REQUIRED_FIELDS = [&#39;username&#39;, &#39;sitio&#39;, &#39;puesto&#39;]\n</pre></div>\n\n\n<p>Cuando trabajamos en el shell, como veremos pr\u00f3ximamente, la representaci\u00f3n en texto de un objeto <code>Pipol</code> aparece como <code>&lt;Pipol: Pipol&gt;</code>, pero como hay muchas personas en el <strong>cmi</strong> esto no resulta muy pr\u00e1ctico.  Pero podemos sobreescribir el m\u00e9todo <code>__unicode__()</code> para cambiar el comportamiento est\u00e1ndar. En el <strong>cmi</strong> vamos a mostrar el correo electr\u00f3nico de los usuarios, por lo que la representaci\u00f3n del objeto <code>Pipol</code> se ver\u00eda as\u00ed: <code>&lt;Pipol: javier@example.com</code>.</p>\n<div class=\"codehilite\"><pre><span></span>    def __unicode__(self):\n        return self.email\n</pre></div>\n\n\n<p>Las funciones <code>get_full_name()</code> y <code>get_short_name()</code> est\u00e1n predeterminadas en Django. No las vamos a usar, pero de todos modos es una buena idea asegurarnos que funciones de una manera coherente con el <strong>cmi</strong>.</p>\n<div class=\"codehilite\"><pre><span></span>    def get_full_name(self):\n        return &#39; &#39;.join(self.nombre, self.paterno, self.materno)\n\n    def get_short_name(self):\n        return self.nombre\n</pre></div>\n\n\n<p>En el pr\u00f3ximo art\u00edculo veremos como crear el administrador de objetos para el modelo <code>Pipol</code>.</p>\n<h3 id=\"actualizacion\">Actualizaci\u00f3n</h3>\n<blockquote>\n<p>Tuve que hacer algunos cambios porque al probar el c\u00f3digo no funcion\u00f3. Quer\u00eda que <code>entidad</code>, <code>sitio</code> y <code>puesto</code> fueran obligatorios, pero no pude crear objetos as\u00ed. Tuve que migrar el modelo para hacer estos campos opcionales. Adem\u00e1s coloqu\u00e9 las constantes de <code>CHOICES</code> <strong>dentro</strong> del modelo.</p>\n</blockquote>\n<hr>\n<h3 id=\"notas\">Notas</h3>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Creo que a trav\u00e9s del puesto puedo determinar si es miembro del servicio profesional, pero como no he resuelto la forma de hacerlo, agregu\u00e9 un campo l\u00f3gico.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>En adelante al <em>Cuadro de Mando Integral</em> lo llamaremos solo <strong>cmi</strong>.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>Yo uso <a href=\"http://j.mp/1clPzBh\">Atom</a>, que es gratuito y libre.&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-4\">\n<p>Creo que estoy usando otros nombres, pero la idea es la misma.&#160;<a class=\"footnote-backref\" href=\"#fnref-4\" title=\"Jump back to footnote 4 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "extender-el-modelo-de-usuario-en-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 59, "fields": {"idx": "69bc5be9-5056-487e-b1af-2c6f8fc34644", "creado": "2017-07-29T03:46:03.667Z", "modificado": "2017-07-29T03:46:03.667Z", "title": "C\u00f3mo hacer un gestor de objetos en Django", "summary": "", "body": "Title: C\u00f3mo hacer un gestor de objetos en Django\r\nDate: 2015-08-09 12:42:57 a.m.\r\nCategory: Desarrollo\r\nTags:  django, models\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\n\r\nComo recordar\u00e1n en el [art\u00edculo anterior](http://t.co/r9hSSyX6MW) vimos como crear un modelo de usuario con algunas caracter\u00edsticas agregadas al modelo est\u00e1ndar de Django.\r\n\r\nCuando sustitu\u00edmos el modelo `User` por uno creado a nuestras necesidades, debemos definir un gestor relacionado, es decir una clase `Manager` que sobreescriba las funciones de `create_user` y `create_superuser`.\r\n\r\nDentro del archivo `nucleo/models.py`, agregamos el siguiente c\u00f3digo, __antes__ de la clase `Pipol`.\r\n\r\n```python\r\nfrom django.contrib.auth.models import BaseUserManager\r\n\r\nclass PipolManager(BaseUserManager):\r\n    def create_user(self, email, password=None, **kwargs):\r\n        if not email:\r\n            raise ValueError(\r\n                'Los usuarios deben tener una direcci\u00f3n de correo v\u00e1lida.'\r\n            )\r\n\r\n        if not kwargs.get('username'):\r\n            raise ValueError(\r\n                'Los usuarios deben tener un nombre de usuario v\u00e1lido.'\r\n            )\r\n\r\n        if not kwargs.get('entidad'):\r\n            raise ValueError('Debe seleccionar una entidad.')\r\n\r\n        if not kwargs.get('sitio'):\r\n            raise ValueError('Debe seleccionar una junta.')\r\n\r\n        if not kwargs.get('puesto'):\r\n            raise ValueError('Debe seleccionar un puesto.')\r\n\r\n        pipol = self.model(\r\n            email=self.normalize_email(email), username=kwargs.get('username')\r\n        )\r\n\r\n        pipol.set_password(password)\r\n        pipol.save()\r\n\r\n        return pipol\r\n\r\n    def create_superuser(self, email, password, **kwargs):\r\n        pipol = self.create_user(email, password, **kwargs)\r\n\r\n        pipol.is_admin = True\r\n        pipol.save()\r\n\r\n        return pipol\r\n```\r\n\r\nAhora analizaremos esta clase l\u00ednea por l\u00ednea.\r\n\r\n```python\r\n        if not email:\r\n            raise ValueError(\r\n                'Los usuarios deben tener una direcci\u00f3n de correo v\u00e1lida.'\r\n            )\r\n\r\n        if not kwargs.get('username'):\r\n            raise ValueError(\r\n                'Los usuarios deben tener un nombre de usuario v\u00e1lido.'\r\n            )\r\n```\r\n\r\nYa que se requiere que los usuarios tengan un correo y un nombre de usuario, debemos lanzar un error si falta alguno de estos atributos.\r\n\r\n```python\r\n        if not kwargs.get('entidad'):\r\n            raise ValueError('Debe seleccionar una entidad.')\r\n\r\n        if not kwargs.get('sitio'):\r\n            raise ValueError('Debe seleccionar una junta.')\r\n\r\n        if not kwargs.get('puesto'):\r\n            raise ValueError('Debe seleccionar un puesto.')\r\n```\r\n\r\nY ya que definimos que la entidad, el sitio y el puesto son obligarios, lanzamos errores cuando no se definen estos valores.\r\n\r\n```python\r\n        pipol = self.model(\r\n            email=self.normalize_email(email), username=kwargs.get('username')\r\n        )\r\n```\r\n\r\nTambi\u00e9n debemos definir el modelo para la clase `PipolManager`, usando `self.model` que se refiere al modelo definido en `BaseUserManager` de forma predeteriminada. Este comportamiento est\u00e1ndar est\u00e1 definido en `settings.AUTH_USER_MODEL`, el cual cambiaremos en un momento, m\u00e1s adelante.\r\n\r\n```python\r\n        pipol = self.create_user(email, password, **kwargs)\r\n\r\n        pipol.is_admin = True\r\n        pipol.save()\r\n```\r\n\r\nPara no violar el principio DRY[^1] de Django, para crear al administrador con `create_superuser`, simplemente dejamos que `create_user` se encargue de esta funci\u00f3n y libera a `create_superuser` que solo se ocupa de marcar un objeto `Pipol` como administrador.\r\n\r\n## Confirgurar `AUTH_USER_MODEL`\r\n\r\nAunque tengamos nuestro modelo `Pipol`, cuando usemos el comando `python manage.py createsuperuser` se seguir\u00e1 creando un modelo `User`, porque hasta este moemnto, Django no sabe que vamos a usar otro modelo para manejar nuestras cuentas.\r\n\r\nPara definir este comportamiento debemos actualizar el valor de `settings.AUTH_USER_MODEL`, agregando esta l\u00ednea en el archivo de configuraci\u00f3n, que en nuestro caso est\u00e1 en `cmi/settings/base.py`.\r\n\r\n```\r\nAUTH_USER_MODEL = 'nucleo.Pipol'\r\n```\r\n\r\n\r\n---\r\n### Notas\r\n\r\n[^1]: DRY es _Don't Repeat Yourself_ algo as\u00ed como _No seas repetitivo_.", "extend": "", "pub_date": "2015-08-09T05:42:59Z", "summary_html": "", "body_html": "<p>Como recordar\u00e1n en el <a href=\"http://t.co/r9hSSyX6MW\">art\u00edculo anterior</a> vimos como crear un modelo de usuario con algunas caracter\u00edsticas agregadas al modelo est\u00e1ndar de Django.</p>\n<p>Cuando sustitu\u00edmos el modelo <code>User</code> por uno creado a nuestras necesidades, debemos definir un gestor relacionado, es decir una clase <code>Manager</code> que sobreescriba las funciones de <code>create_user</code> y <code>create_superuser</code>.</p>\n<p>Dentro del archivo <code>nucleo/models.py</code>, agregamos el siguiente c\u00f3digo, <strong>antes</strong> de la clase <code>Pipol</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">BaseUserManager</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">PipolManager</span><span class=\"p\">(</span><span class=\"n\">BaseUserManager</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_user</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">email</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;Los usuarios deben tener una direcci\u00f3n de correo v\u00e1lida.&#39;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;username&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;Los usuarios deben tener un nombre de usuario v\u00e1lido.&#39;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;entidad&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Debe seleccionar una entidad.&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;sitio&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Debe seleccionar una junta.&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;puesto&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Debe seleccionar un puesto.&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">pipol</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span>\n            <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">normalize_email</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">),</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;username&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">pipol</span><span class=\"o\">.</span><span class=\"n\">set_password</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">)</span>\n        <span class=\"n\">pipol</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">pipol</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">create_superuser</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">pipol</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_user</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n        <span class=\"n\">pipol</span><span class=\"o\">.</span><span class=\"n\">is_admin</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n        <span class=\"n\">pipol</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">pipol</span>\n</pre></div>\n\n\n<p>Ahora analizaremos esta clase l\u00ednea por l\u00ednea.</p>\n<div class=\"codehilite\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">email</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;Los usuarios deben tener una direcci\u00f3n de correo v\u00e1lida.&#39;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;username&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;Los usuarios deben tener un nombre de usuario v\u00e1lido.&#39;</span>\n            <span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Ya que se requiere que los usuarios tengan un correo y un nombre de usuario, debemos lanzar un error si falta alguno de estos atributos.</p>\n<div class=\"codehilite\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;entidad&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Debe seleccionar una entidad.&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;sitio&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Debe seleccionar una junta.&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;puesto&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Debe seleccionar un puesto.&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Y ya que definimos que la entidad, el sitio y el puesto son obligarios, lanzamos errores cuando no se definen estos valores.</p>\n<div class=\"codehilite\"><pre><span></span>        <span class=\"n\">pipol</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span>\n            <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">normalize_email</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">),</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;username&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Tambi\u00e9n debemos definir el modelo para la clase <code>PipolManager</code>, usando <code>self.model</code> que se refiere al modelo definido en <code>BaseUserManager</code> de forma predeteriminada. Este comportamiento est\u00e1ndar est\u00e1 definido en <code>settings.AUTH_USER_MODEL</code>, el cual cambiaremos en un momento, m\u00e1s adelante.</p>\n<div class=\"codehilite\"><pre><span></span>        <span class=\"n\">pipol</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_user</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n        <span class=\"n\">pipol</span><span class=\"o\">.</span><span class=\"n\">is_admin</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n        <span class=\"n\">pipol</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>Para no violar el principio DRY<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> de Django, para crear al administrador con <code>create_superuser</code>, simplemente dejamos que <code>create_user</code> se encargue de esta funci\u00f3n y libera a <code>create_superuser</code> que solo se ocupa de marcar un objeto <code>Pipol</code> como administrador.</p>\n<h2 id=\"confirgurar-auth_user_model\">Confirgurar <code>AUTH_USER_MODEL</code></h2>\n<p>Aunque tengamos nuestro modelo <code>Pipol</code>, cuando usemos el comando <code>python manage.py createsuperuser</code> se seguir\u00e1 creando un modelo <code>User</code>, porque hasta este moemnto, Django no sabe que vamos a usar otro modelo para manejar nuestras cuentas.</p>\n<p>Para definir este comportamiento debemos actualizar el valor de <code>settings.AUTH_USER_MODEL</code>, agregando esta l\u00ednea en el archivo de configuraci\u00f3n, que en nuestro caso est\u00e1 en <code>cmi/settings/base.py</code>.</p>\n<div class=\"codehilite\"><pre><span></span>AUTH_USER_MODEL = &#39;nucleo.Pipol&#39;\n</pre></div>\n\n\n<hr>\n<h3 id=\"notas\">Notas</h3>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>DRY es <em>Don&rsquo;t Repeat Yourself</em> algo as\u00ed como <em>No seas repetitivo</em>.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-hacer-un-gestor-de-objetos-en-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 60, "fields": {"idx": "faae1e53-edbb-4d17-8d32-a95433b80e97", "creado": "2017-07-29T04:07:47.795Z", "modificado": "2017-08-03T04:12:08.598Z", "title": "Serializar modelos en Django con REST Framework", "summary": "C\u00f3mo transfomar modelos de Django en objetos JSON por medio de la serializaci\u00f3n.", "body": "Title: Serializar modelos en Django con REST Framework  \r\nDate: 2015-04-12 12:42:30  \r\nCategory: Desarrollo  \r\nTags:  django, restful, api\r\nAuthor: Javier Sanchez Toledano  \r\nSummary: C\u00f3mo transfomar modelos de Django en objetos JSON por medio de la serializaci\u00f3n.  \r\n\r\nEl __cmi__ ser\u00e1 una aplicaci\u00f3n basada en Django de una sola p\u00e1gina, utilizando __AngularJS__, un _framework_ con el que haremos las solicitudes AJAX al servidor para obtener los datos que mostraremos en la p\u00e1gina web. Antes de poder enviar los datos al cliente, necesitamos darles un formato que el cliente pueda entender; en este caso, utilizaremos JSON. \r\n\r\nEl proceso de transformar los modelos de Django en JSON se llama _serializaci\u00f3n_ y es de lo que se trata este art\u00edculo.\r\n\r\nEl modelo que vamos a serializar se llama `Pipol`, el serializador que vamos acrear se llamar\u00e1 `PipolSerializer`.\r\n\r\n## Django REST Framework\r\n\r\nDjango __REST Framework__ es un conjunto de herramientas que proporcionan un conjunto de caracter\u00edsticas para muchas aplicaciones web, incluyendo los serializadores. Vamos a usar estas caracter\u00edsticas en el _cmi_ para ahorrarnos trabajo y frustraciones. \r\n\r\nPara instalar Django REST Framework ejecutamos el comando `pip`:\r\n\r\n```bash\r\n$ pip install djangorestframework\r\n```\r\n\r\nCreamos el archivo `core/serializers.py` y agregamos el siguiente c\u00f3digo:\r\n\r\n```python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#         app: mx.ine.cmi\r\n#      m\u00f3dulo: core.serializers\r\n# descripci\u00f3n: Serializadores para control de usuarios\r\n#       autor: Javier Sanchez Toledano\r\n#       fecha: domingo, 12 de abril de 2015\r\n\r\n\r\nfrom django.contrib.auth import update_session_auth_hash\r\nfrom rest_framework import serializers\r\nfrom .models import Pipol\r\n\r\n\r\nclass PipolSerializer(serializers.ModelSerializer):\r\n    password = serializers.CharField(write_only=True, required=False)\r\n    confirm_password = serializers.CharField(write_only=True, required=False)\r\n\r\n    class Meta:\r\n        model = Pipol\r\n        fields = ('id', 'email', 'username', 'created_at', 'updated_at',\r\n                  'nombre', 'paterno', 'materno', 'tagline', 'entidad',\r\n                  'sitio', 'puesto', 'is_mspe', 'is_activo', 'password',\r\n                  'confirm_password')\r\n\r\n        def create(self, datos_verificados):\r\n            return Pipol.objects.create(**datos_verificados)\r\n\r\n        def update(self, instance, datos_verificados):\r\n            instance.username = datos_verificados.get('username', instance.username)\r\n            instance.tagline = datos_verificados.get('tagline', instance.tagline)\r\n\r\n            instance.save()\r\n\r\n            password = datos_verificados.get('password', None)\r\n            confirm_password = datos_verificados('confirm_password', None)\r\n\r\n            if password and confirm_password and password == confirm_password:\r\n                instance.set_password(password)\r\n                instance.save()\r\n\r\n            update_session_auth_hash(self.context.get('request'), instance)\r\n\r\n            return instance\r\n\r\n```\r\n\r\nAnalicemos el c\u00f3digo l\u00ednea por l\u00ednea:\r\n\r\n```python\r\n    password = serializers.CharField(write_only=True, required=False)\r\n    confirm_password = serializers.CharField(write_only=True, required=False)\r\n```\r\n\r\nEn lugar de incluir el campo `password` en la tupla `fields`, como vermos m\u00e1s adelante, definimos expl\u00edcitamente el campo al principio de la clase `PipolSerializer`. La raz\u00f3n para hacer esto es que asi podemos pasar el atributo `required=False`. Cada campo en `fields` es obligatorio, pero no queremos actualizar la contrase\u00f1a a menos que proporcionemos una nueva.\r\n\r\n`confirm_password` es similar a `password` y se usa para asegurarnos que no tenemos errores al escribir la contrase\u00f1a.\r\n\r\nF\u00edjate en el argumento `write_only=True`. El password del usuario, aunque se haya _ofuscado_ y _salteado_[^1], __no debe ser visible__ para el cliente en la respuesta de AJAX.\r\n\r\n```python\r\n    class Meta:\r\n```\r\n\r\nLa subclase `Meta` define los metadatos que el serializador necesita para operar.\r\n\r\n```python\r\n        fields = ('id', 'email', 'username', 'created_at', 'updated_at',\r\n                  'nombre', 'paterno', 'materno', 'tagline', 'entidad',\r\n                  'sitio', 'puesto', 'is_mspe', 'is_activo', 'password',\r\n                  'confirm_password')\r\n```\r\n\r\nEl atributo `fields` de la clase `Meta` es d\u00f3nde especificamos cuales atributos del modelo `Pipol` vamos a _serializar_. Debemos tener mucho cuidado con la selecci\u00f3n de estos porque algunos campos, como `is_superuser`, no deben estar disponibles para el cliente por razones de seguridad.\r\n\r\n\r\n\r\n\r\n---\r\n### Notas\r\n\r\n[^1]: _hashed and salted_. No hay una forma f\u00e1cil de traducir esto, pero estas dos actividades se utilizan para ofuscar la contrase\u00f1a de modo que nadie, excepto el usuario, pueda conocerla. De hecho no se compara la contrase\u00f1a que se escribe con la almacenada (porque no est\u00e1 almacenada), sino que se ofusca la contrase\u00f1a escrita y se compara con la huella almacenada.", "extend": "", "pub_date": "2015-04-12T17:42:30Z", "summary_html": "<p>C\u00f3mo transfomar modelos de Django en objetos JSON por medio de la serializaci\u00f3n.</p>", "body_html": "<p>El <strong>cmi</strong> ser\u00e1 una aplicaci\u00f3n basada en Django de una sola p\u00e1gina, utilizando <strong>AngularJS</strong>, un <em>framework</em> con el que haremos las solicitudes AJAX al servidor para obtener los datos que mostraremos en la p\u00e1gina web. Antes de poder enviar los datos al cliente, necesitamos darles un formato que el cliente pueda entender; en este caso, utilizaremos JSON. </p>\n<p>El proceso de transformar los modelos de Django en JSON se llama <em>serializaci\u00f3n</em> y es de lo que se trata este art\u00edculo.</p>\n<p>El modelo que vamos a serializar se llama <code>Pipol</code>, el serializador que vamos acrear se llamar\u00e1 <code>PipolSerializer</code>.</p>\n<h2 id=\"django-rest-framework\">Django REST Framework</h2>\n<p>Django <strong>REST Framework</strong> es un conjunto de herramientas que proporcionan un conjunto de caracter\u00edsticas para muchas aplicaciones web, incluyendo los serializadores. Vamos a usar estas caracter\u00edsticas en el <em>cmi</em> para ahorrarnos trabajo y frustraciones. </p>\n<p>Para instalar Django REST Framework ejecutamos el comando <code>pip</code>:</p>\n<div class=\"codehilite\"><pre><span></span>$ pip install djangorestframework\n</pre></div>\n\n\n<p>Creamos el archivo <code>core/serializers.py</code> y agregamos el siguiente c\u00f3digo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\"># -*- coding: UTF-8 -*-</span>\n\n<span class=\"c1\">#         app: mx.ine.cmi</span>\n<span class=\"c1\">#      m\u00f3dulo: core.serializers</span>\n<span class=\"c1\"># descripci\u00f3n: Serializadores para control de usuarios</span>\n<span class=\"c1\">#       autor: Javier Sanchez Toledano</span>\n<span class=\"c1\">#       fecha: domingo, 12 de abril de 2015</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth</span> <span class=\"kn\">import</span> <span class=\"n\">update_session_auth_hash</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework</span> <span class=\"kn\">import</span> <span class=\"n\">serializers</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Pipol</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PipolSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">write_only</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">confirm_password</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">write_only</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Pipol</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;email&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;username&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;created_at&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;updated_at&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s1\">&#39;nombre&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;paterno&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;materno&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tagline&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;entidad&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s1\">&#39;sitio&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;puesto&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;is_mspe&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;is_activo&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;password&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s1\">&#39;confirm_password&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">datos_verificados</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Pipol</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">datos_verificados</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">datos_verificados</span><span class=\"p\">):</span>\n            <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">datos_verificados</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;username&#39;</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">)</span>\n            <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">tagline</span> <span class=\"o\">=</span> <span class=\"n\">datos_verificados</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;tagline&#39;</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">tagline</span><span class=\"p\">)</span>\n\n            <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n            <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">datos_verificados</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;password&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n            <span class=\"n\">confirm_password</span> <span class=\"o\">=</span> <span class=\"n\">datos_verificados</span><span class=\"p\">(</span><span class=\"s1\">&#39;confirm_password&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">password</span> <span class=\"ow\">and</span> <span class=\"n\">confirm_password</span> <span class=\"ow\">and</span> <span class=\"n\">password</span> <span class=\"o\">==</span> <span class=\"n\">confirm_password</span><span class=\"p\">:</span>\n                <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">set_password</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">)</span>\n                <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n            <span class=\"n\">update_session_auth_hash</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;request&#39;</span><span class=\"p\">),</span> <span class=\"n\">instance</span><span class=\"p\">)</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">instance</span>\n</pre></div>\n\n\n<p>Analicemos el c\u00f3digo l\u00ednea por l\u00ednea:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">write_only</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">confirm_password</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">write_only</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>En lugar de incluir el campo <code>password</code> en la tupla <code>fields</code>, como vermos m\u00e1s adelante, definimos expl\u00edcitamente el campo al principio de la clase <code>PipolSerializer</code>. La raz\u00f3n para hacer esto es que asi podemos pasar el atributo <code>required=False</code>. Cada campo en <code>fields</code> es obligatorio, pero no queremos actualizar la contrase\u00f1a a menos que proporcionemos una nueva.</p>\n<p><code>confirm_password</code> es similar a <code>password</code> y se usa para asegurarnos que no tenemos errores al escribir la contrase\u00f1a.</p>\n<p>F\u00edjate en el argumento <code>write_only=True</code>. El password del usuario, aunque se haya <em>ofuscado</em> y <em>salteado</em><sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>, <strong>no debe ser visible</strong> para el cliente en la respuesta de AJAX.</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n</pre></div>\n\n\n<p>La subclase <code>Meta</code> define los metadatos que el serializador necesita para operar.</p>\n<div class=\"codehilite\"><pre><span></span>        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;email&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;username&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;created_at&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;updated_at&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s1\">&#39;nombre&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;paterno&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;materno&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tagline&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;entidad&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s1\">&#39;sitio&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;puesto&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;is_mspe&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;is_activo&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;password&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s1\">&#39;confirm_password&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>El atributo <code>fields</code> de la clase <code>Meta</code> es d\u00f3nde especificamos cuales atributos del modelo <code>Pipol</code> vamos a <em>serializar</em>. Debemos tener mucho cuidado con la selecci\u00f3n de estos porque algunos campos, como <code>is_superuser</code>, no deben estar disponibles para el cliente por razones de seguridad.</p>\n<hr>\n<h3 id=\"notas\">Notas</h3>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p><em>hashed and salted</em>. No hay una forma f\u00e1cil de traducir esto, pero estas dos actividades se utilizan para ofuscar la contrase\u00f1a de modo que nadie, excepto el usuario, pueda conocerla. De hecho no se compara la contrase\u00f1a que se escribe con la almacenada (porque no est\u00e1 almacenada), sino que se ofusca la contrase\u00f1a escrita y se compara con la huella almacenada.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "serializar-modelos-en-django-con-rest-framework", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 61, "fields": {"idx": "3f467996-d38d-41b1-a01f-45434bee5efb", "creado": "2017-07-29T04:10:11.885Z", "modificado": "2017-07-29T04:11:19.678Z", "title": "Aplicaciones reutilizables en Django", "summary": "C\u00f3mo crear aplicaciones reusables en Django", "body": "Title: Aplicaciones reutilizables en Django  \r\nDate: 2015-04-14 21:35:22  \r\nCategory: Desarrollo  \r\nTags:  django, patterns,   \r\nAuthor: Javier Sanchez Toledano  \r\nSummary: C\u00f3mo crear aplicaciones reusables en Django  \r\n\r\n\r\n> Voy a confesar una cosa: nunca hab\u00eda entendido como funcionaban las plantillas en Django o como hacer aplicaciones reutilizables. Hasta hoy.\r\n\r\nPara empezar voy a hablar del proyecto en el que estoy trabajando. Es muy simple: se trata de una aplicaci\u00f3n para capturar los resultados de encuestas, con algunos datos de identificaci\u00f3n (`fecha` y `modulo`), cuatro preguntas que solo permiten escribir n\u00fameros del 0 al 10 y un combo para elegir 5 opciones. \r\nEs una aplicaci\u00f3n de captura muy r\u00e1pida y genera toda una serie de estad\u00edsticas anuales, mensuales y por m\u00f3dulo.\r\n\r\nPero lo que hace no es importante en este art\u00edculo, se trata de convertir esta aplicaci\u00f3n en un componente modular del cuadro de mando y al mismo tiempo en una aplicaci\u00f3n independiente. Y adem\u00e1s se debe poder instalar usando el comando `pip`.\r\n\r\nLo primero fue entender la estructura del proyecto.\r\n\r\n```\r\n\u251c\u2500\u2500 dist\r\n\u251c\u2500\u2500 docs\r\n\u251c\u2500\u2500 requeriments\r\n\u2514\u2500\u2500 src\r\n    \u251c\u2500\u2500 assets -> ~/proyectos/cmi/src/assets/\r\n    \u251c\u2500\u2500 core\r\n    \u251c\u2500\u2500 encuestas\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 migrations\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 templates\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 encuestas\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 templatetags\r\n    \u251c\u2500\u2500 sgc_aprobacion.egg-info\r\n    \u2514\u2500\u2500 templates -> ~/proyectos/cmi/src/templates/\r\n```\r\n\r\nVeamos cada uno de los directorios:\r\n\r\n+ `dist` - Este directorio se crea autom\u00e1ticamente por `setuptools` cuando se crea el paquete de distribuci\u00f3n.\r\n+ `docs` - Contiene los documentos del aplicativo.\r\n+ `requeriments` - Para los archivos de requisitos, por si hay locales y de producci\u00f3n.\r\n+ `src` - Es donde reside el proyecto.\r\n+ `src/assets` - Es un enlace simb\u00f3lico a los archivos est\u00e1ticos.\r\n+ `src/core` - Es el proyecto de desarrollo, su funci\u00f3n es asegurar que la aplicaci\u00f3n funciona.\r\n+ `src/encuestas` - Es el proyecto en cuesti\u00f3n.\r\n+ `sgc_aprobacion.egg-info` - Es un directorio creado por `setuptools` al empaquetar el proyecto.\r\n+ `templates` - Un enlace simb\u00f3lico a las plantillas.\r\n\r\n## El n\u00facleo\r\n\r\nEn tanto que el proyecto `sgc-aprobacion` funcionar\u00e1 dentro del Cuadro de Mando Integral, tiene que asegurar que las met\u00e1foras visuales son las mismas que el n\u00facleo. Por eso se utilizan los archivos del proyecto central, `assets` y `templates` que proporcionan la base para el resto de los proyectos.\r\n\r\nEn el proyecto `sgc-aprobacion` indicamos d\u00f3nde encontrar tanto las plantillas como los archivos est\u00e1ticos en la configuraci\u00f3n, `core/settings.py` que solo se utiliza para desarrollo.\r\n\r\n```python\r\nfrom unipath import Path\r\n\r\nPROJECT_DIR = Path(__file__).ancestor(2)\r\nSTATIC_URL = '/assets/'\r\nSTATIC_ROOT = PROJECT_DIR.child(\"static\")\r\nSTATICFILES_DIRS = (\r\n    \"assets\",\r\n)\r\nTEMPLATE_DIRS = (\r\n    \"templates\",\r\n    PROJECT_DIR.child('encuestas', \"templates\"),\r\n)\r\n```\r\n\r\nCon `PROJECT_DIR` establecemos el directorio del proyecto, relativo a `src/core/settings.py`, por lo que el `ancestor(2)` es, precisamente, `src`. A partir de este directorio, localizamos `STATIC_ROOT`, ubicado en `src/static`. Agregamos a los archivos est\u00e1ticos, los directorios `assets`, para poder despu\u00e9s recopilarlos con `collectstatic`. \r\n\r\nA continuaci\u00f3n, lo que resulto una revelaci\u00f3n para mi: las plantillas.\r\n\r\nColocamos en `src/templates` las plantillas base, que son comunes para todos los proyectos del __cmi__. Pero las plantillas que usamos en el proyecto quedan en `src/encuestas/templates`. Y en este directorio solo est\u00e1n las plantillas del proyecto, por los est\u00e1ticos, la base y los auxiliares est\u00e1n en otro proyecto. De ah\u00ed la modularidad. Y la velocidad de desarrollo.\r\n\r\nAhora solo hay que preocuparse por el contenido.\r\n\r\n## La creaci\u00f3n del paquete\r\n\r\nCrear una aplicaci\u00f3n independiente en Django result\u00f3 m\u00e1s simple de lo que pensaba. Usando el paquete `setuptools` solo cre\u00e9 el archivo `setup.py`, dentro del proyecto original.\r\n\r\n```python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#         app: mx.ine.cmi.aprobacion\r\n#      m\u00f3dulo: setup\r\n# descripci\u00f3n: Instalaci\u00f3n del aplicativo\r\n#       autor: Javier Sanchez Toledano\r\n#       fecha: lunes, 13 de abril de 2015\r\n\r\n\r\nimport os\r\nfrom setuptools import setup\r\n\r\nwith open(os.path.join(os.path.dirname(__file__), 'README.md')) as readme:\r\n    README = readme.read()\r\n\r\nos.chdir(os.path.normpath(os.path.join(os.path.abspath(__file__), os.pardir)))\r\n\r\nsetup(\r\n    name='sgc-aprobacion',\r\n    version='1.0-rc1',\r\n    package_dir={'': 'src'},\r\n    packages=['encuestas'],\r\n    include_package_data=True,\r\n    license='MIT License',\r\n    description='Aplicativo para el control del indicador Aprobaci\u00f3n Ciudadana.',\r\n    long_description=README,\r\n    url='http://10.69.0.68/',\r\n    author='Javier Sanchez Toledano',\r\n    author_email='javier.sanchezt@example.com',\r\n    classifiers=[\r\n        'Environment :: Web Environment',\r\n        'Framework :: Django',\r\n        'Intended Audience :: Developers',\r\n        'License :: OSI Approved :: MIT License',\r\n        'Operating System :: OS Independent',\r\n        'Programming Language :: Python',\r\n        'Programming Language :: Python :: 2',\r\n        'Programming Language :: Python :: 2.7',\r\n        'Programming Language :: Python :: 2.7.6',\r\n        'Topic :: Internet :: WWW/HTTP',\r\n        'Topic :: Internet :: WWW/HTTP :: Dynamic Content',\r\n    ],\r\n)\r\n```\r\n\r\n\r\nAqu\u00ed no utiliz\u00f3 `unipath` porque no tengo la experiencia suficiente (_todav\u00eda_) para modificar esta plantilla.\r\n\r\nEs un archivo est\u00e1ndar, que se encuetra en el sitio de Django. Solo hay una importante diferencia.\r\n\r\nEl sitio de Django menciona que hay que crear otro directorio y mover ah\u00ed la aplicaci\u00f3n[^1] pero con la l\u00ednea `package_dir={'': 'src'},` esto no es necesario, ya que su funci\u00f3n es indicar que el proyecto est\u00e1 en el directorio `src` pero este, no forma parte del paquete. \r\n\r\nCon este par\u00e1metro no hay que mover nada y todo queda en el mismo directorio.\r\n\r\nPor \u00faltimo, hay que indicarle a `setuptools` que agregue directorio adicionales, usando el archivo `MANIFEST.in`:\r\n\r\n```\r\ninclude LICENSE\r\ninclude README.md\r\nrecursive-include docs/ *\r\nrecursive-include requeriments/ *\r\nrecursive-include src/encuestas/templatetags *\r\nrecursive-include src/encuestas/templates *\r\n```\r\n\r\nY tenemos listo el proyecto para empaquetarlo y distribuirlo.\r\n\r\n---\r\n### Notas\r\n\r\n[^1]: Pueden seguir las instrucciones directamente del sitio de Django: [https://docs.djangoproject.com/en/1.8/intro/reusable-apps/](https://docs.djangoproject.com/en/1.8/intro/reusable-apps/)", "extend": "", "pub_date": "2015-04-15T02:35:22Z", "summary_html": "<p>C\u00f3mo crear aplicaciones reusables en Django</p>", "body_html": "<blockquote>\n<p>Voy a confesar una cosa: nunca hab\u00eda entendido como funcionaban las plantillas en Django o como hacer aplicaciones reutilizables. Hasta hoy.</p>\n</blockquote>\n<p>Para empezar voy a hablar del proyecto en el que estoy trabajando. Es muy simple: se trata de una aplicaci\u00f3n para capturar los resultados de encuestas, con algunos datos de identificaci\u00f3n (<code>fecha</code> y <code>modulo</code>), cuatro preguntas que solo permiten escribir n\u00fameros del 0 al 10 y un combo para elegir 5 opciones. \nEs una aplicaci\u00f3n de captura muy r\u00e1pida y genera toda una serie de estad\u00edsticas anuales, mensuales y por m\u00f3dulo.</p>\n<p>Pero lo que hace no es importante en este art\u00edculo, se trata de convertir esta aplicaci\u00f3n en un componente modular del cuadro de mando y al mismo tiempo en una aplicaci\u00f3n independiente. Y adem\u00e1s se debe poder instalar usando el comando <code>pip</code>.</p>\n<p>Lo primero fue entender la estructura del proyecto.</p>\n<div class=\"codehilite\"><pre><span></span>\u251c\u2500\u2500 dist\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 requeriments\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 assets -&gt; ~/proyectos/cmi/src/assets/\n    \u251c\u2500\u2500 core\n    \u251c\u2500\u2500 encuestas\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 migrations\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 templates\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 encuestas\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 templatetags\n    \u251c\u2500\u2500 sgc_aprobacion.egg-info\n    \u2514\u2500\u2500 templates -&gt; ~/proyectos/cmi/src/templates/\n</pre></div>\n\n\n<p>Veamos cada uno de los directorios:</p>\n<ul>\n<li><code>dist</code> - Este directorio se crea autom\u00e1ticamente por <code>setuptools</code> cuando se crea el paquete de distribuci\u00f3n.</li>\n<li><code>docs</code> - Contiene los documentos del aplicativo.</li>\n<li><code>requeriments</code> - Para los archivos de requisitos, por si hay locales y de producci\u00f3n.</li>\n<li><code>src</code> - Es donde reside el proyecto.</li>\n<li><code>src/assets</code> - Es un enlace simb\u00f3lico a los archivos est\u00e1ticos.</li>\n<li><code>src/core</code> - Es el proyecto de desarrollo, su funci\u00f3n es asegurar que la aplicaci\u00f3n funciona.</li>\n<li><code>src/encuestas</code> - Es el proyecto en cuesti\u00f3n.</li>\n<li><code>sgc_aprobacion.egg-info</code> - Es un directorio creado por <code>setuptools</code> al empaquetar el proyecto.</li>\n<li><code>templates</code> - Un enlace simb\u00f3lico a las plantillas.</li>\n</ul>\n<h2 id=\"el-nucleo\">El n\u00facleo</h2>\n<p>En tanto que el proyecto <code>sgc-aprobacion</code> funcionar\u00e1 dentro del Cuadro de Mando Integral, tiene que asegurar que las met\u00e1foras visuales son las mismas que el n\u00facleo. Por eso se utilizan los archivos del proyecto central, <code>assets</code> y <code>templates</code> que proporcionan la base para el resto de los proyectos.</p>\n<p>En el proyecto <code>sgc-aprobacion</code> indicamos d\u00f3nde encontrar tanto las plantillas como los archivos est\u00e1ticos en la configuraci\u00f3n, <code>core/settings.py</code> que solo se utiliza para desarrollo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">unipath</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">PROJECT_DIR</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ancestor</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">STATIC_URL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/assets/&#39;</span>\n<span class=\"n\">STATIC_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s2\">&quot;static&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">STATICFILES_DIRS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s2\">&quot;assets&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">TEMPLATE_DIRS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s2\">&quot;templates&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s1\">&#39;encuestas&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;templates&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Con <code>PROJECT_DIR</code> establecemos el directorio del proyecto, relativo a <code>src/core/settings.py</code>, por lo que el <code>ancestor(2)</code> es, precisamente, <code>src</code>. A partir de este directorio, localizamos <code>STATIC_ROOT</code>, ubicado en <code>src/static</code>. Agregamos a los archivos est\u00e1ticos, los directorios <code>assets</code>, para poder despu\u00e9s recopilarlos con <code>collectstatic</code>. </p>\n<p>A continuaci\u00f3n, lo que resulto una revelaci\u00f3n para mi: las plantillas.</p>\n<p>Colocamos en <code>src/templates</code> las plantillas base, que son comunes para todos los proyectos del <strong>cmi</strong>. Pero las plantillas que usamos en el proyecto quedan en <code>src/encuestas/templates</code>. Y en este directorio solo est\u00e1n las plantillas del proyecto, por los est\u00e1ticos, la base y los auxiliares est\u00e1n en otro proyecto. De ah\u00ed la modularidad. Y la velocidad de desarrollo.</p>\n<p>Ahora solo hay que preocuparse por el contenido.</p>\n<h2 id=\"la-creacion-del-paquete\">La creaci\u00f3n del paquete</h2>\n<p>Crear una aplicaci\u00f3n independiente en Django result\u00f3 m\u00e1s simple de lo que pensaba. Usando el paquete <code>setuptools</code> solo cre\u00e9 el archivo <code>setup.py</code>, dentro del proyecto original.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\"># -*- coding: UTF-8 -*-</span>\n\n<span class=\"c1\">#         app: mx.ine.cmi.aprobacion</span>\n<span class=\"c1\">#      m\u00f3dulo: setup</span>\n<span class=\"c1\"># descripci\u00f3n: Instalaci\u00f3n del aplicativo</span>\n<span class=\"c1\">#       autor: Javier Sanchez Toledano</span>\n<span class=\"c1\">#       fecha: lunes, 13 de abril de 2015</span>\n\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">setuptools</span> <span class=\"kn\">import</span> <span class=\"n\">setup</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"s1\">&#39;README.md&#39;</span><span class=\"p\">))</span> <span class=\"k\">as</span> <span class=\"n\">readme</span><span class=\"p\">:</span>\n    <span class=\"n\">README</span> <span class=\"o\">=</span> <span class=\"n\">readme</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chdir</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">normpath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">pardir</span><span class=\"p\">)))</span>\n\n<span class=\"n\">setup</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;sgc-aprobacion&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">&#39;1.0-rc1&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">package_dir</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;src&#39;</span><span class=\"p\">},</span>\n    <span class=\"n\">packages</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;encuestas&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">include_package_data</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">license</span><span class=\"o\">=</span><span class=\"s1\">&#39;MIT License&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;Aplicativo para el control del indicador Aprobaci\u00f3n Ciudadana.&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">long_description</span><span class=\"o\">=</span><span class=\"n\">README</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">&#39;http://10.69.0.68/&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">author</span><span class=\"o\">=</span><span class=\"s1\">&#39;Javier Sanchez Toledano&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">author_email</span><span class=\"o\">=</span><span class=\"s1\">&#39;javier.sanchezt@example.com&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">classifiers</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"s1\">&#39;Environment :: Web Environment&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Framework :: Django&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Intended Audience :: Developers&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;License :: OSI Approved :: MIT License&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Operating System :: OS Independent&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Programming Language :: Python&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Programming Language :: Python :: 2&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Programming Language :: Python :: 2.7&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Programming Language :: Python :: 2.7.6&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Topic :: Internet :: WWW/HTTP&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Topic :: Internet :: WWW/HTTP :: Dynamic Content&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Aqu\u00ed no utiliz\u00f3 <code>unipath</code> porque no tengo la experiencia suficiente (<em>todav\u00eda</em>) para modificar esta plantilla.</p>\n<p>Es un archivo est\u00e1ndar, que se encuetra en el sitio de Django. Solo hay una importante diferencia.</p>\n<p>El sitio de Django menciona que hay que crear otro directorio y mover ah\u00ed la aplicaci\u00f3n<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> pero con la l\u00ednea <code>package_dir={'': 'src'},</code> esto no es necesario, ya que su funci\u00f3n es indicar que el proyecto est\u00e1 en el directorio <code>src</code> pero este, no forma parte del paquete. </p>\n<p>Con este par\u00e1metro no hay que mover nada y todo queda en el mismo directorio.</p>\n<p>Por \u00faltimo, hay que indicarle a <code>setuptools</code> que agregue directorio adicionales, usando el archivo <code>MANIFEST.in</code>:</p>\n<div class=\"codehilite\"><pre><span></span>include LICENSE\ninclude README.md\nrecursive-include docs/ *\nrecursive-include requeriments/ *\nrecursive-include src/encuestas/templatetags *\nrecursive-include src/encuestas/templates *\n</pre></div>\n\n\n<p>Y tenemos listo el proyecto para empaquetarlo y distribuirlo.</p>\n<hr>\n<h3 id=\"notas\">Notas</h3>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Pueden seguir las instrucciones directamente del sitio de Django: <a href=\"https://docs.djangoproject.com/en/1.8/intro/reusable-apps/\">https://docs.djangoproject.com/en/1.8/intro/reusable-apps/</a>&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "aplicaciones-reutilizables-en-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 62, "fields": {"idx": "f7d14a8c-2886-4aa1-9c7b-0c0fefc3fb3d", "creado": "2017-07-29T04:12:05.514Z", "modificado": "2017-07-29T04:12:05.514Z", "title": "La nueva configuraci\u00f3n de plantillas en Django", "summary": "", "body": "Title: La nueva configuraci\u00f3n de plantillas en Django\r\nDate: 2015-08-09 12:43:36 a.m.\r\nCategory: Desarrollo \r\nTags:  django, patterns\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\n\r\n\r\nHoy inici\u00e9 un proyecto completamente nuevo en Django usando la versi\u00f3n **1.8 LTS**, pero copi\u00e9 la configuraci\u00f3n de otro proyecto anterior y me llev\u00e9 una sorpresa.\r\n\r\nEn realidad solo utilic\u00e9 la configuraci\u00f3n de directorios de plantillas, archivos est\u00e1ticos y el directorio media, pero el error era que no encontraba las plantillas.\r\n\r\nEsta es la configuraci\u00f3n que sabe en versiones anteriores a la 1.8 de Django:\r\n\r\n    from unipath import Path\r\n\r\n    PROJECT_DIR = Path(__file__).ancestor(2)\r\n    MEDIA_ROOT = PROJECT_DIR.child(\"media\")\r\n    STATIC_URL = '/assets/'\r\n    MEDIA_URL = '/media/'\r\n    STATIC_ROOT = PROJECT_DIR.child(\"static\")\r\n    STATICFILES_DIRS = (\r\n        \"assets\",\r\n    )\r\n    TEMPLATE_DIRS = (\r\n        \"templates\",\r\n        PROJECT_DIR.child('encuestas', \"templates\"),\r\n    )\r\n\r\n    DEBUG = True\r\n    TEMPLATE_DEBUG = True\r\n    ALLOWED_HOSTS = []\r\n\r\nY esta era la que intentaba usar con el nuevo proyecto:\r\n\r\n    PROJECT_DIR = Path(__file__).ancestor(2)\r\n    MEDIA_ROOT = PROJECT_DIR.child(\"media\")\r\n    STATIC_URL = '/assets/'\r\n    MEDIA_URL = '/media/'\r\n    STATIC_ROOT = PROJECT_DIR.child(\"static\")\r\n    STATICFILES_DIRS = (\r\n        \"assets\",\r\n    )\r\n    TEMPLATE_DIRS = (\r\n        \"templates\",\r\n        PROJECT_DIR.child('encuestas', \"templates\"),\r\n    )\r\n\r\n    DEBUG = True\r\n    TEMPLATE_DEBUG = True\r\n    ALLOWED_HOSTS = []\r\n\r\n    TEMPLATES = [\r\n        {\r\n            'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n            'DIRS': [],\r\n            'APP_DIRS': True,\r\n            'OPTIONS': {\r\n                'context_processors': [\r\n                    'django.template.context_processors.debug',\r\n                    'django.template.context_processors.request',\r\n                    'django.contrib.auth.context_processors.auth',\r\n                    'django.contrib.messages.context_processors.messages',\r\n                ],\r\n            },\r\n        },\r\n    ]\r\n\r\nLo que me parec\u00eda m\u00e1s raro era que si quitaba la variable `TEMPLATES` todo funcionaba de nuevo, pero no era el caso, no entend\u00eda por qu\u00e9.\r\n\r\nLo que ocurre es que la configuraci\u00f3n de las plantillas cambi\u00f3 en Django 1.8 porque ahora permite utilizar otros motores para plantillas. Por ahora solo s\u00e9 de *Jinja 2*, pero uno puede escribir su propio motor.\r\n\r\nEntonces cambi\u00f3 la configuraci\u00f3n de los directorios d\u00f3nde buscar las plantillas, que es una clave `DIRS` en el diccionario `TEMPLATES` y ah\u00ed es donde colocamos los valores que antes iban en TEMPLATE_DIRS.\r\n\r\n    from unipath import Path\r\n\r\n    PROJECT_DIR = Path(__file__).ancestor(2)\r\n    MEDIA_ROOT = PROJECT_DIR.child(\"media\")\r\n    STATIC_URL = '/assets/'\r\n    MEDIA_URL = '/media/'\r\n    STATIC_ROOT = PROJECT_DIR.child(\"static\")\r\n    STATICFILES_DIRS = (\r\n        \"assets\",\r\n    )\r\n\r\n    ...\r\n\r\n    TEMPLATES = [\r\n        {\r\n            'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n            'DIRS': [\r\n                \"templates\",\r\n                PROJECT_DIR.child('money', \"templates\"),\r\n            ],\r\n            'APP_DIRS': True,\r\n            'OPTIONS': {\r\n                'context_processors': [\r\n                    'django.template.context_processors.debug',\r\n                    'django.template.context_processors.request',\r\n                    'django.contrib.auth.context_processors.auth',\r\n                    'django.contrib.messages.context_processors.messages',\r\n                ],\r\n            },\r\n        },\r\n    ]", "extend": "", "pub_date": "2015-08-09T05:43:36Z", "summary_html": "", "body_html": "<p>Hoy inici\u00e9 un proyecto completamente nuevo en Django usando la versi\u00f3n <strong>1.8 LTS</strong>, pero copi\u00e9 la configuraci\u00f3n de otro proyecto anterior y me llev\u00e9 una sorpresa.</p>\n<p>En realidad solo utilic\u00e9 la configuraci\u00f3n de directorios de plantillas, archivos est\u00e1ticos y el directorio media, pero el error era que no encontraba las plantillas.</p>\n<p>Esta es la configuraci\u00f3n que sabe en versiones anteriores a la 1.8 de Django:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">unipath</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">PROJECT_DIR</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ancestor</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">MEDIA_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s2\">&quot;media&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">STATIC_URL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/assets/&#39;</span>\n<span class=\"n\">MEDIA_URL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/media/&#39;</span>\n<span class=\"n\">STATIC_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s2\">&quot;static&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">STATICFILES_DIRS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s2\">&quot;assets&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">TEMPLATE_DIRS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s2\">&quot;templates&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s1\">&#39;encuestas&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;templates&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n<span class=\"n\">TEMPLATE_DEBUG</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n<span class=\"n\">ALLOWED_HOSTS</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n</pre></div>\n\n\n<p>Y esta era la que intentaba usar con el nuevo proyecto:</p>\n<div class=\"codehilite\"><pre><span></span>PROJECT_DIR = Path(__file__).ancestor(2)\nMEDIA_ROOT = PROJECT_DIR.child(&quot;media&quot;)\nSTATIC_URL = &#39;/assets/&#39;\nMEDIA_URL = &#39;/media/&#39;\nSTATIC_ROOT = PROJECT_DIR.child(&quot;static&quot;)\nSTATICFILES_DIRS = (\n    &quot;assets&quot;,\n)\nTEMPLATE_DIRS = (\n    &quot;templates&quot;,\n    PROJECT_DIR.child(&#39;encuestas&#39;, &quot;templates&quot;),\n)\n\nDEBUG = True\nTEMPLATE_DEBUG = True\nALLOWED_HOSTS = []\n\nTEMPLATES = [\n    {\n        &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n        &#39;DIRS&#39;: [],\n        &#39;APP_DIRS&#39;: True,\n        &#39;OPTIONS&#39;: {\n            &#39;context_processors&#39;: [\n                &#39;django.template.context_processors.debug&#39;,\n                &#39;django.template.context_processors.request&#39;,\n                &#39;django.contrib.auth.context_processors.auth&#39;,\n                &#39;django.contrib.messages.context_processors.messages&#39;,\n            ],\n        },\n    },\n]\n</pre></div>\n\n\n<p>Lo que me parec\u00eda m\u00e1s raro era que si quitaba la variable <code>TEMPLATES</code> todo funcionaba de nuevo, pero no era el caso, no entend\u00eda por qu\u00e9.</p>\n<p>Lo que ocurre es que la configuraci\u00f3n de las plantillas cambi\u00f3 en Django 1.8 porque ahora permite utilizar otros motores para plantillas. Por ahora solo s\u00e9 de <em>Jinja 2</em>, pero uno puede escribir su propio motor.</p>\n<p>Entonces cambi\u00f3 la configuraci\u00f3n de los directorios d\u00f3nde buscar las plantillas, que es una clave <code>DIRS</code> en el diccionario <code>TEMPLATES</code> y ah\u00ed es donde colocamos los valores que antes iban en TEMPLATE_DIRS.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">unipath</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">PROJECT_DIR</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ancestor</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">MEDIA_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s2\">&quot;media&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">STATIC_URL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/assets/&#39;</span>\n<span class=\"n\">MEDIA_URL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/media/&#39;</span>\n<span class=\"n\">STATIC_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s2\">&quot;static&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">STATICFILES_DIRS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s2\">&quot;assets&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"n\">TEMPLATES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;BACKEND&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;django.template.backends.django.DjangoTemplates&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;DIRS&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;templates&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s1\">&#39;money&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;templates&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n        <span class=\"s1\">&#39;APP_DIRS&#39;</span><span class=\"p\">:</span> <span class=\"bp\">True</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;OPTIONS&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;context_processors&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s1\">&#39;django.template.context_processors.debug&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;django.template.context_processors.request&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;django.contrib.auth.context_processors.auth&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;django.contrib.messages.context_processors.messages&#39;</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</pre></div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "la-nueva-configuracion-de-plantillas-en-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 63, "fields": {"idx": "e3534121-122e-4429-a6ab-6b660eed526d", "creado": "2017-07-29T04:12:55.998Z", "modificado": "2017-07-29T04:12:55.998Z", "title": "C\u00f3mo instalar Docker en OS X", "summary": "C\u00f3mo instalar docker en Mac OS X f\u00e1cil y r\u00e1pido.", "body": "Title: C\u00f3mo instalar Docker en OS X\r\nDate: 2015-05-08 20:29:36\r\nCategory: Desarrollo\r\nTags:  docker, admin, osx\r\nAuthor: Javier Sanchez Toledano\r\nSummary: C\u00f3mo instalar docker en Mac OS X f\u00e1cil y r\u00e1pido.\r\n\r\nYa que en agosto cambiaremos de infraestructura para pasar todos los sitios a Amazon EC2, adem\u00e1s ante el escenario de implementar el Cuadro de Mando Integral a nivel nacional, para ser m\u00e1s competitivo he resuelto utilizar Docker.\r\n\r\nPara para poder trabajar en mi laptop, esta es la forma f\u00e1cil de instalarlo.\r\n\r\n## Instalar Homebrew\r\n\r\n**Homebrew** es un instalador de paquetes y programas para OS X, tiene miles de paquetes llamadas _f\u00f3rmulas_ y tenemos que instalar las siguientes primero.\r\n\r\n```bash\r\nruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\r\n```\r\n\r\n## Instalar Virtualbox\r\n\r\nCon Homebrew podemos instalar ***VirtualBox** que es una m\u00e1quina virtual. Usamos la f\u00f3rmula `cask` porque no debemos usar, por razones de seguridad, usar `sudo` junto con `brew`.\r\n\r\n```bash\r\nbrew update\r\nbrew tap phinze/homebrew-cask\r\nbrew install brew-cask\r\nbrew cask install virtualbox\r\n```\r\n\r\n## Instalar boot2docker \r\n\r\n`boot2docker` es un peque\u00f1o script que nos sirve de interface entre Docker y VirtualBox. Debemos ejecutar estos comandos:\r\n\r\n```bash\r\nbrew install boot2docker\r\nboot2docker init\r\nboot2docker up\r\n```\r\n\r\nAl finalizar nos debe indicar que agreguemos algunas variables a nuestro archivo de arranque:\r\n\r\n```bash\r\nTo connect the Docker client to the Docker daemon, please set:\r\n    export DOCKER_HOST=tcp://192.168.59.103:2376\r\n    export DOCKER_CERT_PATH=/Users/toledano/.boot2docker/certs/boot2docker-vm\r\n    export DOCKER_TLS_VERIFY=1\r\n```\r\n\r\n## Instalar Docker\r\n\r\nPor \u00faltimo el motor de contenedores, `docker` que se instala de forma muy sencilla.\r\n\r\n```bash\r\nbrew install docker\r\ndocker version\r\n```\r\n\r\nEso es todo. Sigo aprendiendo a usar esta herramienta y pronto publicar\u00e9 m\u00e1s experiencias.", "extend": "", "pub_date": "2015-05-09T01:29:36Z", "summary_html": "<p>C\u00f3mo instalar docker en Mac OS X f\u00e1cil y r\u00e1pido.</p>", "body_html": "<p>Ya que en agosto cambiaremos de infraestructura para pasar todos los sitios a Amazon EC2, adem\u00e1s ante el escenario de implementar el Cuadro de Mando Integral a nivel nacional, para ser m\u00e1s competitivo he resuelto utilizar Docker.</p>\n<p>Para para poder trabajar en mi laptop, esta es la forma f\u00e1cil de instalarlo.</p>\n<h2 id=\"instalar-homebrew\">Instalar Homebrew</h2>\n<p><strong>Homebrew</strong> es un instalador de paquetes y programas para OS X, tiene miles de paquetes llamadas <em>f\u00f3rmulas</em> y tenemos que instalar las siguientes primero.</p>\n<div class=\"codehilite\"><pre><span></span>ruby -e <span class=\"s2\">&quot;</span><span class=\"k\">$(</span>curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install<span class=\"k\">)</span><span class=\"s2\">&quot;</span>\n</pre></div>\n\n\n<h2 id=\"instalar-virtualbox\">Instalar Virtualbox</h2>\n<p>Con Homebrew podemos instalar <strong>*VirtualBox</strong> que es una m\u00e1quina virtual. Usamos la f\u00f3rmula <code>cask</code> porque no debemos usar, por razones de seguridad, usar <code>sudo</code> junto con <code>brew</code>.</p>\n<div class=\"codehilite\"><pre><span></span>brew update\nbrew tap phinze/homebrew-cask\nbrew install brew-cask\nbrew cask install virtualbox\n</pre></div>\n\n\n<h2 id=\"instalar-boot2docker\">Instalar boot2docker</h2>\n<p><code>boot2docker</code> es un peque\u00f1o script que nos sirve de interface entre Docker y VirtualBox. Debemos ejecutar estos comandos:</p>\n<div class=\"codehilite\"><pre><span></span>brew install boot2docker\nboot2docker init\nboot2docker up\n</pre></div>\n\n\n<p>Al finalizar nos debe indicar que agreguemos algunas variables a nuestro archivo de arranque:</p>\n<div class=\"codehilite\"><pre><span></span>To connect the Docker client to the Docker daemon, please set:\n    <span class=\"nb\">export</span> <span class=\"nv\">DOCKER_HOST</span><span class=\"o\">=</span>tcp://192.168.59.103:2376\n    <span class=\"nb\">export</span> <span class=\"nv\">DOCKER_CERT_PATH</span><span class=\"o\">=</span>/Users/toledano/.boot2docker/certs/boot2docker-vm\n    <span class=\"nb\">export</span> <span class=\"nv\">DOCKER_TLS_VERIFY</span><span class=\"o\">=</span><span class=\"m\">1</span>\n</pre></div>\n\n\n<h2 id=\"instalar-docker\">Instalar Docker</h2>\n<p>Por \u00faltimo el motor de contenedores, <code>docker</code> que se instala de forma muy sencilla.</p>\n<div class=\"codehilite\"><pre><span></span>brew install docker\ndocker version\n</pre></div>\n\n\n<p>Eso es todo. Sigo aprendiendo a usar esta herramienta y pronto publicar\u00e9 m\u00e1s experiencias.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-instalar-docker-en-os-x", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 64, "fields": {"idx": "56b207f2-306a-474b-82c8-2d9af838fa9a", "creado": "2017-07-29T04:14:36.390Z", "modificado": "2017-08-07T03:07:17.433Z", "title": "Pasar par\u00e1metros con CreateView y ModelForm en Django", "summary": "", "body": "Title: Pasar par\u00e1metros con CreateView y ModelForm en Django\r\nDate: 2015-05-18 9:20:48\r\nCategory: Desarrollo\r\nTags:  django, views, patterns, forms\r\nAuthor: Javier Sanchez Toledano\r\nSummary: Como pasar un par\u00e1metro para prellenar el formulario con CreateView y ModelForm.\r\n\r\nEstoy re-escribiendo el c\u00f3digo de Control de Documento, para asegurar adem\u00e1s del cumplimiento de la Norma ISO 9001:2008 y de la 9001:2015, la migraci\u00f3n a la versi\u00f3n 1.8 de Django que tiene soporte extendido[^1] y a Python3.\r\n\r\nEntonces tom\u00e9 la decisi\u00f3n de utilizar, cuando sea posible, vistas gen\u00e9ricas basadas en clases. Por ejemplo la `CreateView` y las `ModelForm`.\r\n\r\nPara el control de documentos, necesitamos controlar las versiones de los documentos para asegurar que se cuenta con las m\u00e1s actualizadas.\r\n\r\n## ModelForm\r\nLo primero que hice fue crear el formulario a partir del modelo aprovechando la clase `ModelForm`[^2], por ejemplo, para el control de las revisiones, esta es la clase `ModelForm`:\r\n\r\n\r\n```python\r\nclass RevisionForm(forms.ModelForm):\r\n    class Meta:\r\n        model = Revision\r\n        exclude = ('creacion', 'acutaliza', 'autor')\r\n        widgets = {\r\n            'f_actualizacion': forms.TextInput(attrs={'class': 'col s4 datepicker'}),\r\n            'revision': forms.TextInput(attrs={'class': 'input-field col s2'}),\r\n            'cambios': forms.Textarea(attrs={'class': 'materialize-textarea'}),\r\n        }\r\n```\r\n\r\nSimplemente agregu\u00e9 los campos que no iba a utilizar, que son solo tres y agrego algunas clases para darle formato al formulario en HTML. Esto simplifica realmente la creaci\u00f3n del formulario.\r\n\r\n## CreateView\r\nPara gestionar el formulario, use otra funci\u00f3n gen\u00e9rica, en este caso es `CreateView`[^3]. Su forma b\u00e1sica es as\u00ed:\r\n\r\n```python\r\nclass CrearRevision(CreateView):\r\n    model = Revision\r\n    template_name = 'docs/add_revision.html'\r\n    form_class = RevisionForm\r\n```\r\n\r\nSolo tengo que especificar el modelo a utilizar en `model`; la plantilla que quiero utilizar con `template_name`, aunque si no especifico este par\u00e1metro podr\u00eda llamar a mi plantilla `revision_form`. Por \u00faltimo, tambi\u00e9n especifico que voy a usar la `ModelForm` definida anteriormente, con `form_class`.\r\n\r\nPero tambi\u00e9n utilizo algunas funciones para ajustar mi formulario.\r\n\r\n### Funciones auxiliares\r\n\r\nHayn un campo `documento` que necesito que est\u00e9 pre-seleccionado para minimizar los errores[^4], para esto utilizo la funci\u00f3n `get_initial`:\r\n\r\n```python\r\n\tdef get_initial(self):\r\n\t    return {'documento': self.kwargs['num']}\r\n```\r\n\r\nTambi\u00e9n quiero capturar el identificador del documento para utilizarlo en el formulario, y lo obtengo del contexto que se env\u00eda a la funci\u00f3n:\r\n\r\n```python\r\n    def get_context_data(self, **kwargs):\r\n        ctx = super(CrearRevision, self).get_context_data(**kwargs)\r\n        ctx['num'] = self.kwargs['num']\r\n        return ctx\r\n```\r\n\r\nPor \u00faltimo, debo agregar el usuario que creo la revisi\u00f3n. Este campo esta desactivado en la `ModelForm`, pero el campo es obligatorio. Le asignamos el valor cuando el formulario sea v\u00e1lido, sobreescribiendo la funci\u00f3n `form_valid`:\r\n\r\n```python\r\n    def form_valid(self, form):\r\n        from django.core.urlresolvers import reverse\r\n        revision = form.save(commit=False)\r\n        revision.autor = self.request.user\r\n        revision.save()\r\n        return HttpResponseRedirect(reverse('detalle',\r\n            kwargs={'num': self.kwargs['num']}\r\n            )\r\n        )\r\n```\r\n\r\nComo pueden ver, las funciones gen\u00e9ricas ahorra mucho trabajo. En el siguiente art\u00edculo veremos un ejemplo m\u00e1s extremo con la funci\u00f3n `UpdateView`.\r\n\r\n\r\n### Notas\r\n\r\n[^1]: Se dice **LTS** que en ingl\u00e9s es _Long Term Support_.  \r\n[^2]: `django.forms.ModelForm`\r\n[^3]: `django.views.generic.edit.CreateView`\r\n[^4]: Tendr\u00eda que estar seleccionado y desactivado, pero no he podido desactivarlo con el CSS Framework que estoy utilizando.", "extend": "", "pub_date": "2015-05-18T14:20:48Z", "summary_html": "", "body_html": "<p>Estoy re-escribiendo el c\u00f3digo de Control de Documento, para asegurar adem\u00e1s del cumplimiento de la Norma ISO 9001:2008 y de la 9001:2015, la migraci\u00f3n a la versi\u00f3n 1.8 de Django que tiene soporte extendido<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> y a Python3.</p>\n<p>Entonces tom\u00e9 la decisi\u00f3n de utilizar, cuando sea posible, vistas gen\u00e9ricas basadas en clases. Por ejemplo la <code>CreateView</code> y las <code>ModelForm</code>.</p>\n<p>Para el control de documentos, necesitamos controlar las versiones de los documentos para asegurar que se cuenta con las m\u00e1s actualizadas.</p>\n<h2 id=\"modelform\">ModelForm</h2>\n<p>Lo primero que hice fue crear el formulario a partir del modelo aprovechando la clase <code>ModelForm</code><sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>, por ejemplo, para el control de las revisiones, esta es la clase <code>ModelForm</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">RevisionForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelForm</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Revision</span>\n        <span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;creacion&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;acutaliza&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;autor&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">widgets</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;f_actualizacion&#39;</span><span class=\"p\">:</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">TextInput</span><span class=\"p\">(</span><span class=\"n\">attrs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;class&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;col s4 datepicker&#39;</span><span class=\"p\">}),</span>\n            <span class=\"s1\">&#39;revision&#39;</span><span class=\"p\">:</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">TextInput</span><span class=\"p\">(</span><span class=\"n\">attrs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;class&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;input-field col s2&#39;</span><span class=\"p\">}),</span>\n            <span class=\"s1\">&#39;cambios&#39;</span><span class=\"p\">:</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Textarea</span><span class=\"p\">(</span><span class=\"n\">attrs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;class&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;materialize-textarea&#39;</span><span class=\"p\">}),</span>\n        <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Simplemente agregu\u00e9 los campos que no iba a utilizar, que son solo tres y agrego algunas clases para darle formato al formulario en HTML. Esto simplifica realmente la creaci\u00f3n del formulario.</p>\n<h2 id=\"createview\">CreateView</h2>\n<p>Para gestionar el formulario, use otra funci\u00f3n gen\u00e9rica, en este caso es <code>CreateView</code><sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup>. Su forma b\u00e1sica es as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">CrearRevision</span><span class=\"p\">(</span><span class=\"n\">CreateView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Revision</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;docs/add_revision.html&#39;</span>\n    <span class=\"n\">form_class</span> <span class=\"o\">=</span> <span class=\"n\">RevisionForm</span>\n</pre></div>\n\n\n<p>Solo tengo que especificar el modelo a utilizar en <code>model</code>; la plantilla que quiero utilizar con <code>template_name</code>, aunque si no especifico este par\u00e1metro podr\u00eda llamar a mi plantilla <code>revision_form</code>. Por \u00faltimo, tambi\u00e9n especifico que voy a usar la <code>ModelForm</code> definida anteriormente, con <code>form_class</code>.</p>\n<p>Pero tambi\u00e9n utilizo algunas funciones para ajustar mi formulario.</p>\n<h3 id=\"funciones-auxiliares\">Funciones auxiliares</h3>\n<p>Hayn un campo <code>documento</code> que necesito que est\u00e9 pre-seleccionado para minimizar los errores<sup id=\"fnref-4\"><a class=\"footnote-ref\" href=\"#fn-4\">4</a></sup>, para esto utilizo la funci\u00f3n <code>get_initial</code>:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">get_initial</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;documento&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">]}</span>\n</pre></div>\n\n\n<p>Tambi\u00e9n quiero capturar el identificador del documento para utilizarlo en el formulario, y lo obtengo del contexto que se env\u00eda a la funci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">CrearRevision</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">ctx</span><span class=\"p\">[</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">ctx</span>\n</pre></div>\n\n\n<p>Por \u00faltimo, debo agregar el usuario que creo la revisi\u00f3n. Este campo esta desactivado en la <code>ModelForm</code>, pero el campo es obligatorio. Le asignamos el valor cuando el formulario sea v\u00e1lido, sobreescribiendo la funci\u00f3n <code>form_valid</code>:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">form_valid</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">form</span><span class=\"p\">):</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">django.core.urlresolvers</span> <span class=\"kn\">import</span> <span class=\"n\">reverse</span>\n        <span class=\"n\">revision</span> <span class=\"o\">=</span> <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">commit</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">revision</span><span class=\"o\">.</span><span class=\"n\">autor</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span>\n        <span class=\"n\">revision</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">HttpResponseRedirect</span><span class=\"p\">(</span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">&#39;detalle&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">]}</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Como pueden ver, las funciones gen\u00e9ricas ahorra mucho trabajo. En el siguiente art\u00edculo veremos un ejemplo m\u00e1s extremo con la funci\u00f3n <code>UpdateView</code>.</p>\n<h3 id=\"notas\">Notas</h3>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Se dice <strong>LTS</strong> que en ingl\u00e9s es <em>Long Term Support</em>.  &#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p><code>django.forms.ModelForm</code>&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p><code>django.views.generic.edit.CreateView</code>&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-4\">\n<p>Tendr\u00eda que estar seleccionado y desactivado, pero no he podido desactivarlo con el CSS Framework que estoy utilizando.&#160;<a class=\"footnote-backref\" href=\"#fnref-4\" title=\"Jump back to footnote 4 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "pasar-parametros-con-createview-y-modelform-en-dja", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 65, "fields": {"idx": "89166433-8e0a-49d9-b914-73c5a92ef619", "creado": "2017-07-29T04:15:26.843Z", "modificado": "2017-07-29T04:15:26.843Z", "title": "Generador de clases con Python y YAML", "summary": "Como crear un generador de clases con Python y YAML", "body": "Title: Generador de clases con Python y YAML \r\nDate: 2015-05-20 20:58:42\r\nCategory: Desarrollo\r\nTags:  python, patterns,\r\nAuthor: Javier Sanchez Toledano\r\nSummary: Como crear un generador de clases con Python y YAML\r\n\r\nEn el proyecto en el que estoy trabajando actualmente, el Cuadro Mando Integral, existe un m\u00f3dulo encargado de gestionar evidencias documentales de nuestro trabajo. \r\n\r\n## Las metas\r\n\r\nSe organizan por puestos y por persona, y a cada persona le corresponde, seg\u00fan su puesto, cierto n\u00famero de metas, desde tres hasta 15. Digamos que el promedio es ocho y que hay unos siete puestos diferentes en cuatro sitios. Esto hace que el sistema maneje unas 56 metas diferentes.\r\n\r\nLa parte mas complicada de todo es que aunque son metas diferenciadas, es necesario que se contabilicen en su totalidad. Y las evidencias se clasifiquen de acuerdo al nivel que alcanzaron, alto, medio o bajo.\r\n\r\n## Modelos abstractos\r\n\r\nLa soluci\u00f3n fue crear un modelo abstracto que hereda a las 56 metas sus caracter\u00edsticas comunes. Esto hace que cada meta se controle por separado y que est\u00e9n ligadas en una tabla central.\r\n\r\nNunca pude hacer esto de una forma en la que pudiera sentirme c\u00f3modo. Me parece que mi c\u00f3digo es sucio e ineficiente.\r\n\r\nPor ejemplo, tardaba mucho escribiendo cada modelo para cada una de las metas. Me tomaba mucho tiempo hasta que decid\u00ed usar YAML.\r\n\r\n## YAML\r\n\r\nYAML, que seg\u00fan su sitio no es un lenguaje de marcado, es un formato para serializar datos. Esto quiere decir que podemos usar YAML para guardar datos de forma estructura y mantenerlos legibles. \r\n\r\nEs muy f\u00e1cil de usar y tiene una sintaxis estricta, lo que garantiza que el documento pueda ser interpretado correctamente en una variedad de plataformas.\r\n\r\n## Las Metas\r\n\r\nUs\u00e9 YAML para describir los modelos de las metas, en un formato que pr\u00e1cticamente se explica por si mismo. Miren.\r\n\r\n```yaml\r\n#VRL02\r\nmiembro: vrl\r\nid: 2\r\nnombre: Programaci\u00f3n Trimestral\r\nrepeticiones: 8\r\ncampos:\r\n  - oficio: ['Oficio de programaci\u00f3n', False]\r\n  - programacion: ['Programaci\u00f3n Trimestral', False]\r\n  - oficio-sis: ['Oficio SIS', False]\r\n---\r\n```\r\n\r\n- La primera l\u00ednea `#VRL02` es un comentario.\r\n- La segunda es un campo `miembro` y su valor que es `vrl`.\r\n- La tercera, cuarta y quinta l\u00ednea tambi\u00e9n son campos, y su valor se especifica despu\u00e9s de los dos puntos `:`.\r\n- `campos` es un campo especial que esta formado por una lista de valores,\r\n- estos a su vez, est\u00e1n formados por otro conjunto de atributos.\r\n\r\nLa lista de campos contiene la descripci\u00f3n que asign\u00e9 a estos campos, por ejemplo el campo `oficio-sis` tiene dos atributos, el primero es `'Oficio SIS` y el segundo es `False` que utilizar\u00e9 a continuaci\u00f3n para crear la clase.\r\n\r\n## La clase generadora\r\n\r\nEntonces hice un archivo en Python que usar\u00e1 el archivo YAML que contiene la descripci\u00f3n de las metas para convertirlo en un archivo de Python y usarlo en Django.\r\n\r\nUsar\u00e9 el m\u00f3dulo `PyYAML` y lo primero que voy a hacer es importarlo:\r\n\r\n```python\r\nimport yaml\r\n```\r\n\r\nA continuaci\u00f3n voy a abrir el archivo para procesarlo con YAML:\r\n\r\n```python\r\nmetas = yaml.load_all(open('metas.yml').read())\r\n```\r\nA continuaci\u00f3n, defino una clase y su inicializaci\u00f3n que recibe una meta como par\u00e1metro:\r\n\r\n```python\r\nclass Generador():\r\n\r\n    def __init__(self, meta):\r\n        self.miembro = meta['miembro']\r\n        self.id = meta['id']\r\n        self.nombre = meta['nombre']\r\n        self.repeticiones = meta['repeticiones']\r\n        self.campos = meta['campos']\r\n```\r\n\r\nY elementos que usar\u00e9 para crear la clase:\r\n\r\n```python\r\n    def get_campos(self):\r\n        return self.campos\r\n\r\n    def get_meta(self):\r\n        return '%s%02d' % (self.miembro.upper(), self.id)\r\n```\r\n\r\nLa funci\u00f3n que genera la clase, simplemente es una cadena con espacios variables que se sustituyen con los valores que tomo del archivo YAML.\r\n\r\n```python\r\n    def get_clase(self):\r\n        clase = \"\"\"class %s(Evidencia):\"\"\" % self.get_meta()\r\n        for c in self.get_campos():\r\n            for k, v in c.iteritems():\r\n                blank = 'blank=True, null=True' if v[1] else ''\r\n                clase += \"\\n    %s = models.FileField('%s', \\\r\nupload_to=subir_archivo, %s)\" % (k, v[0], blank)\r\n        clase += \"\"\"\\n\r\n    class Meta:\r\n        app_label = 'metas'\r\n        \"\"\"\r\n        return clase\r\n```\r\n\r\nAl pasar el archivo por un ciclo for, solo llamo a la clase e imprimo el resultado:\r\n\r\n```python\r\nfor meta in metas:\r\n    m = Generador(meta)\r\n    print m.get_clase()\r\n```\r\n\r\nY as\u00ed gener\u00e9 mi archivo de metas, de forma autom\u00e1tica.\r\n\r\n```python\r\nclass VRL02(Evidencia):\r\n    oficio = models.FileField('Oficio de programaci\u00f3n', upload_to=subir_archivo, )\r\n    programacion = models.FileField('Programaci\u00f3n Trimestral', upload_to=subir_archivo, )\r\n    oficio-sis = models.FileField('Oficio SIS', upload_to=subir_archivo, )\r\n\r\n    class Meta:\r\n        app_label = 'metas'\r\n```\r\n\r\nEn un art\u00edculo posterior, utilizar\u00e9 esta t\u00e9cnica para crear fichas de procesos de cada uno de los procesos definidos en el plan de la calidad de nuestro sistema de gesti\u00f3n.", "extend": "", "pub_date": "2015-05-21T01:58:42Z", "summary_html": "<p>Como crear un generador de clases con Python y YAML</p>", "body_html": "<p>En el proyecto en el que estoy trabajando actualmente, el Cuadro Mando Integral, existe un m\u00f3dulo encargado de gestionar evidencias documentales de nuestro trabajo. </p>\n<h2 id=\"las-metas\">Las metas</h2>\n<p>Se organizan por puestos y por persona, y a cada persona le corresponde, seg\u00fan su puesto, cierto n\u00famero de metas, desde tres hasta 15. Digamos que el promedio es ocho y que hay unos siete puestos diferentes en cuatro sitios. Esto hace que el sistema maneje unas 56 metas diferentes.</p>\n<p>La parte mas complicada de todo es que aunque son metas diferenciadas, es necesario que se contabilicen en su totalidad. Y las evidencias se clasifiquen de acuerdo al nivel que alcanzaron, alto, medio o bajo.</p>\n<h2 id=\"modelos-abstractos\">Modelos abstractos</h2>\n<p>La soluci\u00f3n fue crear un modelo abstracto que hereda a las 56 metas sus caracter\u00edsticas comunes. Esto hace que cada meta se controle por separado y que est\u00e9n ligadas en una tabla central.</p>\n<p>Nunca pude hacer esto de una forma en la que pudiera sentirme c\u00f3modo. Me parece que mi c\u00f3digo es sucio e ineficiente.</p>\n<p>Por ejemplo, tardaba mucho escribiendo cada modelo para cada una de las metas. Me tomaba mucho tiempo hasta que decid\u00ed usar YAML.</p>\n<h2 id=\"yaml\">YAML</h2>\n<p>YAML, que seg\u00fan su sitio no es un lenguaje de marcado, es un formato para serializar datos. Esto quiere decir que podemos usar YAML para guardar datos de forma estructura y mantenerlos legibles. </p>\n<p>Es muy f\u00e1cil de usar y tiene una sintaxis estricta, lo que garantiza que el documento pueda ser interpretado correctamente en una variedad de plataformas.</p>\n<h2 id=\"las-metas_1\">Las Metas</h2>\n<p>Us\u00e9 YAML para describir los modelos de las metas, en un formato que pr\u00e1cticamente se explica por si mismo. Miren.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">#VRL02</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">miembro</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">vrl</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">id</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">2</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">nombre</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Programaci\u00f3n Trimestral</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">repeticiones</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">8</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">campos</span><span class=\"p p-Indicator\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">oficio</span><span class=\"p p-Indicator\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;Oficio</span><span class=\"nv\"> </span><span class=\"s\">de</span><span class=\"nv\"> </span><span class=\"s\">programaci\u00f3n&#39;</span><span class=\"p p-Indicator\">,</span> <span class=\"nv\">False</span><span class=\"p p-Indicator\">]</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">programacion</span><span class=\"p p-Indicator\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;Programaci\u00f3n</span><span class=\"nv\"> </span><span class=\"s\">Trimestral&#39;</span><span class=\"p p-Indicator\">,</span> <span class=\"nv\">False</span><span class=\"p p-Indicator\">]</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">oficio-sis</span><span class=\"p p-Indicator\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;Oficio</span><span class=\"nv\"> </span><span class=\"s\">SIS&#39;</span><span class=\"p p-Indicator\">,</span> <span class=\"nv\">False</span><span class=\"p p-Indicator\">]</span>\n<span class=\"nn\">---</span>\n</pre></div>\n\n\n<ul>\n<li>La primera l\u00ednea <code>#VRL02</code> es un comentario.</li>\n<li>La segunda es un campo <code>miembro</code> y su valor que es <code>vrl</code>.</li>\n<li>La tercera, cuarta y quinta l\u00ednea tambi\u00e9n son campos, y su valor se especifica despu\u00e9s de los dos puntos <code>:</code>.</li>\n<li><code>campos</code> es un campo especial que esta formado por una lista de valores,</li>\n<li>estos a su vez, est\u00e1n formados por otro conjunto de atributos.</li>\n</ul>\n<p>La lista de campos contiene la descripci\u00f3n que asign\u00e9 a estos campos, por ejemplo el campo <code>oficio-sis</code> tiene dos atributos, el primero es <code>'Oficio SIS</code> y el segundo es <code>False</code> que utilizar\u00e9 a continuaci\u00f3n para crear la clase.</p>\n<h2 id=\"la-clase-generadora\">La clase generadora</h2>\n<p>Entonces hice un archivo en Python que usar\u00e1 el archivo YAML que contiene la descripci\u00f3n de las metas para convertirlo en un archivo de Python y usarlo en Django.</p>\n<p>Usar\u00e9 el m\u00f3dulo <code>PyYAML</code> y lo primero que voy a hacer es importarlo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">yaml</span>\n</pre></div>\n\n\n<p>A continuaci\u00f3n voy a abrir el archivo para procesarlo con YAML:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">metas</span> <span class=\"o\">=</span> <span class=\"n\">yaml</span><span class=\"o\">.</span><span class=\"n\">load_all</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;metas.yml&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</pre></div>\n\n\n<p>A continuaci\u00f3n, defino una clase y su inicializaci\u00f3n que recibe una meta como par\u00e1metro:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Generador</span><span class=\"p\">():</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meta</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">miembro</span> <span class=\"o\">=</span> <span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s1\">&#39;miembro&#39;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nombre</span> <span class=\"o\">=</span> <span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s1\">&#39;nombre&#39;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repeticiones</span> <span class=\"o\">=</span> <span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s1\">&#39;repeticiones&#39;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">campos</span> <span class=\"o\">=</span> <span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s1\">&#39;campos&#39;</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>Y elementos que usar\u00e9 para crear la clase:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">get_campos</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">campos</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_meta</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s%02d</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">miembro</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">(),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>La funci\u00f3n que genera la clase, simplemente es una cadena con espacios variables que se sustituyen con los valores que tomo del archivo YAML.</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">get_clase</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">clase</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;class </span><span class=\"si\">%s</span><span class=\"s2\">(Evidencia):&quot;&quot;&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_meta</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_campos</span><span class=\"p\">():</span>\n            <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">iteritems</span><span class=\"p\">():</span>\n                <span class=\"n\">blank</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;blank=True, null=True&#39;</span> <span class=\"k\">if</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">else</span> <span class=\"s1\">&#39;&#39;</span>\n                <span class=\"n\">clase</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">    </span><span class=\"si\">%s</span><span class=\"s2\"> = models.FileField(&#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39;, </span><span class=\"se\">\\</span>\n<span class=\"s2\">upload_to=subir_archivo, </span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">blank</span><span class=\"p\">)</span>\n        <span class=\"n\">clase</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;&quot;&quot;</span><span class=\"se\">\\n</span><span class=\"s2\"></span>\n<span class=\"s2\">    class Meta:</span>\n<span class=\"s2\">        app_label = &#39;metas&#39;</span>\n<span class=\"s2\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">clase</span>\n</pre></div>\n\n\n<p>Al pasar el archivo por un ciclo for, solo llamo a la clase e imprimo el resultado:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">meta</span> <span class=\"ow\">in</span> <span class=\"n\">metas</span><span class=\"p\">:</span>\n    <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Generador</span><span class=\"p\">(</span><span class=\"n\">meta</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">get_clase</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>Y as\u00ed gener\u00e9 mi archivo de metas, de forma autom\u00e1tica.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">VRL02</span><span class=\"p\">(</span><span class=\"n\">Evidencia</span><span class=\"p\">):</span>\n    <span class=\"n\">oficio</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FileField</span><span class=\"p\">(</span><span class=\"s1\">&#39;Oficio de programaci\u00f3n&#39;</span><span class=\"p\">,</span> <span class=\"n\">upload_to</span><span class=\"o\">=</span><span class=\"n\">subir_archivo</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n    <span class=\"n\">programacion</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FileField</span><span class=\"p\">(</span><span class=\"s1\">&#39;Programaci\u00f3n Trimestral&#39;</span><span class=\"p\">,</span> <span class=\"n\">upload_to</span><span class=\"o\">=</span><span class=\"n\">subir_archivo</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n    <span class=\"n\">oficio</span><span class=\"o\">-</span><span class=\"n\">sis</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FileField</span><span class=\"p\">(</span><span class=\"s1\">&#39;Oficio SIS&#39;</span><span class=\"p\">,</span> <span class=\"n\">upload_to</span><span class=\"o\">=</span><span class=\"n\">subir_archivo</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">app_label</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;metas&#39;</span>\n</pre></div>\n\n\n<p>En un art\u00edculo posterior, utilizar\u00e9 esta t\u00e9cnica para crear fichas de procesos de cada uno de los procesos definidos en el plan de la calidad de nuestro sistema de gesti\u00f3n.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "generador-de-clases-con-python-y-yaml", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 66, "fields": {"idx": "4f501bb9-df83-4d9a-b239-039b846913cd", "creado": "2017-07-29T04:18:11.220Z", "modificado": "2017-07-29T04:18:11.220Z", "title": "Login con Flask", "summary": "", "body": "Title: Login con Flask\r\nDate: 2015-06-06 17:07:53\r\nCategory: Desarrollo\r\nTags:  flask, openid, python\r\nAuthor: Javier Sanchez Toledano\r\nSummary: C\u00f3mo funciona el registro de usuarios en Flask\r\n\r\nEsta es la traducci\u00f3n de la quinta parte del megatutorial de **Flask** hecho por Miguel Gringberg[^1]. La aplicaci\u00f3n tiene por nombre `microblog` y se trata de crear una aplicaci\u00f3n similar a  **Twitter**, aumentando la complejidad de cada cap\u00edtulo.\r\n\r\n## Configuraci\u00f3n\r\n\r\nAl igual que hicimos en cap\u00edtulos previos, empezaremos configurando las extensiones de Flask que vamos a usar. Para el sistema de usuarios usaremos dos extensiones: `Flask-Login` y `Flask-OpenID`. La primera maneja a los usuarios registrados, mientras que `Flask-OpenID` se encarga de la _autenticaci\u00f3n_. Estas extensiones se configuran en el archivo `app/__init__.py`:\r\n\r\n```python\r\nfrom flask.ext.login import LoginManager\r\nfrom flask.ext.openid import OpenID\r\nfrom config import BASEDIR\r\n\r\nlm = LoginManager()\r\nlm.init_app(app)\r\nlm.login_view = 'login'\r\noid = OpenID(app, BASEDIR.child('tmp'))\r\n```\r\n\r\nLa extensi\u00f3n `Flask-OpenID` requiere una ruta a un directorio temporal para almacenar archivos. Por eso debemos especificar la ubicaci\u00f3n del directorio temporal `tmp`, y a diferencia del tutorial del autor, yo utilic\u00e9 el m\u00f3dulo `Unipath` con el que estoy m\u00e1s acostumbrado, simplemente defino la constante `BASEDIR` en el archivo `config.py`\r\n\r\n```python\r\nfrom unipath import Path\r\nBASEDIR = Path(__file__).ancestor(1)\r\n```\r\n\r\nY a partir de ah\u00ed tengo un objeto con el que puedo definir, crear, verificar o borrar rutas y archivos.\r\n\r\n## Compatibilidad con Python 3\r\n\r\nDebes asegurarte que la versi\u00f3n de `Flask-OpenID` sea la 1.2.4 o superior. Para verificarlo, ejecuta el siguiente comando:\r\n\r\n```\r\npip freeze\r\n```\r\n\r\nSi obtienes una inferior a la mencionada, debes desinstalar la versi\u00f3n actual e instalar la nueva.\r\n\r\n```\r\n$ pip uninstall flask-openid\r\n$ pip install git+git://github.com/mitsuhiko/flask-openid.git\r\n```\r\n\r\n> Toma en cuenta que debes tener instalado el programa `git`.\r\n\r\n## Revisando el modelo User\r\n\r\nLa extensi\u00f3n `Flask-Login` necesita que se implementen ciertos m\u00e9todos en la clase `User`, pero no hay ning\u00fan requisito especial sobre _como_ implementarlos.\r\n\r\nAqu\u00ed est\u00e1 la clase `User` tal como aparece en el archivo `app/models.py`:\r\n\r\n```python\r\nclass User(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    nickname = db.Column(db.String(64), index=True, unique=True)\r\n    email = db.Column(db.String(120), index=True, unique=True)\r\n    posts = db.relationship('Post', backref='author', lazy='dynamic')\r\n\r\n    def is_authenticated(self):\r\n        return True\r\n\r\n    def is_active(self):\r\n        return True\r\n\r\n    def is_anonymous(self):\r\n        return False\r\n\r\n    def get_id(self):\r\n        try:\r\n            return unicode(self.id)  # python 2\r\n        except NameError:\r\n            return str(self.id)  # python 3\r\n\r\n    def __repr__(self):\r\n        return '<Usuario %r>' % (self.nickname)\r\n```\r\n\r\nEl m\u00e9todo `is_authenticated` tiene un nombre un tanto confuso. En general este m\u00e9todo debe regresar `True` a menos que el objeto que representa al usuario no est\u00e9 autenticado por alguna raz\u00f3n.\r\n\r\n\r\nEl m\u00e9todo `is_anonymous` suele retornar `True` solo si los usuarios no est\u00e1n registrados en el sistema.\r\n\r\nFinalmente, el m\u00e9todo `get_id` regresa el identificador \u00fanico del usuario en formato unicode. Usamos el identificador generado por la base de datos. Debido a la diferencia en el manejo de unicode entre Python 2 y 3 se proporcionan alternativas para ambas versiones.\r\n\r\n## Llamando al cargador de User\r\n\r\nAhora estamos listos para implementar el sistema de ingreso usando las extensiones Flask-Login y Flask-OpenID.\r\n\r\nPrimero vamos a escribir una funci\u00f3n que cargue los usuarios desde la base de datos. Esta funci\u00f3n ser\u00e1 utilizada por Flask-Login en el archivo `app/views.py`:\r\n\r\n```python\r\n@lm.user_loader\r\ndef load_user(id):\r\n    return User.query.get(int(id))\r\n```\r\n\r\nHay que hacer notar que esta funci\u00f3n se registra con Flask-Login usando el decorador `lm.user_loader`. Y tambi\u00e9n es importante tener presente que los identificadores de usuario que proporciona Flask-Login son siempre cadenas unicode, as\u00ed que debemos convertirlos en enteros antes de enviar el `id` a `Flask-Alchemy`.\r\n\r\n\r\n## La funci\u00f3n `login`\r\n\r\nAhora vamos a actualizar la funci\u00f3n `login()` en el mismo archivo `app/views.py`:\r\n\r\n```python\r\nfrom flask import render_template, flash, redirect, session, url_for, request, g\r\nfrom flask.ext.login import login_user, logout_user, current_user, login_required\r\nfrom app import app, db, lm, oid\r\nfrom .forms import LoginForm\r\nfrom .models import User\r\n\r\n@app.route('/login', methods=['GET', 'POST'])\r\n@oid.loginhandler\r\ndef login():\r\n    if g.user is not None and g.user.is_authenticated():\r\n        return redirect(url_for('index'))\r\n    form = LoginForm()\r\n    if form.validate_on_submit():\r\n        session['remember_me'] = form.remember_me.data\r\n        return oid.try_login(form.openid.data, ask_for=['nickname', 'email'])\r\n    return render_template(\r\n        'login.html',\r\n        title='Sign In',\r\n        form=form,\r\n        providers=app.config['OPENID_PROVIDERS']\r\n    )\r\n```\r\nPara esta funci\u00f3n utilizamos varios m\u00f3dulos, que explicaremos mas tarde.\r\n\r\nLos cambios con respecto a nuestra funci\u00f3n anterior son muy peque\u00f1os. Hemos agregado un nuevo decorador a nuestra funci\u00f3n, `oid.loginhandler` que le dice a `Flask-OpenID` que esta la funci\u00f3n que maneja el ingreso de usuarios.\r\n\r\nAl principio del cuerpo de la funci\u00f3n vemos que `g.users`  se asigna a un usuario _autenticado_, y en su caso lo redirigimos a la p\u00e1gina inicial. La idea es que si es un usuario ya registrado no lo mandemos de nuevo a la p\u00e1gina de _login_.\r\n\r\nEl objeto global `g` lo proporciona Flask como un lugar para almacenar y compartir datos durante toda la vida de una solicitud (o `request`, como lo llamaremos de ahora en adelante). Y como seguramente habr\u00e1n adivinado, lo usaremos para almacenar a los usuarios registrados.\r\n\r\nLa funci\u00f3n `url_for` la usamos en la llamada `redirect` definida por Flask como una forma limpia de obtener la URL de una vista dada. Si quieres redireccionar a la p\u00e1gina inicial, podemos usar `redirect('/index)` pero hay muy buenas razones para que Flask construya las URL por nosotros[^2].", "extend": "", "pub_date": "2015-06-06T22:07:53Z", "summary_html": "", "body_html": "<p>Esta es la traducci\u00f3n de la quinta parte del megatutorial de <strong>Flask</strong> hecho por Miguel Gringberg[^1]. La aplicaci\u00f3n tiene por nombre <code>microblog</code> y se trata de crear una aplicaci\u00f3n similar a  <strong>Twitter</strong>, aumentando la complejidad de cada cap\u00edtulo.</p>\n<h2 id=\"configuracion\">Configuraci\u00f3n</h2>\n<p>Al igual que hicimos en cap\u00edtulos previos, empezaremos configurando las extensiones de Flask que vamos a usar. Para el sistema de usuarios usaremos dos extensiones: <code>Flask-Login</code> y <code>Flask-OpenID</code>. La primera maneja a los usuarios registrados, mientras que <code>Flask-OpenID</code> se encarga de la <em>autenticaci\u00f3n</em>. Estas extensiones se configuran en el archivo <code>app/__init__.py</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">flask.ext.login</span> <span class=\"kn\">import</span> <span class=\"n\">LoginManager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask.ext.openid</span> <span class=\"kn\">import</span> <span class=\"n\">OpenID</span>\n<span class=\"kn\">from</span> <span class=\"nn\">config</span> <span class=\"kn\">import</span> <span class=\"n\">BASEDIR</span>\n\n<span class=\"n\">lm</span> <span class=\"o\">=</span> <span class=\"n\">LoginManager</span><span class=\"p\">()</span>\n<span class=\"n\">lm</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">lm</span><span class=\"o\">.</span><span class=\"n\">login_view</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;login&#39;</span>\n<span class=\"n\">oid</span> <span class=\"o\">=</span> <span class=\"n\">OpenID</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">BASEDIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s1\">&#39;tmp&#39;</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>La extensi\u00f3n <code>Flask-OpenID</code> requiere una ruta a un directorio temporal para almacenar archivos. Por eso debemos especificar la ubicaci\u00f3n del directorio temporal <code>tmp</code>, y a diferencia del tutorial del autor, yo utilic\u00e9 el m\u00f3dulo <code>Unipath</code> con el que estoy m\u00e1s acostumbrado, simplemente defino la constante <code>BASEDIR</code> en el archivo <code>config.py</code></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">unipath</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"n\">BASEDIR</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ancestor</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Y a partir de ah\u00ed tengo un objeto con el que puedo definir, crear, verificar o borrar rutas y archivos.</p>\n<h2 id=\"compatibilidad-con-python-3\">Compatibilidad con Python 3</h2>\n<p>Debes asegurarte que la versi\u00f3n de <code>Flask-OpenID</code> sea la 1.2.4 o superior. Para verificarlo, ejecuta el siguiente comando:</p>\n<div class=\"codehilite\"><pre><span></span>pip freeze\n</pre></div>\n\n\n<p>Si obtienes una inferior a la mencionada, debes desinstalar la versi\u00f3n actual e instalar la nueva.</p>\n<div class=\"codehilite\"><pre><span></span>$ pip uninstall flask-openid\n$ pip install git+git://github.com/mitsuhiko/flask-openid.git\n</pre></div>\n\n\n<blockquote>\n<p>Toma en cuenta que debes tener instalado el programa <code>git</code>.</p>\n</blockquote>\n<h2 id=\"revisando-el-modelo-user\">Revisando el modelo User</h2>\n<p>La extensi\u00f3n <code>Flask-Login</code> necesita que se implementen ciertos m\u00e9todos en la clase <code>User</code>, pero no hay ning\u00fan requisito especial sobre <em>como</em> implementarlos.</p>\n<p>Aqu\u00ed est\u00e1 la clase <code>User</code> tal como aparece en el archivo <code>app/models.py</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">nickname</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">),</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">120</span><span class=\"p\">),</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">posts</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">relationship</span><span class=\"p\">(</span><span class=\"s1\">&#39;Post&#39;</span><span class=\"p\">,</span> <span class=\"n\">backref</span><span class=\"o\">=</span><span class=\"s1\">&#39;author&#39;</span><span class=\"p\">,</span> <span class=\"n\">lazy</span><span class=\"o\">=</span><span class=\"s1\">&#39;dynamic&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">is_authenticated</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">is_active</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">is_anonymous</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">unicode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>  <span class=\"c1\"># python 2</span>\n        <span class=\"k\">except</span> <span class=\"ne\">NameError</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>  <span class=\"c1\"># python 3</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;&lt;Usuario </span><span class=\"si\">%r</span><span class=\"s1\">&gt;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nickname</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>El m\u00e9todo <code>is_authenticated</code> tiene un nombre un tanto confuso. En general este m\u00e9todo debe regresar <code>True</code> a menos que el objeto que representa al usuario no est\u00e9 autenticado por alguna raz\u00f3n.</p>\n<p>El m\u00e9todo <code>is_anonymous</code> suele retornar <code>True</code> solo si los usuarios no est\u00e1n registrados en el sistema.</p>\n<p>Finalmente, el m\u00e9todo <code>get_id</code> regresa el identificador \u00fanico del usuario en formato unicode. Usamos el identificador generado por la base de datos. Debido a la diferencia en el manejo de unicode entre Python 2 y 3 se proporcionan alternativas para ambas versiones.</p>\n<h2 id=\"llamando-al-cargador-de-user\">Llamando al cargador de User</h2>\n<p>Ahora estamos listos para implementar el sistema de ingreso usando las extensiones Flask-Login y Flask-OpenID.</p>\n<p>Primero vamos a escribir una funci\u00f3n que cargue los usuarios desde la base de datos. Esta funci\u00f3n ser\u00e1 utilizada por Flask-Login en el archivo <code>app/views.py</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nd\">@lm.user_loader</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_user</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>Hay que hacer notar que esta funci\u00f3n se registra con Flask-Login usando el decorador <code>lm.user_loader</code>. Y tambi\u00e9n es importante tener presente que los identificadores de usuario que proporciona Flask-Login son siempre cadenas unicode, as\u00ed que debemos convertirlos en enteros antes de enviar el <code>id</code> a <code>Flask-Alchemy</code>.</p>\n<h2 id=\"la-funcion-login\">La funci\u00f3n <code>login</code></h2>\n<p>Ahora vamos a actualizar la funci\u00f3n <code>login()</code> en el mismo archivo <code>app/views.py</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">render_template</span><span class=\"p\">,</span> <span class=\"n\">flash</span><span class=\"p\">,</span> <span class=\"n\">redirect</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">url_for</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">g</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask.ext.login</span> <span class=\"kn\">import</span> <span class=\"n\">login_user</span><span class=\"p\">,</span> <span class=\"n\">logout_user</span><span class=\"p\">,</span> <span class=\"n\">current_user</span><span class=\"p\">,</span> <span class=\"n\">login_required</span>\n<span class=\"kn\">from</span> <span class=\"nn\">app</span> <span class=\"kn\">import</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">lm</span><span class=\"p\">,</span> <span class=\"n\">oid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.forms</span> <span class=\"kn\">import</span> <span class=\"n\">LoginForm</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n\n<span class=\"nd\">@app.route</span><span class=\"p\">(</span><span class=\"s1\">&#39;/login&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;POST&#39;</span><span class=\"p\">])</span>\n<span class=\"nd\">@oid.loginhandler</span>\n<span class=\"k\">def</span> <span class=\"nf\">login</span><span class=\"p\">():</span>\n    <span class=\"k\">if</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"ow\">and</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_authenticated</span><span class=\"p\">():</span>\n        <span class=\"k\">return</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"n\">url_for</span><span class=\"p\">(</span><span class=\"s1\">&#39;index&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">LoginForm</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">validate_on_submit</span><span class=\"p\">():</span>\n        <span class=\"n\">session</span><span class=\"p\">[</span><span class=\"s1\">&#39;remember_me&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">remember_me</span><span class=\"o\">.</span><span class=\"n\">data</span>\n        <span class=\"k\">return</span> <span class=\"n\">oid</span><span class=\"o\">.</span><span class=\"n\">try_login</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">openid</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">ask_for</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;nickname&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;email&#39;</span><span class=\"p\">])</span>\n    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span>\n        <span class=\"s1\">&#39;login.html&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Sign In&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">form</span><span class=\"o\">=</span><span class=\"n\">form</span><span class=\"p\">,</span>\n        <span class=\"n\">providers</span><span class=\"o\">=</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">&#39;OPENID_PROVIDERS&#39;</span><span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Para esta funci\u00f3n utilizamos varios m\u00f3dulos, que explicaremos mas tarde.</p>\n<p>Los cambios con respecto a nuestra funci\u00f3n anterior son muy peque\u00f1os. Hemos agregado un nuevo decorador a nuestra funci\u00f3n, <code>oid.loginhandler</code> que le dice a <code>Flask-OpenID</code> que esta la funci\u00f3n que maneja el ingreso de usuarios.</p>\n<p>Al principio del cuerpo de la funci\u00f3n vemos que <code>g.users</code>  se asigna a un usuario <em>autenticado</em>, y en su caso lo redirigimos a la p\u00e1gina inicial. La idea es que si es un usuario ya registrado no lo mandemos de nuevo a la p\u00e1gina de <em>login</em>.</p>\n<p>El objeto global <code>g</code> lo proporciona Flask como un lugar para almacenar y compartir datos durante toda la vida de una solicitud (o <code>request</code>, como lo llamaremos de ahora en adelante). Y como seguramente habr\u00e1n adivinado, lo usaremos para almacenar a los usuarios registrados.</p>\n<p>La funci\u00f3n <code>url_for</code> la usamos en la llamada <code>redirect</code> definida por Flask como una forma limpia de obtener la URL de una vista dada. Si quieres redireccionar a la p\u00e1gina inicial, podemos usar <code>redirect('/index)</code> pero hay muy buenas razones para que Flask construya las URL por nosotros[^2].</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "login-con-flask", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 67, "fields": {"idx": "efb1b22c-e98f-4360-af37-2f6cd70e16bf", "creado": "2017-07-29T04:19:20.701Z", "modificado": "2017-07-29T04:19:20.701Z", "title": "Actualizando el Cuadro de Mando", "summary": "", "body": "Title:  Actualizando el Cuadro de Mando   \r\nDate: 2015-09-15 18:11:41\r\nCategory: desarrollo\r\nTags:  django, python, cmi\r\nSummary: \r\n\r\n\r\nEl Cuadro de Mando Integral es un conjunto de aplicaciones que han funcionado desde hace uno cuatro a\u00f1os con **Django**. Pero no he podido actualizar ni la versi\u00f3n de *Python* y peor a\u00fan, la versi\u00f3n de **Django**, que sigue usando la versi\u00f3n 1.6.4 que ya no tiene soporte y que me impide aprovechar muchas de las ventajas que ofrece **Django Framework**.\r\n\r\nAs\u00ed que tom\u00e9 el c\u00f3digo fuente del servidor y una copia de la base de datos del *CMI* para poder trabajar en mi laptop.\r\n\r\n### Entorno virtual\r\n\r\nLo primero que hice fue crear un nuevo entorno virtual para empezar desde cero:\r\n\r\n```bash\r\ntoledano@toledano src (master) $ mkvirtualenv cmi\r\nNew python executable in cmi/bin/python2.7\r\nAlso creating executable in cmi/bin/python\r\nInstalling setuptools, pip...done.\r\n```\r\n\r\nY tambi\u00e9n actualizo el `pip`, para tener todo en la \u00faltima versi\u00f3n:\r\n\r\n```bash\r\n(cmi)toledano@toledano src (master) $ pip install --upgrade pip\r\nDownloading/unpacking pip from https://pypi.python.org/packages/py2.py3/p/pip/pip-7.1.2-py2.py3-none-any.whl#md5=5ff9fec0be479e4e36df467556deed4d\r\n  Downloading pip-7.1.2-py2.py3-none-any.whl (1.1MB): 1.1MB downloaded\r\nInstalling collected packages: pip\r\n  Found existing installation: pip 1.5.6\r\n    Uninstalling pip:\r\n      Successfully uninstalled pip\r\nSuccessfully installed pip\r\nCleaning up...\r\n```\r\n\r\n### Requisitos\r\n\r\nLa lista de requisitos del *CMI* ya tiene algunos a\u00f1os y al haber sido generada con la orden `pip freeze` ten\u00eda las versiones exactas con las que funciona el *Cuadro de Mando*. Adem\u00e1s no estoy seguro que sea necesite todos los paquetes que aparecen en la lista. Estos son algunos de los paquetes instalados en el Cuadro de Mando:\r\n\r\n```\r\nDjango==1.6.2\r\nMarkdown==2.4\r\nMySQL-python==1.2.5\r\nSouth==0.8.4\r\nUnipath==1.0\r\ndjango-annoying==0.7.9\r\ndjango-bootstrap-toolkit==2.15.0\r\ndjango-crispy-forms==1.4.0\r\ndjango-timedeltafield==0.7.1\r\ndjango-tinymce==1.5.2\r\nipython==1.2.1\r\npsycopg2==2.5.2\r\nreadline==6.2.4.1\r\nsix==1.5.2\r\nwsgiref==0.1.2\r\n```\r\n\r\nC\u00f3mo les dec\u00eda, tengo algunas dudas sobre ciertos paquetes, como `django-crispy-forms`, `South` y `django-bootstrap-toolkit`. Adem\u00e1s, como no puedo migrar a PostgreSQL no necesito `psycopg`.\r\n\r\nAl final, la lista queda de la siguiente manera.\r\n\r\n```\r\nDjango\r\nMarkdown\r\nMySQL-python\r\nUnipath\r\nargparse\r\ndjango-annoying\r\ndjango-bootstrap-toolkit\r\ndjango-taggit\r\ndjango-timedeltafield\r\ndjango-tinymce\r\ndjango-watson\r\ngunicorn\r\nipython\r\nreadline\r\nsix\r\nwsgiref\r\n```\r\n\r\nEstos son los requisitos generales, la idea es que ninguna aplicaciones del cuadro de mando requiera alg\u00fan paquete que no est\u00e9 en esta lista y de ser posible, eliminar por lo menos tres paquetes: `django-annoying`, `django-bootstrap-toolkit` y `django-timedeltafield`. Los paquetes `ipython` y `readline` no son extrictamente necesarios, y `gunicorn`, `argparse` y `wsgiref` no se necesitan en desarrollo, solo en producci\u00f3n.\r\n\r\nLa estrategia es crear tres grupos de requisitos: el grupo `base` con paquetes comunes, `local` con los paquetes que se usan en desarrollo y `produccion` para lo que se indica.\r\n\r\nEste ser\u00eda el grupo `base`:\r\n\r\n```\r\nDjango\r\nMarkdown\r\nMySQL-python\r\nUnipath\r\ndjango-taggit\r\ndjango-tinymce\r\ndjango-watson\r\nsix\r\n```\r\n\r\nEste es el grupo `local`:\r\n\r\n```\r\nipython\r\nreadline\r\ndjango-debug-toolbar\r\n```\r\n\r\nY en el grupo `produccion` tenemos\r\n\r\n```\r\nargparse\r\ngunicorn\r\nwsgiref\r\n```\r\n\r\nAhora si, vamos a instalar los requisitos para el CMI.\r\n\r\n### MySQL-Python\r\n\r\nEncuentro un peque\u00f1o problema al instalar el paquete `mysql-python`...\r\n\r\n```bash\r\nCollecting MySQL-python (from -r requeriments/base.txt (line 3))\r\n  Downloading MySQL-python-1.2.5.zip (108kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 110kB 231kB/s \r\n    Complete output from command python setup.py egg_info:\r\n    sh: mysql_config: command not found\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 20, in <module>\r\n      File \"/private/var/folders/p2/_vvdgwbx6zd55v10f8kjrngw0000gn/T/pip-build-NfrQ4v/MySQL-python/setup.py\", line 17, in <module>\r\n        metadata, options = get_config()\r\n      File \"setup_posix.py\", line 43, in get_config\r\n        libs = mysql_config(\"libs_r\")\r\n      File \"setup_posix.py\", line 25, in mysql_config\r\n        raise EnvironmentError(\"%s not found\" % (mysql_config.path,))\r\n    EnvironmentError: mysql_config not found\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/p2/_vvdgwbx6zd55v10f8kjrngw0000gn/T/pip-build-NfrQ4v/MySQL-python\r\n```\r\n\r\nEl conector, para poder compilarse, se necesita enlazar con las librer\u00edas de MySQL. Para lograrlo, `pip` pregunta al programa `mysql_config` d\u00f3nde se encuentran las librer\u00edas. Esto complica un poco las cosas. Primero porque necesitamos instalar el programa `cmake` y la forma de hacerlo es usando `brew`.\r\n\r\n```\r\n(cmi)toledano@toledano Downloads $ brew install cmake\r\nWarning: You are using OS X 10.11.\r\nWe do not provide support for this pre-release version.\r\nYou may encounter build failures or other breakage.\r\n==> Downloading http://www.cmake.org/files/v3.3/cmake-3.3.1.tar.gz\r\n\r\n... eliminio muchas l\u00edneas de informaci\u00f3n ...\r\n\r\nAdd the following to your init file to have packages installed by\r\nHomebrew added to your load-path:\r\n(let ((default-directory \"/usr/local/share/emacs/site-lisp/\"))\r\n  (normal-top-level-add-subdirs-to-load-path))\r\n==> Summary\r\n\ud83c\udf7a  /usr/local/Cellar/cmake/3.3.1: 1901 files, 33M, built in 15.6 minutes\r\n```\r\n\r\nComo uso el programa [MAMP](https://www.mamp.info/en/), debo instalar los componentes adicionales: [MAMP_components_2.0.2.dmg](http://sourceforge.net/projects/mamp/files/latest/download?source=files).\r\n\r\n\r\n\r\n\r\nPorque se necesita compilar y no se encuentra la librer\u00eda de **MySQL** para enlazar el conector. Como uso un programa llamado [MAMP](https://www.mamp.info/en/) debo incluir la ruta de los ejecutables al momento de compilar, para que `pip` encuentre el programa `mysql_config`.", "extend": "", "pub_date": "2015-09-15T23:11:41Z", "summary_html": "", "body_html": "<p>El Cuadro de Mando Integral es un conjunto de aplicaciones que han funcionado desde hace uno cuatro a\u00f1os con <strong>Django</strong>. Pero no he podido actualizar ni la versi\u00f3n de <em>Python</em> y peor a\u00fan, la versi\u00f3n de <strong>Django</strong>, que sigue usando la versi\u00f3n 1.6.4 que ya no tiene soporte y que me impide aprovechar muchas de las ventajas que ofrece <strong>Django Framework</strong>.</p>\n<p>As\u00ed que tom\u00e9 el c\u00f3digo fuente del servidor y una copia de la base de datos del <em>CMI</em> para poder trabajar en mi laptop.</p>\n<h3 id=\"entorno-virtual\">Entorno virtual</h3>\n<p>Lo primero que hice fue crear un nuevo entorno virtual para empezar desde cero:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>master<span class=\"o\">)</span> $ mkvirtualenv cmi\nNew python executable in cmi/bin/python2.7\nAlso creating executable in cmi/bin/python\nInstalling setuptools, pip...done.\n</pre></div>\n\n\n<p>Y tambi\u00e9n actualizo el <code>pip</code>, para tener todo en la \u00faltima versi\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>cmi<span class=\"o\">)</span>toledano@toledano src <span class=\"o\">(</span>master<span class=\"o\">)</span> $ pip install --upgrade pip\nDownloading/unpacking pip from https://pypi.python.org/packages/py2.py3/p/pip/pip-7.1.2-py2.py3-none-any.whl#md5<span class=\"o\">=</span>5ff9fec0be479e4e36df467556deed4d\n  Downloading pip-7.1.2-py2.py3-none-any.whl <span class=\"o\">(</span><span class=\"m\">1</span>.1MB<span class=\"o\">)</span>: <span class=\"m\">1</span>.1MB downloaded\nInstalling collected packages: pip\n  Found existing installation: pip <span class=\"m\">1</span>.5.6\n    Uninstalling pip:\n      Successfully uninstalled pip\nSuccessfully installed pip\nCleaning up...\n</pre></div>\n\n\n<h3 id=\"requisitos\">Requisitos</h3>\n<p>La lista de requisitos del <em>CMI</em> ya tiene algunos a\u00f1os y al haber sido generada con la orden <code>pip freeze</code> ten\u00eda las versiones exactas con las que funciona el <em>Cuadro de Mando</em>. Adem\u00e1s no estoy seguro que sea necesite todos los paquetes que aparecen en la lista. Estos son algunos de los paquetes instalados en el Cuadro de Mando:</p>\n<div class=\"codehilite\"><pre><span></span>Django==1.6.2\nMarkdown==2.4\nMySQL-python==1.2.5\nSouth==0.8.4\nUnipath==1.0\ndjango-annoying==0.7.9\ndjango-bootstrap-toolkit==2.15.0\ndjango-crispy-forms==1.4.0\ndjango-timedeltafield==0.7.1\ndjango-tinymce==1.5.2\nipython==1.2.1\npsycopg2==2.5.2\nreadline==6.2.4.1\nsix==1.5.2\nwsgiref==0.1.2\n</pre></div>\n\n\n<p>C\u00f3mo les dec\u00eda, tengo algunas dudas sobre ciertos paquetes, como <code>django-crispy-forms</code>, <code>South</code> y <code>django-bootstrap-toolkit</code>. Adem\u00e1s, como no puedo migrar a PostgreSQL no necesito <code>psycopg</code>.</p>\n<p>Al final, la lista queda de la siguiente manera.</p>\n<div class=\"codehilite\"><pre><span></span>Django\nMarkdown\nMySQL-python\nUnipath\nargparse\ndjango-annoying\ndjango-bootstrap-toolkit\ndjango-taggit\ndjango-timedeltafield\ndjango-tinymce\ndjango-watson\ngunicorn\nipython\nreadline\nsix\nwsgiref\n</pre></div>\n\n\n<p>Estos son los requisitos generales, la idea es que ninguna aplicaciones del cuadro de mando requiera alg\u00fan paquete que no est\u00e9 en esta lista y de ser posible, eliminar por lo menos tres paquetes: <code>django-annoying</code>, <code>django-bootstrap-toolkit</code> y <code>django-timedeltafield</code>. Los paquetes <code>ipython</code> y <code>readline</code> no son extrictamente necesarios, y <code>gunicorn</code>, <code>argparse</code> y <code>wsgiref</code> no se necesitan en desarrollo, solo en producci\u00f3n.</p>\n<p>La estrategia es crear tres grupos de requisitos: el grupo <code>base</code> con paquetes comunes, <code>local</code> con los paquetes que se usan en desarrollo y <code>produccion</code> para lo que se indica.</p>\n<p>Este ser\u00eda el grupo <code>base</code>:</p>\n<div class=\"codehilite\"><pre><span></span>Django\nMarkdown\nMySQL-python\nUnipath\ndjango-taggit\ndjango-tinymce\ndjango-watson\nsix\n</pre></div>\n\n\n<p>Este es el grupo <code>local</code>:</p>\n<div class=\"codehilite\"><pre><span></span>ipython\nreadline\ndjango-debug-toolbar\n</pre></div>\n\n\n<p>Y en el grupo <code>produccion</code> tenemos</p>\n<div class=\"codehilite\"><pre><span></span>argparse\ngunicorn\nwsgiref\n</pre></div>\n\n\n<p>Ahora si, vamos a instalar los requisitos para el CMI.</p>\n<h3 id=\"mysql-python\">MySQL-Python</h3>\n<p>Encuentro un peque\u00f1o problema al instalar el paquete <code>mysql-python</code>&hellip;</p>\n<div class=\"codehilite\"><pre><span></span>Collecting MySQL-python <span class=\"o\">(</span>from -r requeriments/base.txt <span class=\"o\">(</span>line <span class=\"m\">3</span><span class=\"o\">))</span>\n  Downloading MySQL-python-1.2.5.zip <span class=\"o\">(</span>108kB<span class=\"o\">)</span>\n    <span class=\"m\">100</span>% <span class=\"p\">|</span>\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588<span class=\"p\">|</span> 110kB 231kB/s \n    Complete output from <span class=\"nb\">command</span> python setup.py egg_info:\n    sh: mysql_config: <span class=\"nb\">command</span> not found\n    Traceback <span class=\"o\">(</span>most recent call last<span class=\"o\">)</span>:\n      File <span class=\"s2\">&quot;&lt;string&gt;&quot;</span>, line <span class=\"m\">20</span>, in &lt;module&gt;\n      File <span class=\"s2\">&quot;/private/var/folders/p2/_vvdgwbx6zd55v10f8kjrngw0000gn/T/pip-build-NfrQ4v/MySQL-python/setup.py&quot;</span>, line <span class=\"m\">17</span>, in &lt;module&gt;\n        metadata, <span class=\"nv\">options</span> <span class=\"o\">=</span> get_config<span class=\"o\">()</span>\n      File <span class=\"s2\">&quot;setup_posix.py&quot;</span>, line <span class=\"m\">43</span>, in get_config\n        <span class=\"nv\">libs</span> <span class=\"o\">=</span> mysql_config<span class=\"o\">(</span><span class=\"s2\">&quot;libs_r&quot;</span><span class=\"o\">)</span>\n      File <span class=\"s2\">&quot;setup_posix.py&quot;</span>, line <span class=\"m\">25</span>, in mysql_config\n        raise EnvironmentError<span class=\"o\">(</span><span class=\"s2\">&quot;%s not found&quot;</span> % <span class=\"o\">(</span>mysql_config.path,<span class=\"o\">))</span>\n    EnvironmentError: mysql_config not found\n\n    ----------------------------------------\nCommand <span class=\"s2\">&quot;python setup.py egg_info&quot;</span> failed with error code <span class=\"m\">1</span> in /private/var/folders/p2/_vvdgwbx6zd55v10f8kjrngw0000gn/T/pip-build-NfrQ4v/MySQL-python\n</pre></div>\n\n\n<p>El conector, para poder compilarse, se necesita enlazar con las librer\u00edas de MySQL. Para lograrlo, <code>pip</code> pregunta al programa <code>mysql_config</code> d\u00f3nde se encuentran las librer\u00edas. Esto complica un poco las cosas. Primero porque necesitamos instalar el programa <code>cmake</code> y la forma de hacerlo es usando <code>brew</code>.</p>\n<div class=\"codehilite\"><pre><span></span>(<span class=\"n\">cmi</span>)<span class=\"n\">toledano</span><span class=\"nv\">@toledano</span> <span class=\"n\">Downloads</span> $ <span class=\"n\">brew</span> <span class=\"n\">install</span> <span class=\"n\">cmake</span>\n<span class=\"n\">Warning:</span> <span class=\"n\">You</span> <span class=\"n\">are</span> <span class=\"n\">using</span> <span class=\"n\">OS</span> <span class=\"o\">X</span> <span class=\"mf\">10.11</span>.\n<span class=\"n\">We</span> <span class=\"k\">do</span> <span class=\"nb\">not</span> <span class=\"n\">provide</span> <span class=\"n\">support</span> <span class=\"k\">for</span> <span class=\"n\">this</span> <span class=\"n\">pre-release</span> <span class=\"n\">version</span>.\n<span class=\"n\">You</span> <span class=\"n\">may</span> <span class=\"n\">encounter</span> <span class=\"n\">build</span> <span class=\"n\">failures</span> <span class=\"o\">or</span> <span class=\"n\">other</span> <span class=\"n\">breakage</span>.\n<span class=\"cm\">==&gt; Downloading http://www.cmake.org/files/v3.3/cmake-3.3.1.tar.gz</span>\n\n... <span class=\"n\">eliminio</span> <span class=\"n\">muchas</span> <span class=\"n\">l\u00edneas</span> <span class=\"n\">de</span> <span class=\"n\">informaci\u00f3n</span> ...\n\n<span class=\"n\">Add</span> <span class=\"n\">the</span> <span class=\"n\">following</span> <span class=\"nb\">to</span> <span class=\"n\">your</span> <span class=\"n\">init</span> <span class=\"n\">file</span> <span class=\"nb\">to</span> <span class=\"n\">have</span> <span class=\"n\">packages</span> <span class=\"n\">installed</span> <span class=\"nb\">by</span>\n<span class=\"n\">Homebrew</span> <span class=\"n\">added</span> <span class=\"nb\">to</span> <span class=\"n\">your</span> <span class=\"n\">load-path:</span>\n(<span class=\"k\">let</span> ((<span class=\"n\">default-directory</span> <span class=\"s\">&quot;/usr/local/share/emacs/site-lisp/&quot;</span>))\n  (<span class=\"n\">normal-top-level-add-subdirs-to-load-path</span>))\n==&gt; <span class=\"n\">Summary</span>\n\ud83c\udf7a  /<span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">Cellar</span><span class=\"o\">/</span><span class=\"n\">cmake</span><span class=\"o\">/</span><span class=\"mf\">3.3.1</span>: <span class=\"mi\">1901</span> <span class=\"n\">files</span>, <span class=\"mi\">33</span><span class=\"n\">M</span>, <span class=\"n\">built</span> <span class=\"n\">in</span> <span class=\"mf\">15.6</span> <span class=\"n\">minutes</span>\n</pre></div>\n\n\n<p>Como uso el programa <a href=\"https://www.mamp.info/en/\">MAMP</a>, debo instalar los componentes adicionales: <a href=\"http://sourceforge.net/projects/mamp/files/latest/download?source=files\">MAMP_components_2.0.2.dmg</a>.</p>\n<p>Porque se necesita compilar y no se encuentra la librer\u00eda de <strong>MySQL</strong> para enlazar el conector. Como uso un programa llamado <a href=\"https://www.mamp.info/en/\">MAMP</a> debo incluir la ruta de los ejecutables al momento de compilar, para que <code>pip</code> encuentre el programa <code>mysql_config</code>.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "actualizando-el-cuadro-de-mando", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 68, "fields": {"idx": "a485bdeb-1fbe-4759-9a36-c14be234136a", "creado": "2017-07-29T04:19:59.893Z", "modificado": "2017-07-29T04:19:59.893Z", "title": "Mixins en LESS", "summary": "", "body": "Title: Mixins en LESS    \r\nDate: 2015-09-27 2:10:35 p.m.\r\nCategory: desarrollo\r\nTags: css, less, patterns\r\nSummary: \r\n\r\nLESS es un pre-procesador de hojas de estilo que permite editarlas de forma muy r\u00e1pida,y como dicen ahora, de forma muy sem\u00e1ntica, es decir, de forma l\u00f3gica que se explica de forma clara por si misma.\r\n\r\nAgrupa los elementos, de forma que se encadenan f\u00e1cilmente, lo que ahorra tiempo y disminuye la posibilidad de errores. Adicionalmente se pueden programar funciones que nos permiten utilizar de forma muy eficiente grupos de propiedades, sin repeticiones y sin errores. Estos se llaman **mixins**.\r\n\r\n## Mixins\r\n\r\nUno de los estilos que m\u00e1s me gusta es agregar esquinas redondeadas a las im\u00e1genes, a las cajas y a todo lo que tenga borde.\r\n\r\nEn LESS es muy f\u00e1cil crear un _mixin_ y luego usarlo en cualquier estilo. Incluso, puedo pasarle como par\u00e1metro el del n\u00famero de pixeles que debe tener el radio de las esquinas.\r\n\r\nEste es el _mixin_:\r\n\r\n```less\r\n.redondear (@radio: 5px) {\r\n    -webkit-border-radius: @radio;\r\n    -moz-border-radius:    @radio;\r\n    border-radius:         @radio;\r\n\r\n    -moz-background-clip:    padding;\r\n    -webkit-background-clip: padding-box;\r\n    background-clip:         padding-box;\r\n}\r\n``` \r\n\r\nToma como par\u00e1metro el `@radio` y luego se aplica a todos los elementos que generan los bordes redondeados.\r\n\r\nY se usa de la siguiente manera:\r\n\r\n```less\r\n.xeMusicPlayer3 {\r\n  .xeCover {\r\n    img {\r\n      margin: 0;\r\n      padding: 0;\r\n      max-height: 70px;\r\n      max-width: 70px;\r\n      .redondear();\r\n    }\r\n  }\r\n  \r\n  .xeMusicHeaderText {\r\n      line-height: 1em;\r\n  }\r\n}\r\n```\r\n\r\nComo mantengo los `5px` de radio, no necesito especificar un valor diferente, aunque podr\u00eda usarlo de esta manera `.redondear(3px)`. \r\n\r\nAl compilarlo, obtenemos una limpia hoja de estilo. Este es el resultado.\r\n\r\n```css\r\n.xeMusicPlayer3 .xeCover img {\r\n  margin: 0;\r\n  padding: 0;\r\n  max-height: 70px;\r\n  max-width: 70px;\r\n  -webkit-border-radius: 3px;\r\n  -moz-border-radius: 3px;\r\n  border-radius: 3px;\r\n  -moz-background-clip: padding;\r\n  -webkit-background-clip: padding-box;\r\n  background-clip: padding-box;\r\n}\r\n.xeMusicPlayer3 .xeMusicHeaderText {\r\n  line-height: 1em;\r\n}\r\n```", "extend": "", "pub_date": "2015-09-27T19:20:35Z", "summary_html": "", "body_html": "<p>LESS es un pre-procesador de hojas de estilo que permite editarlas de forma muy r\u00e1pida,y como dicen ahora, de forma muy sem\u00e1ntica, es decir, de forma l\u00f3gica que se explica de forma clara por si misma.</p>\n<p>Agrupa los elementos, de forma que se encadenan f\u00e1cilmente, lo que ahorra tiempo y disminuye la posibilidad de errores. Adicionalmente se pueden programar funciones que nos permiten utilizar de forma muy eficiente grupos de propiedades, sin repeticiones y sin errores. Estos se llaman <strong>mixins</strong>.</p>\n<h2 id=\"mixins\">Mixins</h2>\n<p>Uno de los estilos que m\u00e1s me gusta es agregar esquinas redondeadas a las im\u00e1genes, a las cajas y a todo lo que tenga borde.</p>\n<p>En LESS es muy f\u00e1cil crear un <em>mixin</em> y luego usarlo en cualquier estilo. Incluso, puedo pasarle como par\u00e1metro el del n\u00famero de pixeles que debe tener el radio de las esquinas.</p>\n<p>Este es el <em>mixin</em>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">.</span><span class=\"nc\">redondear</span> <span class=\"o\">(</span><span class=\"nv\">@radio</span><span class=\"o\">:</span> <span class=\"nt\">5px</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n    <span class=\"kp\">-webkit-</span><span class=\"k\">border-radius</span><span class=\"p\">:</span> <span class=\"o\">@</span><span class=\"n\">radio</span><span class=\"p\">;</span>\n    <span class=\"kp\">-moz-</span><span class=\"k\">border-radius</span><span class=\"p\">:</span>    <span class=\"o\">@</span><span class=\"n\">radio</span><span class=\"p\">;</span>\n    <span class=\"k\">border-radius</span><span class=\"p\">:</span>         <span class=\"o\">@</span><span class=\"n\">radio</span><span class=\"p\">;</span>\n\n    <span class=\"kp\">-moz-</span><span class=\"k\">background-clip</span><span class=\"p\">:</span>    <span class=\"k\">padding</span><span class=\"p\">;</span>\n    <span class=\"kp\">-webkit-</span><span class=\"k\">background-clip</span><span class=\"p\">:</span> <span class=\"kc\">padding-box</span><span class=\"p\">;</span>\n    <span class=\"k\">background-clip</span><span class=\"p\">:</span>         <span class=\"kc\">padding-box</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Toma como par\u00e1metro el <code>@radio</code> y luego se aplica a todos los elementos que generan los bordes redondeados.</p>\n<p>Y se usa de la siguiente manera:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">.</span><span class=\"nc\">xeMusicPlayer3</span> <span class=\"p\">{</span>\n  <span class=\"err\">.xeCover</span> <span class=\"p\">{</span>\n    <span class=\"err\">img</span> <span class=\"p\">{</span>\n      <span class=\"k\">margin</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n      <span class=\"k\">padding</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n      <span class=\"k\">max-height</span><span class=\"p\">:</span> <span class=\"mi\">70</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n      <span class=\"k\">max-width</span><span class=\"p\">:</span> <span class=\"mi\">70</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n      <span class=\"err\">.redondear()</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"err\">.xeMusicHeaderText</span> <span class=\"p\">{</span>\n      <span class=\"k\">line-height</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"kt\">em</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Como mantengo los <code>5px</code> de radio, no necesito especificar un valor diferente, aunque podr\u00eda usarlo de esta manera <code>.redondear(3px)</code>. </p>\n<p>Al compilarlo, obtenemos una limpia hoja de estilo. Este es el resultado.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">.</span><span class=\"nc\">xeMusicPlayer3</span> <span class=\"p\">.</span><span class=\"nc\">xeCover</span> <span class=\"nt\">img</span> <span class=\"p\">{</span>\n  <span class=\"k\">margin</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">padding</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">max-height</span><span class=\"p\">:</span> <span class=\"mi\">70</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n  <span class=\"k\">max-width</span><span class=\"p\">:</span> <span class=\"mi\">70</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n  <span class=\"kp\">-webkit-</span><span class=\"k\">border-radius</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n  <span class=\"kp\">-moz-</span><span class=\"k\">border-radius</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n  <span class=\"k\">border-radius</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n  <span class=\"kp\">-moz-</span><span class=\"k\">background-clip</span><span class=\"p\">:</span> <span class=\"k\">padding</span><span class=\"p\">;</span>\n  <span class=\"kp\">-webkit-</span><span class=\"k\">background-clip</span><span class=\"p\">:</span> <span class=\"kc\">padding-box</span><span class=\"p\">;</span>\n  <span class=\"k\">background-clip</span><span class=\"p\">:</span> <span class=\"kc\">padding-box</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"p\">.</span><span class=\"nc\">xeMusicPlayer3</span> <span class=\"p\">.</span><span class=\"nc\">xeMusicHeaderText</span> <span class=\"p\">{</span>\n  <span class=\"k\">line-height</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"kt\">em</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "mixins-en-less", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 69, "fields": {"idx": "94bd9f4a-0eab-4a99-9de0-dde6c5779d27", "creado": "2017-07-29T04:21:36.385Z", "modificado": "2017-07-29T04:21:36.385Z", "title": "C\u00f3mo usar Grunt", "summary": "", "body": "Title: C\u00f3mo usar Grunt    \r\nDate: 2015-10-09 8:38:14 p.m.\r\nCategory: desarrollo\r\nTags: tools, frontend\r\n\r\nComo inicio la completamente nueva versi\u00f3n 2.0 del Cuadro de Mando Integral, totalmente renovada y reescrita desde el origen, orientado a la norma ISO 9001:2015, aprovecho para utilizar por primera vez algunas tecnolog\u00edas que nunca hab\u00eda usado. Como **Grunt**.\r\n\r\n### Qu\u00e9 es Grunt\r\n\r\n**Grunt** es un _administrador_ de tareas. Y sirve para automatizar las tareas repetitivas que realizamos cuando estamos desarrollando para la web, como compilar, minificar, ejecutar bater\u00edas de pruebas, limpiar el c\u00f3digo, etc. Una vez que configuramos nuestro `Gruntfile`, el gestor de tareas har\u00e1 todo ese trabajo mundano pr\u00e1cticamente sin ning\u00fan esfuerzo de nuestra parte.\r\n\r\n### Por qu\u00e9 usar Grunt\r\n\r\nEl Ecosistema de _Grunt_ es enorme y crece cada d\u00eda. Existen, literalmente, cientos de _plugins_ que permiten que _Grunt_ automatice cualquier tarea, con un m\u00ednimo de esfuerzo. Y dicen que si no existe, crearlo es muy f\u00e1cil. Ya lo veremos.\r\n\r\n### C\u00f3mo empezar a usar Grunt\r\n\r\n__Grunt__ y sus plugins se instalan usando `npm`, el gestor de paquetes de **Node.js**. Las versiones de la rama 0.4.x de Grunt necesitan una versi\u00f3n de Node.js `>= 0.8.0`. Las versiones nones se consideran inestables.\r\n\r\n> Pues yo estoy instalando la versi\u00f3n 4.1.2, que es la estable el d\u00eda de hoy, creo. La instal\u00e9 usando el comando `nvm install -s v4.1`.  \r\n>   \r\n> Es adem\u00e1s la versi\u00f3n por default, porque use esto:\r\n> \r\n>     toledano@toledano src (tema) $ nvm alias default 4.1.2\r\n>     default -> 4.1.2 (-> v4.1.2)\r\n\r\nLuego, debemos asegurarnos que tenemos la versi\u00f3n actualizada de `npm`, ejecutando `npm update -g npm`[^1]. No estoy seguro que se haya actualizado, pero este es el resultado:\r\n\r\n```bash\r\ntoledano@toledano src (tema) $ npm update -g npm\r\n/Users/toledano/.nvm/v4.1.2/bin/npm -> /Users/toledano/.nvm/v4.1.2/lib/node_modules/npm/bin/npm-cli.js\r\nnpm@3.3.6 /Users/toledano/.nvm/v4.1.2/lib/node_modules/npm\r\n```\r\n\r\n> Hubiera verificado la versi\u00f3n que estaba instalada, para compararla con la que se actualiz\u00f3, \u00bfverdad? \r\n\r\n### Instalar el comando grunt-cli\r\n\r\nPara poder usar Grunt, debemos instalar la interface de linea de comandos (CLI por sus siglas en ingl\u00e9s) de forma global. De nuevo, tal vez necesites usar `sudo` o ejecutar tu consola con permisos de administrador si usas Windows.\r\n\r\n```bash\r\ntoledano@toledano src (tema) $ npm install -g grunt-cli\r\n/Users/toledano/.nvm/v4.1.2/bin/grunt -> /Users/toledano/.nvm/v4.1.2/lib/node_modules/grunt-cli/bin/grunt\r\n/Users/toledano/.nvm/v4.1.2/lib\r\n\u2514\u2500\u252c grunt-cli@0.1.13 \r\n  \u251c\u2500\u252c findup-sync@0.1.3 \r\n  \u2502 \u251c\u2500\u252c glob@3.2.11 \r\n  \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1 \r\n  \u2502 \u2502 \u2514\u2500\u252c minimatch@0.3.0 \r\n  \u2502 \u2502   \u251c\u2500\u2500 lru-cache@2.7.0 \r\n  \u2502 \u2502   \u2514\u2500\u2500 sigmund@1.0.1 \r\n  \u2502 \u2514\u2500\u2500 lodash@2.4.2 \r\n  \u251c\u2500\u252c nopt@1.0.10 \r\n  \u2502 \u2514\u2500\u2500 abbrev@1.0.7 \r\n  \u2514\u2500\u2500 resolve@0.3.1 \r\n```\r\n\r\nCon esto, vamos a tener el comando `grunt` en la ruta, lo que nos permitir\u00e1 ejecutarlo en cualquier directorio.\r\n\r\nEs importante hacer notar que cuando instalamos `grunt-cli` no instalamos el ejecutor[^2] de tareas.\r\n\r\n### C\u00f3mo funciona \r\nCada vez que se ejecuta `grunt`, este busca la versi\u00f3n de Grunt que est\u00e1 indicada en `require()`. Gracias a esto, puedes ejecutar `grunt` en cualquier subcarpeta de tu proyecto.\r\n\r\nSi hay una instalaci\u00f3n de Grunt local, la CLI carga esta versi\u00f3n de la librer\u00eda de Grunt, aplica la configuraci\u00f3n indicada en el `Gruntfile`, y ejecuta cualquier tarea solicitada.\r\n\r\n### Preparar un nuevo proyecto con Grunt\r\n\r\nUna configuraci\u00f3n involucra generalmente dos archivos: `package.json` y el `Gruntfile`.\r\n\r\n- **`package.json`**: Este archivo es usado por `npm` para almacenar metadatos del proyecto como son los m\u00f3dulos npm. Debemos enlistar `grunt` y sus plugins como `devDependencies` necesarias en este archivo.\r\n- __`Gruntfile`__: Este archivo se llama `Gruntfile.js` o `Gruntfile.coffee` y se usa para configurar las tareas y cargar los plugins de Grunt.  \r\n\r\n> Cuando hablemos del `Gruntfile`, recuerda que puede ser `Grutnfile.js` o `Gruntfile.coffee`.\r\n\r\n## El archivo `package.json`\r\n\r\nEl archivo `package.json` debe ubicarse en el directorio raiz de tu proyecto, junto al `Gruntfile` y debe incluirse en el c\u00f3digo fuente del proyecto. Al ejecutar `npm install` en el mismo directorio que un `package.json` instalar\u00e1 las versiones correctas de las dependencias listadas en \u00e9l.\r\n\r\nHay varias formas de crear un `package.json` para un proyecto:\r\n\r\n- Con `grunt-init` se pueden crear autom\u00e1ticamente `package.json` con plantillas preexistentes.\r\n- El comando `npm-init` crea un archivo `package.json` b\u00e1sico.\r\n- Puedes usar uno de los ejemplo siguiente y modif\u00edcalo de acuerdo a tus necesidades siguiendo las [especificaciones](https://docs.npmjs.com/files/package.json).  \r\n```json\r\n{\r\n  \"name\": \"cmi\",\r\n  \"version\": \"2.0.0\",\r\n  \"license\": \"MIT\",\r\n  \r\n  \"author\": {\r\n    \"name\": \"Javier Sanchez Toledano\",\r\n    \"email\": \"js.toledano@me.com\",\r\n    \"url\": \"http://yo.toledano.org\"\r\n  },\r\n\r\n  \"repository\": \"npm/npm\",\r\n  \"devDependencies\": {\r\n  }\r\n}\r\n```\r\n\r\n## C\u00f3mo instalar Grunt y los gruntplugins\r\n\r\nLa manera m\u00e1s f\u00e1cil de agregar GRunt y gruntplugins a un `package,json` existente es con el comando `npm install <m\u00f3dulo> --save-dev`. Esto no solo instala el `<m\u00f3dulo>` localmente, sino que tambi\u00e9n lo agregar\u00e1 autom\u00e1ticamente a la secci\u00f3n `devDependencies`.\r\n\r\nPor ejemplo, esto instalar\u00e1 la versi\u00f3n m\u00e1s reciente de Grunt en la carpeta de tu proyecto, y lo agregar\u00e1 a la secci\u00f3n `devDependencies`.\r\n\r\n    npm install grunt --save-dev\r\n\r\n> Pero antes debe existir el archivo package.json y debe tener la estructura b\u00e1sica indicada arriba, que no produce ning\u00fan error o advertencia y funciona correctamente.\r\n>    \r\n    toledano@toledano cmi_core (tema) $ npm install grunt --save-dev\r\n    cmi@2.0.0 /Users/toledano/proyectos/cmi_core\r\n    \u2514\u2500\u252c grunt@0.4.5 \r\n      \u251c\u2500\u2500 async@0.1.22 \r\n      \u251c\u2500\u2500 coffee-script@1.3.3 \r\n      \u251c\u2500\u2500 colors@0.6.2 \r\n      \u251c\u2500\u2500 dateformat@1.0.2-1.2.3 \r\n      \u251c\u2500\u2500 eventemitter2@0.4.14 \r\n      \u251c\u2500\u2500 exit@0.1.2 \r\n      \u251c\u2500\u252c findup-sync@0.1.3 \r\n      \u2502 \u251c\u2500\u252c glob@3.2.11 \r\n      \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1 \r\n      \u2502 \u2502 \u2514\u2500\u2500 minimatch@0.3.0 \r\n      \u2502 \u2514\u2500\u2500 lodash@2.4.2 \r\n      \u251c\u2500\u2500 getobject@0.1.0 \r\n      \u251c\u2500\u252c glob@3.1.21 \r\n      \u2502 \u251c\u2500\u2500 graceful-fs@1.2.3 \r\n      \u2502 \u2514\u2500\u2500 inherits@1.0.2 \r\n      \u251c\u2500\u252c grunt-legacy-log@0.1.2 \r\n      \u2502 \u251c\u2500\u252c grunt-legacy-log-utils@0.1.1 \r\n      \u2502 \u2502 \u251c\u2500\u2500 lodash@2.4.2 \r\n      \u2502 \u2502 \u2514\u2500\u2500 underscore.string@2.3.3 \r\n      \u2502 \u251c\u2500\u2500 lodash@2.4.2 \r\n      \u2502 \u2514\u2500\u2500 underscore.string@2.3.3 \r\n      \u251c\u2500\u2500 grunt-legacy-util@0.2.0 \r\n      \u251c\u2500\u2500 hooker@0.2.3 \r\n      \u251c\u2500\u2500 iconv-lite@0.2.11 \r\n      \u251c\u2500\u252c js-yaml@2.0.5 \r\n      \u2502 \u251c\u2500\u252c argparse@0.1.16 \r\n      \u2502 \u2502 \u251c\u2500\u2500 underscore@1.7.0 \r\n      \u2502 \u2502 \u2514\u2500\u2500 underscore.string@2.4.0 \r\n      \u2502 \u2514\u2500\u2500 esprima@1.0.4 \r\n      \u251c\u2500\u2500 lodash@0.9.2 \r\n      \u251c\u2500\u252c minimatch@0.2.14 \r\n      \u2502 \u251c\u2500\u2500 lru-cache@2.7.0 \r\n      \u2502 \u2514\u2500\u2500 sigmund@1.0.1 \r\n      \u251c\u2500\u252c nopt@1.0.10 \r\n      \u2502 \u2514\u2500\u2500 abbrev@1.0.7 \r\n      \u251c\u2500\u2500 rimraf@2.2.8 \r\n      \u251c\u2500\u2500 underscore.string@2.2.1 \r\n      \u2514\u2500\u2500 which@1.0.9 \r\n> \r\nY se modifica la secci\u00f3n `devDependencies`, agregando la l\u00ednea correspondiente a Grunt.  \r\n>  \r\n      \"devDependencies\": {\r\n        \"grunt\": \"^0.4.5\"\r\n      }\r\n\r\nLo mismo puede hacerse para los _gruntplugins_ y otros m\u00f3dulos de node. En el siguiente ejemplo, vamos a instalar el m\u00f3dulo `JSHint`.\r\n\r\n    npm install grunt-contrib-jshint --save-dev\r\n\r\nHay un mont\u00f3n de _plugins_ que puedes instalar y puedes consultarlos en la p\u00e1gina de [plugins de Grunt](http://gruntjs.com/plugins).\r\n\r\nRecuerda guardar los cambios de tu archivo `package.json` en tu control de versiones[^3]. \r\n\r\n## El archivo `Gruntfile`\r\n\r\nUn archivo `Gruntfile.js` o `Gruntfile.coffee` es un archivo de JavaScript o CoffeeScript v\u00e1lido que se encuentra en la ra\u00edz de tu proyecto, junto al archivo `package.json`, y debe adjuntarse a las fuentes de tu proyecto. \r\n\r\nUn archivo `Gruntfile` se compone de las siguientes partes:\r\n\r\n- Una funci\u00f3n `wrapper`, que envuelve el contenido\r\n- La configuraci\u00f3n del proyecto y de la tarea\r\n- La carga de plugins y tareas de Grunt\r\n- Tareas personalizadas\r\n\r\n### Un archivo `Gruntfile` de ejemplo\r\n\r\nEn el siguiente archivo `Gruntfile`, los metadatos del proyecto se importan a la configuraci\u00f3n de Grunt desde el `package.json` del proyecto y la tarea `uglify` del plugin `grunt-contrib-uglify` se configura para _minificar_ un archivo fuente y genera un comentario de forma din\u00e1mica usando los metadatos. Cuando se ejectuta `grunt` en la l\u00ednea de comandos, la tarea `uglify` ser\u00e1 la que se ejecute por default.\r\n\r\n```javascript\r\nmodule.exports = function(grunt) {\r\n\r\n  // Configuraci\u00f3n del proyecto.\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON('package.json'),\r\n    uglify: {\r\n      options: {\r\n        banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"dd/mmm/yyyy\") %> */\\n'\r\n      },\r\n      build: {\r\n        src: 'src/<%= pkg.name %>.js',\r\n        dest: 'build/<%= pkg.name %>.min.js'\r\n      }\r\n    }\r\n  });\r\n\r\n  // Carga el plugin que nos proporciona la tarea \"uglify\".\r\n  grunt.loadNpmTasks('grunt-contrib-uglify');\r\n\r\n  // La(s) tarea(s) por default.\r\n  grunt.registerTask('default', ['uglify']);\r\n\r\n};\r\n```\r\n\r\nAhora que ya tenemos el archivo `Gruntfile` completo, vamos a analizar sus componentes.\r\n\r\n#### La funci\u00f3n _wrapper_\r\n\r\nCada archivo `Gruntfile` (y cada gruntplugin) usa este formato b\u00e1sico. Todo el c\u00f3digo Grunt debe colocarse dentro de esta funci\u00f3n:\r\n\r\n```javascript\r\nmodule.exports = function(grunt) {\r\n  // Aqu\u00ed van las cosas que queremos que haga Grunt\r\n};\r\n```\r\n\r\n#### Configuraci\u00f3n del proyecto\r\n\r\nMuchas tareas de Grunt delegan la configuraci\u00f3n de los datos al objeto que se pasa como argumento en el m\u00e9todo `grunt.initConfig`.\r\n\r\nEn nuestro ejemplo, lo que hace `grunt.file.readJSON('package.json')` es importar los metadatos en formato `json` almacenados en el `package.json`[^4]. Como la plantilla `<% %>` puede referirse a cualquier propiedad de la configuraci\u00f3n, ah\u00ed es donde colocamos los datos que se leen del `package.json` y evitamos la repetici\u00f3n.\r\n\r\n> No me quedaba claro al principio, pero `pkg` es el contenido del archivo `package.json`  y `name` es el campo en dicho archivo, entonces `pkg.name` nos devuelve el contenido, que en este caso es `cmi`.\r\n\r\nPodemos almacenar cualquier dato de forma arbitraria dentro del objeto de configuraci\u00f3n, mientras que no entren en conflicto con las propiedades requeridas por las tareas, ya que en caso contrario, ser\u00edan ignoradas. As\u00ed mismo, como este archivo es JavaScript no se limita al formato JSON; por lo que podemos usar cualquier c\u00f3digo JS v\u00e1lido. Esto quiere decir que podr\u00edamos generar este archivo program\u00e1ticamente, si fuera necesario.\r\n\r\nComo muchas tareas, la tarea `uglify`[^5] del plugin `grunt-contrib-uglify` necesita que su configuraci\u00f3n est\u00e9 especificada en una propiedad con el mismo nombre. En nuestro ejemplo, tambi\u00e9n agregamos la opci\u00f3n `banner`, junto con un objetivo `build` que minifica el archivo indicado en `src` y lo colocan en la ruta indicada en `dest`.\r\n\r\n```javascript\r\n// Configuraci\u00f3n del proyecto.\r\ngrunt.initConfig({\r\n  pkg: grunt.file.readJSON('package.json'),\r\n  uglify: {\r\n    options: {\r\n      banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"dd/mmm/yyyy\") %> */\\n'\r\n    },\r\n    build: {\r\n      src: 'sources/<%= pkg.name %>.js',\r\n      dest: 'assets/<%= pkg.name %>.min.js'\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n> Recordemos que en este ejemplo el valor de `pkg.name` es `cmi`, por lo que el valor del campo `src`, una vez hecha la sustituci\u00f3n es `src: 'sources/cmi.js'` y la salida es `dest: 'assets/cmi.min.js'`. El banner queda de la siguiente manera: `/*! cmi 10/Oct/2015 */`.\r\n\r\n#### Cargar las tareas y los plugins\r\nMuchas tareas comunes, como la concatenaci\u00f3n, minificaci\u00f3n y limpieza[^6] est\u00e1n disponibles como plugins de grunt. Siempre y cuando un plugin est\u00e9 especificado en `package.json` como dependencia y haya sido instalado con `npm install`, un plugin de Grunt puede usarse simplemente escribiendo esto en el `Gruntfile`:\r\n\r\n```javascript\r\n// Carga el plugin que nos proporciona la tarea \"uglify\".\r\ngrunt.loadNpmTasks('grunt-contrib-uglify');\r\n```\r\n\r\n> Observa los dos requisitos anteriores: 1. Debe estar especificado en `package.json` y __debe haberse instalado__ con `npm install`. Cuando intentaba usar `grunt` sin estos requisitos, obten\u00eda este error:  \r\n>   \r\n    toledano@toledano src (tema) $ grunt \r\n    >> Local Npm module \"grunt-contrib-uglify\" not found. Is it installed?\r\n    Warning: Task \"uglify\" not found. Use --force to continue.  \r\n>        \r\n    Aborted due to warnings.\r\n> La soluci\u00f3n es instalar este plugin con `npm install grunt-contrib-uglify --save`.\r\n\r\n#### Tareas personalizadas\r\n\r\nSe puede configurar Grunt para que ejecute una o m\u00e1s tareas de forma autom\u00e1tica, definiendo una tarea `default`. En nuestro ejemplo, al ejecutar `grunt` en la l\u00ednea de comandos sin especificar ninguna tarea, se ejecutar\u00e1 la tarea `uglify`. Se puede especificar cualquier n\u00famero de tareas (con o sin argumentos) en un _array_.\r\n\r\n```javascript\r\n// La(s) tarea(s) por default.\r\ngrunt.registerTask('default', ['uglify']);\r\n```\r\n\r\nSi tu proyecto requiere tareas que no proporciona alg\u00fan plugin de Grunt, puedes definirlas dentro del `Gruntfile`. Por ejemplo, para definir una tarea `default` que no utiliza ninguna configuraci\u00f3n[^7]:\r\n\r\n```javascript\r\nmodule.exports = function(grunt) {\r\n\r\n  // Una tarea muy b\u00e1sica.\r\n  grunt.registerTask('default', 'Registrar algo.', function() {\r\n    grunt.log.write('Estoy registrando algo...').ok();\r\n  });\r\n\r\n};\r\n```\r\n\r\n### Resultados\r\n\r\nPara probar que nuestro ejemplo funciona, hemos instalado con `npm` los paquetes `grunt`, `grunt-contrib-jshint` y `grunt-contrib-uglify`, por lo que la secci\u00f3n `devDependencies` del archivo `packages.json` se ve ahora as\u00ed:\r\n\r\n```javascript\r\n  \"devDependencies\": {\r\n    \"grunt\": \"^0.4.5\",\r\n    \"grunt-contrib-jshint\": \"^0.11.3\",\r\n    \"grunt-contrib-uglify\": \"^0.9.2\"\r\n  }\r\n```\r\n\r\nTambi\u00e9n hice un peque\u00f1o archivo JavaScript, `sources/cmi.js` que imprime la fecha actual en la consola:\r\n\r\n```javascript\r\ntest = new Date()\r\nmonth = test.getMonth()\r\nmonth = (month * 1) + 1\r\nday = test.getDate()\r\nyear = test.getFullYear()\r\nconsole.log(\" \",month,\"/\",day,\"/\",year,\" \")\r\n```\r\n\r\nAl ejecutar `grunt` en el directorio, \r\n\r\n```bash\r\ntoledano@toledano src (tema) $ grunt\r\nRunning \"uglify:build\" (uglify) task\r\n>> 1 file created.\r\n\r\nDone, without errors.\r\n```\r\n\r\nObtenemos el archivo `assets/cmi.min.js`, que se ve as\u00ed:\r\n\r\n```javascript\r\n/*! cmi 10/Oct/2015 */\r\ntest=new Date,month=test.getMonth(),month=1*month+1,day=test.getDate(),year=test.getFullYear(),console.log(\" \",month,\"/\",day,\"/\",year,\" \");\r\n```\r\n\r\n## Conclusi\u00f3n\r\n\r\nEl uso de Grunt, facilita muchas tareas de desarrollo. Para el Cuadro de Mando Integral, el uso de Grunt ser\u00e1 toral, tanto para la generaci\u00f3n del tema, como la instalaci\u00f3n de los componentes en un contenedor de Docker. Pero eso ser\u00e1 tema de otro art\u00edculo.\r\n\r\nEn el pr\u00f3ximo, veremos como usar Grunt para generar el tema del Cuadro de Mando usando los colores institucionales, creando un archivo `less` con las opciones m\u00ednimas.\r\n\r\n[^1]: Yo no lo necesito, pero tu tal vez debas usar `sudo`.\r\n[^2]: Eso me recuerda _El Fin de la Eternidad_... Gestor de Tareas, tal vez sea mejor. Lo que hace Grunt CLI es realmente ejecutar la versi\u00f3n de Grunt que se haya instalado junto con su `Gruntfile`. Esto permite que existan en la misma m\u00e1quina m\u00fatiples versiones de Grunt simult\u00e1neamente.\r\n[^3]: Porque decir _haz commit_ no me parece correcto.\r\n[^4]: _Yeison_ dijo una vez un representante de cierto partido pol\u00edtico, cuando estabamos haciendo aquello de la distritaci\u00f3n.\r\n[^5]: _uglify_ es algo as\u00ed como _afear_ (porque _uglifycar_ es una aberraci\u00f3n), pero en este proceso se reduce el tama\u00f1o y se efectuan, supongo yo, ciertas optimizaciones.\r\n[^6]: _Concatenar_ es unir archivos, _minificar_ es eliminar espacios y comentarios innecesarios en el archivo de producci\u00f3n, _limpiar_ es asegurar que el archivo es correcto, o algo as\u00ed.\r\n[^7]: Dec\u00edamos que mientras fuera c\u00f3digo JavaScript v\u00e1lido, pod\u00edamos crear tareas generadas program\u00e1ticamente.", "extend": "", "pub_date": "2015-10-10T01:38:00Z", "summary_html": "", "body_html": "<p>Como inicio la completamente nueva versi\u00f3n 2.0 del Cuadro de Mando Integral, totalmente renovada y reescrita desde el origen, orientado a la norma ISO 9001:2015, aprovecho para utilizar por primera vez algunas tecnolog\u00edas que nunca hab\u00eda usado. Como <strong>Grunt</strong>.</p>\n<h3 id=\"que-es-grunt\">Qu\u00e9 es Grunt</h3>\n<p><strong>Grunt</strong> es un <em>administrador</em> de tareas. Y sirve para automatizar las tareas repetitivas que realizamos cuando estamos desarrollando para la web, como compilar, minificar, ejecutar bater\u00edas de pruebas, limpiar el c\u00f3digo, etc. Una vez que configuramos nuestro <code>Gruntfile</code>, el gestor de tareas har\u00e1 todo ese trabajo mundano pr\u00e1cticamente sin ning\u00fan esfuerzo de nuestra parte.</p>\n<h3 id=\"por-que-usar-grunt\">Por qu\u00e9 usar Grunt</h3>\n<p>El Ecosistema de <em>Grunt</em> es enorme y crece cada d\u00eda. Existen, literalmente, cientos de <em>plugins</em> que permiten que <em>Grunt</em> automatice cualquier tarea, con un m\u00ednimo de esfuerzo. Y dicen que si no existe, crearlo es muy f\u00e1cil. Ya lo veremos.</p>\n<h3 id=\"como-empezar-a-usar-grunt\">C\u00f3mo empezar a usar Grunt</h3>\n<p><strong>Grunt</strong> y sus plugins se instalan usando <code>npm</code>, el gestor de paquetes de <strong>Node.js</strong>. Las versiones de la rama 0.4.x de Grunt necesitan una versi\u00f3n de Node.js <code>&gt;= 0.8.0</code>. Las versiones nones se consideran inestables.</p>\n<blockquote>\n<p>Pues yo estoy instalando la versi\u00f3n 4.1.2, que es la estable el d\u00eda de hoy, creo. La instal\u00e9 usando el comando <code>nvm install -s v4.1</code>.  </p>\n<p>Es adem\u00e1s la versi\u00f3n por default, porque use esto:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src (tema) $ nvm alias default 4.1.2\ndefault -&gt; 4.1.2 (-&gt; v4.1.2)\n</pre></div>\n\n\n</blockquote>\n<p>Luego, debemos asegurarnos que tenemos la versi\u00f3n actualizada de <code>npm</code>, ejecutando <code>npm update -g npm</code><sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>. No estoy seguro que se haya actualizado, pero este es el resultado:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>tema<span class=\"o\">)</span> $ npm update -g npm\n/Users/toledano/.nvm/v4.1.2/bin/npm -&gt; /Users/toledano/.nvm/v4.1.2/lib/node_modules/npm/bin/npm-cli.js\nnpm@3.3.6 /Users/toledano/.nvm/v4.1.2/lib/node_modules/npm\n</pre></div>\n\n\n<blockquote>\n<p>Hubiera verificado la versi\u00f3n que estaba instalada, para compararla con la que se actualiz\u00f3, \u00bfverdad? </p>\n</blockquote>\n<h3 id=\"instalar-el-comando-grunt-cli\">Instalar el comando grunt-cli</h3>\n<p>Para poder usar Grunt, debemos instalar la interface de linea de comandos (CLI por sus siglas en ingl\u00e9s) de forma global. De nuevo, tal vez necesites usar <code>sudo</code> o ejecutar tu consola con permisos de administrador si usas Windows.</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>tema<span class=\"o\">)</span> $ npm install -g grunt-cli\n/Users/toledano/.nvm/v4.1.2/bin/grunt -&gt; /Users/toledano/.nvm/v4.1.2/lib/node_modules/grunt-cli/bin/grunt\n/Users/toledano/.nvm/v4.1.2/lib\n\u2514\u2500\u252c grunt-cli@0.1.13 \n  \u251c\u2500\u252c findup-sync@0.1.3 \n  \u2502 \u251c\u2500\u252c glob@3.2.11 \n  \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1 \n  \u2502 \u2502 \u2514\u2500\u252c minimatch@0.3.0 \n  \u2502 \u2502   \u251c\u2500\u2500 lru-cache@2.7.0 \n  \u2502 \u2502   \u2514\u2500\u2500 sigmund@1.0.1 \n  \u2502 \u2514\u2500\u2500 lodash@2.4.2 \n  \u251c\u2500\u252c nopt@1.0.10 \n  \u2502 \u2514\u2500\u2500 abbrev@1.0.7 \n  \u2514\u2500\u2500 resolve@0.3.1 \n</pre></div>\n\n\n<p>Con esto, vamos a tener el comando <code>grunt</code> en la ruta, lo que nos permitir\u00e1 ejecutarlo en cualquier directorio.</p>\n<p>Es importante hacer notar que cuando instalamos <code>grunt-cli</code> no instalamos el ejecutor<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> de tareas.</p>\n<h3 id=\"como-funciona\">C\u00f3mo funciona</h3>\n<p>Cada vez que se ejecuta <code>grunt</code>, este busca la versi\u00f3n de Grunt que est\u00e1 indicada en <code>require()</code>. Gracias a esto, puedes ejecutar <code>grunt</code> en cualquier subcarpeta de tu proyecto.</p>\n<p>Si hay una instalaci\u00f3n de Grunt local, la CLI carga esta versi\u00f3n de la librer\u00eda de Grunt, aplica la configuraci\u00f3n indicada en el <code>Gruntfile</code>, y ejecuta cualquier tarea solicitada.</p>\n<h3 id=\"preparar-un-nuevo-proyecto-con-grunt\">Preparar un nuevo proyecto con Grunt</h3>\n<p>Una configuraci\u00f3n involucra generalmente dos archivos: <code>package.json</code> y el <code>Gruntfile</code>.</p>\n<ul>\n<li><strong><code>package.json</code></strong>: Este archivo es usado por <code>npm</code> para almacenar metadatos del proyecto como son los m\u00f3dulos npm. Debemos enlistar <code>grunt</code> y sus plugins como <code>devDependencies</code> necesarias en este archivo.</li>\n<li><strong><code>Gruntfile</code></strong>: Este archivo se llama <code>Gruntfile.js</code> o <code>Gruntfile.coffee</code> y se usa para configurar las tareas y cargar los plugins de Grunt.  </li>\n</ul>\n<blockquote>\n<p>Cuando hablemos del <code>Gruntfile</code>, recuerda que puede ser <code>Grutnfile.js</code> o <code>Gruntfile.coffee</code>.</p>\n</blockquote>\n<h2 id=\"el-archivo-packagejson\">El archivo <code>package.json</code></h2>\n<p>El archivo <code>package.json</code> debe ubicarse en el directorio raiz de tu proyecto, junto al <code>Gruntfile</code> y debe incluirse en el c\u00f3digo fuente del proyecto. Al ejecutar <code>npm install</code> en el mismo directorio que un <code>package.json</code> instalar\u00e1 las versiones correctas de las dependencias listadas en \u00e9l.</p>\n<p>Hay varias formas de crear un <code>package.json</code> para un proyecto:</p>\n<ul>\n<li>Con <code>grunt-init</code> se pueden crear autom\u00e1ticamente <code>package.json</code> con plantillas preexistentes.</li>\n<li>El comando <code>npm-init</code> crea un archivo <code>package.json</code> b\u00e1sico.</li>\n<li>Puedes usar uno de los ejemplo siguiente y modif\u00edcalo de acuerdo a tus necesidades siguiendo las <a href=\"https://docs.npmjs.com/files/package.json\">especificaciones</a>.  </li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;cmi&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2.0.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;license&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MIT&quot;</span><span class=\"p\">,</span>\n\n  <span class=\"nt\">&quot;author&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Javier Sanchez Toledano&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;email&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;js.toledano@me.com&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://yo.toledano.org&quot;</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"nt\">&quot;repository&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;npm/npm&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;devDependencies&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<h2 id=\"como-instalar-grunt-y-los-gruntplugins\">C\u00f3mo instalar Grunt y los gruntplugins</h2>\n<p>La manera m\u00e1s f\u00e1cil de agregar GRunt y gruntplugins a un <code>package,json</code> existente es con el comando <code>npm install &lt;m\u00f3dulo&gt; --save-dev</code>. Esto no solo instala el <code>&lt;m\u00f3dulo&gt;</code> localmente, sino que tambi\u00e9n lo agregar\u00e1 autom\u00e1ticamente a la secci\u00f3n <code>devDependencies</code>.</p>\n<p>Por ejemplo, esto instalar\u00e1 la versi\u00f3n m\u00e1s reciente de Grunt en la carpeta de tu proyecto, y lo agregar\u00e1 a la secci\u00f3n <code>devDependencies</code>.</p>\n<div class=\"codehilite\"><pre><span></span>npm install grunt --save-dev\n</pre></div>\n\n\n<blockquote>\n<p>Pero antes debe existir el archivo package.json y debe tener la estructura b\u00e1sica indicada arriba, que no produce ning\u00fan error o advertencia y funciona correctamente.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">toledano</span><span class=\"p\">@</span><span class=\"n\">toledano</span> <span class=\"n\">cmi_core</span> <span class=\"p\">(</span><span class=\"n\">tema</span><span class=\"p\">)</span> <span class=\"err\">$</span> <span class=\"n\">npm</span> <span class=\"n\">install</span> <span class=\"n\">grunt</span> <span class=\"o\">--</span><span class=\"n\">save</span><span class=\"o\">-</span><span class=\"n\">dev</span>\n<span class=\"n\">cmi</span><span class=\"mf\">@2.0.0</span> <span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">toledano</span><span class=\"o\">/</span><span class=\"n\">proyectos</span><span class=\"o\">/</span><span class=\"n\">cmi_core</span>\n<span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">grunt</span><span class=\"mf\">@0.4.5</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">async</span><span class=\"mf\">@0.1.22</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">coffee</span><span class=\"o\">-</span><span class=\"n\">script</span><span class=\"mf\">@1.3.3</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">colors</span><span class=\"mf\">@0.6.2</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">dateformat</span><span class=\"mf\">@1.0.2</span><span class=\"o\">-</span><span class=\"mf\">1.2.3</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">eventemitter2</span><span class=\"mf\">@0.4.14</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">exit</span><span class=\"mf\">@0.1.2</span> \n  <span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">findup</span><span class=\"o\">-</span><span class=\"n\">sync</span><span class=\"mf\">@0.1.3</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">glob</span><span class=\"mf\">@3.2.11</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2502</span> <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">inherits</span><span class=\"mf\">@2.0.1</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">minimatch</span><span class=\"mf\">@0.3.0</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">lodash</span><span class=\"mf\">@2.4.2</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">getobject</span><span class=\"mf\">@0.1.0</span> \n  <span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">glob</span><span class=\"mf\">@3.1.21</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">graceful</span><span class=\"o\">-</span><span class=\"n\">fs</span><span class=\"mf\">@1.2.3</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">inherits</span><span class=\"mf\">@1.0.2</span> \n  <span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">grunt</span><span class=\"o\">-</span><span class=\"n\">legacy</span><span class=\"o\">-</span><span class=\"n\">log</span><span class=\"mf\">@0.1.2</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">grunt</span><span class=\"o\">-</span><span class=\"n\">legacy</span><span class=\"o\">-</span><span class=\"n\">log</span><span class=\"o\">-</span><span class=\"n\">utils</span><span class=\"mf\">@0.1.1</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2502</span> <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">lodash</span><span class=\"mf\">@2.4.2</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">underscore</span><span class=\"p\">.</span><span class=\"n\">string</span><span class=\"mf\">@2.3.3</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">lodash</span><span class=\"mf\">@2.4.2</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">underscore</span><span class=\"p\">.</span><span class=\"n\">string</span><span class=\"mf\">@2.3.3</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">grunt</span><span class=\"o\">-</span><span class=\"n\">legacy</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"mf\">@0.2.0</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">hooker</span><span class=\"mf\">@0.2.3</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">iconv</span><span class=\"o\">-</span><span class=\"n\">lite</span><span class=\"mf\">@0.2.11</span> \n  <span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">js</span><span class=\"o\">-</span><span class=\"n\">yaml</span><span class=\"mf\">@2.0.5</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">argparse</span><span class=\"mf\">@0.1.16</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2502</span> <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">underscore</span><span class=\"mf\">@1.7.0</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">underscore</span><span class=\"p\">.</span><span class=\"n\">string</span><span class=\"mf\">@2.4.0</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">esprima</span><span class=\"mf\">@1.0.4</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">lodash</span><span class=\"mf\">@0.9.2</span> \n  <span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">minimatch</span><span class=\"mf\">@0.2.14</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">lru</span><span class=\"o\">-</span><span class=\"n\">cache</span><span class=\"mf\">@2.7.0</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">sigmund</span><span class=\"mf\">@1.0.1</span> \n  <span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">nopt</span><span class=\"mf\">@1.0.10</span> \n  <span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">abbrev</span><span class=\"mf\">@1.0.7</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">rimraf</span><span class=\"mf\">@2.2.8</span> \n  <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">underscore</span><span class=\"p\">.</span><span class=\"n\">string</span><span class=\"mf\">@2.2.1</span> \n  <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">which</span><span class=\"mf\">@1.0.9</span>\n</pre></div>\n\n\n<p>Y se modifica la secci\u00f3n <code>devDependencies</code>, agregando la l\u00ednea correspondiente a Grunt.  </p>\n<div class=\"codehilite\"><pre><span></span>  &quot;devDependencies&quot;: {\n    &quot;grunt&quot;: &quot;^0.4.5&quot;\n  }\n</pre></div>\n\n\n</blockquote>\n<p>Lo mismo puede hacerse para los <em>gruntplugins</em> y otros m\u00f3dulos de node. En el siguiente ejemplo, vamos a instalar el m\u00f3dulo <code>JSHint</code>.</p>\n<div class=\"codehilite\"><pre><span></span>npm install grunt-contrib-jshint --save-dev\n</pre></div>\n\n\n<p>Hay un mont\u00f3n de <em>plugins</em> que puedes instalar y puedes consultarlos en la p\u00e1gina de <a href=\"http://gruntjs.com/plugins\">plugins de Grunt</a>.</p>\n<p>Recuerda guardar los cambios de tu archivo <code>package.json</code> en tu control de versiones<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup>. </p>\n<h2 id=\"el-archivo-gruntfile\">El archivo <code>Gruntfile</code></h2>\n<p>Un archivo <code>Gruntfile.js</code> o <code>Gruntfile.coffee</code> es un archivo de JavaScript o CoffeeScript v\u00e1lido que se encuentra en la ra\u00edz de tu proyecto, junto al archivo <code>package.json</code>, y debe adjuntarse a las fuentes de tu proyecto. </p>\n<p>Un archivo <code>Gruntfile</code> se compone de las siguientes partes:</p>\n<ul>\n<li>Una funci\u00f3n <code>wrapper</code>, que envuelve el contenido</li>\n<li>La configuraci\u00f3n del proyecto y de la tarea</li>\n<li>La carga de plugins y tareas de Grunt</li>\n<li>Tareas personalizadas</li>\n</ul>\n<h3 id=\"un-archivo-gruntfile-de-ejemplo\">Un archivo <code>Gruntfile</code> de ejemplo</h3>\n<p>En el siguiente archivo <code>Gruntfile</code>, los metadatos del proyecto se importan a la configuraci\u00f3n de Grunt desde el <code>package.json</code> del proyecto y la tarea <code>uglify</code> del plugin <code>grunt-contrib-uglify</code> se configura para <em>minificar</em> un archivo fuente y genera un comentario de forma din\u00e1mica usando los metadatos. Cuando se ejectuta <code>grunt</code> en la l\u00ednea de comandos, la tarea <code>uglify</code> ser\u00e1 la que se ejecute por default.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">grunt</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n  <span class=\"c1\">// Configuraci\u00f3n del proyecto.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">initConfig</span><span class=\"p\">({</span>\n    <span class=\"nx\">pkg</span><span class=\"o\">:</span> <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">file</span><span class=\"p\">.</span><span class=\"nx\">readJSON</span><span class=\"p\">(</span><span class=\"s1\">&#39;package.json&#39;</span><span class=\"p\">),</span>\n    <span class=\"nx\">uglify</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">banner</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;dd/mmm/yyyy&quot;) %&gt; */\\n&#39;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nx\">build</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">src</span><span class=\"o\">:</span> <span class=\"s1\">&#39;src/&lt;%= pkg.name %&gt;.js&#39;</span><span class=\"p\">,</span>\n        <span class=\"nx\">dest</span><span class=\"o\">:</span> <span class=\"s1\">&#39;build/&lt;%= pkg.name %&gt;.min.js&#39;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"c1\">// Carga el plugin que nos proporciona la tarea &quot;uglify&quot;.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-uglify&#39;</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// La(s) tarea(s) por default.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">registerTask</span><span class=\"p\">(</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;uglify&#39;</span><span class=\"p\">]);</span>\n\n<span class=\"p\">};</span>\n</pre></div>\n\n\n<p>Ahora que ya tenemos el archivo <code>Gruntfile</code> completo, vamos a analizar sus componentes.</p>\n<h4 id=\"la-funcion-wrapper\">La funci\u00f3n <em>wrapper</em></h4>\n<p>Cada archivo <code>Gruntfile</code> (y cada gruntplugin) usa este formato b\u00e1sico. Todo el c\u00f3digo Grunt debe colocarse dentro de esta funci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">grunt</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// Aqu\u00ed van las cosas que queremos que haga Grunt</span>\n<span class=\"p\">};</span>\n</pre></div>\n\n\n<h4 id=\"configuracion-del-proyecto\">Configuraci\u00f3n del proyecto</h4>\n<p>Muchas tareas de Grunt delegan la configuraci\u00f3n de los datos al objeto que se pasa como argumento en el m\u00e9todo <code>grunt.initConfig</code>.</p>\n<p>En nuestro ejemplo, lo que hace <code>grunt.file.readJSON('package.json')</code> es importar los metadatos en formato <code>json</code> almacenados en el <code>package.json</code><sup id=\"fnref-4\"><a class=\"footnote-ref\" href=\"#fn-4\">4</a></sup>. Como la plantilla <code>&lt;% %&gt;</code> puede referirse a cualquier propiedad de la configuraci\u00f3n, ah\u00ed es donde colocamos los datos que se leen del <code>package.json</code> y evitamos la repetici\u00f3n.</p>\n<blockquote>\n<p>No me quedaba claro al principio, pero <code>pkg</code> es el contenido del archivo <code>package.json</code>  y <code>name</code> es el campo en dicho archivo, entonces <code>pkg.name</code> nos devuelve el contenido, que en este caso es <code>cmi</code>.</p>\n</blockquote>\n<p>Podemos almacenar cualquier dato de forma arbitraria dentro del objeto de configuraci\u00f3n, mientras que no entren en conflicto con las propiedades requeridas por las tareas, ya que en caso contrario, ser\u00edan ignoradas. As\u00ed mismo, como este archivo es JavaScript no se limita al formato JSON; por lo que podemos usar cualquier c\u00f3digo JS v\u00e1lido. Esto quiere decir que podr\u00edamos generar este archivo program\u00e1ticamente, si fuera necesario.</p>\n<p>Como muchas tareas, la tarea <code>uglify</code><sup id=\"fnref-5\"><a class=\"footnote-ref\" href=\"#fn-5\">5</a></sup> del plugin <code>grunt-contrib-uglify</code> necesita que su configuraci\u00f3n est\u00e9 especificada en una propiedad con el mismo nombre. En nuestro ejemplo, tambi\u00e9n agregamos la opci\u00f3n <code>banner</code>, junto con un objetivo <code>build</code> que minifica el archivo indicado en <code>src</code> y lo colocan en la ruta indicada en <code>dest</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// Configuraci\u00f3n del proyecto.</span>\n<span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">initConfig</span><span class=\"p\">({</span>\n  <span class=\"nx\">pkg</span><span class=\"o\">:</span> <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">file</span><span class=\"p\">.</span><span class=\"nx\">readJSON</span><span class=\"p\">(</span><span class=\"s1\">&#39;package.json&#39;</span><span class=\"p\">),</span>\n  <span class=\"nx\">uglify</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">banner</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;dd/mmm/yyyy&quot;) %&gt; */\\n&#39;</span>\n    <span class=\"p\">},</span>\n    <span class=\"nx\">build</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">src</span><span class=\"o\">:</span> <span class=\"s1\">&#39;sources/&lt;%= pkg.name %&gt;.js&#39;</span><span class=\"p\">,</span>\n      <span class=\"nx\">dest</span><span class=\"o\">:</span> <span class=\"s1\">&#39;assets/&lt;%= pkg.name %&gt;.min.js&#39;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">});</span>\n</pre></div>\n\n\n<blockquote>\n<p>Recordemos que en este ejemplo el valor de <code>pkg.name</code> es <code>cmi</code>, por lo que el valor del campo <code>src</code>, una vez hecha la sustituci\u00f3n es <code>src: 'sources/cmi.js'</code> y la salida es <code>dest: 'assets/cmi.min.js'</code>. El banner queda de la siguiente manera: <code>/*! cmi 10/Oct/2015 */</code>.</p>\n</blockquote>\n<h4 id=\"cargar-las-tareas-y-los-plugins\">Cargar las tareas y los plugins</h4>\n<p>Muchas tareas comunes, como la concatenaci\u00f3n, minificaci\u00f3n y limpieza<sup id=\"fnref-6\"><a class=\"footnote-ref\" href=\"#fn-6\">6</a></sup> est\u00e1n disponibles como plugins de grunt. Siempre y cuando un plugin est\u00e9 especificado en <code>package.json</code> como dependencia y haya sido instalado con <code>npm install</code>, un plugin de Grunt puede usarse simplemente escribiendo esto en el <code>Gruntfile</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// Carga el plugin que nos proporciona la tarea &quot;uglify&quot;.</span>\n<span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-uglify&#39;</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<blockquote>\n<p>Observa los dos requisitos anteriores: 1. Debe estar especificado en <code>package.json</code> y <strong>debe haberse instalado</strong> con <code>npm install</code>. Cuando intentaba usar <code>grunt</code> sin estos requisitos, obten\u00eda este error:  </p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src (tema) $ grunt \n&gt;&gt; Local Npm module &quot;grunt-contrib-uglify&quot; not found. Is it installed?\nWarning: Task &quot;uglify&quot; not found. Use --force to continue.\n\nAborted due to warnings.\n</pre></div>\n\n\n<p>La soluci\u00f3n es instalar este plugin con <code>npm install grunt-contrib-uglify --save</code>.</p>\n</blockquote>\n<h4 id=\"tareas-personalizadas\">Tareas personalizadas</h4>\n<p>Se puede configurar Grunt para que ejecute una o m\u00e1s tareas de forma autom\u00e1tica, definiendo una tarea <code>default</code>. En nuestro ejemplo, al ejecutar <code>grunt</code> en la l\u00ednea de comandos sin especificar ninguna tarea, se ejecutar\u00e1 la tarea <code>uglify</code>. Se puede especificar cualquier n\u00famero de tareas (con o sin argumentos) en un <em>array</em>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// La(s) tarea(s) por default.</span>\n<span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">registerTask</span><span class=\"p\">(</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;uglify&#39;</span><span class=\"p\">]);</span>\n</pre></div>\n\n\n<p>Si tu proyecto requiere tareas que no proporciona alg\u00fan plugin de Grunt, puedes definirlas dentro del <code>Gruntfile</code>. Por ejemplo, para definir una tarea <code>default</code> que no utiliza ninguna configuraci\u00f3n<sup id=\"fnref-7\"><a class=\"footnote-ref\" href=\"#fn-7\">7</a></sup>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">grunt</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n  <span class=\"c1\">// Una tarea muy b\u00e1sica.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">registerTask</span><span class=\"p\">(</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Registrar algo.&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">.</span><span class=\"nx\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;Estoy registrando algo...&#39;</span><span class=\"p\">).</span><span class=\"nx\">ok</span><span class=\"p\">();</span>\n  <span class=\"p\">});</span>\n\n<span class=\"p\">};</span>\n</pre></div>\n\n\n<h3 id=\"resultados\">Resultados</h3>\n<p>Para probar que nuestro ejemplo funciona, hemos instalado con <code>npm</code> los paquetes <code>grunt</code>, <code>grunt-contrib-jshint</code> y <code>grunt-contrib-uglify</code>, por lo que la secci\u00f3n <code>devDependencies</code> del archivo <code>packages.json</code> se ve ahora as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"s2\">&quot;devDependencies&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;grunt&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;^0.4.5&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;grunt-contrib-jshint&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;^0.11.3&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;grunt-contrib-uglify&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;^0.9.2&quot;</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Tambi\u00e9n hice un peque\u00f1o archivo JavaScript, <code>sources/cmi.js</code> que imprime la fecha actual en la consola:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">test</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">()</span>\n<span class=\"nx\">month</span> <span class=\"o\">=</span> <span class=\"nx\">test</span><span class=\"p\">.</span><span class=\"nx\">getMonth</span><span class=\"p\">()</span>\n<span class=\"nx\">month</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">month</span> <span class=\"o\">*</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n<span class=\"nx\">day</span> <span class=\"o\">=</span> <span class=\"nx\">test</span><span class=\"p\">.</span><span class=\"nx\">getDate</span><span class=\"p\">()</span>\n<span class=\"nx\">year</span> <span class=\"o\">=</span> <span class=\"nx\">test</span><span class=\"p\">.</span><span class=\"nx\">getFullYear</span><span class=\"p\">()</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">,</span><span class=\"nx\">month</span><span class=\"p\">,</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">,</span><span class=\"nx\">day</span><span class=\"p\">,</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">,</span><span class=\"nx\">year</span><span class=\"p\">,</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Al ejecutar <code>grunt</code> en el directorio, </p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>tema<span class=\"o\">)</span> $ grunt\nRunning <span class=\"s2\">&quot;uglify:build&quot;</span> <span class=\"o\">(</span>uglify<span class=\"o\">)</span> task\n&gt;&gt; <span class=\"m\">1</span> file created.\n\nDone, without errors.\n</pre></div>\n\n\n<p>Obtenemos el archivo <code>assets/cmi.min.js</code>, que se ve as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/*! cmi 10/Oct/2015 */</span>\n<span class=\"nx\">test</span><span class=\"o\">=</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">,</span><span class=\"nx\">month</span><span class=\"o\">=</span><span class=\"nx\">test</span><span class=\"p\">.</span><span class=\"nx\">getMonth</span><span class=\"p\">(),</span><span class=\"nx\">month</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"nx\">month</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"nx\">day</span><span class=\"o\">=</span><span class=\"nx\">test</span><span class=\"p\">.</span><span class=\"nx\">getDate</span><span class=\"p\">(),</span><span class=\"nx\">year</span><span class=\"o\">=</span><span class=\"nx\">test</span><span class=\"p\">.</span><span class=\"nx\">getFullYear</span><span class=\"p\">(),</span><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">,</span><span class=\"nx\">month</span><span class=\"p\">,</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">,</span><span class=\"nx\">day</span><span class=\"p\">,</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">,</span><span class=\"nx\">year</span><span class=\"p\">,</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<h2 id=\"conclusion\">Conclusi\u00f3n</h2>\n<p>El uso de Grunt, facilita muchas tareas de desarrollo. Para el Cuadro de Mando Integral, el uso de Grunt ser\u00e1 toral, tanto para la generaci\u00f3n del tema, como la instalaci\u00f3n de los componentes en un contenedor de Docker. Pero eso ser\u00e1 tema de otro art\u00edculo.</p>\n<p>En el pr\u00f3ximo, veremos como usar Grunt para generar el tema del Cuadro de Mando usando los colores institucionales, creando un archivo <code>less</code> con las opciones m\u00ednimas.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Yo no lo necesito, pero tu tal vez debas usar <code>sudo</code>.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Eso me recuerda <em>El Fin de la Eternidad</em>&hellip; Gestor de Tareas, tal vez sea mejor. Lo que hace Grunt CLI es realmente ejecutar la versi\u00f3n de Grunt que se haya instalado junto con su <code>Gruntfile</code>. Esto permite que existan en la misma m\u00e1quina m\u00fatiples versiones de Grunt simult\u00e1neamente.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>Porque decir <em>haz commit</em> no me parece correcto.&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-4\">\n<p><em>Yeison</em> dijo una vez un representante de cierto partido pol\u00edtico, cuando estabamos haciendo aquello de la distritaci\u00f3n.&#160;<a class=\"footnote-backref\" href=\"#fnref-4\" title=\"Jump back to footnote 4 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-5\">\n<p><em>uglify</em> es algo as\u00ed como <em>afear</em> (porque <em>uglifycar</em> es una aberraci\u00f3n), pero en este proceso se reduce el tama\u00f1o y se efectuan, supongo yo, ciertas optimizaciones.&#160;<a class=\"footnote-backref\" href=\"#fnref-5\" title=\"Jump back to footnote 5 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-6\">\n<p><em>Concatenar</em> es unir archivos, <em>minificar</em> es eliminar espacios y comentarios innecesarios en el archivo de producci\u00f3n, <em>limpiar</em> es asegurar que el archivo es correcto, o algo as\u00ed.&#160;<a class=\"footnote-backref\" href=\"#fnref-6\" title=\"Jump back to footnote 6 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-7\">\n<p>Dec\u00edamos que mientras fuera c\u00f3digo JavaScript v\u00e1lido, pod\u00edamos crear tareas generadas program\u00e1ticamente.&#160;<a class=\"footnote-backref\" href=\"#fnref-7\" title=\"Jump back to footnote 7 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-usar-grunt", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 70, "fields": {"idx": "15a1f227-5637-46be-bd90-1ddd380b30be", "creado": "2017-07-29T04:22:30.588Z", "modificado": "2017-07-29T04:22:30.588Z", "title": "Anatom\u00eda de un Gruntfile, parte 2", "summary": "", "body": "Title: Anatom\u00eda de un Gruntfile, parte 2    \r\nDate: 2015-10-10 6:25:54 p.m.\r\nCategory: desarrollo\r\nTags:  javascript, tools, frontend \r\nCover: http://media.toledano.org/images/2015/gruntjs1.jpg\r\n\r\nEsta es la continuaci\u00f3n de [Anatom\u00eda de un Gruntfile](https://yo.toledano.org/anatomia-de-un-gruntfile/) y es el tercero de una serie en la que narro mis experiencias desarrollando un [cuadro de mando integral](https://es.wikipedia.org/wiki/Cuadro_de_mando_integral) adaptado a la norma ISO 9001:2015.\r\n\r\n## Bootsrap\r\n\r\nHablaba en el [art\u00edculo anterior](https://yo.toledano.org/anatomia-de-un-gruntfile/) que estoy decidido a usar [**Bootstrap de Twitter**](https://getbootstrap.com) porque me parece que tiene un mejor soporte por parte de su comunidad y porque soy m\u00e1s productivo.\r\n\r\nLa idea es crear un archivo `.less` que contenga las modificaciones del tema y usar [**Grunt**](http://gruntjs.com/) para construir el tema usando el gestor de tareas y uno de los plugins especializados en Bootstrap.\r\n\r\nDe las opciones existentes, seleccion\u00e9 [**grunt-twbs**](https://www.npmjs.com/package/grunt-twbs) porque me parece el m\u00e1s simple y porque fue actualizado a mediados del mes pasado, mientras que otros no se han actualizado en a\u00f1os.\r\n\r\n## La tarea `twbs`\r\n\r\nYa tengo un `Gruntfile` funcionando, con algunas tareas b\u00e1sicas: concatenar, minimizar, analizar, verificar y monitorear. Ahora voy a instalar el _gruntplugin_ `grunt-twbs` y me voy a asegurar que funcione.\r\n\r\nEste plugin permite crear un tema sin alterar el c\u00f3digo fuente de Bootstrap, lo que permite asegurar, por ejemplo, que la actualizaci\u00f3n no tendr\u00e1 problemas, porque las personalizaciones est\u00e1n aisladas de este _framework_.\r\n\r\n### Bower\r\n\r\nPara empezar, necesitamos instalar [__Bower__](http://bower.io), que es un gestor de paquetes especializado en _frontend_, creado por los propios autores de Bootstrap.\r\n\r\nDebemos instalarlo de forma globlal usando `npm install -g bower`. Recuerda que tal vez necesites permisos de administrador para ejecutar este comando.\r\n\r\n```\r\ntoledano@toledano src (feature/bower) $ npm install -g bower\r\n/Users/toledano/.nvm/v4.1.2/bin/bower -> /Users/toledano/.nvm/v4.1.2/lib/node_modules/bower/bin/bower\r\n/Users/toledano/.nvm/v4.1.2/lib\r\n... \r\nun enorme \u00e1rbol de dependencias\r\n...\r\n```\r\n\r\nSu funcionamiento es muy similar al de `npm`, de hecho, vamos a crear un archivo `bower.json` que asegure que se instalan todas las dependencias necesarias para nuestro cuadro de mando, con el comando interactivo `init`, que nos hace una serie de preguntas y genera el archivo de forma autom\u00e1tica:\r\n\r\n```\r\ntoledano@toledano src (feature/bower) $ bower init\r\n? name: cmi\r\n? version: 2.0.0\r\n? description: N\u00facleo del Cuadro de Mando Integral 2.0\r\n? main file: \r\n? what types of modules does this package expose? globals\r\n? keywords: django, angularjs, postgresql, npm, bootstrap\r\n? authors: Javier Sanchez Toledano <js.toledano@me.com>\r\n? license: MIT\r\n? homepage: https://github.com/SGC-Tlaxcala/cmi_core\r\n? set currently installed components as dependencies? Yes\r\n? add commonly ignored files to ignore list? Yes\r\n? would you like to mark this package as private which prevents it from being accidentally published to the registry? No/N)\r\n```\r\n\r\nDespu\u00e9s nos muestra la propuesta y al confirmarla tenemos el archivo generado:\r\n\r\n```js\r\n{\r\n  \"name\": \"cmi\",\r\n  \"version\": \"2.0.0\",\r\n  \"homepage\": \"https://github.com/SGC-Tlaxcala/cmi_core\",\r\n  \"authors\": [\r\n    \"Javier Sanchez Toledano <js.toledano@me.com>\"\r\n  ],\r\n  \"description\": \"N\u00facleo del Cuadro de Mando Integral 2.0\",\r\n  \"main\": \"\",\r\n  \"moduleType\": [\r\n    \"globals\"\r\n  ],\r\n  \"keywords\": [\r\n    \"django\",\r\n    \"angularjs\",\r\n    \"postgresql\",\r\n    \"npm\",\r\n    \"bootstrap\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"ignore\": [\r\n    \"**/.*\",\r\n    \"node_modules\",\r\n    \"bower_components\",\r\n    \"test\",\r\n    \"tests\"\r\n  ]\r\n}\r\n```\r\n\r\n### Bootstrap\r\n\r\n[__Bootstrap__](https://getbootstrap.com) es un framework de JS, CSS y HTML muy popular. Tal vez el m\u00e1s popular. Fue creado por Twitter y facilita enormemente el desarrollo de aplicaciones web al incorporar funcionalidades responsivas, con prioridad en dispositivos m\u00f3viles.\r\n\r\nPara instalarlo, solo debemos ejecutar `bower install bootstrap --save-dev`. Como ya sabemos, la marca `--save-dev` guarda este paquete en `bower.json` para que quede fijo como dependencia.\r\n\r\n```\r\ntoledano@toledano src (feature/bower) $ bower install bootstrap --save-dev\r\nbower cached        git://github.com/twbs/bootstrap.git#3.3.5\r\nbower validate      3.3.5 against git://github.com/twbs/bootstrap.git#*\r\nbower cached        git://github.com/jquery/jquery.git#2.1.4\r\nbower validate      2.1.4 against git://github.com/jquery/jquery.git#>= 1.9.1\r\nbower install       bootstrap#3.3.5\r\nbower install       jquery#2.1.4\r\n\r\nbootstrap#3.3.5 bower_components/bootstrap\r\n\u2514\u2500\u2500 jquery#2.1.4\r\n\r\njquery#2.1.4 bower_components/jquery\r\n```\r\n\r\nEste paquete se instala en el directorio `bower_components`, junto con jQuery, el framework de JS, necesario para Bootstrap. En ambos casos, se instala el c\u00f3digo fuente y en nuestro proyecto solo debemos incluir las dependencias y las instrucciones para reconstruirlos, lo que significa un importante ahorro de recursos.\r\n\r\n### El plugin grunt-twbs\r\n\r\nPara instalar este _gruntplugin_ hacemos lo mismo que hicimos con los otros. Instalamos el paquete con `npm install grunt-twbs --save-dev` y lo agregamos a la secci\u00f3n de _plugins_ del `Gruntfile` usando `grunt.loadNpmTasks('grunt-contrib-twbs');`.\r\n\r\n```\r\ntoledano@toledano bower_components (feature/bower) $ npm install grunt-twbs --save-dev\r\ncmi@2.0.0 /Users/toledano/proyectos/cmi_core/src\r\n\u251c\u2500\u252c grunt-contrib-uglify@0.9.2\r\n\u2502 \u2514\u2500\u252c maxmin@1.1.0\r\n\u2502   \u2514\u2500\u252c pretty-bytes@1.0.4\r\n\u2502     \u2514\u2500\u252c meow@3.4.2\r\n\u2502       \u2514\u2500\u252c read-pkg-up@1.0.1\r\n\u2502         \u2514\u2500\u252c read-pkg@1.1.0\r\n\u2502           \u251c\u2500\u252c load-json-file@1.0.1\r\n\u2502           \u2502 \u2514\u2500\u2500 graceful-fs@4.1.2 \r\n\u2502           \u2514\u2500\u252c path-type@1.0.0\r\n\u2502             \u2514\u2500\u2500 graceful-fs@4.1.2 \r\n\u251c\u2500\u252c grunt-lib-phantomjs@0.7.1\r\n\u2502 \u2514\u2500\u252c phantomjs@1.9.18\r\n\u2502   \u2514\u2500\u252c fs-extra@0.23.1\r\n\u2502     \u2514\u2500\u2500 graceful-fs@4.1.2 \r\n\u2514\u2500\u252c grunt-twbs@0.0.5 \r\n  \u2514\u2500\u252c fs-extra@0.24.0 \r\n    \u2514\u2500\u2500 graceful-fs@4.1.2 \r\n```\r\n\r\n### Opciones\r\n\r\nHay varias opciones documentadas en el [c\u00f3digo fuente](https://github.com/misterdai/grunt-twbs), pero nos vamos a enfocar en dos:\r\n\r\n- `less` - que indica la ruta del archivo `.less` que contiene nuestras opciones personales, y\r\n- `dest` -  que indica la ruta de destino. \r\n\r\nAgregamos la tarea a nuestro `Gruntfile` que se ve as\u00ed:\r\n\r\n```js\r\n    // :task: twbs\r\n    // :package: grunt-twbs\r\n    twbs: {\r\n        target:{\r\n            options: {\r\n                less: './sources/less/',\r\n                dest: 'assets/css/<%= pkg.name %>.min.css'\r\n            }\r\n        }\r\n      }\r\n```\r\n\r\n\r\nLo que hace esta tarea es que toma los archivos `.less` en en directorio especificado en `target.options.less` y los copia en la ubicaci\u00f3n de Bootstrap, que por defecto es `bower_components/bootstrap`, aunque podemos especificar otra ruta en la clave `target.options.bootstrap`.\r\n\r\n```bash\r\ntoledano@toledano src (feature/bower) $ grunt twbs\r\nRunning \"twbs:target\" (twbs) task\r\nRunning Bootstrap CSS task (dist)\r\nBootstrap (dist) built\r\n\r\nDone, without errors.\r\n```\r\n\r\nYa que los copi\u00f3, o sea, que reemplaz\u00f3 los originales, con los personalizados, genera el archivo `.css` de Bootstrap, con el comando `grunt dist-css` del `Gruntfile` de Bootstrap, de nuevo, hay varias [tareas disponibles](http://getbootstrap.com/getting-started/#grunt), y podemos especificarlas en la clave `target.options.cmd`. \r\n\r\n> Es importante tener en cuenta que este _gruntplugin_ solo maneja los archivos `.less` y solo genera un `.min.css`, __pero no hace nada con los JavaScript__. Habr\u00eda que crear una tarea que copie estos archivos a mi directorio de est\u00e1ticos.\r\n\r\n## El Archivo `Gruntfile`\r\n\r\nAs\u00ed va el archivo `Gruntfile`hasta el momento:\r\n\r\n```js\r\nmodule.exports = function(grunt) {\r\n\r\n  // Configuraci\u00f3n del proyecto.\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON('package.json'),\r\n\r\n    // :task: concat\r\n    // :package: grunt-contrib-concat\r\n    concat: {\r\n      options: {\r\n        // define una cadena de texto que se coloca entre cada archivo unido\r\n        separator: ' '\r\n      },\r\n      dist: {\r\n        // los archivos a unir\r\n        src: ['sources/js/*.js'],\r\n        // la ubicacion de la salida concatenada\r\n        dest: 'sources/tmp/js/<%= pkg.name %>.js'\r\n      }\r\n    },\r\n\r\n    // :task: uglify\r\n    // :package: grunt-contrib-uglify\r\n    uglify: {\r\n      options: {\r\n        banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"dd/mmm/yyyy\") %> */\\n'\r\n      },\r\n      build: {\r\n        files: {\r\n          'assets/js/<%= pkg.name %>.min.js': ['<%= concat.dist.dest %>']\r\n        }\r\n      }\r\n    },\r\n\r\n    // :task: qunit\r\n    // :package: grunt-contrib-qunit\r\n    qunit: {\r\n        files: ['sources/test/**/*.html']\r\n    },\r\n\r\n    // :task: jshint\r\n    // :package: grunt-contrib-jshint\r\n    jshint: {\r\n      // se define que archivos se van a limpiar\r\n      files: ['gruntfile.js', 'sources/**/*.js'],\r\n      // se configura JSHint (tal como se indica en http://www.jshint.com/docs/)\r\n      options: {\r\n          // aqui van las opciones, si los valores por\r\n          // omisi\u00f3n no son suficientes\r\n        globals: {\r\n          jQuery: true,\r\n          console: true,\r\n          module: true\r\n        }\r\n      }\r\n    },\r\n\r\n    // :task: watch\r\n    // :package: grunt-contrib-watch\r\n    watch: {\r\n        files: ['<%= jshint.files %>'],\r\n        tasks: ['jshint', 'qunit']\r\n    },\r\n\r\n    // :task: twbs\r\n    // :package: grunt-twbs\r\n    twbs: {\r\n        target:{\r\n            options: {\r\n                less: './sources/less/',\r\n                dest: 'assets/css/<%= pkg.name %>.min.css',\r\n                cmd: 'dist'\r\n            }\r\n        }\r\n      }\r\n\r\n  });\r\n\r\n  // Carga los plugins que nos proporcionan las tareas.\r\n  grunt.loadNpmTasks('grunt-contrib-concat');\r\n  grunt.loadNpmTasks('grunt-contrib-uglify');\r\n  grunt.loadNpmTasks('grunt-contrib-qunit');\r\n  grunt.loadNpmTasks('grunt-contrib-jshint');\r\n  grunt.loadNpmTasks('grunt-contrib-watch');\r\n  grunt.loadNpmTasks('grunt-twbs');\r\n\r\n  // La(s) tarea(s) por default.\r\n  grunt.registerTask('default', ['concat', 'uglify', 'jshint', 'qunit']);\r\n\r\n};\r\n```\r\n\r\n## Conclusi\u00f3n\r\n\r\nSiguiendo este esquema de desarrollo, aseguramos la consistencia del tema, en cualquier ambiente de desarrollo y solo tenemos que controlar un m\u00ednimo de archivos `.less`. En mi caso copi\u00e9 dos, `bootstrap.less` y `variables.less` aunque solo modifiqu\u00e9 este \u00faltimo archivo.\r\n\r\nEn el pr\u00f3ximo archivo, vamos a crear una tarea completamente nueve que colecte los dem\u00e1s archivos est\u00e1ticos de Bootstrap o cualquier otro indicado y los copie en el directorio correcto.", "extend": "", "pub_date": "2015-10-10T23:25:54Z", "summary_html": "", "body_html": "<p>Esta es la continuaci\u00f3n de <a href=\"https://yo.toledano.org/anatomia-de-un-gruntfile/\">Anatom\u00eda de un Gruntfile</a> y es el tercero de una serie en la que narro mis experiencias desarrollando un <a href=\"https://es.wikipedia.org/wiki/Cuadro_de_mando_integral\">cuadro de mando integral</a> adaptado a la norma ISO 9001:2015.</p>\n<h2 id=\"bootsrap\">Bootsrap</h2>\n<p>Hablaba en el <a href=\"https://yo.toledano.org/anatomia-de-un-gruntfile/\">art\u00edculo anterior</a> que estoy decidido a usar <a href=\"https://getbootstrap.com\"><strong>Bootstrap de Twitter</strong></a> porque me parece que tiene un mejor soporte por parte de su comunidad y porque soy m\u00e1s productivo.</p>\n<p>La idea es crear un archivo <code>.less</code> que contenga las modificaciones del tema y usar <a href=\"http://gruntjs.com/\"><strong>Grunt</strong></a> para construir el tema usando el gestor de tareas y uno de los plugins especializados en Bootstrap.</p>\n<p>De las opciones existentes, seleccion\u00e9 <a href=\"https://www.npmjs.com/package/grunt-twbs\"><strong>grunt-twbs</strong></a> porque me parece el m\u00e1s simple y porque fue actualizado a mediados del mes pasado, mientras que otros no se han actualizado en a\u00f1os.</p>\n<h2 id=\"la-tarea-twbs\">La tarea <code>twbs</code></h2>\n<p>Ya tengo un <code>Gruntfile</code> funcionando, con algunas tareas b\u00e1sicas: concatenar, minimizar, analizar, verificar y monitorear. Ahora voy a instalar el <em>gruntplugin</em> <code>grunt-twbs</code> y me voy a asegurar que funcione.</p>\n<p>Este plugin permite crear un tema sin alterar el c\u00f3digo fuente de Bootstrap, lo que permite asegurar, por ejemplo, que la actualizaci\u00f3n no tendr\u00e1 problemas, porque las personalizaciones est\u00e1n aisladas de este <em>framework</em>.</p>\n<h3 id=\"bower\">Bower</h3>\n<p>Para empezar, necesitamos instalar <a href=\"http://bower.io\"><strong>Bower</strong></a>, que es un gestor de paquetes especializado en <em>frontend</em>, creado por los propios autores de Bootstrap.</p>\n<p>Debemos instalarlo de forma globlal usando <code>npm install -g bower</code>. Recuerda que tal vez necesites permisos de administrador para ejecutar este comando.</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src (feature/bower) $ npm install -g bower\n/Users/toledano/.nvm/v4.1.2/bin/bower -&gt; /Users/toledano/.nvm/v4.1.2/lib/node_modules/bower/bin/bower\n/Users/toledano/.nvm/v4.1.2/lib\n... \nun enorme \u00e1rbol de dependencias\n...\n</pre></div>\n\n\n<p>Su funcionamiento es muy similar al de <code>npm</code>, de hecho, vamos a crear un archivo <code>bower.json</code> que asegure que se instalan todas las dependencias necesarias para nuestro cuadro de mando, con el comando interactivo <code>init</code>, que nos hace una serie de preguntas y genera el archivo de forma autom\u00e1tica:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src (feature/bower) $ bower init\n? name: cmi\n? version: 2.0.0\n? description: N\u00facleo del Cuadro de Mando Integral 2.0\n? main file: \n? what types of modules does this package expose? globals\n? keywords: django, angularjs, postgresql, npm, bootstrap\n? authors: Javier Sanchez Toledano &lt;js.toledano@me.com&gt;\n? license: MIT\n? homepage: https://github.com/SGC-Tlaxcala/cmi_core\n? set currently installed components as dependencies? Yes\n? add commonly ignored files to ignore list? Yes\n? would you like to mark this package as private which prevents it from being accidentally published to the registry? No/N)\n</pre></div>\n\n\n<p>Despu\u00e9s nos muestra la propuesta y al confirmarla tenemos el archivo generado:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"s2\">&quot;name&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;cmi&quot;</span><span class=\"p\">,</span>\n  <span class=\"s2\">&quot;version&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;2.0.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"s2\">&quot;homepage&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;https://github.com/SGC-Tlaxcala/cmi_core&quot;</span><span class=\"p\">,</span>\n  <span class=\"s2\">&quot;authors&quot;</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;Javier Sanchez Toledano &lt;js.toledano@me.com&gt;&quot;</span>\n  <span class=\"p\">],</span>\n  <span class=\"s2\">&quot;description&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;N\u00facleo del Cuadro de Mando Integral 2.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"s2\">&quot;main&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n  <span class=\"s2\">&quot;moduleType&quot;</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;globals&quot;</span>\n  <span class=\"p\">],</span>\n  <span class=\"s2\">&quot;keywords&quot;</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;django&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;angularjs&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;postgresql&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;npm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;bootstrap&quot;</span>\n  <span class=\"p\">],</span>\n  <span class=\"s2\">&quot;license&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;MIT&quot;</span><span class=\"p\">,</span>\n  <span class=\"s2\">&quot;ignore&quot;</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;**/.*&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;node_modules&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;bower_components&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;test&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;tests&quot;</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<h3 id=\"bootstrap\">Bootstrap</h3>\n<p><a href=\"https://getbootstrap.com\"><strong>Bootstrap</strong></a> es un framework de JS, CSS y HTML muy popular. Tal vez el m\u00e1s popular. Fue creado por Twitter y facilita enormemente el desarrollo de aplicaciones web al incorporar funcionalidades responsivas, con prioridad en dispositivos m\u00f3viles.</p>\n<p>Para instalarlo, solo debemos ejecutar <code>bower install bootstrap --save-dev</code>. Como ya sabemos, la marca <code>--save-dev</code> guarda este paquete en <code>bower.json</code> para que quede fijo como dependencia.</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src (feature/bower) $ bower install bootstrap --save-dev\nbower cached        git://github.com/twbs/bootstrap.git#3.3.5\nbower validate      3.3.5 against git://github.com/twbs/bootstrap.git#*\nbower cached        git://github.com/jquery/jquery.git#2.1.4\nbower validate      2.1.4 against git://github.com/jquery/jquery.git#&gt;= 1.9.1\nbower install       bootstrap#3.3.5\nbower install       jquery#2.1.4\n\nbootstrap#3.3.5 bower_components/bootstrap\n\u2514\u2500\u2500 jquery#2.1.4\n\njquery#2.1.4 bower_components/jquery\n</pre></div>\n\n\n<p>Este paquete se instala en el directorio <code>bower_components</code>, junto con jQuery, el framework de JS, necesario para Bootstrap. En ambos casos, se instala el c\u00f3digo fuente y en nuestro proyecto solo debemos incluir las dependencias y las instrucciones para reconstruirlos, lo que significa un importante ahorro de recursos.</p>\n<h3 id=\"el-plugin-grunt-twbs\">El plugin grunt-twbs</h3>\n<p>Para instalar este <em>gruntplugin</em> hacemos lo mismo que hicimos con los otros. Instalamos el paquete con <code>npm install grunt-twbs --save-dev</code> y lo agregamos a la secci\u00f3n de <em>plugins</em> del <code>Gruntfile</code> usando <code>grunt.loadNpmTasks('grunt-contrib-twbs');</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">toledano</span><span class=\"p\">@</span><span class=\"n\">toledano</span> <span class=\"n\">bower_components</span> <span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"o\">/</span><span class=\"n\">bower</span><span class=\"p\">)</span> <span class=\"err\">$</span> <span class=\"n\">npm</span> <span class=\"n\">install</span> <span class=\"n\">grunt</span><span class=\"o\">-</span><span class=\"n\">twbs</span> <span class=\"o\">--</span><span class=\"n\">save</span><span class=\"o\">-</span><span class=\"n\">dev</span>\n<span class=\"n\">cmi</span><span class=\"mf\">@2.0.0</span> <span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">toledano</span><span class=\"o\">/</span><span class=\"n\">proyectos</span><span class=\"o\">/</span><span class=\"n\">cmi_core</span><span class=\"o\">/</span><span class=\"n\">src</span>\n<span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">grunt</span><span class=\"o\">-</span><span class=\"n\">contrib</span><span class=\"o\">-</span><span class=\"n\">uglify</span><span class=\"mf\">@0.9.2</span>\n<span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">maxmin</span><span class=\"mf\">@1.1.0</span>\n<span class=\"err\">\u2502</span>   <span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">pretty</span><span class=\"o\">-</span><span class=\"n\">bytes</span><span class=\"mf\">@1.0.4</span>\n<span class=\"err\">\u2502</span>     <span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">meow</span><span class=\"mf\">@3.4.2</span>\n<span class=\"err\">\u2502</span>       <span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">read</span><span class=\"o\">-</span><span class=\"n\">pkg</span><span class=\"o\">-</span><span class=\"n\">up</span><span class=\"mf\">@1.0.1</span>\n<span class=\"err\">\u2502</span>         <span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">read</span><span class=\"o\">-</span><span class=\"n\">pkg</span><span class=\"mf\">@1.1.0</span>\n<span class=\"err\">\u2502</span>           <span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">load</span><span class=\"o\">-</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">file</span><span class=\"mf\">@1.0.1</span>\n<span class=\"err\">\u2502</span>           <span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">graceful</span><span class=\"o\">-</span><span class=\"n\">fs</span><span class=\"mf\">@4.1.2</span> \n<span class=\"err\">\u2502</span>           <span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">path</span><span class=\"o\">-</span><span class=\"n\">type</span><span class=\"mf\">@1.0.0</span>\n<span class=\"err\">\u2502</span>             <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">graceful</span><span class=\"o\">-</span><span class=\"n\">fs</span><span class=\"mf\">@4.1.2</span> \n<span class=\"err\">\u251c\u2500\u252c</span> <span class=\"n\">grunt</span><span class=\"o\">-</span><span class=\"n\">lib</span><span class=\"o\">-</span><span class=\"n\">phantomjs</span><span class=\"mf\">@0.7.1</span>\n<span class=\"err\">\u2502</span> <span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">phantomjs</span><span class=\"mf\">@1.9.18</span>\n<span class=\"err\">\u2502</span>   <span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">fs</span><span class=\"o\">-</span><span class=\"n\">extra</span><span class=\"mf\">@0.23.1</span>\n<span class=\"err\">\u2502</span>     <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">graceful</span><span class=\"o\">-</span><span class=\"n\">fs</span><span class=\"mf\">@4.1.2</span> \n<span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">grunt</span><span class=\"o\">-</span><span class=\"n\">twbs</span><span class=\"mf\">@0.0.5</span> \n  <span class=\"err\">\u2514\u2500\u252c</span> <span class=\"n\">fs</span><span class=\"o\">-</span><span class=\"n\">extra</span><span class=\"mf\">@0.24.0</span> \n    <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">graceful</span><span class=\"o\">-</span><span class=\"n\">fs</span><span class=\"mf\">@4.1.2</span> \n</pre></div>\n\n\n<h3 id=\"opciones\">Opciones</h3>\n<p>Hay varias opciones documentadas en el <a href=\"https://github.com/misterdai/grunt-twbs\">c\u00f3digo fuente</a>, pero nos vamos a enfocar en dos:</p>\n<ul>\n<li><code>less</code> - que indica la ruta del archivo <code>.less</code> que contiene nuestras opciones personales, y</li>\n<li><code>dest</code> -  que indica la ruta de destino. </li>\n</ul>\n<p>Agregamos la tarea a nuestro <code>Gruntfile</code> que se ve as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"c1\">// :task: twbs</span>\n    <span class=\"c1\">// :package: grunt-twbs</span>\n    <span class=\"nx\">twbs</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">target</span><span class=\"o\">:</span><span class=\"p\">{</span>\n            <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"nx\">less</span><span class=\"o\">:</span> <span class=\"s1\">&#39;./sources/less/&#39;</span><span class=\"p\">,</span>\n                <span class=\"nx\">dest</span><span class=\"o\">:</span> <span class=\"s1\">&#39;assets/css/&lt;%= pkg.name %&gt;.min.css&#39;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Lo que hace esta tarea es que toma los archivos <code>.less</code> en en directorio especificado en <code>target.options.less</code> y los copia en la ubicaci\u00f3n de Bootstrap, que por defecto es <code>bower_components/bootstrap</code>, aunque podemos especificar otra ruta en la clave <code>target.options.bootstrap</code>.</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>feature/bower<span class=\"o\">)</span> $ grunt twbs\nRunning <span class=\"s2\">&quot;twbs:target&quot;</span> <span class=\"o\">(</span>twbs<span class=\"o\">)</span> task\nRunning Bootstrap CSS task <span class=\"o\">(</span>dist<span class=\"o\">)</span>\nBootstrap <span class=\"o\">(</span>dist<span class=\"o\">)</span> built\n\nDone, without errors.\n</pre></div>\n\n\n<p>Ya que los copi\u00f3, o sea, que reemplaz\u00f3 los originales, con los personalizados, genera el archivo <code>.css</code> de Bootstrap, con el comando <code>grunt dist-css</code> del <code>Gruntfile</code> de Bootstrap, de nuevo, hay varias <a href=\"http://getbootstrap.com/getting-started/#grunt\">tareas disponibles</a>, y podemos especificarlas en la clave <code>target.options.cmd</code>. </p>\n<blockquote>\n<p>Es importante tener en cuenta que este <em>gruntplugin</em> solo maneja los archivos <code>.less</code> y solo genera un <code>.min.css</code>, <strong>pero no hace nada con los JavaScript</strong>. Habr\u00eda que crear una tarea que copie estos archivos a mi directorio de est\u00e1ticos.</p>\n</blockquote>\n<h2 id=\"el-archivo-gruntfile\">El Archivo <code>Gruntfile</code></h2>\n<p>As\u00ed va el archivo <code>Gruntfile</code>hasta el momento:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">grunt</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n  <span class=\"c1\">// Configuraci\u00f3n del proyecto.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">initConfig</span><span class=\"p\">({</span>\n    <span class=\"nx\">pkg</span><span class=\"o\">:</span> <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">file</span><span class=\"p\">.</span><span class=\"nx\">readJSON</span><span class=\"p\">(</span><span class=\"s1\">&#39;package.json&#39;</span><span class=\"p\">),</span>\n\n    <span class=\"c1\">// :task: concat</span>\n    <span class=\"c1\">// :package: grunt-contrib-concat</span>\n    <span class=\"nx\">concat</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// define una cadena de texto que se coloca entre cada archivo unido</span>\n        <span class=\"nx\">separator</span><span class=\"o\">:</span> <span class=\"s1\">&#39; &#39;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nx\">dist</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// los archivos a unir</span>\n        <span class=\"nx\">src</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;sources/js/*.js&#39;</span><span class=\"p\">],</span>\n        <span class=\"c1\">// la ubicacion de la salida concatenada</span>\n        <span class=\"nx\">dest</span><span class=\"o\">:</span> <span class=\"s1\">&#39;sources/tmp/js/&lt;%= pkg.name %&gt;.js&#39;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\">// :task: uglify</span>\n    <span class=\"c1\">// :package: grunt-contrib-uglify</span>\n    <span class=\"nx\">uglify</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">banner</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;dd/mmm/yyyy&quot;) %&gt; */\\n&#39;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nx\">build</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n          <span class=\"s1\">&#39;assets/js/&lt;%= pkg.name %&gt;.min.js&#39;</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;&lt;%= concat.dist.dest %&gt;&#39;</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\">// :task: qunit</span>\n    <span class=\"c1\">// :package: grunt-contrib-qunit</span>\n    <span class=\"nx\">qunit</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;sources/test/**/*.html&#39;</span><span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\">// :task: jshint</span>\n    <span class=\"c1\">// :package: grunt-contrib-jshint</span>\n    <span class=\"nx\">jshint</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\">// se define que archivos se van a limpiar</span>\n      <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;gruntfile.js&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sources/**/*.js&#39;</span><span class=\"p\">],</span>\n      <span class=\"c1\">// se configura JSHint (tal como se indica en http://www.jshint.com/docs/)</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n          <span class=\"c1\">// aqui van las opciones, si los valores por</span>\n          <span class=\"c1\">// omisi\u00f3n no son suficientes</span>\n        <span class=\"nx\">globals</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n          <span class=\"nx\">jQuery</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n          <span class=\"nx\">console</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n          <span class=\"nx\">module</span><span class=\"o\">:</span> <span class=\"kc\">true</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\">// :task: watch</span>\n    <span class=\"c1\">// :package: grunt-contrib-watch</span>\n    <span class=\"nx\">watch</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;&lt;%= jshint.files %&gt;&#39;</span><span class=\"p\">],</span>\n        <span class=\"nx\">tasks</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;jshint&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;qunit&#39;</span><span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\">// :task: twbs</span>\n    <span class=\"c1\">// :package: grunt-twbs</span>\n    <span class=\"nx\">twbs</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">target</span><span class=\"o\">:</span><span class=\"p\">{</span>\n            <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"nx\">less</span><span class=\"o\">:</span> <span class=\"s1\">&#39;./sources/less/&#39;</span><span class=\"p\">,</span>\n                <span class=\"nx\">dest</span><span class=\"o\">:</span> <span class=\"s1\">&#39;assets/css/&lt;%= pkg.name %&gt;.min.css&#39;</span><span class=\"p\">,</span>\n                <span class=\"nx\">cmd</span><span class=\"o\">:</span> <span class=\"s1\">&#39;dist&#39;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n\n  <span class=\"p\">});</span>\n\n  <span class=\"c1\">// Carga los plugins que nos proporcionan las tareas.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-concat&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-uglify&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-qunit&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-jshint&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-watch&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-twbs&#39;</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// La(s) tarea(s) por default.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">registerTask</span><span class=\"p\">(</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;concat&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;uglify&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;jshint&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;qunit&#39;</span><span class=\"p\">]);</span>\n\n<span class=\"p\">};</span>\n</pre></div>\n\n\n<h2 id=\"conclusion\">Conclusi\u00f3n</h2>\n<p>Siguiendo este esquema de desarrollo, aseguramos la consistencia del tema, en cualquier ambiente de desarrollo y solo tenemos que controlar un m\u00ednimo de archivos <code>.less</code>. En mi caso copi\u00e9 dos, <code>bootstrap.less</code> y <code>variables.less</code> aunque solo modifiqu\u00e9 este \u00faltimo archivo.</p>\n<p>En el pr\u00f3ximo archivo, vamos a crear una tarea completamente nueve que colecte los dem\u00e1s archivos est\u00e1ticos de Bootstrap o cualquier otro indicado y los copie en el directorio correcto.</p>", "extend_html": "", "enable_comments": true, "cover": "https://media.toledano.org/images/2015/gruntjs1.jpg", "slug": "anatomia-de-un-gruntfile-parte-2", "status": 1, "featured": true, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 71, "fields": {"idx": "16674b13-9394-44a8-9030-2e0aa7a6d79b", "creado": "2017-07-29T04:23:56.651Z", "modificado": "2017-07-29T04:23:56.651Z", "title": "Anatom\u00eda de un Gruntfile", "summary": "", "body": "Title: Anatom\u00eda de un Gruntfile    \r\nDate: 2015-10-10 10:05:07 a.m.\r\nCategory: desarrollo\r\nTags: tools, javascript, frontend\r\n\r\nEl objetivo de usar __Grunt__ en el Cuadro de Mando Integral es crear y _mantener_ el tema del Cuadro de Mando Integral de la forma m\u00e1s eficiente posible.\r\n\r\nEste es el segundo archivo de la serie. En el primero, donde vemos como instalar Grunt y es [__C\u00f3mo usar Grunt__](http://yo.toledano.org/como-usar-grunt/).\r\n\r\nLo que quiero es escribir mi personalizaci\u00f3n en un archivo `.less` separado del c\u00f3digo fuente de Bootstrap, de modo que solo tengo que controlar este archivo personal y las actualizaciones de Bootstrap ser\u00e1n controladas por _bower_.\r\n\r\n> Utilizo [Twitter Bootsrap](https://getbootstrap.com) para el tema de la versi\u00f3n 2.0 porque realmente nunca llegu\u00e9 a dominar [MaterializeCSS](http://gruntjs.com/plugins). Es bastante bueno este _framework_, pero realmente soy mas productivo con Bootstrap.\r\n\r\n## Los plugins de Grunt\r\n\r\nGrunt tiene un sitio para [buscar plugins](http://gruntjs.com/plugins), porque actualmente hay unos 5,200 plugins, lo que hace que encontrar el plugin requiera de un buen motor de b\u00fasqueda.\r\n\r\nLa b\u00fasqueda del t\u00e9rmino `bootstrap` arroja 16 resultados. De estos, 3 _plugins_ parecen prometedores: [grunt-include-bootstrap](https://www.npmjs.com/package/grunt-include-bootstrap), [grunt-customize-bootstrap](https://www.npmjs.com/package/grunt-customize-bootstrap), [grunt-twbs](https://www.npmjs.com/package/grunt-twbs). Despu\u00e9s de revisar el c\u00f3digo fuente, descarto `grunt-include-bootstrap` porque se ve m\u00e1s complicado y sobre todo porque incluye los archivo `.less` de la versi\u00f3n 2 de Bootstrap. O sea, no.\r\n\r\nAl final, elijo `grunt-twbs` porque me parece el m\u00e1s simple de los dos que quedan. Solo requiere el archivo `.less` en el que van las variables y el c\u00f3digo que reemplaza[^1] al de Bootstrap.\r\n\r\nAhora vamos a crear el `Gruntfile` que se utilizar\u00e1 en el proyecto, as\u00ed como los archivos `package.json` y `bower.json` que acompa\u00f1an al gestor de tareas.\r\n\r\n## Creando un `Gruntfile`\r\n\r\nVamos a empezar con el archivo con el que empezamos en el [art\u00edculo anterior](http://yo.toledano.org/como-usar-grunt/) e iremos agregando los gruntplugins que necesitemos y su configuraci\u00f3n respectiva.\r\n\r\n```javascript\r\nmodule.exports = function(grunt) {\r\n\r\n  // Configuraci\u00f3n del proyecto.\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON('package.json'),\r\n    uglify: {\r\n      options: {\r\n        banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"dd/mmm/yyyy\") %> */\\n'\r\n      },\r\n      build: {\r\n        src: 'sources/<%= pkg.name %>.js',\r\n        dest: 'assets/<%= pkg.name %>.min.js'\r\n      }\r\n    }\r\n  });\r\n\r\n  // Carga el plugin que nos proporciona la tarea \"uglify\".\r\n  grunt.loadNpmTasks('grunt-contrib-uglify');\r\n\r\n  // La(s) tarea(s) por default.\r\n  grunt.registerTask('default', ['uglify']);\r\n\r\n};\r\n```\r\n\r\nAl finalizar agregaremos a este archivo los siguientes _plugins_:\r\n\r\n- [grunt-contrib-concat](https://github.com/gruntjs/grunt-contrib-uglify) - Para unir archivos en uno solo.\r\n- [grunt-contrib-uglify](https://github.com/gruntjs/grunt-contrib-uglify) - Para minificar los archivos.\r\n- [grunt-contrib-qunit](https://github.com/gruntjs/grunt-contrib-qunit) - Nuestra bater\u00eda de pruebas.\r\n- [grunt-contrib-jshint](https://github.com/gruntjs/grunt-contrib-jshint) - La gu\u00eda de estilo de JavaScript, similar al PEP-8.\r\n- [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch) - Para vigilar los cambios en los archivos.\r\n- [grunt-twbs](https://github.com/misterdai/grunt-twbs) - Para construir el tema con Bootstrap, en el siguiente art\u00edculo.\r\n\r\nLa primera parte es nuestra _envoltura_, que encapsula la configuraci\u00f3n de nuestro `Gruntfile`:\r\n\r\n    module.exports = function(grunt) {\r\n    }\r\n\r\nDentro, de la envoltura, vamos a inicializar la configuraci\u00f3n, que es un objeto `grunt`:\r\n\r\n    grunt.initConfig({\r\n    });\r\n\r\nLo siguiente es leer los datos del proyecto, desde nuestro archivo `package.json` y colocarlos en la variable `pkg`, con lo que podemos acceder a los campos de `package.json` usando la notaci\u00f3n de punto.\r\n\r\n    pkg: grunt.file.readJSON('package.json')\r\n\r\n\r\nY as\u00ed vamos hasta el momento:\r\n\r\n```javascript\r\nmodule.exports = function(grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON('package.json')\r\n  });\r\n};\r\n```\r\n\r\n The configuration object for a task lives as a property on the configuration object, that's named the same as the task. So the \"concat\" task goes in our config object under the \"concat\" key. Below is my configuration object for the \"concat\" task.\r\n\r\n### Tarea `concat`\r\n\r\nAhora podemos definir las tareas que queremos que ejecute Grunt. La configuraci\u00f3n es un objeto de JavaScript que forma parte de la configuraci\u00f3n y se accede a cada tarea como una propiedad del mismo nombre. Por ejemplo, la taera `\"concat\"` va en nuestro objeto de configuraci\u00f3n bajo la clave `\"concat\"`. \r\n\r\nLa tarea `concat` consiste en unir los archivos indicados en uno solo. Podemos definir una lista de archivos o usar comodines en la clave `dist.src` y definimos la salida en la clave `dist.dest`.\r\n\r\nPero primero debemos instalarlo y guardarlo en el archivo `Gruntfile`:\r\n\r\n```bash\r\ntoledano@toledano src (tema) $ npm install grunt-contrib-concat --save-dev\r\ncmi@2.0.0 /Users/toledano/proyectos/cmi_core/src\r\n\u2514\u2500\u252c grunt-contrib-concat@0.5.1 \r\n  \u251c\u2500\u252c chalk@0.5.1 \r\n  \u2502 \u251c\u2500\u2500 ansi-styles@1.1.0 \r\n  \u2502 \u251c\u2500\u252c has-ansi@0.1.0 \r\n  \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@0.2.1 \r\n  \u2502 \u251c\u2500\u2500 strip-ansi@0.3.0 \r\n  \u2502 \u2514\u2500\u2500 supports-color@0.2.0 \r\n  \u2514\u2500\u2500 source-map@0.3.0 \r\n```\r\n\r\nEsto agrega la l\u00ednea correspondiente en el archivo `packages.json` y nos permite usar la tarea. \r\n\r\nVeamos su configuraci\u00f3n.\r\n\r\n```javascript\r\nconcat: {\r\n  options: {\r\n    // define una cadena de texto que se coloca entre cada archivo unido\r\n    separator: ';'\r\n  },\r\n  dist: {\r\n    // los archivos a unir\r\n    src: ['sources/js/*.js'],\r\n    // la ubicacion de la salida concatenada\r\n    dest: 'sources/tmp/js/<%= pkg.name %>.js'\r\n  }\r\n},\r\n```\r\n\r\nObserva que estamos usando la propiedad `name` que tomamos del `package.json`. Accedemos a ella usando la notaci\u00f3n de punto `pkg.name`, porque cargamos las claves en la configuraci\u00f3n del `Gruntfile`. Grunt tiene un motor de plantillas que usa las claves del objeto de configuraci\u00f3n para formar la salida esperada. En nuestro ejemplo, vamos a concatenar todos los archivos que se encuentren en `sources/js/` y terminen con `.js`.\r\n\r\nLa salida, la vamos a colocar en el subdirectorio `js` de nuestros  `assets` y se va a llamar como lo indica la clave `name` del archivo `package.json`, o sea `cmi`.\r\n\r\nAl final, en la secci\u00f3n de carga del `Gruntfile`, debemos indicar el m\u00f3dulo correspondiente `grunt.loadNpmTasks('grunt-contrib-concat');`, para tener lista la tarea.\r\n\r\n### Tarea `uglify`\r\n\r\nLa tarea `uglify` reduce el tama\u00f1o de los archivos al eliminar todo el contenido que no sea necesario. En el caso de los archivos JavaScript, esto incluye espacios, tabulaciones y comentarios. Al hacerlo, el archivo resultante puede quedar ilegible y _feo_, de ah\u00ed su nombre. A cambio, se reduce el tama\u00f1o, lo que ahorra tiempo y ancho de banda.\r\n\r\nLo primero, como siempre, es instalar el _gruntplugin_ usando `npm install grunt-contrib-uglify --save-dev`. A continuaci\u00f3n configuramos la tarea en el `Gruntfile`:\r\n\r\n```javascript\r\n    uglify: {\r\n      options: {\r\n        banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"dd/mmm/yyyy\") %> */\\n'\r\n      },\r\n      build: {\r\n        src: 'sources/tmp/js/<%= pkg.name %>.js',\r\n        dest: 'assets/js/<%= pkg.name %>.min.js'\r\n      }\r\n    }\r\n```\r\n\r\nTal como vimos en el [art\u00edculo anterior](http://yo.toledano.org/como-usar-grunt/) se toma una archivo espec\u00edficado en `build.src` y se _minifica_ en donde se indica con `build.dest`. En nuestro ejemplo, tomamos la salida de la tarea `concat` y la minificamos en los `assets`.\r\n\r\nAhora bien, esta configuraci\u00f3n crea archivos temporales, y usa las claves `buid.src` y `build.dest` para identificar el origen y el destino. Pero podemos ser m\u00e1s eficientes usando el campo `files` que se forma con un dupla `destino: [origen, ]`, por lo que podemos aprovechar que el origen ya lo tenemos en la clave `concat.dist.dest`. La tarea queda as\u00ed:\r\n\r\n```javascript\r\n    uglify: {\r\n      options: {\r\n        banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"dd/mmm/yyyy\") %> */\\n'\r\n      },\r\n      build: {\r\n        files: {\r\n          'assets/js/<%= pkg.name %>.min.js': ['<%= concat.dist.dest %>']\r\n        }\r\n      }\r\n    }\r\n```\r\n\r\n### La tarea `qunit`\r\n\r\nComo es una buena pr\u00e1ctica de desarrollo incorporar una bater\u00eda de pruebas al c\u00f3digo para asegurar que funciona correctamente y poder hacer despliegues autom\u00e1ticos con confianza, vamos a ahora a incorporar la tarea `qunit` a nuestro `Gruntfile`.\r\n\r\nAunque he de confesar que esto es nuevo para m\u00ed. Por lo que para empezar, voy a incorporar las pruebas que vienen de ejemplo en el paquete `grunt-contrib-qunit` y luego veremos que pasa.\r\n\r\nAntes de instalar el _gruntplugin_ debemos instalar el paquete `qunitjs` que no se instala autom\u00e1ticamente:\r\n\r\n```bash\r\ntoledano@toledano src (feature/gruntfile) $ npm install qunitjs --save-dev\r\ncmi@2.0.0 /Users/toledano/proyectos/cmi_core/src\r\n\u2514\u2500\u2500 qunitjs@1.19.0 \r\n```\r\n\r\nNecesitamos, por supuesto, instalar el m\u00f3dulo con `npm install grunt-contrib-qunit --save-dev` y cargarlo en la secci\u00f3n de _plugins_ del `Gruntfile`: `grunt.loadNpmTasks('grunt-contrib-qunit');`.\r\n\r\nLa configuraci\u00f3n de la tarea es realmente muy simple. \r\n\r\n```javascript\r\n    // :task: qunit\r\n    // :package: grunt-contrib-qunit\r\n    qunit: {\r\n        files: ['test/**/*.html']\r\n    }\r\n```\r\n\r\nUna bater\u00eda de pruebas se compone de un archivo `.html` y el c\u00f3digo JavaScript que ejecuta la prueba. Para administrar mejor ambos recursos, yo los separ\u00e9. Esta es la p\u00e1gina de pruebas:\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Bater\u00eda de pruebas b\u00e1sica</title>\r\n    <!-- Llamamos a QUnit localmente. -->\r\n    <link rel=\"stylesheet\" href=\"../../node_modules/qunitjs/qunit/qunit.css\" media=\"screen\">\r\n    <script src=\"../../node_modules/qunitjs/qunit/qunit.js\"></script>\r\n    <!-- Cargamos las librerias locales y las pruebas. -->\r\n    <script src=\"qunit_test.js\"></script>\r\n  </head>\r\n  <body>\r\n      <div id=\"qunit\"></div>\r\n      <div id=\"qunit-fixture\">esto es algo mejor.</div>\r\n  </body>\r\n</html>\r\n```\r\n\r\nY las pruebas est\u00e1n en el archivo `qunit_test.js`:\r\n\r\n```javascript\r\nQUnit.test('prueba b\u00e1sica', function() {\r\n  expect(1);\r\n  ok(true, 'esto es algo mejor.');\r\n});\r\n\r\n\r\nQUnit.test('acceso al DOM', function() {\r\n  expect(1);\r\n  var fixture = document.getElementById('qunit-fixture');\r\n  equal(fixture.innerText, 'esto es algo mejor.', 'debo ser capaz de acceder al DOM.');\r\n});\r\n```\r\n\r\nSolo tiene dos pruebas. Verifica el contenido de la p\u00e1gina, buscando la cadena `esto es algo mejor.` y verifica el acceso al __DOM__.\r\n\r\nAl ejecutar `grunt qunit`, vemos que pasa las pruebas:\r\n\r\n```bash\r\ntoledano@toledano src (feature/gruntfile) $ grunt qunit\r\nRunning \"qunit:files\" (qunit) task\r\nTesting sources/test/qunit1.html ..OK\r\n>> 2 assertions passed (22ms)\r\n\r\nDone, without errors.\r\n```\r\n\r\nSupongo que conforme crezca el proyecto, se agregar\u00e1n m\u00e1s pruebas. Por ahora es todo.\r\n\r\n### Tarea JSHint\r\n\r\n**JSHint** es una especie de PEP8. Analiza el c\u00f3digo JavaScript para detectar errores y problemas potenciales. Antes de instalar el _gruntplugin_, supongo que deber\u00eda instalar el m\u00f3dulo con `npm install jshint --save-dev`. \r\n\r\nLuego, para instalar el plugin, hacemos lo mismo, `npm install grunt-contrib-jshint --save-dev` y lo agregamos en la secci\u00f3n correspondiente del `Gruntfile`, `grunt.loadNpmTasks('grunt-contrib-jshint');`.\r\n\r\nPor otro lado, su configuraci\u00f3n es realmente muy simple:\r\n\r\n```js\r\n    // :task: jshint\r\n    // :package: grunt-contrib-jshint\r\n    jshint: {\r\n      // se define que archivos se van a limpiar\r\n      files: ['gruntfile.js', 'sources/**/*.js'],\r\n      // se configura JSHint (tal como se indica en http://www.jshint.com/docs/)\r\n      options: {\r\n          // aqui van las opciones, si los valores por\r\n          // omisi\u00f3n no son suficientes\r\n        globals: {\r\n          jQuery: true,\r\n          console: true,\r\n          module: true\r\n        }\r\n      }\r\n    }\r\n```\r\n\r\nAl ejecutar la tarea, JSHint analiza los archivos indicados y nos dice los problemas potenciales:\r\n\r\n```bash\r\ntoledano@toledano src (feature/gruntfile) $ grunt jshint\r\nRunning \"jshint:files\" (jshint) task\r\n\r\n   sources/js/01-uno.js\r\n      1 |test = new Date()\r\n                          ^ Missing semicolon.\r\n      2 |month = test.getMonth()\r\n                                ^ Missing semicolon.\r\n      3 |month = (month * 1) + 1\r\n                                ^ Missing semicolon.\r\n      4 |day = test.getDate()\r\n                             ^ Missing semicolon.\r\n      5 |year = test.getFullYear()\r\n                                  ^ Missing semicolon.\r\n      6 |console.log(\" \",month,\"/\",day,\"/\",year,\" \")\r\n                                                    ^ Missing semicolon.\r\n   sources/js/02-dos.js\r\n      1 |console.log(\"Este archivo est\u00e1 de mas\")\r\n                                                ^ Missing semicolon.\r\n   sources/tmp/js/cmi.js\r\n      1 |test = new Date()\r\n                          ^ Missing semicolon.\r\n      2 |month = test.getMonth()\r\n                                ^ Missing semicolon.\r\n      3 |month = (month * 1) + 1\r\n                                ^ Missing semicolon.\r\n      4 |day = test.getDate()\r\n                             ^ Missing semicolon.\r\n      5 |year = test.getFullYear()\r\n                                  ^ Missing semicolon.\r\n      7 |;console.log(\"Este archivo est\u00e1 de mas\")\r\n                                                 ^ Missing semicolon.\r\n\r\n>> 13 errors in 5 files\r\nWarning: Task \"jshint:files\" failed. Use --force to continue.\r\n\r\nAborted due to warnings.\r\n```\r\n\r\nComo solo me faltan, punto y comas (`;`), voy a agregarlos a los archivos y ejecutar\u00e9 de nuevo el analizador.\r\n\r\n> Despu\u00e9s de agregar los punto y comas que me faltaban, qued\u00f3 un error provocado por la tarea `concat`. Elimin\u00e9 el separador.\r\n\r\nUna vez corregidas todas las advertencias y los errores, esta es la salida de `jshint`:\r\n\r\n```bash\r\ntoledano@toledano src (feature/gruntfile) $ grunt jshint\r\nRunning \"jshint:files\" (jshint) task\r\n>> 5 files lint free.\r\n\r\nDone, without errors.\r\n```\r\n\r\n### La tarea `watch`\r\n\r\nPara terminar con nuestro `Gruntfile`, digo, antes de dedicarnos al plugin que nos interesa que es el de Bootstrap, vamos a crear un servidor que monitorea todos los cambios de nuestros archivos y ejecuta las tareas indicadas cuando detecta alguna modificaci\u00f3n.\r\n\r\nInstalamos el m\u00f3dulo con `npm install grunt-contrib-watch --save-dev` y lo activamos en el `Gruntfile` con `grunt.loadNpmTasks('grunt-contrib-watch');`.\r\n\r\nSu configuraci\u00f3n tambi\u00e9n es bien sencilla. Le decimos que archivos vigilar (los mismos que `jshint`) y que tareas ejecutar si hay cambios (`jshint` y `qunit`).\r\n\r\n```bash\r\ntoledano@toledano src (feature/gruntfile) $ grunt watch\r\nRunning \"watch\" task\r\nWaiting...\r\n>> File \"sources/js/01-uno.js\" changed.\r\nRunning \"jshint:files\" (jshint) task\r\n>> 5 files lint free.\r\n\r\nRunning \"qunit:files\" (qunit) task\r\nTesting sources/test/qunit1.html ..OK\r\n>> 2 assertions passed (21ms)\r\n\r\nDone, without errors.\r\nCompleted in 5.961s at Sat Oct 10 2015 16:33:25 GMT-0500 (CDT) - Waiting...\r\n```\r\n\r\n## Conclusi\u00f3n\r\n\r\nNuestro `Gruntfile` est\u00e1 listo para empezar a trabajar en el tema del cuadro de mando. \r\n\r\nPara terminar, as\u00ed queda ya listo:\r\n\r\n```js\r\nmodule.exports = function(grunt) {\r\n\r\n  // Configuraci\u00f3n del proyecto.\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON('package.json'),\r\n\r\n    // :task: concat\r\n    // :package: grunt-contrib-concat\r\n    concat: {\r\n      options: {\r\n        // define una cadena de texto que se coloca entre cada archivo unido\r\n        separator: ' '\r\n      },\r\n      dist: {\r\n        // los archivos a unir\r\n        src: ['sources/js/*.js'],\r\n        // la ubicacion de la salida concatenada\r\n        dest: 'sources/tmp/js/<%= pkg.name %>.js'\r\n      }\r\n    },\r\n\r\n    // :task: uglify\r\n    // :package: grunt-contrib-uglify\r\n    uglify: {\r\n      options: {\r\n        banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"dd/mmm/yyyy\") %> */\\n'\r\n      },\r\n      build: {\r\n        files: {\r\n          'assets/js/<%= pkg.name %>.min.js': ['<%= concat.dist.dest %>']\r\n        }\r\n      }\r\n    },\r\n\r\n    // :task: qunit\r\n    // :package: grunt-contrib-qunit\r\n    qunit: {\r\n        files: ['sources/test/**/*.html']\r\n    },\r\n\r\n    // :task: jshint\r\n    // :package: grunt-contrib-jshint\r\n    jshint: {\r\n      // se define que archivos se van a limpiar\r\n      files: ['gruntfile.js', 'sources/**/*.js'],\r\n      // se configura JSHint (tal como se indica en http://www.jshint.com/docs/)\r\n      options: {\r\n          // aqui van las opciones, si los valores por\r\n          // omisi\u00f3n no son suficientes\r\n        globals: {\r\n          jQuery: true,\r\n          console: true,\r\n          module: true\r\n        }\r\n      }\r\n    },\r\n\r\n    // :task: watch\r\n    // :package: grunt-contrib-watch\r\n    watch: {\r\n        files: ['<%= jshint.files %>'],\r\n        tasks: ['jshint', 'qunit']\r\n    }\r\n\r\n  });\r\n\r\n  // Carga los plugins que nos proporcionan las tareas.\r\n  grunt.loadNpmTasks('grunt-contrib-concat');\r\n  grunt.loadNpmTasks('grunt-contrib-uglify');\r\n  grunt.loadNpmTasks('grunt-contrib-qunit');\r\n  grunt.loadNpmTasks('grunt-contrib-jshint');\r\n  grunt.loadNpmTasks('grunt-contrib-watch');\r\n\r\n  // La(s) tarea(s) por default.\r\n  grunt.registerTask('default', ['concat', 'uglify', 'jshint', 'qunit']);\r\n\r\n};\r\n```\r\n\r\n\r\n[^1]: En realidad no lo reemplaza el c\u00f3digo CSS, solo las variables. Como CSS es acumulativo, este c\u00f3digo va al final del archivo generado y por lo tanto es que usa el navegador. El c\u00f3digo original de Bootstrap sigue ah\u00ed.", "extend": "", "pub_date": "2015-10-10T15:05:07Z", "summary_html": "", "body_html": "<p>El objetivo de usar <strong>Grunt</strong> en el Cuadro de Mando Integral es crear y <em>mantener</em> el tema del Cuadro de Mando Integral de la forma m\u00e1s eficiente posible.</p>\n<p>Este es el segundo archivo de la serie. En el primero, donde vemos como instalar Grunt y es <a href=\"http://yo.toledano.org/como-usar-grunt/\"><strong>C\u00f3mo usar Grunt</strong></a>.</p>\n<p>Lo que quiero es escribir mi personalizaci\u00f3n en un archivo <code>.less</code> separado del c\u00f3digo fuente de Bootstrap, de modo que solo tengo que controlar este archivo personal y las actualizaciones de Bootstrap ser\u00e1n controladas por <em>bower</em>.</p>\n<blockquote>\n<p>Utilizo <a href=\"https://getbootstrap.com\">Twitter Bootsrap</a> para el tema de la versi\u00f3n 2.0 porque realmente nunca llegu\u00e9 a dominar <a href=\"http://gruntjs.com/plugins\">MaterializeCSS</a>. Es bastante bueno este <em>framework</em>, pero realmente soy mas productivo con Bootstrap.</p>\n</blockquote>\n<h2 id=\"los-plugins-de-grunt\">Los plugins de Grunt</h2>\n<p>Grunt tiene un sitio para <a href=\"http://gruntjs.com/plugins\">buscar plugins</a>, porque actualmente hay unos 5,200 plugins, lo que hace que encontrar el plugin requiera de un buen motor de b\u00fasqueda.</p>\n<p>La b\u00fasqueda del t\u00e9rmino <code>bootstrap</code> arroja 16 resultados. De estos, 3 <em>plugins</em> parecen prometedores: <a href=\"https://www.npmjs.com/package/grunt-include-bootstrap\">grunt-include-bootstrap</a>, <a href=\"https://www.npmjs.com/package/grunt-customize-bootstrap\">grunt-customize-bootstrap</a>, <a href=\"https://www.npmjs.com/package/grunt-twbs\">grunt-twbs</a>. Despu\u00e9s de revisar el c\u00f3digo fuente, descarto <code>grunt-include-bootstrap</code> porque se ve m\u00e1s complicado y sobre todo porque incluye los archivo <code>.less</code> de la versi\u00f3n 2 de Bootstrap. O sea, no.</p>\n<p>Al final, elijo <code>grunt-twbs</code> porque me parece el m\u00e1s simple de los dos que quedan. Solo requiere el archivo <code>.less</code> en el que van las variables y el c\u00f3digo que reemplaza<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> al de Bootstrap.</p>\n<p>Ahora vamos a crear el <code>Gruntfile</code> que se utilizar\u00e1 en el proyecto, as\u00ed como los archivos <code>package.json</code> y <code>bower.json</code> que acompa\u00f1an al gestor de tareas.</p>\n<h2 id=\"creando-un-gruntfile\">Creando un <code>Gruntfile</code></h2>\n<p>Vamos a empezar con el archivo con el que empezamos en el <a href=\"http://yo.toledano.org/como-usar-grunt/\">art\u00edculo anterior</a> e iremos agregando los gruntplugins que necesitemos y su configuraci\u00f3n respectiva.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">grunt</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n  <span class=\"c1\">// Configuraci\u00f3n del proyecto.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">initConfig</span><span class=\"p\">({</span>\n    <span class=\"nx\">pkg</span><span class=\"o\">:</span> <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">file</span><span class=\"p\">.</span><span class=\"nx\">readJSON</span><span class=\"p\">(</span><span class=\"s1\">&#39;package.json&#39;</span><span class=\"p\">),</span>\n    <span class=\"nx\">uglify</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">banner</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;dd/mmm/yyyy&quot;) %&gt; */\\n&#39;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nx\">build</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">src</span><span class=\"o\">:</span> <span class=\"s1\">&#39;sources/&lt;%= pkg.name %&gt;.js&#39;</span><span class=\"p\">,</span>\n        <span class=\"nx\">dest</span><span class=\"o\">:</span> <span class=\"s1\">&#39;assets/&lt;%= pkg.name %&gt;.min.js&#39;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"c1\">// Carga el plugin que nos proporciona la tarea &quot;uglify&quot;.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-uglify&#39;</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// La(s) tarea(s) por default.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">registerTask</span><span class=\"p\">(</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;uglify&#39;</span><span class=\"p\">]);</span>\n\n<span class=\"p\">};</span>\n</pre></div>\n\n\n<p>Al finalizar agregaremos a este archivo los siguientes <em>plugins</em>:</p>\n<ul>\n<li><a href=\"https://github.com/gruntjs/grunt-contrib-uglify\">grunt-contrib-concat</a> - Para unir archivos en uno solo.</li>\n<li><a href=\"https://github.com/gruntjs/grunt-contrib-uglify\">grunt-contrib-uglify</a> - Para minificar los archivos.</li>\n<li><a href=\"https://github.com/gruntjs/grunt-contrib-qunit\">grunt-contrib-qunit</a> - Nuestra bater\u00eda de pruebas.</li>\n<li><a href=\"https://github.com/gruntjs/grunt-contrib-jshint\">grunt-contrib-jshint</a> - La gu\u00eda de estilo de JavaScript, similar al PEP-8.</li>\n<li><a href=\"https://github.com/gruntjs/grunt-contrib-watch\">grunt-contrib-watch</a> - Para vigilar los cambios en los archivos.</li>\n<li><a href=\"https://github.com/misterdai/grunt-twbs\">grunt-twbs</a> - Para construir el tema con Bootstrap, en el siguiente art\u00edculo.</li>\n</ul>\n<p>La primera parte es nuestra <em>envoltura</em>, que encapsula la configuraci\u00f3n de nuestro <code>Gruntfile</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">module</span>.<span class=\"n\">exports</span> = <span class=\"n\">function</span>(<span class=\"n\">grunt</span>) {\n}\n</pre></div>\n\n\n<p>Dentro, de la envoltura, vamos a inicializar la configuraci\u00f3n, que es un objeto <code>grunt</code>:</p>\n<div class=\"codehilite\"><pre><span></span>grunt.initConfig({\n});\n</pre></div>\n\n\n<p>Lo siguiente es leer los datos del proyecto, desde nuestro archivo <code>package.json</code> y colocarlos en la variable <code>pkg</code>, con lo que podemos acceder a los campos de <code>package.json</code> usando la notaci\u00f3n de punto.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">pkg</span><span class=\"o\">:</span> <span class=\"n\">grunt</span><span class=\"o\">.</span><span class=\"na\">file</span><span class=\"o\">.</span><span class=\"na\">readJSON</span><span class=\"o\">(</span><span class=\"s1\">&#39;package.json&#39;</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>Y as\u00ed vamos hasta el momento:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">grunt</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">initConfig</span><span class=\"p\">({</span>\n    <span class=\"nx\">pkg</span><span class=\"o\">:</span> <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">file</span><span class=\"p\">.</span><span class=\"nx\">readJSON</span><span class=\"p\">(</span><span class=\"s1\">&#39;package.json&#39;</span><span class=\"p\">)</span>\n  <span class=\"p\">});</span>\n<span class=\"p\">};</span>\n</pre></div>\n\n\n<p>The configuration object for a task lives as a property on the configuration object, that&rsquo;s named the same as the task. So the &ldquo;concat&rdquo; task goes in our config object under the &ldquo;concat&rdquo; key. Below is my configuration object for the &ldquo;concat&rdquo; task.</p>\n<h3 id=\"tarea-concat\">Tarea <code>concat</code></h3>\n<p>Ahora podemos definir las tareas que queremos que ejecute Grunt. La configuraci\u00f3n es un objeto de JavaScript que forma parte de la configuraci\u00f3n y se accede a cada tarea como una propiedad del mismo nombre. Por ejemplo, la taera <code>\"concat\"</code> va en nuestro objeto de configuraci\u00f3n bajo la clave <code>\"concat\"</code>. </p>\n<p>La tarea <code>concat</code> consiste en unir los archivos indicados en uno solo. Podemos definir una lista de archivos o usar comodines en la clave <code>dist.src</code> y definimos la salida en la clave <code>dist.dest</code>.</p>\n<p>Pero primero debemos instalarlo y guardarlo en el archivo <code>Gruntfile</code>:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>tema<span class=\"o\">)</span> $ npm install grunt-contrib-concat --save-dev\ncmi@2.0.0 /Users/toledano/proyectos/cmi_core/src\n\u2514\u2500\u252c grunt-contrib-concat@0.5.1 \n  \u251c\u2500\u252c chalk@0.5.1 \n  \u2502 \u251c\u2500\u2500 ansi-styles@1.1.0 \n  \u2502 \u251c\u2500\u252c has-ansi@0.1.0 \n  \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@0.2.1 \n  \u2502 \u251c\u2500\u2500 strip-ansi@0.3.0 \n  \u2502 \u2514\u2500\u2500 supports-color@0.2.0 \n  \u2514\u2500\u2500 source-map@0.3.0 \n</pre></div>\n\n\n<p>Esto agrega la l\u00ednea correspondiente en el archivo <code>packages.json</code> y nos permite usar la tarea. </p>\n<p>Veamos su configuraci\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">concat</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n  <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// define una cadena de texto que se coloca entre cada archivo unido</span>\n    <span class=\"nx\">separator</span><span class=\"o\">:</span> <span class=\"s1\">&#39;;&#39;</span>\n  <span class=\"p\">},</span>\n  <span class=\"nx\">dist</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// los archivos a unir</span>\n    <span class=\"nx\">src</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;sources/js/*.js&#39;</span><span class=\"p\">],</span>\n    <span class=\"c1\">// la ubicacion de la salida concatenada</span>\n    <span class=\"nx\">dest</span><span class=\"o\">:</span> <span class=\"s1\">&#39;sources/tmp/js/&lt;%= pkg.name %&gt;.js&#39;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">},</span>\n</pre></div>\n\n\n<p>Observa que estamos usando la propiedad <code>name</code> que tomamos del <code>package.json</code>. Accedemos a ella usando la notaci\u00f3n de punto <code>pkg.name</code>, porque cargamos las claves en la configuraci\u00f3n del <code>Gruntfile</code>. Grunt tiene un motor de plantillas que usa las claves del objeto de configuraci\u00f3n para formar la salida esperada. En nuestro ejemplo, vamos a concatenar todos los archivos que se encuentren en <code>sources/js/</code> y terminen con <code>.js</code>.</p>\n<p>La salida, la vamos a colocar en el subdirectorio <code>js</code> de nuestros  <code>assets</code> y se va a llamar como lo indica la clave <code>name</code> del archivo <code>package.json</code>, o sea <code>cmi</code>.</p>\n<p>Al final, en la secci\u00f3n de carga del <code>Gruntfile</code>, debemos indicar el m\u00f3dulo correspondiente <code>grunt.loadNpmTasks('grunt-contrib-concat');</code>, para tener lista la tarea.</p>\n<h3 id=\"tarea-uglify\">Tarea <code>uglify</code></h3>\n<p>La tarea <code>uglify</code> reduce el tama\u00f1o de los archivos al eliminar todo el contenido que no sea necesario. En el caso de los archivos JavaScript, esto incluye espacios, tabulaciones y comentarios. Al hacerlo, el archivo resultante puede quedar ilegible y <em>feo</em>, de ah\u00ed su nombre. A cambio, se reduce el tama\u00f1o, lo que ahorra tiempo y ancho de banda.</p>\n<p>Lo primero, como siempre, es instalar el <em>gruntplugin</em> usando <code>npm install grunt-contrib-uglify --save-dev</code>. A continuaci\u00f3n configuramos la tarea en el <code>Gruntfile</code>:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nx\">uglify</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">banner</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;dd/mmm/yyyy&quot;) %&gt; */\\n&#39;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nx\">build</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">src</span><span class=\"o\">:</span> <span class=\"s1\">&#39;sources/tmp/js/&lt;%= pkg.name %&gt;.js&#39;</span><span class=\"p\">,</span>\n        <span class=\"nx\">dest</span><span class=\"o\">:</span> <span class=\"s1\">&#39;assets/js/&lt;%= pkg.name %&gt;.min.js&#39;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Tal como vimos en el <a href=\"http://yo.toledano.org/como-usar-grunt/\">art\u00edculo anterior</a> se toma una archivo espec\u00edficado en <code>build.src</code> y se <em>minifica</em> en donde se indica con <code>build.dest</code>. En nuestro ejemplo, tomamos la salida de la tarea <code>concat</code> y la minificamos en los <code>assets</code>.</p>\n<p>Ahora bien, esta configuraci\u00f3n crea archivos temporales, y usa las claves <code>buid.src</code> y <code>build.dest</code> para identificar el origen y el destino. Pero podemos ser m\u00e1s eficientes usando el campo <code>files</code> que se forma con un dupla <code>destino: [origen, ]</code>, por lo que podemos aprovechar que el origen ya lo tenemos en la clave <code>concat.dist.dest</code>. La tarea queda as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nx\">uglify</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">banner</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;dd/mmm/yyyy&quot;) %&gt; */\\n&#39;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nx\">build</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n          <span class=\"s1\">&#39;assets/js/&lt;%= pkg.name %&gt;.min.js&#39;</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;&lt;%= concat.dist.dest %&gt;&#39;</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<h3 id=\"la-tarea-qunit\">La tarea <code>qunit</code></h3>\n<p>Como es una buena pr\u00e1ctica de desarrollo incorporar una bater\u00eda de pruebas al c\u00f3digo para asegurar que funciona correctamente y poder hacer despliegues autom\u00e1ticos con confianza, vamos a ahora a incorporar la tarea <code>qunit</code> a nuestro <code>Gruntfile</code>.</p>\n<p>Aunque he de confesar que esto es nuevo para m\u00ed. Por lo que para empezar, voy a incorporar las pruebas que vienen de ejemplo en el paquete <code>grunt-contrib-qunit</code> y luego veremos que pasa.</p>\n<p>Antes de instalar el <em>gruntplugin</em> debemos instalar el paquete <code>qunitjs</code> que no se instala autom\u00e1ticamente:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>feature/gruntfile<span class=\"o\">)</span> $ npm install qunitjs --save-dev\ncmi@2.0.0 /Users/toledano/proyectos/cmi_core/src\n\u2514\u2500\u2500 qunitjs@1.19.0 \n</pre></div>\n\n\n<p>Necesitamos, por supuesto, instalar el m\u00f3dulo con <code>npm install grunt-contrib-qunit --save-dev</code> y cargarlo en la secci\u00f3n de <em>plugins</em> del <code>Gruntfile</code>: <code>grunt.loadNpmTasks('grunt-contrib-qunit');</code>.</p>\n<p>La configuraci\u00f3n de la tarea es realmente muy simple. </p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"c1\">// :task: qunit</span>\n    <span class=\"c1\">// :package: grunt-contrib-qunit</span>\n    <span class=\"nx\">qunit</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;test/**/*.html&#39;</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Una bater\u00eda de pruebas se compone de un archivo <code>.html</code> y el c\u00f3digo JavaScript que ejecuta la prueba. Para administrar mejor ambos recursos, yo los separ\u00e9. Esta es la p\u00e1gina de pruebas:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">charset</span><span class=\"o\">=</span><span class=\"s\">&quot;utf-8&quot;</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>Bater\u00eda de pruebas b\u00e1sica<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n    <span class=\"c\">&lt;!-- Llamamos a QUnit localmente. --&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">&quot;stylesheet&quot;</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;../../node_modules/qunitjs/qunit/qunit.css&quot;</span> <span class=\"na\">media</span><span class=\"o\">=</span><span class=\"s\">&quot;screen&quot;</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;../../node_modules/qunitjs/qunit/qunit.js&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"c\">&lt;!-- Cargamos las librerias locales y las pruebas. --&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;qunit_test.js&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;qunit&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;qunit-fixture&quot;</span><span class=\"p\">&gt;</span>esto es algo mejor.<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre></div>\n\n\n<p>Y las pruebas est\u00e1n en el archivo <code>qunit_test.js</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">QUnit</span><span class=\"p\">.</span><span class=\"nx\">test</span><span class=\"p\">(</span><span class=\"s1\">&#39;prueba b\u00e1sica&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"nx\">ok</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">,</span> <span class=\"s1\">&#39;esto es algo mejor.&#39;</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n\n\n<span class=\"nx\">QUnit</span><span class=\"p\">.</span><span class=\"nx\">test</span><span class=\"p\">(</span><span class=\"s1\">&#39;acceso al DOM&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">fixture</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;qunit-fixture&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">equal</span><span class=\"p\">(</span><span class=\"nx\">fixture</span><span class=\"p\">.</span><span class=\"nx\">innerText</span><span class=\"p\">,</span> <span class=\"s1\">&#39;esto es algo mejor.&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;debo ser capaz de acceder al DOM.&#39;</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n</pre></div>\n\n\n<p>Solo tiene dos pruebas. Verifica el contenido de la p\u00e1gina, buscando la cadena <code>esto es algo mejor.</code> y verifica el acceso al <strong>DOM</strong>.</p>\n<p>Al ejecutar <code>grunt qunit</code>, vemos que pasa las pruebas:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>feature/gruntfile<span class=\"o\">)</span> $ grunt qunit\nRunning <span class=\"s2\">&quot;qunit:files&quot;</span> <span class=\"o\">(</span>qunit<span class=\"o\">)</span> task\nTesting sources/test/qunit1.html ..OK\n&gt;&gt; <span class=\"m\">2</span> assertions passed <span class=\"o\">(</span>22ms<span class=\"o\">)</span>\n\nDone, without errors.\n</pre></div>\n\n\n<p>Supongo que conforme crezca el proyecto, se agregar\u00e1n m\u00e1s pruebas. Por ahora es todo.</p>\n<h3 id=\"tarea-jshint\">Tarea JSHint</h3>\n<p><strong>JSHint</strong> es una especie de PEP8. Analiza el c\u00f3digo JavaScript para detectar errores y problemas potenciales. Antes de instalar el <em>gruntplugin</em>, supongo que deber\u00eda instalar el m\u00f3dulo con <code>npm install jshint --save-dev</code>. </p>\n<p>Luego, para instalar el plugin, hacemos lo mismo, <code>npm install grunt-contrib-jshint --save-dev</code> y lo agregamos en la secci\u00f3n correspondiente del <code>Gruntfile</code>, <code>grunt.loadNpmTasks('grunt-contrib-jshint');</code>.</p>\n<p>Por otro lado, su configuraci\u00f3n es realmente muy simple:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"c1\">// :task: jshint</span>\n    <span class=\"c1\">// :package: grunt-contrib-jshint</span>\n    <span class=\"nx\">jshint</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\">// se define que archivos se van a limpiar</span>\n      <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;gruntfile.js&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sources/**/*.js&#39;</span><span class=\"p\">],</span>\n      <span class=\"c1\">// se configura JSHint (tal como se indica en http://www.jshint.com/docs/)</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n          <span class=\"c1\">// aqui van las opciones, si los valores por</span>\n          <span class=\"c1\">// omisi\u00f3n no son suficientes</span>\n        <span class=\"nx\">globals</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n          <span class=\"nx\">jQuery</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n          <span class=\"nx\">console</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n          <span class=\"nx\">module</span><span class=\"o\">:</span> <span class=\"kc\">true</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Al ejecutar la tarea, JSHint analiza los archivos indicados y nos dice los problemas potenciales:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>feature/gruntfile<span class=\"o\">)</span> $ grunt jshint\nRunning <span class=\"s2\">&quot;jshint:files&quot;</span> <span class=\"o\">(</span>jshint<span class=\"o\">)</span> task\n\n   sources/js/01-uno.js\n      <span class=\"m\">1</span> <span class=\"p\">|</span><span class=\"nb\">test</span> <span class=\"o\">=</span> new Date<span class=\"o\">()</span>\n                          ^ Missing semicolon.\n      <span class=\"m\">2</span> <span class=\"p\">|</span><span class=\"nv\">month</span> <span class=\"o\">=</span> test.getMonth<span class=\"o\">()</span>\n                                ^ Missing semicolon.\n      <span class=\"m\">3</span> <span class=\"p\">|</span><span class=\"nv\">month</span> <span class=\"o\">=</span> <span class=\"o\">(</span>month * <span class=\"m\">1</span><span class=\"o\">)</span> + <span class=\"m\">1</span>\n                                ^ Missing semicolon.\n      <span class=\"m\">4</span> <span class=\"p\">|</span><span class=\"nv\">day</span> <span class=\"o\">=</span> test.getDate<span class=\"o\">()</span>\n                             ^ Missing semicolon.\n      <span class=\"m\">5</span> <span class=\"p\">|</span><span class=\"nv\">year</span> <span class=\"o\">=</span> test.getFullYear<span class=\"o\">()</span>\n                                  ^ Missing semicolon.\n      <span class=\"m\">6</span> <span class=\"p\">|</span>console.log<span class=\"o\">(</span><span class=\"s2\">&quot; &quot;</span>,month,<span class=\"s2\">&quot;/&quot;</span>,day,<span class=\"s2\">&quot;/&quot;</span>,year,<span class=\"s2\">&quot; &quot;</span><span class=\"o\">)</span>\n                                                    ^ Missing semicolon.\n   sources/js/02-dos.js\n      <span class=\"m\">1</span> <span class=\"p\">|</span>console.log<span class=\"o\">(</span><span class=\"s2\">&quot;Este archivo est\u00e1 de mas&quot;</span><span class=\"o\">)</span>\n                                                ^ Missing semicolon.\n   sources/tmp/js/cmi.js\n      <span class=\"m\">1</span> <span class=\"p\">|</span><span class=\"nb\">test</span> <span class=\"o\">=</span> new Date<span class=\"o\">()</span>\n                          ^ Missing semicolon.\n      <span class=\"m\">2</span> <span class=\"p\">|</span><span class=\"nv\">month</span> <span class=\"o\">=</span> test.getMonth<span class=\"o\">()</span>\n                                ^ Missing semicolon.\n      <span class=\"m\">3</span> <span class=\"p\">|</span><span class=\"nv\">month</span> <span class=\"o\">=</span> <span class=\"o\">(</span>month * <span class=\"m\">1</span><span class=\"o\">)</span> + <span class=\"m\">1</span>\n                                ^ Missing semicolon.\n      <span class=\"m\">4</span> <span class=\"p\">|</span><span class=\"nv\">day</span> <span class=\"o\">=</span> test.getDate<span class=\"o\">()</span>\n                             ^ Missing semicolon.\n      <span class=\"m\">5</span> <span class=\"p\">|</span><span class=\"nv\">year</span> <span class=\"o\">=</span> test.getFullYear<span class=\"o\">()</span>\n                                  ^ Missing semicolon.\n      <span class=\"m\">7</span> <span class=\"p\">|;</span>console.log<span class=\"o\">(</span><span class=\"s2\">&quot;Este archivo est\u00e1 de mas&quot;</span><span class=\"o\">)</span>\n                                                 ^ Missing semicolon.\n\n&gt;&gt; <span class=\"m\">13</span> errors in <span class=\"m\">5</span> files\nWarning: Task <span class=\"s2\">&quot;jshint:files&quot;</span> failed. Use --force to <span class=\"k\">continue</span>.\n\nAborted due to warnings.\n</pre></div>\n\n\n<p>Como solo me faltan, punto y comas (<code>;</code>), voy a agregarlos a los archivos y ejecutar\u00e9 de nuevo el analizador.</p>\n<blockquote>\n<p>Despu\u00e9s de agregar los punto y comas que me faltaban, qued\u00f3 un error provocado por la tarea <code>concat</code>. Elimin\u00e9 el separador.</p>\n</blockquote>\n<p>Una vez corregidas todas las advertencias y los errores, esta es la salida de <code>jshint</code>:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>feature/gruntfile<span class=\"o\">)</span> $ grunt jshint\nRunning <span class=\"s2\">&quot;jshint:files&quot;</span> <span class=\"o\">(</span>jshint<span class=\"o\">)</span> task\n&gt;&gt; <span class=\"m\">5</span> files lint free.\n\nDone, without errors.\n</pre></div>\n\n\n<h3 id=\"la-tarea-watch\">La tarea <code>watch</code></h3>\n<p>Para terminar con nuestro <code>Gruntfile</code>, digo, antes de dedicarnos al plugin que nos interesa que es el de Bootstrap, vamos a crear un servidor que monitorea todos los cambios de nuestros archivos y ejecuta las tareas indicadas cuando detecta alguna modificaci\u00f3n.</p>\n<p>Instalamos el m\u00f3dulo con <code>npm install grunt-contrib-watch --save-dev</code> y lo activamos en el <code>Gruntfile</code> con <code>grunt.loadNpmTasks('grunt-contrib-watch');</code>.</p>\n<p>Su configuraci\u00f3n tambi\u00e9n es bien sencilla. Le decimos que archivos vigilar (los mismos que <code>jshint</code>) y que tareas ejecutar si hay cambios (<code>jshint</code> y <code>qunit</code>).</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src <span class=\"o\">(</span>feature/gruntfile<span class=\"o\">)</span> $ grunt watch\nRunning <span class=\"s2\">&quot;watch&quot;</span> task\nWaiting...\n&gt;&gt; File <span class=\"s2\">&quot;sources/js/01-uno.js&quot;</span> changed.\nRunning <span class=\"s2\">&quot;jshint:files&quot;</span> <span class=\"o\">(</span>jshint<span class=\"o\">)</span> task\n&gt;&gt; <span class=\"m\">5</span> files lint free.\n\nRunning <span class=\"s2\">&quot;qunit:files&quot;</span> <span class=\"o\">(</span>qunit<span class=\"o\">)</span> task\nTesting sources/test/qunit1.html ..OK\n&gt;&gt; <span class=\"m\">2</span> assertions passed <span class=\"o\">(</span>21ms<span class=\"o\">)</span>\n\nDone, without errors.\nCompleted in <span class=\"m\">5</span>.961s at Sat Oct <span class=\"m\">10</span> <span class=\"m\">2015</span> <span class=\"m\">16</span>:33:25 GMT-0500 <span class=\"o\">(</span>CDT<span class=\"o\">)</span> - Waiting...\n</pre></div>\n\n\n<h2 id=\"conclusion\">Conclusi\u00f3n</h2>\n<p>Nuestro <code>Gruntfile</code> est\u00e1 listo para empezar a trabajar en el tema del cuadro de mando. </p>\n<p>Para terminar, as\u00ed queda ya listo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">grunt</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n  <span class=\"c1\">// Configuraci\u00f3n del proyecto.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">initConfig</span><span class=\"p\">({</span>\n    <span class=\"nx\">pkg</span><span class=\"o\">:</span> <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">file</span><span class=\"p\">.</span><span class=\"nx\">readJSON</span><span class=\"p\">(</span><span class=\"s1\">&#39;package.json&#39;</span><span class=\"p\">),</span>\n\n    <span class=\"c1\">// :task: concat</span>\n    <span class=\"c1\">// :package: grunt-contrib-concat</span>\n    <span class=\"nx\">concat</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// define una cadena de texto que se coloca entre cada archivo unido</span>\n        <span class=\"nx\">separator</span><span class=\"o\">:</span> <span class=\"s1\">&#39; &#39;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nx\">dist</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// los archivos a unir</span>\n        <span class=\"nx\">src</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;sources/js/*.js&#39;</span><span class=\"p\">],</span>\n        <span class=\"c1\">// la ubicacion de la salida concatenada</span>\n        <span class=\"nx\">dest</span><span class=\"o\">:</span> <span class=\"s1\">&#39;sources/tmp/js/&lt;%= pkg.name %&gt;.js&#39;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\">// :task: uglify</span>\n    <span class=\"c1\">// :package: grunt-contrib-uglify</span>\n    <span class=\"nx\">uglify</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">banner</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;dd/mmm/yyyy&quot;) %&gt; */\\n&#39;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nx\">build</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n          <span class=\"s1\">&#39;assets/js/&lt;%= pkg.name %&gt;.min.js&#39;</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;&lt;%= concat.dist.dest %&gt;&#39;</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\">// :task: qunit</span>\n    <span class=\"c1\">// :package: grunt-contrib-qunit</span>\n    <span class=\"nx\">qunit</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;sources/test/**/*.html&#39;</span><span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\">// :task: jshint</span>\n    <span class=\"c1\">// :package: grunt-contrib-jshint</span>\n    <span class=\"nx\">jshint</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\">// se define que archivos se van a limpiar</span>\n      <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;gruntfile.js&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sources/**/*.js&#39;</span><span class=\"p\">],</span>\n      <span class=\"c1\">// se configura JSHint (tal como se indica en http://www.jshint.com/docs/)</span>\n      <span class=\"nx\">options</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n          <span class=\"c1\">// aqui van las opciones, si los valores por</span>\n          <span class=\"c1\">// omisi\u00f3n no son suficientes</span>\n        <span class=\"nx\">globals</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n          <span class=\"nx\">jQuery</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n          <span class=\"nx\">console</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n          <span class=\"nx\">module</span><span class=\"o\">:</span> <span class=\"kc\">true</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\">// :task: watch</span>\n    <span class=\"c1\">// :package: grunt-contrib-watch</span>\n    <span class=\"nx\">watch</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">files</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;&lt;%= jshint.files %&gt;&#39;</span><span class=\"p\">],</span>\n        <span class=\"nx\">tasks</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;jshint&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;qunit&#39;</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n\n  <span class=\"p\">});</span>\n\n  <span class=\"c1\">// Carga los plugins que nos proporcionan las tareas.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-concat&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-uglify&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-qunit&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-jshint&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">loadNpmTasks</span><span class=\"p\">(</span><span class=\"s1\">&#39;grunt-contrib-watch&#39;</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// La(s) tarea(s) por default.</span>\n  <span class=\"nx\">grunt</span><span class=\"p\">.</span><span class=\"nx\">registerTask</span><span class=\"p\">(</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;concat&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;uglify&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;jshint&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;qunit&#39;</span><span class=\"p\">]);</span>\n\n<span class=\"p\">};</span>\n</pre></div>\n\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>En realidad no lo reemplaza el c\u00f3digo CSS, solo las variables. Como CSS es acumulativo, este c\u00f3digo va al final del archivo generado y por lo tanto es que usa el navegador. El c\u00f3digo original de Bootstrap sigue ah\u00ed.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "anatomia-de-un-gruntfile", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 72, "fields": {"idx": "778ba1b6-40b8-41d8-aeb2-234daa3cb67d", "creado": "2017-07-29T04:26:39.421Z", "modificado": "2017-07-29T04:28:13.723Z", "title": "Configurar Bootstrap con Grunt y LESS", "summary": "", "body": "Title: Configurar Bootstrap con Grunt y LESS\r\nDate: 2015-10-11 9:21:13 a.m.\r\nCategory: desarrollo\r\nCover: https://media.toledano.org/images/2015/bootstrap.png\r\nTags: tools, javascript, frontend\r\n\r\nSiguiendo con la serie de art\u00edculos sobre la experiencia de crear un nuevo Cuadro de Mando Integral con enfoque en la norma ISO 9001:2015, en esta nueva entrega vamos a modificar algunas opciones de framework Bootstrap.\r\n\r\nLos art\u00edculos anteriores se enlistan a continuaci\u00f3n:\r\n\r\n1. [C\u00f3mo usar Grunt](https://yo.toledano.org/como-usar-grunt/)\r\n2. [Anatom\u00eda de un `Gruntfile`, primera parte](http://yo.toledano.org/anatomia-de-un-gruntfile/)\r\n3. [Anatom\u00eda de un `Gruntfile`, segunda parte](https://yo.toledano.org/anatomia-de-un-gruntfile-parte-2/)\r\n\r\n## Qu\u00e9 es Bootstrap\r\n\r\nBootstrap es un _framework_ para desarrollo web. Es decir, proporciona una estructura b\u00e1sica, pero completamente funcional, que nos permite contruir a partir de ella, estructuras m\u00e1s grandes y complejas. Est\u00e1 espec\u00edficamente dise\u00f1ado para el _frontend_, es decir, la parte que se puede ver en un navegador.\r\n\r\nHagan de cuenta que Bootstrap proporciona los planos y las piezas para construir casas prefabricadas, como las casas Geo. Simplemente vamos usando las piezas que necesitamos sobre los planos b\u00e1sicos y tenemos una casa Geo lista para usar. Eso si, id\u00e9ntica a todas las miles de casas Geo.\r\n\r\nPor eso, para que nuestro cuadro de mando no parezca una casa Geo, vamos a personalizarla. Bueno, para empezar vamos a cambiar los colores y la tipograf\u00eda.\r\n\r\n## Creando un tema con Bootstrap\r\n\r\nEn el art\u00edculo anterior, creamos una tarea que toma los archivos `.less` modificados y crea un tema Bootstrap sin tocar los archivos originales. Y funciona, es decir, crea el archivo minificado en el directorio de est\u00e1ticos. Pero solo el archivo `.css`.\r\n\r\nPara nuestro tema, tambi\u00e9n necesitamos que se copien en el directorio de est\u00e1ticos (llamado `assets`) las im\u00e1genes, tipograf\u00eda y archivos `.js` que utiliza Bootstrap. Y que no borre los archivos diferentes que ah\u00ed encuentre.\r\n\r\nPara eso vamos a construir la distribuci\u00f3n de Bootstrap con la tarea `twbs` y luego vamos a sincronizar los directorios que necesitamos.\r\n\r\n### La distribuci\u00f3n de Bootstrap\r\n\r\nBootstrap tiene un `Gruntfile`, con varias tareas programadas, inclu\u00edda `dist` que contruye todos los archivos que se deben distribuir para un sitio web.\r\n\r\nAs\u00ed que una vez que hemos instalado Bootstrap con `bower install bootstrap --save-dev` nos pasamos al directorio `./bower_components/bootstrap` para instalar las dependencias de `nodejs` que necesita.\r\n\r\n![grunt dist](https://media.toledano.org/images/2015/bootstrap-grunt_dist.gif)\r\n\r\nEsto crea la distribuci\u00f3n completa de Bootstrap en el directorio `dist`:\r\n\r\n```\r\ntoledano@toledano dist (develop) $ tree\r\n.\r\n\u251c\u2500\u2500 css\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap-theme.css\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap-theme.css.map\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap-theme.min.css\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap.css\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap.css.map\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bootstrap.min.css\r\n\u251c\u2500\u2500 fonts\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.eot\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.svg\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.ttf\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.woff\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 glyphicons-halflings-regular.woff2\r\n\u2514\u2500\u2500 js\r\n    \u251c\u2500\u2500 bootstrap.js\r\n    \u251c\u2500\u2500 bootstrap.min.js\r\n    \u2514\u2500\u2500 npm.js\r\n\r\n3 directories, 14 files\r\n```\r\n\r\nLa tarea `twbs` compila el archivo `.css`, ahora debemos copiar los directorios `fonts` y `js` a los est\u00e1ticos.\r\n\r\n### La tarea `twbs`\r\n\r\nExisten varios gruntplugins para copiar o sincronizar archivos, pero yo eleg\u00ed [`grunt-sync`](https://github.com/tomusdrw/grunt-sync) porque me pareci\u00f3 el m\u00e1s simple. Dice el autor que funciona como `grunt-contrib-copy` pero solo copia los archivos que sufrieron alg\u00fan cambio.\r\n\r\nPara conocer cu\u00e1les archivos cambiaron, lee los tiempos de modificaci\u00f3n de los archivos de origen `src`, sobreescribe el destino si hay alguna diferencia o no existe el archivo o directorio. Tambi\u00e9n es posible configurar la tarea para que compare los archivos y directorios y borre en el destino cualquiera que no est\u00f1e en el origine. Ademas, si queremos algo m\u00e1s seguro, podemos configurar la tarea para que compare las huellas `md5` de los archivos.\r\n\r\nEstas son las opciones completas:\r\n\r\n- `verbose`: Muestra una salida detallada. Valor por default: `true`\r\n- `pretend`: Hace como que copia, pero no lo hace en realidad. Valor por default: `false`\r\n- `failOnError`: Lanza una excepci\u00f3n cuando encuentra un error y se detiene la tarea. Normal: `false`\r\n- `ignoreInDest`: Una lista de archivos que se ignoran cuando no coinciden con el origen. Valor normal: `none`\r\n- `updateAndDelete`: Borra los archivos en destino que no est\u00e9n en el origen. Valor por default: `false`\r\n- `compareUsing`: Se especifica, el m\u00e9todo de comparaci\u00f3n `md5` o `mtime`. Valor por default: `mtime`.\r\n\r\nAhora vamos a instalar el gruntplugin con `npm install grunt-sync  --save-dev`\r\n\r\n![npm install grunt-sync  --save-dev](npm install grunt-sync  --save-dev)\r\n\r\nLa configuraci\u00f3n de la tarea es como sigue:\r\n\r\n```json\r\n// :task: sync\r\n// :package: grunt-sync\r\nsync: {\r\n    bootstrap: {\r\n        files: [{\r\n            cwd: './bower_components/bootstrap/dist',\r\n            src: [\r\n                'js/*',\r\n                'fonts/*'\r\n            ],\r\n            dest: './assets/'\r\n        }],\r\n        pretend: true,\r\n        verbose: true\r\n    }\r\n}\r\n```\r\n\r\nUtilizo la clave `pretend: true` para verificar que est\u00e9 todo correcto. Yo creo que si lo est\u00e1, porque esta es mi salida.\r\n\r\n```\r\ntoledano@toledano src (feature/bootstrap-less) $ grunt sync\r\nRunning \"sync:bootstrap\" (sync) task\r\nCopying bower_components/bootstrap/dist/js/bootstrap.js -> assets/js/bootstrap.js\r\nCopying bower_components/bootstrap/dist/js/bootstrap.min.js -> assets/js/bootstrap.min.js\r\nCopying bower_components/bootstrap/dist/js/npm.js -> assets/js/npm.js\r\nCopying bower_components/bootstrap/dist/fonts/glyphicons-halflings-regular.eot -> assets/fonts/glyphicons-halflings-regular.eot\r\nCopying bower_components/bootstrap/dist/fonts/glyphicons-halflings-regular.svg -> assets/fonts/glyphicons-halflings-regular.svg\r\nCopying bower_components/bootstrap/dist/fonts/glyphicons-halflings-regular.ttf -> assets/fonts/glyphicons-halflings-regular.ttf\r\nCopying bower_components/bootstrap/dist/fonts/glyphicons-halflings-regular.woff -> assets/fonts/glyphicons-halflings-regular.woff\r\nCopying bower_components/bootstrap/dist/fonts/glyphicons-halflings-regular.woff2 -> assets/fonts/glyphicons-halflings-regular.woff2\r\n\r\nDone, without errors.\r\n```\r\n\r\nAhora la voy a ejecutar sin `pretend`, y este es mi directorio `assets`:\r\n\r\n```\r\ntoledano@toledano src (feature/bootstrap-less) $ tree assets/\r\nassets/\r\n\u251c\u2500\u2500 css\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 cmi.min.css\r\n\u251c\u2500\u2500 fonts\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.eot\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.svg\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.ttf\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.woff\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 glyphicons-halflings-regular.woff2\r\n\u2514\u2500\u2500 js\r\n    \u251c\u2500\u2500 bootstrap.js\r\n    \u251c\u2500\u2500 bootstrap.min.js\r\n    \u2514\u2500\u2500 npm.js\r\n\r\n3 directories, 9 files\r\n```\r\n\r\nY ya que verificamos el funcionamiento de nuestra tarea, pasamos a la selecci\u00f3n de colores.\r\n\r\n### Paleta de Colores\r\n\r\nEstoy seguro que hay una teor\u00eda de colores, que dice qu\u00e9 colores debemos usar juntos. Pero como yo soy un ignorante de esa teor\u00eda, voy a usar el sitio [__Paletton.com__](http://paletton.com) y a elegir unos colores que pueda usar[^1].\r\n\r\n![Paletton](https://media.toledano.org/images/2015/paletton.png)\r\n\r\nLa ventaja de este sitio es que genera las variables de colores listas para usar para usar y compartir. Esta es mi [paleta de colores](http://paletton.com/#uid=14W0u0kjBpv5NLNcZvGoPktvMdQ).\r\n\r\n```less\r\n@color-primary-0: #843384;\t/* Main Primary color */\r\n@color-primary-1: #D5AED5;\r\n@color-primary-2: #A462A4;\r\n@color-primary-3: #6A186A;\r\n@color-primary-4: #480148;\r\n```\r\n\r\nEstos _mixis_ podemos usarlos sin m\u00e1s en nuestro archivo `variables.less` personalizado.\r\n\r\n```less\r\n//== Colors\r\n//\r\n//## Gray and brand colors for use across Bootstrap.\r\n\r\n// ...\r\n\r\n// paletton.com - http://paletton.com/#uid=14W0u0kjBpv5NLNcZvGoPktvMdQ\r\n@color-primary-0: #843384;\t/* Main Primary color */\r\n@color-primary-1: #D5AED5;\r\n@color-primary-2: #A462A4;\r\n@color-primary-3: #6A186A;\r\n@color-primary-4: #480148;\r\n\r\n@brand-primary:         @color-primary-0;\r\n@brand-success:         @color-primary-1;\r\n@brand-info:            @color-primary-2;\r\n@brand-warning:         @color-primary-3;\r\n@brand-danger:          @color-primary-4;\r\n\r\n/* *** Mixins originales de Bootstrap\r\n@brand-primary:         #5F2871; // #337ab7\r\n@brand-success:         #FAECFF;\r\n@brand-info:            #5bc0de;\r\n@brand-warning:         #f0ad4e;\r\n@brand-danger:          #d9534f;\r\n*** */\r\n```\r\n\r\nSi decido cambiar la paleta de colores, solo tengo que reemplazar las l\u00edneas `@color-primary-[0-4]` y compilar de nuevo con `grunt-twbs`.\r\n\r\n### La tipograf\u00eda\r\n\r\nEn mi tema, solo voy a cambiar una tipograf\u00eda. No me decido entre [Noto Sans](https://www.google.com/fonts/specimen/Noto+Sans) o [Lato](https://www.google.com/fonts/specimen/Lato), as\u00ed que vamos a hacer unas cuantas pruebas, empezando por esta \u00faltima. Esto queda indicado en la secci\u00f3n de _Tipograf\u00eda_ de mi archivo `variables.less`.\r\n\r\n```less\r\n//== Typography\r\n//\r\n//## Font, line-height, and color for body text, headings, and more.\r\n\r\n@font-family-sans-serif:  \"Lato\", Helvetica, Arial, sans-serif;\r\n@font-family-serif:       Georgia, \"Times New Roman\", Times, serif;\r\n//** Default monospace fonts for `<code>`, `<kbd>`, and `<pre>`.\r\n@font-family-monospace:   Menlo, Monaco, Consolas, \"Courier New\", monospace;\r\n@font-family-base:        @font-family-sans-serif;\r\n```\r\n\r\n## Conclusi\u00f3n\r\n\r\nCrear un tema de Bootstrap se ha vuelto trivial usando **Grunt**. El control del tema involucra un solo archivo, lo que facilita enormemente su manejo.\r\n\r\nEn el pr\u00f3ximo art\u00edculo, creo el archivo base del tema y probamos que funcione con la tarea de monitoreo que ya programamos.\r\n\r\n\r\n\r\n[^1]: No necesariamente me tienen que gustar, tenemos pocas opciones para elegir: el gris, el rosita, un moradito, y algunos cafecitos.", "extend": "", "pub_date": "2015-10-11T14:21:13Z", "summary_html": "", "body_html": "<p>Siguiendo con la serie de art\u00edculos sobre la experiencia de crear un nuevo Cuadro de Mando Integral con enfoque en la norma ISO 9001:2015, en esta nueva entrega vamos a modificar algunas opciones de framework Bootstrap.</p>\n<p>Los art\u00edculos anteriores se enlistan a continuaci\u00f3n:</p>\n<ol>\n<li><a href=\"https://yo.toledano.org/como-usar-grunt/\">C\u00f3mo usar Grunt</a></li>\n<li><a href=\"http://yo.toledano.org/anatomia-de-un-gruntfile/\">Anatom\u00eda de un <code>Gruntfile</code>, primera parte</a></li>\n<li><a href=\"https://yo.toledano.org/anatomia-de-un-gruntfile-parte-2/\">Anatom\u00eda de un <code>Gruntfile</code>, segunda parte</a></li>\n</ol>\n<h2 id=\"que-es-bootstrap\">Qu\u00e9 es Bootstrap</h2>\n<p>Bootstrap es un <em>framework</em> para desarrollo web. Es decir, proporciona una estructura b\u00e1sica, pero completamente funcional, que nos permite contruir a partir de ella, estructuras m\u00e1s grandes y complejas. Est\u00e1 espec\u00edficamente dise\u00f1ado para el <em>frontend</em>, es decir, la parte que se puede ver en un navegador.</p>\n<p>Hagan de cuenta que Bootstrap proporciona los planos y las piezas para construir casas prefabricadas, como las casas Geo. Simplemente vamos usando las piezas que necesitamos sobre los planos b\u00e1sicos y tenemos una casa Geo lista para usar. Eso si, id\u00e9ntica a todas las miles de casas Geo.</p>\n<p>Por eso, para que nuestro cuadro de mando no parezca una casa Geo, vamos a personalizarla. Bueno, para empezar vamos a cambiar los colores y la tipograf\u00eda.</p>\n<h2 id=\"creando-un-tema-con-bootstrap\">Creando un tema con Bootstrap</h2>\n<p>En el art\u00edculo anterior, creamos una tarea que toma los archivos <code>.less</code> modificados y crea un tema Bootstrap sin tocar los archivos originales. Y funciona, es decir, crea el archivo minificado en el directorio de est\u00e1ticos. Pero solo el archivo <code>.css</code>.</p>\n<p>Para nuestro tema, tambi\u00e9n necesitamos que se copien en el directorio de est\u00e1ticos (llamado <code>assets</code>) las im\u00e1genes, tipograf\u00eda y archivos <code>.js</code> que utiliza Bootstrap. Y que no borre los archivos diferentes que ah\u00ed encuentre.</p>\n<p>Para eso vamos a construir la distribuci\u00f3n de Bootstrap con la tarea <code>twbs</code> y luego vamos a sincronizar los directorios que necesitamos.</p>\n<h3 id=\"la-distribucion-de-bootstrap\">La distribuci\u00f3n de Bootstrap</h3>\n<p>Bootstrap tiene un <code>Gruntfile</code>, con varias tareas programadas, inclu\u00edda <code>dist</code> que contruye todos los archivos que se deben distribuir para un sitio web.</p>\n<p>As\u00ed que una vez que hemos instalado Bootstrap con <code>bower install bootstrap --save-dev</code> nos pasamos al directorio <code>./bower_components/bootstrap</code> para instalar las dependencias de <code>nodejs</code> que necesita.</p>\n<p><img alt=\"grunt dist\" src=\"https://media.toledano.org/images/2015/bootstrap-grunt_dist.gif\"></p>\n<p>Esto crea la distribuci\u00f3n completa de Bootstrap en el directorio <code>dist</code>:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano dist (develop) $ tree\n.\n\u251c\u2500\u2500 css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap-theme.css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap-theme.css.map\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap-theme.min.css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap.css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap.css.map\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bootstrap.min.css\n\u251c\u2500\u2500 fonts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.eot\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.svg\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.ttf\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.woff\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 glyphicons-halflings-regular.woff2\n\u2514\u2500\u2500 js\n    \u251c\u2500\u2500 bootstrap.js\n    \u251c\u2500\u2500 bootstrap.min.js\n    \u2514\u2500\u2500 npm.js\n\n3 directories, 14 files\n</pre></div>\n\n\n<p>La tarea <code>twbs</code> compila el archivo <code>.css</code>, ahora debemos copiar los directorios <code>fonts</code> y <code>js</code> a los est\u00e1ticos.</p>\n<h3 id=\"la-tarea-twbs\">La tarea <code>twbs</code></h3>\n<p>Existen varios gruntplugins para copiar o sincronizar archivos, pero yo eleg\u00ed <a href=\"https://github.com/tomusdrw/grunt-sync\"><code>grunt-sync</code></a> porque me pareci\u00f3 el m\u00e1s simple. Dice el autor que funciona como <code>grunt-contrib-copy</code> pero solo copia los archivos que sufrieron alg\u00fan cambio.</p>\n<p>Para conocer cu\u00e1les archivos cambiaron, lee los tiempos de modificaci\u00f3n de los archivos de origen <code>src</code>, sobreescribe el destino si hay alguna diferencia o no existe el archivo o directorio. Tambi\u00e9n es posible configurar la tarea para que compare los archivos y directorios y borre en el destino cualquiera que no est\u00f1e en el origine. Ademas, si queremos algo m\u00e1s seguro, podemos configurar la tarea para que compare las huellas <code>md5</code> de los archivos.</p>\n<p>Estas son las opciones completas:</p>\n<ul>\n<li><code>verbose</code>: Muestra una salida detallada. Valor por default: <code>true</code></li>\n<li><code>pretend</code>: Hace como que copia, pero no lo hace en realidad. Valor por default: <code>false</code></li>\n<li><code>failOnError</code>: Lanza una excepci\u00f3n cuando encuentra un error y se detiene la tarea. Normal: <code>false</code></li>\n<li><code>ignoreInDest</code>: Una lista de archivos que se ignoran cuando no coinciden con el origen. Valor normal: <code>none</code></li>\n<li><code>updateAndDelete</code>: Borra los archivos en destino que no est\u00e9n en el origen. Valor por default: <code>false</code></li>\n<li><code>compareUsing</code>: Se especifica, el m\u00e9todo de comparaci\u00f3n <code>md5</code> o <code>mtime</code>. Valor por default: <code>mtime</code>.</li>\n</ul>\n<p>Ahora vamos a instalar el gruntplugin con <code>npm install grunt-sync  --save-dev</code></p>\n<p>![npm install grunt-sync  &ndash;save-dev](npm install grunt-sync  &ndash;save-dev)</p>\n<p>La configuraci\u00f3n de la tarea es como sigue:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"err\">//</span> <span class=\"err\">:task:</span> <span class=\"err\">sync</span>\n<span class=\"err\">//</span> <span class=\"err\">:package:</span> <span class=\"err\">grunt-sync</span>\n<span class=\"err\">sync:</span> <span class=\"p\">{</span>\n    <span class=\"err\">bootstrap:</span> <span class=\"err\">{</span>\n        <span class=\"err\">files:</span> <span class=\"err\">[{</span>\n            <span class=\"err\">cwd:</span> <span class=\"err\">&#39;./bower_components/bootstrap/dist&#39;,</span>\n            <span class=\"err\">src:</span> <span class=\"err\">[</span>\n                <span class=\"err\">&#39;js/*&#39;,</span>\n                <span class=\"err\">&#39;fonts/*&#39;</span>\n            <span class=\"err\">],</span>\n            <span class=\"err\">dest:</span> <span class=\"err\">&#39;./assets/&#39;</span>\n        <span class=\"p\">}</span><span class=\"err\">],</span>\n        <span class=\"err\">pretend:</span> <span class=\"kc\">true</span><span class=\"err\">,</span>\n        <span class=\"err\">verbose:</span> <span class=\"kc\">true</span>\n    <span class=\"err\">}</span>\n<span class=\"err\">}</span>\n</pre></div>\n\n\n<p>Utilizo la clave <code>pretend: true</code> para verificar que est\u00e9 todo correcto. Yo creo que si lo est\u00e1, porque esta es mi salida.</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src (feature/bootstrap-less) $ grunt sync\nRunning &quot;sync:bootstrap&quot; (sync) task\nCopying bower_components/bootstrap/dist/js/bootstrap.js -&gt; assets/js/bootstrap.js\nCopying bower_components/bootstrap/dist/js/bootstrap.min.js -&gt; assets/js/bootstrap.min.js\nCopying bower_components/bootstrap/dist/js/npm.js -&gt; assets/js/npm.js\nCopying bower_components/bootstrap/dist/fonts/glyphicons-halflings-regular.eot -&gt; assets/fonts/glyphicons-halflings-regular.eot\nCopying bower_components/bootstrap/dist/fonts/glyphicons-halflings-regular.svg -&gt; assets/fonts/glyphicons-halflings-regular.svg\nCopying bower_components/bootstrap/dist/fonts/glyphicons-halflings-regular.ttf -&gt; assets/fonts/glyphicons-halflings-regular.ttf\nCopying bower_components/bootstrap/dist/fonts/glyphicons-halflings-regular.woff -&gt; assets/fonts/glyphicons-halflings-regular.woff\nCopying bower_components/bootstrap/dist/fonts/glyphicons-halflings-regular.woff2 -&gt; assets/fonts/glyphicons-halflings-regular.woff2\n\nDone, without errors.\n</pre></div>\n\n\n<p>Ahora la voy a ejecutar sin <code>pretend</code>, y este es mi directorio <code>assets</code>:</p>\n<div class=\"codehilite\"><pre><span></span>toledano@toledano src (feature/bootstrap-less) $ tree assets/\nassets/\n\u251c\u2500\u2500 css\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 cmi.min.css\n\u251c\u2500\u2500 fonts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.eot\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.svg\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.ttf\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glyphicons-halflings-regular.woff\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 glyphicons-halflings-regular.woff2\n\u2514\u2500\u2500 js\n    \u251c\u2500\u2500 bootstrap.js\n    \u251c\u2500\u2500 bootstrap.min.js\n    \u2514\u2500\u2500 npm.js\n\n3 directories, 9 files\n</pre></div>\n\n\n<p>Y ya que verificamos el funcionamiento de nuestra tarea, pasamos a la selecci\u00f3n de colores.</p>\n<h3 id=\"paleta-de-colores\">Paleta de Colores</h3>\n<p>Estoy seguro que hay una teor\u00eda de colores, que dice qu\u00e9 colores debemos usar juntos. Pero como yo soy un ignorante de esa teor\u00eda, voy a usar el sitio <a href=\"http://paletton.com\"><strong>Paletton.com</strong></a> y a elegir unos colores que pueda usar<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>.</p>\n<p><img alt=\"Paletton\" src=\"https://media.toledano.org/images/2015/paletton.png\"></p>\n<p>La ventaja de este sitio es que genera las variables de colores listas para usar para usar y compartir. Esta es mi <a href=\"http://paletton.com/#uid=14W0u0kjBpv5NLNcZvGoPktvMdQ\">paleta de colores</a>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nv\">@color</span><span class=\"nt\">-primary-0</span><span class=\"o\">:</span> <span class=\"p\">#</span><span class=\"nn\">843384</span><span class=\"o\">;</span>  <span class=\"c\">/* Main Primary color */</span>\n<span class=\"nv\">@color</span><span class=\"nt\">-primary-1</span><span class=\"o\">:</span> <span class=\"p\">#</span><span class=\"nn\">D5AED5</span><span class=\"o\">;</span>\n<span class=\"nv\">@color</span><span class=\"nt\">-primary-2</span><span class=\"o\">:</span> <span class=\"p\">#</span><span class=\"nn\">A462A4</span><span class=\"o\">;</span>\n<span class=\"nv\">@color</span><span class=\"nt\">-primary-3</span><span class=\"o\">:</span> <span class=\"p\">#</span><span class=\"nn\">6A186A</span><span class=\"o\">;</span>\n<span class=\"nv\">@color</span><span class=\"nt\">-primary-4</span><span class=\"o\">:</span> <span class=\"p\">#</span><span class=\"nn\">480148</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>Estos <em>mixis</em> podemos usarlos sin m\u00e1s en nuestro archivo <code>variables.less</code> personalizado.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">//==</span> <span class=\"nt\">Colors</span>\n<span class=\"o\">//</span>\n<span class=\"o\">//</span><span class=\"err\">##</span> <span class=\"nt\">Gray</span> <span class=\"nt\">and</span> <span class=\"nt\">brand</span> <span class=\"nt\">colors</span> <span class=\"nt\">for</span> <span class=\"nt\">use</span> <span class=\"nt\">across</span> <span class=\"nt\">Bootstrap</span><span class=\"o\">.</span>\n\n<span class=\"o\">//</span> <span class=\"o\">...</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">paletton</span><span class=\"p\">.</span><span class=\"nc\">com</span> <span class=\"nt\">-</span> <span class=\"nt\">http</span><span class=\"o\">://</span><span class=\"nt\">paletton</span><span class=\"p\">.</span><span class=\"nc\">com</span><span class=\"o\">/</span><span class=\"p\">#</span><span class=\"nn\">uid</span><span class=\"o\">=</span><span class=\"nt\">14W0u0kjBpv5NLNcZvGoPktvMdQ</span>\n<span class=\"nv\">@color</span><span class=\"nt\">-primary-0</span><span class=\"o\">:</span> <span class=\"p\">#</span><span class=\"nn\">843384</span><span class=\"o\">;</span>  <span class=\"c\">/* Main Primary color */</span>\n<span class=\"nv\">@color</span><span class=\"nt\">-primary-1</span><span class=\"o\">:</span> <span class=\"p\">#</span><span class=\"nn\">D5AED5</span><span class=\"o\">;</span>\n<span class=\"nv\">@color</span><span class=\"nt\">-primary-2</span><span class=\"o\">:</span> <span class=\"p\">#</span><span class=\"nn\">A462A4</span><span class=\"o\">;</span>\n<span class=\"nv\">@color</span><span class=\"nt\">-primary-3</span><span class=\"o\">:</span> <span class=\"p\">#</span><span class=\"nn\">6A186A</span><span class=\"o\">;</span>\n<span class=\"nv\">@color</span><span class=\"nt\">-primary-4</span><span class=\"o\">:</span> <span class=\"p\">#</span><span class=\"nn\">480148</span><span class=\"o\">;</span>\n\n<span class=\"nv\">@brand</span><span class=\"nt\">-primary</span><span class=\"o\">:</span>         <span class=\"nv\">@color</span><span class=\"nt\">-primary-0</span><span class=\"o\">;</span>\n<span class=\"nv\">@brand</span><span class=\"nt\">-success</span><span class=\"o\">:</span>         <span class=\"nv\">@color</span><span class=\"nt\">-primary-1</span><span class=\"o\">;</span>\n<span class=\"nv\">@brand</span><span class=\"nt\">-info</span><span class=\"o\">:</span>            <span class=\"nv\">@color</span><span class=\"nt\">-primary-2</span><span class=\"o\">;</span>\n<span class=\"nv\">@brand</span><span class=\"nt\">-warning</span><span class=\"o\">:</span>         <span class=\"nv\">@color</span><span class=\"nt\">-primary-3</span><span class=\"o\">;</span>\n<span class=\"nv\">@brand</span><span class=\"nt\">-danger</span><span class=\"o\">:</span>          <span class=\"nv\">@color</span><span class=\"nt\">-primary-4</span><span class=\"o\">;</span>\n\n<span class=\"c\">/* *** Mixins originales de Bootstrap</span>\n<span class=\"c\">@brand-primary:         #5F2871; // #337ab7</span>\n<span class=\"c\">@brand-success:         #FAECFF;</span>\n<span class=\"c\">@brand-info:            #5bc0de;</span>\n<span class=\"c\">@brand-warning:         #f0ad4e;</span>\n<span class=\"c\">@brand-danger:          #d9534f;</span>\n<span class=\"c\">*** */</span>\n</pre></div>\n\n\n<p>Si decido cambiar la paleta de colores, solo tengo que reemplazar las l\u00edneas <code>@color-primary-[0-4]</code> y compilar de nuevo con <code>grunt-twbs</code>.</p>\n<h3 id=\"la-tipografia\">La tipograf\u00eda</h3>\n<p>En mi tema, solo voy a cambiar una tipograf\u00eda. No me decido entre <a href=\"https://www.google.com/fonts/specimen/Noto+Sans\">Noto Sans</a> o <a href=\"https://www.google.com/fonts/specimen/Lato\">Lato</a>, as\u00ed que vamos a hacer unas cuantas pruebas, empezando por esta \u00faltima. Esto queda indicado en la secci\u00f3n de <em>Tipograf\u00eda</em> de mi archivo <code>variables.less</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">//==</span> <span class=\"nt\">Typography</span>\n<span class=\"o\">//</span>\n<span class=\"o\">//</span><span class=\"err\">##</span> <span class=\"nt\">Font</span><span class=\"o\">,</span> <span class=\"nt\">line-height</span><span class=\"o\">,</span> <span class=\"nt\">and</span> <span class=\"nt\">color</span> <span class=\"nt\">for</span> <span class=\"nt\">body</span> <span class=\"nt\">text</span><span class=\"o\">,</span> <span class=\"nt\">headings</span><span class=\"o\">,</span> <span class=\"nt\">and</span> <span class=\"nt\">more</span><span class=\"o\">.</span>\n\n<span class=\"nv\">@font</span><span class=\"nt\">-family-sans-serif</span><span class=\"o\">:</span>  <span class=\"s2\">&quot;Lato&quot;</span><span class=\"o\">,</span> <span class=\"nt\">Helvetica</span><span class=\"o\">,</span> <span class=\"nt\">Arial</span><span class=\"o\">,</span> <span class=\"nt\">sans-serif</span><span class=\"o\">;</span>\n<span class=\"nv\">@font</span><span class=\"nt\">-family-serif</span><span class=\"o\">:</span>       <span class=\"nt\">Georgia</span><span class=\"o\">,</span> <span class=\"s2\">&quot;Times New Roman&quot;</span><span class=\"o\">,</span> <span class=\"nt\">Times</span><span class=\"o\">,</span> <span class=\"nt\">serif</span><span class=\"o\">;</span>\n<span class=\"o\">//**</span> <span class=\"nt\">Default</span> <span class=\"nt\">monospace</span> <span class=\"nt\">fonts</span> <span class=\"nt\">for</span> <span class=\"err\">`</span><span class=\"o\">&lt;</span><span class=\"nt\">code</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"o\">,</span> <span class=\"err\">`</span><span class=\"o\">&lt;</span><span class=\"nt\">kbd</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"o\">,</span> <span class=\"nt\">and</span> <span class=\"err\">`</span><span class=\"o\">&lt;</span><span class=\"nt\">pre</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"o\">.</span>\n<span class=\"nv\">@font</span><span class=\"nt\">-family-monospace</span><span class=\"o\">:</span>   <span class=\"nt\">Menlo</span><span class=\"o\">,</span> <span class=\"nt\">Monaco</span><span class=\"o\">,</span> <span class=\"nt\">Consolas</span><span class=\"o\">,</span> <span class=\"s2\">&quot;Courier New&quot;</span><span class=\"o\">,</span> <span class=\"nt\">monospace</span><span class=\"o\">;</span>\n<span class=\"nv\">@font</span><span class=\"nt\">-family-base</span><span class=\"o\">:</span>        <span class=\"nv\">@font</span><span class=\"nt\">-family-sans-serif</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<h2 id=\"conclusion\">Conclusi\u00f3n</h2>\n<p>Crear un tema de Bootstrap se ha vuelto trivial usando <strong>Grunt</strong>. El control del tema involucra un solo archivo, lo que facilita enormemente su manejo.</p>\n<p>En el pr\u00f3ximo art\u00edculo, creo el archivo base del tema y probamos que funcione con la tarea de monitoreo que ya programamos.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>No necesariamente me tienen que gustar, tenemos pocas opciones para elegir: el gris, el rosita, un moradito, y algunos cafecitos.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "https://media.toledano.org/images/2015/bootstrap.png", "slug": "configurar-bootstrap-con-grunt-y-less", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 73, "fields": {"idx": "b74984e3-da1f-4de2-92df-c232fb7a4028", "creado": "2017-07-29T04:28:48.080Z", "modificado": "2017-07-29T04:28:48.080Z", "title": "C\u00f3mo insertar im\u00e1genes en DocBook", "summary": "", "body": "Title: C\u00f3mo insertar im\u00e1genes en DocBook\r\nDate: 2013/11/22 16:02\r\nCategory: Desarrollo \r\nTags: docbook, maquetacion, tools\r\nSlug: como-insertar-imagenes-en-docbook\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nBueno, no lo sab\u00eda. Pero por alguna raz\u00f3n no puedo usar im\u00e1genes PNG en \r\nDocBook. En un principio hab\u00eda pensado que se deb\u00eda a problemas de rutas, pero \r\nno. Ahora s\u00e9 bien que debo usa im\u00e1genes JPEG. Nada del otro mundo usando \r\nconvert de ImageMagick.\r\n\r\n    :::xml\r\n    <mediaobject>\r\n      <imageobject>\r\n        <imagedatafileref=\"img/compilador-1-2.jpg\" format=\"JPEG\" scale=\"20\" align=\"center\"/>\r\n      </imageobject>\r\n      <imageobject>\r\n        <imagedatafileref=\"img/compilador-1-2.eps\" format=\"EPS\"/>\r\n      </imageobject>\r\n    </mediaobject>", "extend": "", "pub_date": "2013-11-22T22:02:00Z", "summary_html": "", "body_html": "<p>Bueno, no lo sab\u00eda. Pero por alguna raz\u00f3n no puedo usar im\u00e1genes PNG en \nDocBook. En un principio hab\u00eda pensado que se deb\u00eda a problemas de rutas, pero \nno. Ahora s\u00e9 bien que debo usa im\u00e1genes JPEG. Nada del otro mundo usando \nconvert de ImageMagick.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;mediaobject&gt;</span>\n  <span class=\"nt\">&lt;imageobject&gt;</span>\n    <span class=\"nt\">&lt;imagedatafileref</span><span class=\"err\">=&quot;img/compilador-1-2.jpg&quot;</span> <span class=\"na\">format=</span><span class=\"s\">&quot;JPEG&quot;</span> <span class=\"na\">scale=</span><span class=\"s\">&quot;20&quot;</span> <span class=\"na\">align=</span><span class=\"s\">&quot;center&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/imageobject&gt;</span>\n  <span class=\"nt\">&lt;imageobject&gt;</span>\n    <span class=\"nt\">&lt;imagedatafileref</span><span class=\"err\">=&quot;img/compilador-1-2.eps&quot;</span> <span class=\"na\">format=</span><span class=\"s\">&quot;EPS&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/imageobject&gt;</span>\n<span class=\"nt\">&lt;/mediaobject&gt;</span>\n</pre></div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-insertar-imagenes-en-docbook", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 74, "fields": {"idx": "ca02f85d-8e82-41ee-91aa-9042a239f484", "creado": "2017-07-29T04:29:24.819Z", "modificado": "2017-07-29T04:31:02.568Z", "title": "C\u00f3mo crear widgets en Genesis Framework", "summary": "", "body": "Title: C\u00f3mo crear widgets en Genesis Framework\r\nDate: 2013/11/27 14:38\r\nCategory: Desarrollo \r\nTags: php, genesiswp, wordpress\r\nSlug: como-crear-widgets-en-genesis-framework\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\n\u00bfYa vieron el slider en la portada de Cyberia.MX? Es un plugin que se llama **Genesis Slider** y que puedes descargar desde el sitio de StudioPress o instalarlo desde el dep\u00f3sito de extensiones de WordPress. Este plugin solo funciona con el [Framework Genesis](http://ito.mx), por lo que se integra de forma totalmente transparente y no necesita ninguna librer\u00eda adicional.\r\n\r\n!!! error \"Aviso\"\r\n    Cyberia.MX era un blog que ya no est\u00e1 activo y poco a poco su archivo est\u00e1 siendo trasladado a **namespace.mx**.\r\n\r\nLa cuesti\u00f3n es que crea un *widget* y se arrastra al \u00e1rea que quieras en el men\u00fa Apariencia -> Widgets de tu escritorio. \u00a1Pero yo no ten\u00eda un \u00e1rea de *widgets* d\u00f3nde quer\u00eda poner mi *slider*! As\u00ed que me dispuse a crear el \u00e1rea necesaria.\r\n\r\nEn realidad, lo que se crea se llama **sidebar**, aunque no sea una barra lateral y dentro de esta \u00e1rea se colocan los espacios para los *widgets*.\r\n\r\nEl primer paso es registrar la sidebar, agregando esta funci\u00f3n en tu archivo `functions.php`:\r\n\r\n```language-php\r\n/*\r\n * Registro de la Sidebar\r\n ********************************************************** */\r\ngenesis_register_sidebar(\r\n  array(\r\n    'id'            => 'slider_sidebar',\r\n    'name'          => 'Espacio para el Slider',\r\n    'description'   => 'Crea un espacio para colocar el slider en la homepage.',\r\n  )\r\n);\r\n```\r\n\r\nEl argumento de la funci\u00f3n es un arreglo con tres claves que no deben faltar:\r\n\r\n- **`id`**, es el identificador de tu sidebar y debe ser \u00fanico para evitar conflictos con otros sidebars que hayas definido. \r\n- **`name`**, este es el nombre que vemos en la barra de widgets, te sirve para identificarlo visualmente. \r\n- **`description`**, este argumento es opcional, pero es una buena pr\u00e1ctica incluirlo en tu c\u00f3digo. \r\n\r\nEl siguente paso es crear el \u00e1rea en el tema. En mi caso quiero que aparezca antes del contenido y solo en la portada. El gancho o *hook* en este punto se llama `genesis_before_loop`, as\u00ed que ah\u00ed agrego el c\u00f3digo.\r\n\r\n```language-php\r\n/*\r\n * Agregar la sidebar a la portada\r\n ********************************************************** */\r\nadd_action ('genesis_before_loop', 'cyberia_slider_sidebar');\r\nfunction cyberia_slider_sidebar () {\r\n  if ( is_home() ) {\r\n    echo '<div class=\"slider_sidebar\">';\r\n      dynamic_sidebar( 'slider_sidebar' );\r\n    echo '</div>';\r\n  }\r\n}\r\n```\r\n\r\nAgregamos la acci\u00f3n al gancho y colocamos ah\u00ed el resultado de nuestra funci\u00f3n, que lo que hace es verificar que sea la portada, con `is_home()` y ah\u00ed agrega nuestra sidebar, con la funci\u00f3n `dynamic_sidebar` y el nombre de la sidebar como argumento.\r\n\r\nPor \u00faltimo agregamos un poco de estilo a nuestro widget, que es usando la clase `slider_sidebar`.\r\n\r\n```language-css\r\n/*\r\n * 42=. Slider Sidebar\r\n ********************************************************** */\r\n.slider_sidebar {\r\n  margin: 0 auto 25px;\r\n}\r\n```\r\n\r\nY eso es suficiente, ya podemos arrastrar nuestro widget, cualquiera, a esta sidebar que aparece solo en la portada antes del *loop*.\r\n\r\n!!! success \"Usa Genesis Framework\"\r\n    [Genesis][gen] te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, [Genesis][gen] te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple -- **!Empieza a usar hoy mismo [Genesis Framework][gen]!**\r\n   \r\n[gen]: http://ito.mx/genesis", "extend": "", "pub_date": "2013-11-29T20:38:00Z", "summary_html": "", "body_html": "<p>\u00bfYa vieron el slider en la portada de Cyberia.MX? Es un plugin que se llama <strong>Genesis Slider</strong> y que puedes descargar desde el sitio de StudioPress o instalarlo desde el dep\u00f3sito de extensiones de WordPress. Este plugin solo funciona con el <a href=\"http://ito.mx\">Framework Genesis</a>, por lo que se integra de forma totalmente transparente y no necesita ninguna librer\u00eda adicional.</p>\n<div class=\"admonition error\">\n<p class=\"admonition-title\">Aviso</p>\n<p>Cyberia.MX era un blog que ya no est\u00e1 activo y poco a poco su archivo est\u00e1 siendo trasladado a <strong>namespace.mx</strong>.</p>\n</div>\n<p>La cuesti\u00f3n es que crea un <em>widget</em> y se arrastra al \u00e1rea que quieras en el men\u00fa Apariencia -&gt; Widgets de tu escritorio. \u00a1Pero yo no ten\u00eda un \u00e1rea de <em>widgets</em> d\u00f3nde quer\u00eda poner mi <em>slider</em>! As\u00ed que me dispuse a crear el \u00e1rea necesaria.</p>\n<p>En realidad, lo que se crea se llama <strong>sidebar</strong>, aunque no sea una barra lateral y dentro de esta \u00e1rea se colocan los espacios para los <em>widgets</em>.</p>\n<p>El primer paso es registrar la sidebar, agregando esta funci\u00f3n en tu archivo <code>functions.php</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/*</span>\n<span class=\"cm\"> * Registro de la Sidebar</span>\n<span class=\"cm\"> ********************************************************** */</span><span class=\"w\"></span>\ngenesis_register_sidebar<span class=\"o\">(</span><span class=\"w\"></span>\n<span class=\"w\">  </span>array<span class=\"o\">(</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">&#39;id&#39;</span><span class=\"w\">            </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"s\">&#39;slider_sidebar&#39;</span><span class=\"o\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">&#39;name&#39;</span><span class=\"w\">          </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"s\">&#39;Espacio para el Slider&#39;</span><span class=\"o\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">&#39;description&#39;</span><span class=\"w\">   </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"s\">&#39;Crea un espacio para colocar el slider en la homepage.&#39;</span><span class=\"o\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">)</span><span class=\"w\"></span>\n<span class=\"o\">)</span><span class=\"err\">;</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>El argumento de la funci\u00f3n es un arreglo con tres claves que no deben faltar:</p>\n<ul>\n<li><strong><code>id</code></strong>, es el identificador de tu sidebar y debe ser \u00fanico para evitar conflictos con otros sidebars que hayas definido. </li>\n<li><strong><code>name</code></strong>, este es el nombre que vemos en la barra de widgets, te sirve para identificarlo visualmente. </li>\n<li><strong><code>description</code></strong>, este argumento es opcional, pero es una buena pr\u00e1ctica incluirlo en tu c\u00f3digo. </li>\n</ul>\n<p>El siguente paso es crear el \u00e1rea en el tema. En mi caso quiero que aparezca antes del contenido y solo en la portada. El gancho o <em>hook</em> en este punto se llama <code>genesis_before_loop</code>, as\u00ed que ah\u00ed agrego el c\u00f3digo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/*</span>\n<span class=\"cm\"> * Agregar la sidebar a la portada</span>\n<span class=\"cm\"> ********************************************************** */</span>\n<span class=\"nx\">add_action</span> <span class=\"p\">(</span><span class=\"s1\">&#39;genesis_before_loop&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cyberia_slider_sidebar&#39;</span><span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">cyberia_slider_sidebar</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">is_home</span><span class=\"p\">()</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">echo</span> <span class=\"s1\">&#39;&lt;div class=&quot;slider_sidebar&quot;&gt;&#39;</span><span class=\"p\">;</span>\n      <span class=\"nx\">dynamic_sidebar</span><span class=\"p\">(</span> <span class=\"s1\">&#39;slider_sidebar&#39;</span> <span class=\"p\">);</span>\n    <span class=\"nx\">echo</span> <span class=\"s1\">&#39;&lt;/div&gt;&#39;</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Agregamos la acci\u00f3n al gancho y colocamos ah\u00ed el resultado de nuestra funci\u00f3n, que lo que hace es verificar que sea la portada, con <code>is_home()</code> y ah\u00ed agrega nuestra sidebar, con la funci\u00f3n <code>dynamic_sidebar</code> y el nombre de la sidebar como argumento.</p>\n<p>Por \u00faltimo agregamos un poco de estilo a nuestro widget, que es usando la clase <code>slider_sidebar</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">/*</span>\n<span class=\"c\"> * 42=. Slider Sidebar</span>\n<span class=\"c\"> ********************************************************** */</span>\n<span class=\"p\">.</span><span class=\"nc\">slider_sidebar</span> <span class=\"p\">{</span>\n  <span class=\"k\">margin</span><span class=\"p\">:</span> <span class=\"mi\">0</span> <span class=\"kc\">auto</span> <span class=\"mi\">25</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Y eso es suficiente, ya podemos arrastrar nuestro widget, cualquiera, a esta sidebar que aparece solo en la portada antes del <em>loop</em>.</p>\n<div class=\"admonition success\">\n<p class=\"admonition-title\">Usa Genesis Framework</p>\n<p><a href=\"http://ito.mx/genesis\">Genesis</a> te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, <a href=\"http://ito.mx/genesis\">Genesis</a> te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple &ndash; <strong>!Empieza a usar hoy mismo <a href=\"http://ito.mx/genesis\">Genesis Framework</a>!</strong></p>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-crear-widgets-en-genesis-framework", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 75, "fields": {"idx": "872b9544-79ea-4e4b-aa02-475b852385cf", "creado": "2017-07-29T04:32:25.246Z", "modificado": "2017-07-29T04:32:25.246Z", "title": "Vistas Basadas en Clases", "summary": "", "body": "Title: Vistas Basadas en Clases\r\nDate: 2013/11/27 15:43\r\nCategory: Desarrollo \r\nTags: patterns, python, views, django\r\nSlug: vistas-basadas-en-clases\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nCuando Django se actualiz\u00f3 a la versi\u00f3n 1.5, reescrib\u00ed las vistas del blog[^1] para pasarlas al tipo CBV (*Class Based Views*) o **Vistas Basadas en Clases**, por lo menos las que generaban listas (archivo; por d\u00eda, mes y a\u00f1o; por categor\u00eda y por etiqueta) y la de entradas individuales.\r\n\r\n[^1]: En ese tiempo el blog era ConxB, que ya no est\u00e1 operativo. Nada est\u00e1 perdido, __namespace.mx__ recibir\u00e1 todo el contenido del blog anterior.\r\n\r\nLas CBV son geniales porque simplifican la forma en que operamos nuestro c\u00f3digo, por ejemplo, la siguiente es la CBV para las entradas individuales.\r\n\r\n```python\r\nclass EntradaIndividual(DateDetailView):\r\n    date_field =\"pub_date\"\r\n    model = Entry\r\n    slug_field = 'slug'\r\n    template_name = 'blog/single.html'\r\n```\r\n\r\nPero hay muchas CBV gen\u00e9ricas y conviene que las conozcas todas, por lo que a continuaci\u00f3n encontrar\u00e1s una lista. Recuerda que todas pertenecen a `django.views.generic` y debes incluir ese _namespace_ al importarlas.\r\n\r\n|Nombre|Descripci\u00f3n                              |Ejemplo de Uso   |\r\n|------|-----------------------------------------|-----------------|\r\n|`View`|Base gen\u00e9rica que puede usarse para todo|P\u00e1gina de archivo|\r\n|`RedirectView`|Redirecciona al visitante a otra p\u00e1gina|Un acortador de direcciones|\r\n|`TemplateView`|Muestra una plantilla|Una p\u00e1gina est\u00e1tica, como 'politicas.html'|\r\n|`ListView`|Lista de objetos en un `queryset`|Una p\u00e1gina de categor\u00edas|\r\n|`DetailView`|Muestra un objeto|Un art\u00edculo individual|\r\n|`FormView`|Clase para enviar formularios|Un formulario de contacto|\r\n|`CreateView`|Crea un objeto|Formulario para crear un art\u00edculo|\r\n|`UpdateView`|Actualiza un objeto|Actualizar un art\u00edculo en el blog|\r\n|`DeleteView`|Borra un objeto|Borrar un registro en la base de datos|\r\n|Vistas gen\u00e9ricas basadas en fechas|Para mostrar art\u00edculos basados en fecha|En un blog basado en fechas|\r\n\r\nLa portada de este blog usa una `ListView` muy simple pero a la vez muy poderosa, porque con solo tres l\u00edneas son necesarias para crear la portada con todo y paginaci\u00f3n:\r\n\r\n```python\r\nclass BlogArchivo(ListView):\r\n    queryset = Entry.objects.order_by('-pub_date', 'id')\r\n    paginate_by = 6\r\n    template_name = 'portada.html'\r\n```\r\n\r\nPor otro lado, las categor\u00edas tambi\u00e9n utilizan esta vista `ListView` pero algo m\u00e1s compleja, porque utilizan una variable para generar el `queryset`:\r\n\r\n```python\r\nclass CategoriaList(ListView):\r\n    paginate_by = 5\r\n    template_name = \"categoria.html\"\r\n    make_object_list = True\r\n    context_object_name = 'categoria_list'\r\n\r\n    def get_queryset(self):\r\n        self.cat = get_object_or_404(Categoria, slug=self.args[0])\r\n        return Entry.objects.filter(category=self.cat).order_by('-pub_date', 'id')\r\n\r\n    def get_context_data(self, **kwargs):\r\n        context = super(CategoriaList, self).get_context_data(**kwargs)\r\n        context['cat'] = self.cat\r\n        return context\r\n```\r\n\r\nEn art\u00edculos posteriores veremos en detalle cada una de estas clases.", "extend": "", "pub_date": "2013-11-27T21:43:00Z", "summary_html": "", "body_html": "<p>Cuando Django se actualiz\u00f3 a la versi\u00f3n 1.5, reescrib\u00ed las vistas del blog<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> para pasarlas al tipo CBV (<em>Class Based Views</em>) o <strong>Vistas Basadas en Clases</strong>, por lo menos las que generaban listas (archivo; por d\u00eda, mes y a\u00f1o; por categor\u00eda y por etiqueta) y la de entradas individuales.</p>\n<p>Las CBV son geniales porque simplifican la forma en que operamos nuestro c\u00f3digo, por ejemplo, la siguiente es la CBV para las entradas individuales.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">EntradaIndividual</span><span class=\"p\">(</span><span class=\"n\">DateDetailView</span><span class=\"p\">):</span>\n    <span class=\"n\">date_field</span> <span class=\"o\">=</span><span class=\"s2\">&quot;pub_date&quot;</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Entry</span>\n    <span class=\"n\">slug_field</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;slug&#39;</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;blog/single.html&#39;</span>\n</pre></div>\n\n\n<p>Pero hay muchas CBV gen\u00e9ricas y conviene que las conozcas todas, por lo que a continuaci\u00f3n encontrar\u00e1s una lista. Recuerda que todas pertenecen a <code>django.views.generic</code> y debes incluir ese <em>namespace</em> al importarlas.</p>\n<table>\n<thead>\n<tr>\n<th>Nombre</th>\n<th>Descripci\u00f3n</th>\n<th>Ejemplo de Uso</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>View</code></td>\n<td>Base gen\u00e9rica que puede usarse para todo</td>\n<td>P\u00e1gina de archivo</td>\n</tr>\n<tr>\n<td><code>RedirectView</code></td>\n<td>Redirecciona al visitante a otra p\u00e1gina</td>\n<td>Un acortador de direcciones</td>\n</tr>\n<tr>\n<td><code>TemplateView</code></td>\n<td>Muestra una plantilla</td>\n<td>Una p\u00e1gina est\u00e1tica, como &lsquo;politicas.html&rsquo;</td>\n</tr>\n<tr>\n<td><code>ListView</code></td>\n<td>Lista de objetos en un <code>queryset</code></td>\n<td>Una p\u00e1gina de categor\u00edas</td>\n</tr>\n<tr>\n<td><code>DetailView</code></td>\n<td>Muestra un objeto</td>\n<td>Un art\u00edculo individual</td>\n</tr>\n<tr>\n<td><code>FormView</code></td>\n<td>Clase para enviar formularios</td>\n<td>Un formulario de contacto</td>\n</tr>\n<tr>\n<td><code>CreateView</code></td>\n<td>Crea un objeto</td>\n<td>Formulario para crear un art\u00edculo</td>\n</tr>\n<tr>\n<td><code>UpdateView</code></td>\n<td>Actualiza un objeto</td>\n<td>Actualizar un art\u00edculo en el blog</td>\n</tr>\n<tr>\n<td><code>DeleteView</code></td>\n<td>Borra un objeto</td>\n<td>Borrar un registro en la base de datos</td>\n</tr>\n<tr>\n<td>Vistas gen\u00e9ricas basadas en fechas</td>\n<td>Para mostrar art\u00edculos basados en fecha</td>\n<td>En un blog basado en fechas</td>\n</tr>\n</tbody>\n</table>\n<p>La portada de este blog usa una <code>ListView</code> muy simple pero a la vez muy poderosa, porque con solo tres l\u00edneas son necesarias para crear la portada con todo y paginaci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">BlogArchivo</span><span class=\"p\">(</span><span class=\"n\">ListView</span><span class=\"p\">):</span>\n    <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">Entry</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">&#39;-pub_date&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;id&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">paginate_by</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;portada.html&#39;</span>\n</pre></div>\n\n\n<p>Por otro lado, las categor\u00edas tambi\u00e9n utilizan esta vista <code>ListView</code> pero algo m\u00e1s compleja, porque utilizan una variable para generar el <code>queryset</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">CategoriaList</span><span class=\"p\">(</span><span class=\"n\">ListView</span><span class=\"p\">):</span>\n    <span class=\"n\">paginate_by</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;categoria.html&quot;</span>\n    <span class=\"n\">make_object_list</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n    <span class=\"n\">context_object_name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;categoria_list&#39;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_queryset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cat</span> <span class=\"o\">=</span> <span class=\"n\">get_object_or_404</span><span class=\"p\">(</span><span class=\"n\">Categoria</span><span class=\"p\">,</span> <span class=\"n\">slug</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">Entry</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">category</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">&#39;-pub_date&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;id&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">CategoriaList</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">&#39;cat&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cat</span>\n        <span class=\"k\">return</span> <span class=\"n\">context</span>\n</pre></div>\n\n\n<p>En art\u00edculos posteriores veremos en detalle cada una de estas clases.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>En ese tiempo el blog era ConxB, que ya no est\u00e1 operativo. Nada est\u00e1 perdido, <strong>namespace.mx</strong> recibir\u00e1 todo el contenido del blog anterior.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "vistas-basadas-en-clases", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 76, "fields": {"idx": "59549f25-94cf-44db-87e1-051d4f66a5e2", "creado": "2017-07-29T04:33:00.694Z", "modificado": "2017-07-29T04:33:12.562Z", "title": "C\u00f3mo crear post relacionados sin usar plugins", "summary": "", "body": "Title: C\u00f3mo crear post relacionados sin usar plugins\r\nDate: 2013/11/27 15:47\r\nCategory: Desarrollo \r\nTags: genesiswp, php, wordpress \r\nSlug: como-crear-post-relacionados-sin-usar-plugins\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nMucha gente cree que tener muchos _plugins_ provoca que el desempe\u00f1o de un blog disminuya. En realidad no depende del n\u00famero de extensiones, m\u00e1s bien de las acciones que lleven a cabo esos _plugins_. Un solo _plugin_ mal programado puede provocar un gran desastre en un blog. Usar extensiones o _plugins_ nos ahorra tiempo y facilita nuestra vida si no podemos conseguir el c\u00f3digo necesario para realizar una acci\u00f3n espec\u00edfica.\r\n\r\nSin embargo, a veces es necesario prescindir de las extensiones, cuando no encontramos ninguna que satisfaga nuestras necesidades.\r\n\r\nPor ejemplo, en Cyberia.MX trataba de agregar una lista de art\u00edculos relacionados para ofrecer a los lectores contenido relevante de acuerdo al tema que estuvieran leyendo. Hay un _plugin_ muy bueno llamado _RelatedPost_ de [Ren\u00e9 Ade](http://www.rene-ade.de/), que hace un excelente trabajo, pero debido a las caracter\u00edsticas de este sitio no pod\u00eda usar una de sus mejores funcionalidades: im\u00e1genes en la lista de art\u00edculos relacionados.\r\n\r\n__Nick the Geek__ public\u00f3 este c\u00f3digo en su sitio y funciona muy bien, por eso me permito publicarlo con las adaptaciones necesarias, por ejemplo, elimino de la comparaci\u00f3n la etiqueta `code`, y ciertas categor\u00edas que ya no uso y no quiero que salgan en las recomendaciones.\r\n\r\nAgrego adem\u00e1s, mejoro un poco el atributo `title` para las im\u00e1genes y los enlaces, para darle un mejor servicio a los usuarios.\r\n\r\nLo primero que hace este c\u00f3digo es verificar que sea un post individual, para que no se active en la portada, p\u00e1ginas o resultados de b\u00fasqueda.\r\nA continuaci\u00f3n, usando las etiquetas contenidas en el art\u00edculo actual hace una consulta para encontar otros posts que contengan estas mismas etiquetas. Se usa la funci\u00f3n `WP_Query` para hacer esta consulta.\r\n\r\nEsta funci\u00f3n es muy potente, pero tambi\u00e9n muy compleja y usa un arreglo con los atributos de la consulta. En el caso de Cyberia.MX, agregamos los tipos de entradas personalizados _\u00ablibros\u00bb_, _\u00abapps\u00bb_ y _\u00abpel\u00edculas\u00bb_. Agregamos adem\u00e1s un par\u00e1metro adicional para eliminar una etiqueta que no ser\u00e1 usada en la b\u00fasqueda de relacionados. Los par\u00e1metros son `post_type` y `tag__not_in`, ambos reciben un _array_ con los valores que agregaremos a la consulta.\r\n\r\n```language-php\r\n'post_type'             => array( 'post', 'peliculas', 'libros', 'apps'),\r\n'tag__not_in'           => array ( 70, ),\r\n```\r\n\r\nOtras caracter\u00edsticas de esta consulta es el n\u00famero de post que queremos que regrese como resultado (`showposts`), que ignore los post fijos (`ignore_sticky_posts`) y que ignore igualmente ciertos tipos de post que no ser\u00e1n usados en la consulta (`post-format-link`, `post-format-status`, `post-format-asides` y `post-format-quote`). Si en tu blog no usas estos formatos, puedes eliminar este _array_.\r\n\r\nCon el resultado de la consulta, armamos la lista de im\u00e1genes y enlaces. Para las im\u00e1genes y los enlaces agregamos el atributo `title`, usando el t\u00edtulo del art\u00edculo actual (`single_post_title`) y el t\u00edtulo del art\u00edculo recomendado (`get_the_title`).\r\n\r\n```language-php\r\n$img = genesis_get_image() ? genesis_get_image(\r\n  array( 'size' => 'cyberia_related',\r\n   'attr' => array (title=>'Si te gust\u00f3 &ldquo;'. \r\n    single_post_title('', false) .'&rdquo;, tal vez te pueda interesar \u00ab' . \r\n    get_the_title() . '\u00bb') )\r\n  ) : '<img src=\"' . \r\n    get_bloginfo( 'stylesheet_directory' ) . \r\n    '/images/related.png\" alt=\"Si te gust\u00f3 &ldquo;'. \r\n    single_post_title('', false) .'&rdquo;, tal vez te pueda interesar \u00ab' . \r\n    get_the_title() . '\u00bb\" />';\r\n$related .= '<li><a href=\"' . get_permalink() . \r\n  '\" rel=\"bookmark\" title=\"Si te gust\u00f3 &ldquo;'. \r\n  single_post_title('', false) .'&rdquo;, tal vez te pueda interesar \u00ab' . \r\n  get_the_title() . '\u00bb\">' . $img . get_the_title() . '</a></li>';\r\n```\r\n\r\nAlgo parecido usamos con las categor\u00edas, eliminando las categor\u00edas no usadas (`category__not_in`) y agregando el atributo title al resultado. Por \u00faltimo, la funci\u00f3n regresa un resultado, solo si existen art\u00edculos relacionados.\r\n\r\n```language-php\r\nif ( $related ) {\r\n  printf( '<div class=\"breadcrumb\" id=\"related\"><h3 class=\"related-title\">Art\u00edculos Recomendados</h3><ul class=\"related-list\">%s</ul></div>', $related );\r\n}\r\n```\r\n\r\nAqu\u00ed tienen todo el c\u00f3digo.\r\n\r\n```language-php\r\nadd_action( 'genesis_after_post_content', 'cyberia_related_posts' );\r\n/**\r\n * Outputs related posts with thumbnail\r\n *\r\n * @author Nick the Geek\r\n * @url http://designsbynickthegeek.com/tutorials/related-posts-genesis\r\n * @global object $post\r\n */\r\n\r\nfunction cyberia_related_posts() {\r\n  if ( is_single ( ) ) {\r\n    global $post;\r\n    $count = 0;\r\n    $postIDs = array( $post->ID );\r\n    $related = '';\r\n    $tags = wp_get_post_tags( $post->ID );\r\n    $cats = wp_get_post_categories( $post->ID );\r\n    if ( $tags ) {\r\n      foreach ( $tags as $tag ) {\r\n        $tagID[] = $tag->term_id;\r\n      } // foreach\r\n      $args = array(\r\n        'post_type'             => array( 'post','peliculas', 'libros', 'apps'),\r\n        'tag__in'               => $tagID,\r\n        'tag__not_in'           => array ( 70, ),\r\n        'post__not_in'          => $postIDs,\r\n        'showposts'             => 5,\r\n        'ignore_sticky_posts'   => 1,\r\n        'tax_query'             => array(\r\n          array(\r\n            'taxonomy'  => 'post_format',\r\n            'field'     => 'slug',\r\n            'terms'     => array(\r\n              'post-format-link',\r\n              'post-format-status',\r\n              'post-format-aside',\r\n              'post-format-quote' ), // terms\r\n            'operator'  => 'NOT IN' \r\n          )\r\n        ) //tax_query\r\n      ); //args\r\n      $tag_query = new WP_Query( $args );\r\n      if ( $tag_query->have_posts() ) {\r\n        while ( $tag_query->have_posts() ) {\r\n          $tag_query->the_post();\r\n          $img = genesis_get_image() ? genesis_get_image(\r\n            array( 'size' => 'cyberia_related',\r\n              'attr' => array (title=>'Si te gust\u00f3 &ldquo;'.\r\n                single_post_title('', false) .'&rdquo;, tal vez te pueda interesar \u00ab' .\r\n                get_the_title() . '\u00bb') \r\n            ) \r\n          ) : '<img src=\"' .\r\n            get_bloginfo( 'stylesheet_directory' ) .\r\n            '/images/related.png\" alt=\"Si te gust\u00f3 &ldquo;'.\r\n            single_post_title('', false) .'&rdquo;, tal vez te pueda interesar \u00ab' .\r\n            get_the_title() . '\u00bb\" />';\r\n          $related .= '<li><a href=\"' . get_permalink() .\r\n            '\" rel=\"bookmark\" title=\"Si te gust\u00f3 &ldquo;'.\r\n            single_post_title('', false) .'&rdquo;, tal vez te pueda interesar \u00ab' .\r\n            get_the_title() . '\u00bb\">' . $img . get_the_title() . '</a></li>';\r\n          $postIDs[] = $post->ID;\r\n          $count++;\r\n        }\r\n      } // if $tag_query\r\n    } // $tags\r\n    if ( $count <= 4 ) {\r\n      $catIDs = array( );\r\n      foreach ( $cats as $cat ) {\r\n        if ( 3 == $cat )\r\n          continue;\r\n        $catIDs[] = $cat;\r\n      } // foreach\r\n      $showposts = 5 - $count;\r\n      $args = array(\r\n        'post_type'             => array( 'post','peliculas', 'libros', 'apps'),       \r\n        'category__in'          => $catIDs,\r\n        'category__not_in'      => array ( 1,4,72,34,236, ),\r\n        'post__not_in'          => $postIDs,\r\n        'showposts'             => $showposts,\r\n        'ignore_sticky_posts'   => 1,\r\n        'orderby'               => 'rand',\r\n        'tax_query'             => array(\r\n          array(\r\n            'taxonomy'  => 'post_format',\r\n            'field'     => 'slug',\r\n            'terms'     => array(\r\n              'post-format-link',\r\n              'post-format-status',\r\n              'post-format-aside',\r\n              'post-format-quote' ),\r\n            'operator' => 'NOT IN'\r\n          ) // array tax_query in\r\n        ) // tax_query\r\n      ); // $args\r\n      $cat_query = new WP_Query( $args );\r\n      if ( $cat_query->have_posts() ) {\r\n        while ( $cat_query->have_posts() ) {\r\n          $cat_query->the_post();\r\n          $img = genesis_get_image() ? genesis_get_image(\r\n            array( \r\n              'size' => 'cyberia_related',\r\n              'attr' => array (\r\n                title=>'Si te gust\u00f3 &ldquo;'.\r\n                single_post_title('', false) .'&rdquo;, tal vez te pueda interesar \u00ab' .\r\n                get_the_title() . '\u00bb'\r\n              )\r\n            ) \r\n          ) : '<img src=\"' . get_bloginfo( 'stylesheet_directory' ) .\r\n           '/images/related.png\" alt=\"Si te gust\u00f3 &ldquo;'. single_post_title('', false) .\r\n           '&rdquo;, tal vez te pueda interesar \u00ab' . get_the_title() . '\u00bb\" />';\r\n          $related .= '<li><a href=\"' . get_permalink() . '\" rel=\"bookmark\" title=\"Si te gust\u00f3 &ldquo;'. single_post_title('', false) .'&rdquo;, tal vez te pueda interesar \u00ab' . get_the_title() . '\u00bb\">' . $img . get_the_title() . '</a></li>';\r\n        } // while $cat_query\r\n      } // if $cat_query\r\n    } // if $count ,= 4\r\n    if ( $related ) {\r\n      printf( '<div class=\"breadcrumb\" id=\"related\"><h3 class=\"related-title\">Art\u00edculos Recomendados</h3><ul class=\"related-list\">%s</ul></div>', $related );\r\n    }\r\n    wp_reset_query();\r\n  } // if ( is_single() )\r\n}\r\n```\r\n\r\n!!! notice \"Usa Genesis Framework\"\r\n    [Genesis][gen] te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, [Genesis][gen] te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple -- **!Empieza a usar hoy mismo [Genesis Framework][gen]!**\r\n   \r\n[gen]: http://ito.mx/genesis", "extend": "", "pub_date": "2014-11-27T21:47:00Z", "summary_html": "", "body_html": "<p>Mucha gente cree que tener muchos <em>plugins</em> provoca que el desempe\u00f1o de un blog disminuya. En realidad no depende del n\u00famero de extensiones, m\u00e1s bien de las acciones que lleven a cabo esos <em>plugins</em>. Un solo <em>plugin</em> mal programado puede provocar un gran desastre en un blog. Usar extensiones o <em>plugins</em> nos ahorra tiempo y facilita nuestra vida si no podemos conseguir el c\u00f3digo necesario para realizar una acci\u00f3n espec\u00edfica.</p>\n<p>Sin embargo, a veces es necesario prescindir de las extensiones, cuando no encontramos ninguna que satisfaga nuestras necesidades.</p>\n<p>Por ejemplo, en Cyberia.MX trataba de agregar una lista de art\u00edculos relacionados para ofrecer a los lectores contenido relevante de acuerdo al tema que estuvieran leyendo. Hay un <em>plugin</em> muy bueno llamado <em>RelatedPost</em> de <a href=\"http://www.rene-ade.de/\">Ren\u00e9 Ade</a>, que hace un excelente trabajo, pero debido a las caracter\u00edsticas de este sitio no pod\u00eda usar una de sus mejores funcionalidades: im\u00e1genes en la lista de art\u00edculos relacionados.</p>\n<p><strong>Nick the Geek</strong> public\u00f3 este c\u00f3digo en su sitio y funciona muy bien, por eso me permito publicarlo con las adaptaciones necesarias, por ejemplo, elimino de la comparaci\u00f3n la etiqueta <code>code</code>, y ciertas categor\u00edas que ya no uso y no quiero que salgan en las recomendaciones.</p>\n<p>Agrego adem\u00e1s, mejoro un poco el atributo <code>title</code> para las im\u00e1genes y los enlaces, para darle un mejor servicio a los usuarios.</p>\n<p>Lo primero que hace este c\u00f3digo es verificar que sea un post individual, para que no se active en la portada, p\u00e1ginas o resultados de b\u00fasqueda.\nA continuaci\u00f3n, usando las etiquetas contenidas en el art\u00edculo actual hace una consulta para encontar otros posts que contengan estas mismas etiquetas. Se usa la funci\u00f3n <code>WP_Query</code> para hacer esta consulta.</p>\n<p>Esta funci\u00f3n es muy potente, pero tambi\u00e9n muy compleja y usa un arreglo con los atributos de la consulta. En el caso de Cyberia.MX, agregamos los tipos de entradas personalizados <em>\u00ablibros\u00bb</em>, <em>\u00abapps\u00bb</em> y <em>\u00abpel\u00edculas\u00bb</em>. Agregamos adem\u00e1s un par\u00e1metro adicional para eliminar una etiqueta que no ser\u00e1 usada en la b\u00fasqueda de relacionados. Los par\u00e1metros son <code>post_type</code> y <code>tag__not_in</code>, ambos reciben un <em>array</em> con los valores que agregaremos a la consulta.</p>\n<div class=\"codehilite\"><pre><span></span>&#39;post_type&#39;             =&gt; array( &#39;post&#39;, &#39;peliculas&#39;, &#39;libros&#39;, &#39;apps&#39;),\n&#39;tag__not_in&#39;           =&gt; array ( 70, ),\n</pre></div>\n\n\n<p>Otras caracter\u00edsticas de esta consulta es el n\u00famero de post que queremos que regrese como resultado (<code>showposts</code>), que ignore los post fijos (<code>ignore_sticky_posts</code>) y que ignore igualmente ciertos tipos de post que no ser\u00e1n usados en la consulta (<code>post-format-link</code>, <code>post-format-status</code>, <code>post-format-asides</code> y <code>post-format-quote</code>). Si en tu blog no usas estos formatos, puedes eliminar este <em>array</em>.</p>\n<p>Con el resultado de la consulta, armamos la lista de im\u00e1genes y enlaces. Para las im\u00e1genes y los enlaces agregamos el atributo <code>title</code>, usando el t\u00edtulo del art\u00edculo actual (<code>single_post_title</code>) y el t\u00edtulo del art\u00edculo recomendado (<code>get_the_title</code>).</p>\n<div class=\"codehilite\"><pre><span></span>$img = genesis_get_image() ? genesis_get_image(\n  array( &#39;size&#39; =&gt; &#39;cyberia_related&#39;,\n   &#39;attr&#39; =&gt; array (title=&gt;&#39;Si te gust\u00f3 <span class=\"ni\">&amp;ldquo;</span>&#39;. \n    single_post_title(&#39;&#39;, false) .&#39;<span class=\"ni\">&amp;rdquo;</span>, tal vez te pueda interesar \u00ab&#39; . \n    get_the_title() . &#39;\u00bb&#39;) )\n  ) : &#39;<span class=\"nt\">&lt;img</span> <span class=\"na\">src=</span><span class=\"s\">&quot;&#39; . </span>\n<span class=\"s\">    get_bloginfo( &#39;stylesheet_directory&#39; ) . </span>\n<span class=\"s\">    &#39;/images/related.png&quot;</span> <span class=\"na\">alt=</span><span class=\"s\">&quot;Si te gust\u00f3 &amp;ldquo;&#39;. </span>\n<span class=\"s\">    single_post_title(&#39;&#39;, false) .&#39;&amp;rdquo;, tal vez te pueda interesar \u00ab&#39; . </span>\n<span class=\"s\">    get_the_title() . &#39;\u00bb&quot;</span> <span class=\"nt\">/&gt;</span>&#39;;\n$related .= &#39;<span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;&#39; . get_permalink() . </span>\n<span class=\"s\">  &#39;&quot;</span> <span class=\"na\">rel=</span><span class=\"s\">&quot;bookmark&quot;</span> <span class=\"na\">title=</span><span class=\"s\">&quot;Si te gust\u00f3 &amp;ldquo;&#39;. </span>\n<span class=\"s\">  single_post_title(&#39;&#39;, false) .&#39;&amp;rdquo;, tal vez te pueda interesar \u00ab&#39; . </span>\n<span class=\"s\">  get_the_title() . &#39;\u00bb&quot;</span><span class=\"nt\">&gt;</span>&#39; . $img . get_the_title() . &#39;<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>&#39;;\n</pre></div>\n\n\n<p>Algo parecido usamos con las categor\u00edas, eliminando las categor\u00edas no usadas (<code>category__not_in</code>) y agregando el atributo title al resultado. Por \u00faltimo, la funci\u00f3n regresa un resultado, solo si existen art\u00edculos relacionados.</p>\n<div class=\"codehilite\"><pre><span></span>if ( $related ) {\n  printf( &#39;<span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">&quot;breadcrumb&quot;</span> <span class=\"na\">id=</span><span class=\"s\">&quot;related&quot;</span><span class=\"nt\">&gt;&lt;h3</span> <span class=\"na\">class=</span><span class=\"s\">&quot;related-title&quot;</span><span class=\"nt\">&gt;</span>Art\u00edculos Recomendados<span class=\"nt\">&lt;/h3&gt;&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">&quot;related-list&quot;</span><span class=\"nt\">&gt;</span>%s<span class=\"nt\">&lt;/ul&gt;&lt;/div&gt;</span>&#39;, $related );\n}\n</pre></div>\n\n\n<p>Aqu\u00ed tienen todo el c\u00f3digo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">add_action</span><span class=\"p\">(</span> <span class=\"s1\">&#39;genesis_after_post_content&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cyberia_related_posts&#39;</span> <span class=\"p\">);</span>\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * Outputs related posts with thumbnail</span>\n<span class=\"cm\"> *</span>\n<span class=\"cm\"> * @author Nick the Geek</span>\n<span class=\"cm\"> * @url http://designsbynickthegeek.com/tutorials/related-posts-genesis</span>\n<span class=\"cm\"> * @global object $post</span>\n<span class=\"cm\"> */</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">cyberia_related_posts() {</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">is_single</span> <span class=\"p\">(</span> <span class=\"p\">)</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">global</span> <span class=\"nx\">$post</span><span class=\"p\">;</span>\n    <span class=\"nx\">$count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"nx\">$postIDs</span> <span class=\"o\">=</span> <span class=\"nx\">array</span><span class=\"p\">(</span> <span class=\"nx\">$post</span><span class=\"o\">-&gt;</span><span class=\"nx\">ID</span> <span class=\"p\">);</span>\n    <span class=\"nx\">$related</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">;</span>\n    <span class=\"nx\">$tags</span> <span class=\"o\">=</span> <span class=\"nx\">wp_get_post_tags</span><span class=\"p\">(</span> <span class=\"nx\">$post</span><span class=\"o\">-&gt;</span><span class=\"nx\">ID</span> <span class=\"p\">);</span>\n    <span class=\"nx\">$cats</span> <span class=\"o\">=</span> <span class=\"nx\">wp_get_post_categories</span><span class=\"p\">(</span> <span class=\"nx\">$post</span><span class=\"o\">-&gt;</span><span class=\"nx\">ID</span> <span class=\"p\">);</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">$tags</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">foreach</span> <span class=\"p\">(</span> <span class=\"nx\">$tags</span> <span class=\"kr\">as</span> <span class=\"nx\">$tag</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">$tagID</span><span class=\"p\">[]</span> <span class=\"o\">=</span> <span class=\"nx\">$tag</span><span class=\"o\">-&gt;</span><span class=\"nx\">term_id</span><span class=\"p\">;</span>\n      <span class=\"p\">}</span> <span class=\"c1\">// foreach</span>\n      <span class=\"nx\">$args</span> <span class=\"o\">=</span> <span class=\"nx\">array</span><span class=\"p\">(</span>\n        <span class=\"s1\">&#39;post_type&#39;</span>             <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span><span class=\"p\">(</span> <span class=\"s1\">&#39;post&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;peliculas&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;libros&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;apps&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;tag__in&#39;</span>               <span class=\"o\">=&gt;</span> <span class=\"nx\">$tagID</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;tag__not_in&#39;</span>           <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span> <span class=\"p\">(</span> <span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"p\">),</span>\n        <span class=\"s1\">&#39;post__not_in&#39;</span>          <span class=\"o\">=&gt;</span> <span class=\"nx\">$postIDs</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;showposts&#39;</span>             <span class=\"o\">=&gt;</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ignore_sticky_posts&#39;</span>   <span class=\"o\">=&gt;</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;tax_query&#39;</span>             <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span><span class=\"p\">(</span>\n          <span class=\"nx\">array</span><span class=\"p\">(</span>\n            <span class=\"s1\">&#39;taxonomy&#39;</span>  <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;post_format&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;field&#39;</span>     <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;slug&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;terms&#39;</span>     <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span><span class=\"p\">(</span>\n              <span class=\"s1\">&#39;post-format-link&#39;</span><span class=\"p\">,</span>\n              <span class=\"s1\">&#39;post-format-status&#39;</span><span class=\"p\">,</span>\n              <span class=\"s1\">&#39;post-format-aside&#39;</span><span class=\"p\">,</span>\n              <span class=\"s1\">&#39;post-format-quote&#39;</span> <span class=\"p\">),</span> <span class=\"c1\">// terms</span>\n            <span class=\"s1\">&#39;operator&#39;</span>  <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;NOT IN&#39;</span> \n          <span class=\"p\">)</span>\n        <span class=\"p\">)</span> <span class=\"c1\">//tax_query</span>\n      <span class=\"p\">);</span> <span class=\"c1\">//args</span>\n      <span class=\"nx\">$tag_query</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">WP_Query</span><span class=\"p\">(</span> <span class=\"nx\">$args</span> <span class=\"p\">);</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">$tag_query</span><span class=\"o\">-&gt;</span><span class=\"nx\">have_posts</span><span class=\"p\">()</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">while</span> <span class=\"p\">(</span> <span class=\"nx\">$tag_query</span><span class=\"o\">-&gt;</span><span class=\"nx\">have_posts</span><span class=\"p\">()</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"nx\">$tag_query</span><span class=\"o\">-&gt;</span><span class=\"nx\">the_post</span><span class=\"p\">();</span>\n          <span class=\"nx\">$img</span> <span class=\"o\">=</span> <span class=\"nx\">genesis_get_image</span><span class=\"p\">()</span> <span class=\"o\">?</span> <span class=\"nx\">genesis_get_image</span><span class=\"p\">(</span>\n            <span class=\"nx\">array</span><span class=\"p\">(</span> <span class=\"s1\">&#39;size&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;cyberia_related&#39;</span><span class=\"p\">,</span>\n              <span class=\"s1\">&#39;attr&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span> <span class=\"p\">(</span><span class=\"nx\">title</span><span class=\"o\">=&gt;</span><span class=\"s1\">&#39;Si te gust\u00f3 &amp;ldquo;&#39;</span><span class=\"p\">.</span>\n                <span class=\"nx\">single_post_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"kc\">false</span><span class=\"p\">)</span> <span class=\"p\">.</span><span class=\"s1\">&#39;&amp;rdquo;, tal vez te pueda interesar \u00ab&#39;</span> <span class=\"p\">.</span>\n                <span class=\"nx\">get_the_title</span><span class=\"p\">()</span> <span class=\"p\">.</span> <span class=\"s1\">&#39;\u00bb&#39;</span><span class=\"p\">)</span> \n            <span class=\"p\">)</span> \n          <span class=\"p\">)</span> <span class=\"o\">:</span> <span class=\"s1\">&#39;&lt;img src=&quot;&#39;</span> <span class=\"p\">.</span>\n            <span class=\"nx\">get_bloginfo</span><span class=\"p\">(</span> <span class=\"s1\">&#39;stylesheet_directory&#39;</span> <span class=\"p\">)</span> <span class=\"p\">.</span>\n            <span class=\"s1\">&#39;/images/related.png&quot; alt=&quot;Si te gust\u00f3 &amp;ldquo;&#39;</span><span class=\"p\">.</span>\n            <span class=\"nx\">single_post_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"kc\">false</span><span class=\"p\">)</span> <span class=\"p\">.</span><span class=\"s1\">&#39;&amp;rdquo;, tal vez te pueda interesar \u00ab&#39;</span> <span class=\"p\">.</span>\n            <span class=\"nx\">get_the_title</span><span class=\"p\">()</span> <span class=\"p\">.</span> <span class=\"s1\">&#39;\u00bb&quot; /&gt;&#39;</span><span class=\"p\">;</span>\n          <span class=\"nx\">$related</span> <span class=\"p\">.</span><span class=\"o\">=</span> <span class=\"s1\">&#39;&lt;li&gt;&lt;a href=&quot;&#39;</span> <span class=\"p\">.</span> <span class=\"nx\">get_permalink</span><span class=\"p\">()</span> <span class=\"p\">.</span>\n            <span class=\"s1\">&#39;&quot; rel=&quot;bookmark&quot; title=&quot;Si te gust\u00f3 &amp;ldquo;&#39;</span><span class=\"p\">.</span>\n            <span class=\"nx\">single_post_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"kc\">false</span><span class=\"p\">)</span> <span class=\"p\">.</span><span class=\"s1\">&#39;&amp;rdquo;, tal vez te pueda interesar \u00ab&#39;</span> <span class=\"p\">.</span>\n            <span class=\"nx\">get_the_title</span><span class=\"p\">()</span> <span class=\"p\">.</span> <span class=\"s1\">&#39;\u00bb&quot;&gt;&#39;</span> <span class=\"p\">.</span> <span class=\"nx\">$img</span> <span class=\"p\">.</span> <span class=\"nx\">get_the_title</span><span class=\"p\">()</span> <span class=\"p\">.</span> <span class=\"s1\">&#39;&lt;/a&gt;&lt;/li&gt;&#39;</span><span class=\"p\">;</span>\n          <span class=\"nx\">$postIDs</span><span class=\"p\">[]</span> <span class=\"o\">=</span> <span class=\"nx\">$post</span><span class=\"o\">-&gt;</span><span class=\"nx\">ID</span><span class=\"p\">;</span>\n          <span class=\"nx\">$count</span><span class=\"o\">++</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span> <span class=\"c1\">// if $tag_query</span>\n    <span class=\"p\">}</span> <span class=\"c1\">// $tags</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">$count</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">4</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">$catIDs</span> <span class=\"o\">=</span> <span class=\"nx\">array</span><span class=\"p\">(</span> <span class=\"p\">);</span>\n      <span class=\"nx\">foreach</span> <span class=\"p\">(</span> <span class=\"nx\">$cats</span> <span class=\"kr\">as</span> <span class=\"nx\">$cat</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"nx\">$cat</span> <span class=\"p\">)</span>\n          <span class=\"k\">continue</span><span class=\"p\">;</span>\n        <span class=\"nx\">$catIDs</span><span class=\"p\">[]</span> <span class=\"o\">=</span> <span class=\"nx\">$cat</span><span class=\"p\">;</span>\n      <span class=\"p\">}</span> <span class=\"c1\">// foreach</span>\n      <span class=\"nx\">$showposts</span> <span class=\"o\">=</span> <span class=\"mi\">5</span> <span class=\"o\">-</span> <span class=\"nx\">$count</span><span class=\"p\">;</span>\n      <span class=\"nx\">$args</span> <span class=\"o\">=</span> <span class=\"nx\">array</span><span class=\"p\">(</span>\n        <span class=\"s1\">&#39;post_type&#39;</span>             <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span><span class=\"p\">(</span> <span class=\"s1\">&#39;post&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;peliculas&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;libros&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;apps&#39;</span><span class=\"p\">),</span>       \n        <span class=\"s1\">&#39;category__in&#39;</span>          <span class=\"o\">=&gt;</span> <span class=\"nx\">$catIDs</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;category__not_in&#39;</span>      <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span> <span class=\"p\">(</span> <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">72</span><span class=\"p\">,</span><span class=\"mi\">34</span><span class=\"p\">,</span><span class=\"mi\">236</span><span class=\"p\">,</span> <span class=\"p\">),</span>\n        <span class=\"s1\">&#39;post__not_in&#39;</span>          <span class=\"o\">=&gt;</span> <span class=\"nx\">$postIDs</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;showposts&#39;</span>             <span class=\"o\">=&gt;</span> <span class=\"nx\">$showposts</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ignore_sticky_posts&#39;</span>   <span class=\"o\">=&gt;</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;orderby&#39;</span>               <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;rand&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;tax_query&#39;</span>             <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span><span class=\"p\">(</span>\n          <span class=\"nx\">array</span><span class=\"p\">(</span>\n            <span class=\"s1\">&#39;taxonomy&#39;</span>  <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;post_format&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;field&#39;</span>     <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;slug&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;terms&#39;</span>     <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span><span class=\"p\">(</span>\n              <span class=\"s1\">&#39;post-format-link&#39;</span><span class=\"p\">,</span>\n              <span class=\"s1\">&#39;post-format-status&#39;</span><span class=\"p\">,</span>\n              <span class=\"s1\">&#39;post-format-aside&#39;</span><span class=\"p\">,</span>\n              <span class=\"s1\">&#39;post-format-quote&#39;</span> <span class=\"p\">),</span>\n            <span class=\"s1\">&#39;operator&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;NOT IN&#39;</span>\n          <span class=\"p\">)</span> <span class=\"c1\">// array tax_query in</span>\n        <span class=\"p\">)</span> <span class=\"c1\">// tax_query</span>\n      <span class=\"p\">);</span> <span class=\"c1\">// $args</span>\n      <span class=\"nx\">$cat_query</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">WP_Query</span><span class=\"p\">(</span> <span class=\"nx\">$args</span> <span class=\"p\">);</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">$cat_query</span><span class=\"o\">-&gt;</span><span class=\"nx\">have_posts</span><span class=\"p\">()</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">while</span> <span class=\"p\">(</span> <span class=\"nx\">$cat_query</span><span class=\"o\">-&gt;</span><span class=\"nx\">have_posts</span><span class=\"p\">()</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"nx\">$cat_query</span><span class=\"o\">-&gt;</span><span class=\"nx\">the_post</span><span class=\"p\">();</span>\n          <span class=\"nx\">$img</span> <span class=\"o\">=</span> <span class=\"nx\">genesis_get_image</span><span class=\"p\">()</span> <span class=\"o\">?</span> <span class=\"nx\">genesis_get_image</span><span class=\"p\">(</span>\n            <span class=\"nx\">array</span><span class=\"p\">(</span> \n              <span class=\"s1\">&#39;size&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;cyberia_related&#39;</span><span class=\"p\">,</span>\n              <span class=\"s1\">&#39;attr&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">array</span> <span class=\"p\">(</span>\n                <span class=\"nx\">title</span><span class=\"o\">=&gt;</span><span class=\"s1\">&#39;Si te gust\u00f3 &amp;ldquo;&#39;</span><span class=\"p\">.</span>\n                <span class=\"nx\">single_post_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"kc\">false</span><span class=\"p\">)</span> <span class=\"p\">.</span><span class=\"s1\">&#39;&amp;rdquo;, tal vez te pueda interesar \u00ab&#39;</span> <span class=\"p\">.</span>\n                <span class=\"nx\">get_the_title</span><span class=\"p\">()</span> <span class=\"p\">.</span> <span class=\"s1\">&#39;\u00bb&#39;</span>\n              <span class=\"p\">)</span>\n            <span class=\"p\">)</span> \n          <span class=\"p\">)</span> <span class=\"o\">:</span> <span class=\"s1\">&#39;&lt;img src=&quot;&#39;</span> <span class=\"p\">.</span> <span class=\"nx\">get_bloginfo</span><span class=\"p\">(</span> <span class=\"s1\">&#39;stylesheet_directory&#39;</span> <span class=\"p\">)</span> <span class=\"p\">.</span>\n           <span class=\"s1\">&#39;/images/related.png&quot; alt=&quot;Si te gust\u00f3 &amp;ldquo;&#39;</span><span class=\"p\">.</span> <span class=\"nx\">single_post_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"kc\">false</span><span class=\"p\">)</span> <span class=\"p\">.</span>\n           <span class=\"s1\">&#39;&amp;rdquo;, tal vez te pueda interesar \u00ab&#39;</span> <span class=\"p\">.</span> <span class=\"nx\">get_the_title</span><span class=\"p\">()</span> <span class=\"p\">.</span> <span class=\"s1\">&#39;\u00bb&quot; /&gt;&#39;</span><span class=\"p\">;</span>\n          <span class=\"nx\">$related</span> <span class=\"p\">.</span><span class=\"o\">=</span> <span class=\"s1\">&#39;&lt;li&gt;&lt;a href=&quot;&#39;</span> <span class=\"p\">.</span> <span class=\"nx\">get_permalink</span><span class=\"p\">()</span> <span class=\"p\">.</span> <span class=\"s1\">&#39;&quot; rel=&quot;bookmark&quot; title=&quot;Si te gust\u00f3 &amp;ldquo;&#39;</span><span class=\"p\">.</span> <span class=\"nx\">single_post_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"kc\">false</span><span class=\"p\">)</span> <span class=\"p\">.</span><span class=\"s1\">&#39;&amp;rdquo;, tal vez te pueda interesar \u00ab&#39;</span> <span class=\"p\">.</span> <span class=\"nx\">get_the_title</span><span class=\"p\">()</span> <span class=\"p\">.</span> <span class=\"s1\">&#39;\u00bb&quot;&gt;&#39;</span> <span class=\"p\">.</span> <span class=\"nx\">$img</span> <span class=\"p\">.</span> <span class=\"nx\">get_the_title</span><span class=\"p\">()</span> <span class=\"p\">.</span> <span class=\"s1\">&#39;&lt;/a&gt;&lt;/li&gt;&#39;</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span> <span class=\"c1\">// while $cat_query</span>\n      <span class=\"p\">}</span> <span class=\"c1\">// if $cat_query</span>\n    <span class=\"p\">}</span> <span class=\"c1\">// if $count ,= 4</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">$related</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">printf</span><span class=\"p\">(</span> <span class=\"s1\">&#39;&lt;div class=&quot;breadcrumb&quot; id=&quot;related&quot;&gt;&lt;h3 class=&quot;related-title&quot;&gt;Art\u00edculos Recomendados&lt;/h3&gt;&lt;ul class=&quot;related-list&quot;&gt;%s&lt;/ul&gt;&lt;/div&gt;&#39;</span><span class=\"p\">,</span> <span class=\"nx\">$related</span> <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"nx\">wp_reset_query</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span> <span class=\"c1\">// if ( is_single() )</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Usa Genesis Framework</p>\n<p><a href=\"http://ito.mx/genesis\">Genesis</a> te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, <a href=\"http://ito.mx/genesis\">Genesis</a> te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple &ndash; <strong>!Empieza a usar hoy mismo <a href=\"http://ito.mx/genesis\">Genesis Framework</a>!</strong></p>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-crear-post-relacionados-sin-usar-plugins", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 77, "fields": {"idx": "b0c93354-e8c8-4310-b6a8-a69cd69ab39d", "creado": "2017-07-29T04:35:04.009Z", "modificado": "2017-08-04T21:54:13.050Z", "title": "5 editores Zen", "summary": "", "body": "Title: 5 editores Zen\r\nDate: 2013/11/27 21:37\r\nCategory: Desarrollo \r\nTags: blogging, editores \r\nSlug: 5-editores-zen\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nDurante muchos a\u00f1os us\u00e9 Movable Type para crear sitios, pero principalmente para esto de la blogueada en mi blog personal. Me acostumbr\u00e9 bastante a usar Textile, un sencillo maquetador que me permit\u00eda producir c\u00f3digo bastante limpio y escribir de una manera muy eficiente.\r\n\r\nLa verdad es que cuando me cambi\u00e9 a *WordPress* despu\u00e9s de 6 a\u00f1os de usar Movable Type, el trauma fue enorme, porque hay un plugin que funcione correctamente con Textile y WordPress, generalmente por la codificaci\u00f3n y por los acentos que escribimos en idioma espa\u00f1ol.\r\n\r\nYa perfectamente instalado en *WordPress*, me di a la tarea de buscar un editor que pudiera satisfacer mis exigencias para editar y colorear archivos en diferentes lenguajes de programaci\u00f3n y archivos Textile.\r\n\r\nTe presento 5 editores de texto gratuitos para escribir sin distracciones.\r\n\r\n### WriteMonkey\r\n\r\n![writemonkey.png](//i.imgur.com/MWB4CdY.png \"Writer Monkey\") \r\n\r\nPero ahora, buscando un buen editor me encontre con uno gratuito que se llama [Write Monkey](href=\"http://writemonkey.com/index.php) un editor estilo minimalista, muy zen y bastante eficiente, que puede convertir Textile en HTML. Cuando lo vi no lo pod\u00eda creer.\r\n\r\nLas no son tan simples como parece, porque la librer\u00eda Textile que usa para la conversi\u00f3n no maneja correctamente el protocolo propuesto, por ejemplo, no funciona el bloque pre. que uso con bastante frecuencia porque sirve para mostrar fragmentos de c\u00f3digo.\r\n\r\nSin embargo, WriteMonkey tiene muchas funciones y lo principal, una pantalla limpia y clara que no tiene distracciones y te permite concentrarte en escribir. Adem\u00e1s puede agregar un nost\u00e1lgico sonido de m\u00e1quina de escribir o llevar un control del tiempo que dedicas a escribir.\r\n\r\nLo instal\u00e9 en mi memoria USB y funciona muy bien bajo [PortableApps.com](http://portableapps.com).\r\n\r\n### Focus Writer\r\n\r\n![focuswriter.png](//i.imgur.com/OMvdl83.png \"Focus Writer\") \r\n\r\nPero no fue el \u00fanico editor que encontr\u00e9, [*FocusWriter*](http://gottcode.org/focuswriter/) es otro editor gratuito simple y libre de distracciones. Mantiene oculta la interface de men\u00fas y barras de herramientas que solo aparecen cuando pasamos el rat\u00f3n por la parte superior e inferior de la ventana del programa.\r\n\r\nLa parte m\u00e1s interesante de este programa es que tiene temas. Con fondos de pantalla y colores. Incluso hay sitios dedicados a [temas para FocusWriter](href=\"http://blog.scrybr.com/).\r\n\r\nAdem\u00e1s de los temas, que pueden hacer de FocusWriter un programa visualmente muy atractivo, tiene el sonido de m\u00e1quina de describir y control de metas a lograr, ya sea en n\u00famero de palabras o tiempo de escritura.\r\n\r\nPor cierto que tiene una instalaci\u00f3n nativa en PortableApps.com.\r\n\r\n### Intype\r\n\r\n![intype.png](https://i.imgur.com/e7U1pQA.png \"InType\") \r\n\r\nEs uno de los editores m\u00e1s potentes que existen actualmente. *Dicen* que est\u00e1 basado en un editor muy famoso del mundo Mac, pero yo no lo conozco. Es r\u00e1pido y tiene much\u00edsimas funciones. Todas muy accesibles.\r\n\r\nPuede funcionar como un entorno sin distracciones, pero es el conjunto de caracter\u00edsticas que de [*Intype*](http://inotai.com/intype/) lo que lo hacen \u00fanico.\r\n\r\nUna de sus caracter\u00edsticas m\u00e1s potentes es que puede crear atajos de teclado con fragmentos de c\u00f3digo, por ejemplo cabeceras de funciones, que escriban l\u00edneas completas con un par de combinaciones.\r\n\r\nIntype actualmente se distribuye sin costo, porque se encuentra en fase beta y su desarrollo es m\u00e1s o menos activo. El programa, actualmente se encuentra en la versi\u00f3n 0.9.3 que funciona durante tres meses ya que se est\u00e1 probando el sistema de licenciamiento.\r\n\r\n### Vim\r\n\r\n![vim.png](//i.imgur.com/SD4fbUz.png \"VIM\") \r\n\r\n[*Vim*](http://vim.org) es el editor por excelencia de los programadores de los programadores, tiene m\u00e1s funciones de las que puedo contar y usar. Estoy seguro que no conozco ni el 10% de las caracter\u00edsticas de este potente editor.\r\n\r\nSiguiendo la misma filosof\u00eda zen este editor funciona sin distractores, lo que permite que te dediques a escribir. Por supuesto tiene disponible una configuraci\u00f3n para [colorear archivos de Textile](http://www.vim.org/scripts/script.php?script_id=2305), aunque no se instala autom\u00e1ticamente, pero puede incluso procesarlos.\r\n\r\nLa versi\u00f3n que yo uso es la portable que se instala con un solo clic a trav\u00e9s de la interface de PortableApps.com.\r\n\r\n### Gedit\r\n\r\n![gedit.png](//i.imgur.com/e0UaKWQ.png \"Gedit\") \r\n\r\nGedit es el editor est\u00e1ndar de Gnome. Aunque programado originalmente para entornos GNU/Linux, ya fue portado a MS Windows y puede funcionar como programa portatil en PortableApps.com.\r\n\r\nPor supuesto que es un editor muy potente y tiene todas las caracter\u00edsticas de sencillez, minimalismo y estilo zen que ya hemos visto en los otros editores. Incluyendo atajos, sintaxis coloreada, snippets, etc.\r\n\r\nPese a ser un programa portado, el c\u00f3digo de Gedit es tan eficiente que es verdaderamente r\u00e1pido. Adem\u00e1s de su perfecta integraci\u00f3n con Python, permite que tenga plugins que le dan poder un gran poder de personalizaci\u00f3n.\r\n\r\n### Conclusi\u00f3n\r\n\r\nEditores Zen que te permitan escribir sin distracciones en Windows existen y son bastante buenos. Pru\u00e9balos y no te arrepentir\u00e1s, mejorar\u00e1 tu productividad enormente.", "extend": "", "pub_date": "2013-11-28T05:33:12Z", "summary_html": "", "body_html": "<p>Durante muchos a\u00f1os us\u00e9 Movable Type para crear sitios, pero principalmente para esto de la blogueada en mi blog personal. Me acostumbr\u00e9 bastante a usar Textile, un sencillo maquetador que me permit\u00eda producir c\u00f3digo bastante limpio y escribir de una manera muy eficiente.</p>\n<p>La verdad es que cuando me cambi\u00e9 a <em>WordPress</em> despu\u00e9s de 6 a\u00f1os de usar Movable Type, el trauma fue enorme, porque hay un plugin que funcione correctamente con Textile y WordPress, generalmente por la codificaci\u00f3n y por los acentos que escribimos en idioma espa\u00f1ol.</p>\n<p>Ya perfectamente instalado en <em>WordPress</em>, me di a la tarea de buscar un editor que pudiera satisfacer mis exigencias para editar y colorear archivos en diferentes lenguajes de programaci\u00f3n y archivos Textile.</p>\n<p>Te presento 5 editores de texto gratuitos para escribir sin distracciones.</p>\n<h3 id=\"writemonkey\">WriteMonkey</h3>\n<p><img alt=\"writemonkey.png\" src=\"//i.imgur.com/MWB4CdY.png\" title=\"Writer Monkey\"> </p>\n<p>Pero ahora, buscando un buen editor me encontre con uno gratuito que se llama <a href=\"href=&quot;http://writemonkey.com/index.php\">Write Monkey</a> un editor estilo minimalista, muy zen y bastante eficiente, que puede convertir Textile en HTML. Cuando lo vi no lo pod\u00eda creer.</p>\n<p>Las no son tan simples como parece, porque la librer\u00eda Textile que usa para la conversi\u00f3n no maneja correctamente el protocolo propuesto, por ejemplo, no funciona el bloque pre. que uso con bastante frecuencia porque sirve para mostrar fragmentos de c\u00f3digo.</p>\n<p>Sin embargo, WriteMonkey tiene muchas funciones y lo principal, una pantalla limpia y clara que no tiene distracciones y te permite concentrarte en escribir. Adem\u00e1s puede agregar un nost\u00e1lgico sonido de m\u00e1quina de escribir o llevar un control del tiempo que dedicas a escribir.</p>\n<p>Lo instal\u00e9 en mi memoria USB y funciona muy bien bajo <a href=\"http://portableapps.com\">PortableApps.com</a>.</p>\n<h3 id=\"focus-writer\">Focus Writer</h3>\n<p><img alt=\"focuswriter.png\" src=\"//i.imgur.com/OMvdl83.png\" title=\"Focus Writer\"> </p>\n<p>Pero no fue el \u00fanico editor que encontr\u00e9, <a href=\"http://gottcode.org/focuswriter/\"><em>FocusWriter</em></a> es otro editor gratuito simple y libre de distracciones. Mantiene oculta la interface de men\u00fas y barras de herramientas que solo aparecen cuando pasamos el rat\u00f3n por la parte superior e inferior de la ventana del programa.</p>\n<p>La parte m\u00e1s interesante de este programa es que tiene temas. Con fondos de pantalla y colores. Incluso hay sitios dedicados a <a href=\"href=&quot;http://blog.scrybr.com/\">temas para FocusWriter</a>.</p>\n<p>Adem\u00e1s de los temas, que pueden hacer de FocusWriter un programa visualmente muy atractivo, tiene el sonido de m\u00e1quina de describir y control de metas a lograr, ya sea en n\u00famero de palabras o tiempo de escritura.</p>\n<p>Por cierto que tiene una instalaci\u00f3n nativa en PortableApps.com.</p>\n<h3 id=\"intype\">Intype</h3>\n<p><img alt=\"intype.png\" src=\"https://i.imgur.com/e7U1pQA.png\" title=\"InType\"> </p>\n<p>Es uno de los editores m\u00e1s potentes que existen actualmente. <em>Dicen</em> que est\u00e1 basado en un editor muy famoso del mundo Mac, pero yo no lo conozco. Es r\u00e1pido y tiene much\u00edsimas funciones. Todas muy accesibles.</p>\n<p>Puede funcionar como un entorno sin distracciones, pero es el conjunto de caracter\u00edsticas que de <a href=\"http://inotai.com/intype/\"><em>Intype</em></a> lo que lo hacen \u00fanico.</p>\n<p>Una de sus caracter\u00edsticas m\u00e1s potentes es que puede crear atajos de teclado con fragmentos de c\u00f3digo, por ejemplo cabeceras de funciones, que escriban l\u00edneas completas con un par de combinaciones.</p>\n<p>Intype actualmente se distribuye sin costo, porque se encuentra en fase beta y su desarrollo es m\u00e1s o menos activo. El programa, actualmente se encuentra en la versi\u00f3n 0.9.3 que funciona durante tres meses ya que se est\u00e1 probando el sistema de licenciamiento.</p>\n<h3 id=\"vim\">Vim</h3>\n<p><img alt=\"vim.png\" src=\"//i.imgur.com/SD4fbUz.png\" title=\"VIM\"> </p>\n<p><a href=\"http://vim.org\"><em>Vim</em></a> es el editor por excelencia de los programadores de los programadores, tiene m\u00e1s funciones de las que puedo contar y usar. Estoy seguro que no conozco ni el 10% de las caracter\u00edsticas de este potente editor.</p>\n<p>Siguiendo la misma filosof\u00eda zen este editor funciona sin distractores, lo que permite que te dediques a escribir. Por supuesto tiene disponible una configuraci\u00f3n para <a href=\"http://www.vim.org/scripts/script.php?script_id=2305\">colorear archivos de Textile</a>, aunque no se instala autom\u00e1ticamente, pero puede incluso procesarlos.</p>\n<p>La versi\u00f3n que yo uso es la portable que se instala con un solo clic a trav\u00e9s de la interface de PortableApps.com.</p>\n<h3 id=\"gedit\">Gedit</h3>\n<p><img alt=\"gedit.png\" src=\"//i.imgur.com/e0UaKWQ.png\" title=\"Gedit\"> </p>\n<p>Gedit es el editor est\u00e1ndar de Gnome. Aunque programado originalmente para entornos GNU/Linux, ya fue portado a MS Windows y puede funcionar como programa portatil en PortableApps.com.</p>\n<p>Por supuesto que es un editor muy potente y tiene todas las caracter\u00edsticas de sencillez, minimalismo y estilo zen que ya hemos visto en los otros editores. Incluyendo atajos, sintaxis coloreada, snippets, etc.</p>\n<p>Pese a ser un programa portado, el c\u00f3digo de Gedit es tan eficiente que es verdaderamente r\u00e1pido. Adem\u00e1s de su perfecta integraci\u00f3n con Python, permite que tenga plugins que le dan poder un gran poder de personalizaci\u00f3n.</p>\n<h3 id=\"conclusion\">Conclusi\u00f3n</h3>\n<p>Editores Zen que te permitan escribir sin distracciones en Windows existen y son bastante buenos. Pru\u00e9balos y no te arrepentir\u00e1s, mejorar\u00e1 tu productividad enormente.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "5-editores-zen", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 78, "fields": {"idx": "5052034d-1b52-465c-ab06-e5eeb6a9abd9", "creado": "2017-07-29T04:35:32.827Z", "modificado": "2017-07-29T04:35:32.827Z", "title": "Layout al azar en WordPress", "summary": "", "body": "Title: Layout al azar en WordPress\r\nDate: 2013/11/28 21:59\r\nCategory: Desarrollo \r\nTags: filtros, genesiswp, php, wordpress\r\nSlug: layout-al-azar-en-wordpress\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nComo una prueba de concepto, m\u00e1s que algo verdaderamente \u00fatil en producci\u00f3n, esta funci\u00f3n nos ayuda a cambar el _layout_ (o la estructura de la p\u00e1gina en WordPress) al azar.\r\n\r\nLo que hace primero es tomar un n\u00famero al azar entre uno y dos, que son las opciones que se programaron, aunque evidentemente puede tener cualquier cantidad de opciones, pero bueno, para empezar, dos son suficiente.\r\n\r\nA continuaci\u00f3n, asigna uno de los dos _layout_ dependiendo del n\u00famero que haya salido en la funci\u00f3n `random`.\r\n\r\n```language-php\r\n/**\r\n  * Funcion Cyberia Layout\r\n  * @name cyberia_layout\r\n  * @author Sanchez Toledano\r\n  * @link http://namespace.mx\r\n  *\r\n  * @param $opt - el layout del sitio\r\n  * @return $opt - el nuevo layout\r\n  */\r\nadd_filter('genesis_pre_get_option_site_layout', 'cyberia_layout');\r\nfunction cyberia_layout($opt) {\r\n  if ( rand(1,2)==2 ) :\r\n    $opt = 'sidebar-content';\r\n  else:\r\n    $opt = 'content-sidebar';\r\n  endif;\r\n  return $opt;\r\n}\r\n```\r\n\r\nComo ver\u00e1n, la funci\u00f3n es muy simple y cada vez que se recarga la p\u00e1gina se genera un nuevo _layout_. Esto al final resulta cansado para el visitante y por eso es solo un concepto.\r\n\r\n!!! notice \"Usa Genesis Framework\"\r\n    [Genesis][gen] te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, [Genesis][gen] te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple -- **!Empieza a usar hoy mismo [Genesis Framework][gen]!**\r\n   \r\n[gen]: http://ito.mx/genesis", "extend": "", "pub_date": "2013-11-29T05:35:04Z", "summary_html": "", "body_html": "<p>Como una prueba de concepto, m\u00e1s que algo verdaderamente \u00fatil en producci\u00f3n, esta funci\u00f3n nos ayuda a cambar el <em>layout</em> (o la estructura de la p\u00e1gina en WordPress) al azar.</p>\n<p>Lo que hace primero es tomar un n\u00famero al azar entre uno y dos, que son las opciones que se programaron, aunque evidentemente puede tener cualquier cantidad de opciones, pero bueno, para empezar, dos son suficiente.</p>\n<p>A continuaci\u00f3n, asigna uno de los dos <em>layout</em> dependiendo del n\u00famero que haya salido en la funci\u00f3n <code>random</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/**</span>\n<span class=\"cm\">  * Funcion Cyberia Layout</span>\n<span class=\"cm\">  * @name cyberia_layout</span>\n<span class=\"cm\">  * @author Sanchez Toledano</span>\n<span class=\"cm\">  * @link http://namespace.mx</span>\n<span class=\"cm\">  *</span>\n<span class=\"cm\">  * @param $opt - el layout del sitio</span>\n<span class=\"cm\">  * @return $opt - el nuevo layout</span>\n<span class=\"cm\">  */</span>\n<span class=\"nx\">add_filter</span><span class=\"p\">(</span><span class=\"s1\">&#39;genesis_pre_get_option_site_layout&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cyberia_layout&#39;</span><span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">cyberia_layout</span><span class=\"p\">(</span><span class=\"nx\">$opt</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">rand</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">==</span><span class=\"mi\">2</span> <span class=\"p\">)</span> <span class=\"o\">:</span>\n    <span class=\"nx\">$opt</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;sidebar-content&#39;</span><span class=\"p\">;</span>\n  <span class=\"k\">else</span><span class=\"o\">:</span>\n    <span class=\"nx\">$opt</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content-sidebar&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">endif</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"nx\">$opt</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Como ver\u00e1n, la funci\u00f3n es muy simple y cada vez que se recarga la p\u00e1gina se genera un nuevo <em>layout</em>. Esto al final resulta cansado para el visitante y por eso es solo un concepto.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Usa Genesis Framework</p>\n<p><a href=\"http://ito.mx/genesis\">Genesis</a> te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, <a href=\"http://ito.mx/genesis\">Genesis</a> te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple &ndash; <strong>!Empieza a usar hoy mismo <a href=\"http://ito.mx/genesis\">Genesis Framework</a>!</strong></p>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "layout-al-azar-en-wordpress", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 79, "fields": {"idx": "f86d9ea1-fbdc-42c1-a926-63bf9485f1a9", "creado": "2017-07-29T04:37:16.275Z", "modificado": "2017-07-29T04:37:16.275Z", "title": "Integrar el protocolo OpenGraph en Genesis", "summary": "", "body": "Title: Integrar el protocolo OpenGraph en Genesis\r\nDate: 2013/11/28 22:06\r\nCategory: Desarrollo \r\nTags: genesiswp, php, wordpress\r\nSlug: integrar-el-protocolo-opengraph-en-genesis\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nEl protocolo Open Graph te permite integrar tus p\u00e1ginas en el tejido de las redes sociales como **Facebook** y **Google+**. Al insertar ciertas etiquetas que describen tu p\u00e1gina le proporcionas funcionalidades que permiten convertir a tu sitio en un objeto que puede ser usado en perfiles sociales, fuentes de contenido o para conectar usuarios[^1].\r\n\r\nEl protocolo OpenGraph es el coraz\u00f3n del *tejido social*[^2] de Facebook; los usuarios solo tienen que preocuparse por sus conexiones. Gracias a que este gigante de las redes sociales hizo p\u00fablico este protocolo, todos podemos beneficiarnos de lo que ofrece.\r\n\r\nPermite entre otras cosas establecer la p\u00e1gina como un objeto y asignarle propiedades para describirlo. Por ejemplo, podemos describir una p\u00e1gina como un art\u00edculo y asignarle caracter\u00edsticas como t\u00edtulo, autor, etc. Pero tambi\u00e9n podemos crear un \u00abevento\u00bb y describir sus caracter\u00edstica como horario, ubicaci\u00f3n participantes.\r\n\r\nGracias al poder que proporciona [Genesis Framework][gen] podemos controlar de manera granular la descripci\u00f3n de los contenidos de nuestra web y as\u00ed las redes sociales no tendr\u00e1n que *adivinar* las propiedades del objeto que compartimos. De esta manera, podremos indicarle a Facebook o a Goolge+[^3] qu\u00e9 queremos compartir y c\u00f3mo queremos que se visualice.\r\n\r\n![El Protocolo OpenGraph](/media/20131128/opengraph.png \"El Protocolo OpenGraph\")\r\n\r\n### OpenGraph con Genesis Framework\r\n\r\nLa primera acci\u00f3n de nuestro c\u00f3digo es agregar al *hook*, es determinar el gancho donde vamos a *\"colgar\"* nuestro c\u00f3digo. Ya que las propiedades OpenGraph son meta-descripciones (es decir, que describen propiedades del documento), deben colocarse en el encabezado, antes del cierre de la etiqueta `head`. Por eso el gancho o *hook* a utilizar es `wp_head`, a donde colgamos la funci\u00f3n `cyberia_opengraph` con una ponderaci\u00f3n de 15 (a menor ponderaci\u00f3n m\u00e1s importancia).\r\n\r\nLa definici\u00f3n de la funci\u00f3n `cyberia_opengraph` funciona solo con las entradas individuales, de ah\u00ed que solo se active con la condicional `is_single()`, puedes crear un conjunto de propiedades para la portada, pero en este ejemplo, las entradas individuales son suficientes.\r\n\r\nLas propiedades tienen t\u00edtulos claros en ingl\u00e9s. Y estos son los que utilizamos en esta funci\u00f3n:\r\n\r\n- `og:title` es el t\u00edtulo del objeto, y usamos `the_title_attribute( 'echo=0' )`, es decir, el t\u00edtulo del nuestra entrada.\r\n- `og:site_name` es el nombre de nuestro sitio. Yo utilizo el nombre del blog y la descripci\u00f3n. No necesito una funci\u00f3n, as\u00ed que escribo la direcci\u00f3n directamente.\r\n- `og:type` indica el tipo de objeto, en mi caso siempre es art\u00edculo[^4], `article` porque debe ser en ingl\u00e9s.\r\n- `og:url` es el *permalink* de tu art\u00edculo, toca usar la funci\u00f3n `get_permalink()`. Uso `get_permalink` porque devuelve la URL simplemente, `the_permalink` devuelve un enlace y el texto de anclaje, por lo que no sirve para OpenGraph.\r\n- `og:description` usamos el contenido de la descripci\u00f3n en la secci\u00f3n SEO (recuerda que [Genesis Framework][gen] incorpora potentes caracter\u00edsticas SEO y no requiere de plugins adicionales. La funci\u00f3n entonces es `genesis_get_custom_field( '_genesis_description' )`.\r\n- `og:locale` es el idioma en el que se comparte y se interact\u00faa con el objeto. En mi caso es `es_LA` que corresponde al Espa\u00f1ol de Latinoam\u00e9rica[^5].\r\n- `og:image` corresponde a la imagen que acompa\u00f1a al objeto. En el caso de Cyberia.MX es una buena pr\u00e1ctica agregar a cada art\u00edculo una imagen destacada, y usamos la funci\u00f3n `genesis_get_image (array('format'=>'url', 'size'=>'cyberia_home'))` para mostrar la miniatura que queremos. La opci\u00f3n es que el sitio que usa nuestro objeto elija la primera imagen que encuentre y eso no siempre es conveniente.\r\n- `og:image:width` y `og:image:height` establecen las dimensiones de la miniatura, de modo que tenemos un absoluto control sobre lo que mostramos.\r\n\r\nAqu\u00ed tienes el c\u00f3digo completo de la funci\u00f3n `cyberia_opengraph`:\r\n\r\n```language-php\r\n/**\r\n * Function cyberia_opengraph\r\n *\r\n * Adiciona la meta informaci\u00f3n que usa OpenGraph\r\n *\r\n * @author Javier Sanchez\r\n * @link http://cyberia.mx\r\n *\r\n * @param none\r\n * @return opengraph metadata\r\n */\r\nadd_action ('wp_head', 'cyberia_opengraph', 15);\r\nfunction cyberia_opengraph () {\r\n  if ( is_single () ) { ?>\r\n    <meta property=\"og:title\" content=\"<?php echo the_title_attribute( 'echo=0' ); ?>\" />\r\n    <meta property=\"og:site_name\" content=\"Cyberia.MX - Cyberia es Internet... Internet es tu mundo\" />\r\n    <meta property=\"og:type\" content=\"article\" />\r\n    <meta property=\"og:url\" content=\"<?php echo get_permalink(); ?>\"/>\r\n    <meta property=\"og:description\" content=\"<?php echo genesis_get_custom_field( '_genesis_description' ); ?>\" />\r\n    <meta property=\"og:locale\" content=\"es_LA\" />\r\n    <meta property=\"og:image\" content=\"<?php echo genesis_get_image (array('format'=>'url', 'size'=>'cyberia_home')); ?>\" />\r\n    <meta property=\"og:image:type\" content=\"image/jpeg\" />\r\n    <meta property=\"og:image:width\" content=\"200\" />\r\n    <meta property=\"og:image:height\" content=\"200\" />\r\n  <?php }\r\n}\r\n```\r\n\r\nCuando compartimos este contenido en Facebook o en Google+ observar\u00e1s que usan nuestras propiedades OpenGraph y se muestra lo que nosotros establecimos. As\u00ed controlamos c\u00f3mo se comparte y como ven los usuarios de las redes sociales a nuestro sitio.\r\n\r\n![OpenGraph en Google+](/media/20131128/opengraph_google_plus-595x400.png \"OpenGraph en Google+\")\r\n\r\n![OpenGraph en Facebook](/media/20131128/opengraph_facebook.png \"OpenGraph en Facebook\")\r\n\r\n!!! notice \"Usa Genesis Framework\"\r\n    [Genesis][gen] te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, [Genesis][gen] te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple -- **!Empieza a usar hoy mismo [Genesis Framework][gen]!**\r\n   \r\n[gen]: http://ito.mx/genesis\r\n\r\n[^1]: El concepto de OpenGraph es muy amplio y puedes consultarlo en su propio sitio [http://ogp.me](http://ogp.me)\r\n\r\n[^2]: En realidad Facebook no lo llama *tejido social* sino **\"social graph\"**, pero como podr\u00e1s comprobar en la imagen que acompa\u00f1a a este art\u00edculo, la red es un tejido vivo, cambiante.\r\n\r\n[^3]: Hasta donde he podido comprobar, las propiedades de OpenGraph tambi\u00e9n son utilizadas por la red Google+.\r\n\r\n[^4]: Por supuesto que hay muchos [tipos de objetos](http://ogp.me/#types) definidos por OpenGraph.\r\n\r\n[^5]: Por ejemplo para Espa\u00f1a ser\u00eda `es_ES` que corresponde al Castellano.", "extend": "", "pub_date": "2013-11-29T05:35:33Z", "summary_html": "", "body_html": "<p>El protocolo Open Graph te permite integrar tus p\u00e1ginas en el tejido de las redes sociales como <strong>Facebook</strong> y <strong>Google+</strong>. Al insertar ciertas etiquetas que describen tu p\u00e1gina le proporcionas funcionalidades que permiten convertir a tu sitio en un objeto que puede ser usado en perfiles sociales, fuentes de contenido o para conectar usuarios<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>.</p>\n<p>El protocolo OpenGraph es el coraz\u00f3n del <em>tejido social</em><sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> de Facebook; los usuarios solo tienen que preocuparse por sus conexiones. Gracias a que este gigante de las redes sociales hizo p\u00fablico este protocolo, todos podemos beneficiarnos de lo que ofrece.</p>\n<p>Permite entre otras cosas establecer la p\u00e1gina como un objeto y asignarle propiedades para describirlo. Por ejemplo, podemos describir una p\u00e1gina como un art\u00edculo y asignarle caracter\u00edsticas como t\u00edtulo, autor, etc. Pero tambi\u00e9n podemos crear un \u00abevento\u00bb y describir sus caracter\u00edstica como horario, ubicaci\u00f3n participantes.</p>\n<p>Gracias al poder que proporciona <a href=\"http://ito.mx/genesis\">Genesis Framework</a> podemos controlar de manera granular la descripci\u00f3n de los contenidos de nuestra web y as\u00ed las redes sociales no tendr\u00e1n que <em>adivinar</em> las propiedades del objeto que compartimos. De esta manera, podremos indicarle a Facebook o a Goolge+<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup> qu\u00e9 queremos compartir y c\u00f3mo queremos que se visualice.</p>\n<p><img alt=\"El Protocolo OpenGraph\" src=\"/media/20131128/opengraph.png\" title=\"El Protocolo OpenGraph\"></p>\n<h3 id=\"opengraph-con-genesis-framework\">OpenGraph con Genesis Framework</h3>\n<p>La primera acci\u00f3n de nuestro c\u00f3digo es agregar al <em>hook</em>, es determinar el gancho donde vamos a <em>&ldquo;colgar&rdquo;</em> nuestro c\u00f3digo. Ya que las propiedades OpenGraph son meta-descripciones (es decir, que describen propiedades del documento), deben colocarse en el encabezado, antes del cierre de la etiqueta <code>head</code>. Por eso el gancho o <em>hook</em> a utilizar es <code>wp_head</code>, a donde colgamos la funci\u00f3n <code>cyberia_opengraph</code> con una ponderaci\u00f3n de 15 (a menor ponderaci\u00f3n m\u00e1s importancia).</p>\n<p>La definici\u00f3n de la funci\u00f3n <code>cyberia_opengraph</code> funciona solo con las entradas individuales, de ah\u00ed que solo se active con la condicional <code>is_single()</code>, puedes crear un conjunto de propiedades para la portada, pero en este ejemplo, las entradas individuales son suficientes.</p>\n<p>Las propiedades tienen t\u00edtulos claros en ingl\u00e9s. Y estos son los que utilizamos en esta funci\u00f3n:</p>\n<ul>\n<li><code>og:title</code> es el t\u00edtulo del objeto, y usamos <code>the_title_attribute( 'echo=0' )</code>, es decir, el t\u00edtulo del nuestra entrada.</li>\n<li><code>og:site_name</code> es el nombre de nuestro sitio. Yo utilizo el nombre del blog y la descripci\u00f3n. No necesito una funci\u00f3n, as\u00ed que escribo la direcci\u00f3n directamente.</li>\n<li><code>og:type</code> indica el tipo de objeto, en mi caso siempre es art\u00edculo<sup id=\"fnref-4\"><a class=\"footnote-ref\" href=\"#fn-4\">4</a></sup>, <code>article</code> porque debe ser en ingl\u00e9s.</li>\n<li><code>og:url</code> es el <em>permalink</em> de tu art\u00edculo, toca usar la funci\u00f3n <code>get_permalink()</code>. Uso <code>get_permalink</code> porque devuelve la URL simplemente, <code>the_permalink</code> devuelve un enlace y el texto de anclaje, por lo que no sirve para OpenGraph.</li>\n<li><code>og:description</code> usamos el contenido de la descripci\u00f3n en la secci\u00f3n SEO (recuerda que <a href=\"http://ito.mx/genesis\">Genesis Framework</a> incorpora potentes caracter\u00edsticas SEO y no requiere de plugins adicionales. La funci\u00f3n entonces es <code>genesis_get_custom_field( '_genesis_description' )</code>.</li>\n<li><code>og:locale</code> es el idioma en el que se comparte y se interact\u00faa con el objeto. En mi caso es <code>es_LA</code> que corresponde al Espa\u00f1ol de Latinoam\u00e9rica<sup id=\"fnref-5\"><a class=\"footnote-ref\" href=\"#fn-5\">5</a></sup>.</li>\n<li><code>og:image</code> corresponde a la imagen que acompa\u00f1a al objeto. En el caso de Cyberia.MX es una buena pr\u00e1ctica agregar a cada art\u00edculo una imagen destacada, y usamos la funci\u00f3n <code>genesis_get_image (array('format'=&gt;'url', 'size'=&gt;'cyberia_home'))</code> para mostrar la miniatura que queremos. La opci\u00f3n es que el sitio que usa nuestro objeto elija la primera imagen que encuentre y eso no siempre es conveniente.</li>\n<li><code>og:image:width</code> y <code>og:image:height</code> establecen las dimensiones de la miniatura, de modo que tenemos un absoluto control sobre lo que mostramos.</li>\n</ul>\n<p>Aqu\u00ed tienes el c\u00f3digo completo de la funci\u00f3n <code>cyberia_opengraph</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/**</span>\n<span class=\"cm\"> * Function cyberia_opengraph</span>\n<span class=\"cm\"> *</span>\n<span class=\"cm\"> * Adiciona la meta informaci\u00f3n que usa OpenGraph</span>\n<span class=\"cm\"> *</span>\n<span class=\"cm\"> * @author Javier Sanchez</span>\n<span class=\"cm\"> * @link http://cyberia.mx</span>\n<span class=\"cm\"> *</span>\n<span class=\"cm\"> * @param none</span>\n<span class=\"cm\"> * @return opengraph metadata</span>\n<span class=\"cm\"> */</span>\n<span class=\"nx\">add_action</span> <span class=\"p\">(</span><span class=\"s1\">&#39;wp_head&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cyberia_opengraph&#39;</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">cyberia_opengraph</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">is_single</span> <span class=\"p\">()</span> <span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"o\">?&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">meta</span> <span class=\"nx\">property</span><span class=\"o\">=</span><span class=\"s2\">&quot;og:title&quot;</span> <span class=\"nx\">content</span><span class=\"o\">=</span><span class=\"s2\">&quot;&lt;?php echo the_title_attribute( &#39;echo=0&#39; ); ?&gt;&quot;</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">meta</span> <span class=\"nx\">property</span><span class=\"o\">=</span><span class=\"s2\">&quot;og:site_name&quot;</span> <span class=\"nx\">content</span><span class=\"o\">=</span><span class=\"s2\">&quot;Cyberia.MX - Cyberia es Internet... Internet es tu mundo&quot;</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">meta</span> <span class=\"nx\">property</span><span class=\"o\">=</span><span class=\"s2\">&quot;og:type&quot;</span> <span class=\"nx\">content</span><span class=\"o\">=</span><span class=\"s2\">&quot;article&quot;</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">meta</span> <span class=\"nx\">property</span><span class=\"o\">=</span><span class=\"s2\">&quot;og:url&quot;</span> <span class=\"nx\">content</span><span class=\"o\">=</span><span class=\"s2\">&quot;&lt;?php echo get_permalink(); ?&gt;&quot;</span><span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">meta</span> <span class=\"nx\">property</span><span class=\"o\">=</span><span class=\"s2\">&quot;og:description&quot;</span> <span class=\"nx\">content</span><span class=\"o\">=</span><span class=\"s2\">&quot;&lt;?php echo genesis_get_custom_field( &#39;_genesis_description&#39; ); ?&gt;&quot;</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">meta</span> <span class=\"nx\">property</span><span class=\"o\">=</span><span class=\"s2\">&quot;og:locale&quot;</span> <span class=\"nx\">content</span><span class=\"o\">=</span><span class=\"s2\">&quot;es_LA&quot;</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">meta</span> <span class=\"nx\">property</span><span class=\"o\">=</span><span class=\"s2\">&quot;og:image&quot;</span> <span class=\"nx\">content</span><span class=\"o\">=</span><span class=\"s2\">&quot;&lt;?php echo genesis_get_image (array(&#39;format&#39;=&gt;&#39;url&#39;, &#39;size&#39;=&gt;&#39;cyberia_home&#39;)); ?&gt;&quot;</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">meta</span> <span class=\"nx\">property</span><span class=\"o\">=</span><span class=\"s2\">&quot;og:image:type&quot;</span> <span class=\"nx\">content</span><span class=\"o\">=</span><span class=\"s2\">&quot;image/jpeg&quot;</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">meta</span> <span class=\"nx\">property</span><span class=\"o\">=</span><span class=\"s2\">&quot;og:image:width&quot;</span> <span class=\"nx\">content</span><span class=\"o\">=</span><span class=\"s2\">&quot;200&quot;</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">meta</span> <span class=\"nx\">property</span><span class=\"o\">=</span><span class=\"s2\">&quot;og:image:height&quot;</span> <span class=\"nx\">content</span><span class=\"o\">=</span><span class=\"s2\">&quot;200&quot;</span> <span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;?</span><span class=\"nx\">php</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Cuando compartimos este contenido en Facebook o en Google+ observar\u00e1s que usan nuestras propiedades OpenGraph y se muestra lo que nosotros establecimos. As\u00ed controlamos c\u00f3mo se comparte y como ven los usuarios de las redes sociales a nuestro sitio.</p>\n<p><img alt=\"OpenGraph en Google+\" src=\"/media/20131128/opengraph_google_plus-595x400.png\" title=\"OpenGraph en Google+\"></p>\n<p><img alt=\"OpenGraph en Facebook\" src=\"/media/20131128/opengraph_facebook.png\" title=\"OpenGraph en Facebook\"></p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Usa Genesis Framework</p>\n<p><a href=\"http://ito.mx/genesis\">Genesis</a> te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, <a href=\"http://ito.mx/genesis\">Genesis</a> te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple &ndash; <strong>!Empieza a usar hoy mismo <a href=\"http://ito.mx/genesis\">Genesis Framework</a>!</strong></p>\n</div>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>El concepto de OpenGraph es muy amplio y puedes consultarlo en su propio sitio <a href=\"http://ogp.me\">http://ogp.me</a>&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>En realidad Facebook no lo llama <em>tejido social</em> sino <strong>&ldquo;social graph&rdquo;</strong>, pero como podr\u00e1s comprobar en la imagen que acompa\u00f1a a este art\u00edculo, la red es un tejido vivo, cambiante.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>Hasta donde he podido comprobar, las propiedades de OpenGraph tambi\u00e9n son utilizadas por la red Google+.&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-4\">\n<p>Por supuesto que hay muchos <a href=\"http://ogp.me/#types\">tipos de objetos</a> definidos por OpenGraph.&#160;<a class=\"footnote-backref\" href=\"#fnref-4\" title=\"Jump back to footnote 4 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-5\">\n<p>Por ejemplo para Espa\u00f1a ser\u00eda <code>es_ES</code> que corresponde al Castellano.&#160;<a class=\"footnote-backref\" href=\"#fnref-5\" title=\"Jump back to footnote 5 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "integrar-el-protocolo-opengraph-en-genesis", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 80, "fields": {"idx": "a747916d-251c-46bc-9515-705b09d47070", "creado": "2017-07-29T04:37:50.519Z", "modificado": "2017-07-29T04:37:50.519Z", "title": "Integrar el protocolo OpenGraph en Django", "summary": "", "body": "Title: Integrar el protocolo OpenGraph en Django\r\nDate: 2013/11/28 22:13\r\nCategory: Desarrollo \r\nTags: python, django \r\nSlug: integrar-el-protocolo-opengraph-en-django\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nYa vimos en el art\u00edculo anterior [como integrar el protocolo OpenGrap en Genesis Framework](/genesis/integrar-el-protocolo-opengraph-en-genesis/) y ahora veremos como hacer esto mismo en Django, algo que todav\u00eda m\u00e1s simple.\r\n\r\n!!! notice \"El blog es **namespace.mx**\"\r\n    Este blog usa el c\u00f3digo que te muestro a continuaci\u00f3n, y puedes verlo funcionar al revisar el c\u00f3digo fuente de esta misma p\u00e1gina.\r\n\r\nVamos a agregar las mismas propiedades que en un blog con WordPress, as\u00ed que agregamos directamente las propiedades en nuestra plantilla de p\u00e1ginas, y en algunas propiedades usamos variables y en otras constantes, por ejemplo en `og:site_name`, `og:locale`, `og:type`, al igual que en el art\u00edculo anterior.\r\n\r\nPero observa la forma en que generamos la propiedad `og:title`, mientras que en WordPress necesitamos `<?php echo the_title_attribute( 'echo=0' ); ?>` en Django basta con `{{entry.title}}`, veamos las dos l\u00edneas juntas:\r\n\r\n```php\r\n// En WordPress\r\n<meta property=\"og:title\" content=\"<?php echo the_title_attribute( 'echo=0' ); ?>\" />\r\n```\r\n\r\n```html\r\n{# En Django #}\r\n<meta property=\"og:title\" content=\"{{entry.title}}\">\r\n```\r\n\r\nEste es un ejemplo de la eficiencia que puedes obtener al programar tu blog con Django.\r\n\r\nOtro ejemplo es como generamos la imagen, que es la misma para todos los post[^1] y usamos la funci\u00f3n `static` y le pasamos como par\u00e1metro la ruta del archivo, que Django busca y convierte en una URL correctamente formada.\r\n\r\n```html\r\n<meta property=\"og:image\" content=\"http://namespace.mx{% static 'img/namespace.logo.png' %}\">\r\n```\r\n\r\nAntes de presentar el c\u00f3digo completo, debemos recordar que el c\u00f3digo se escribe directamente en la plantilla, en lugar de procesarlo primero en un una funci\u00f3n que es evaluada en cada solicitud, por lo que volvemos a ganar eficiencia en comparaci\u00f3n con WordPress.\r\n\r\nAhora si, el bloque completo.\r\n\r\n[^1]: M\u00e1s adelante, en un ejemplo m\u00e1s avanzado veremos como obtener las im\u00e1genes de un post.\r\n\r\n\r\n```xml\r\n{% block metafacebook %}\r\n  <meta property=\"og:site_name\" content=\"namespace.mx - Programamos en Python, Django y WordPress\">\r\n  <meta property=\"og:locale\" content=\"es_LA\">\r\n  <meta property=\"og:type\" content=\"article\">\r\n  <meta property=\"og:title\" content=\"{{entry.title}}\">\r\n  <meta property=\"og:image\" content=\"http://namespace.mx{% static 'img/namespace.logo.png' %}\">\r\n  <meta property=\"og:image:type\" content=\"image/jpeg\">\r\n    <meta property=\"og:image:width\" content=\"200\">\r\n    <meta property=\"og:image:height\" content=\"200\">\r\n  <meta property=\"og:description\" content=\"{{ entry.resumen|truncatewords_html:30|striptags|safe }}\">\r\n  <meta property=\"og:url\" content=\"http://namespace.mx{{ entry.permalink }}\">\r\n{% endblock metafacebook %}\r\n```", "extend": "", "pub_date": "2013-11-29T05:37:16Z", "summary_html": "", "body_html": "<p>Ya vimos en el art\u00edculo anterior <a href=\"/genesis/integrar-el-protocolo-opengraph-en-genesis/\">como integrar el protocolo OpenGrap en Genesis Framework</a> y ahora veremos como hacer esto mismo en Django, algo que todav\u00eda m\u00e1s simple.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">El blog es <strong>namespace.mx</strong></p>\n<p>Este blog usa el c\u00f3digo que te muestro a continuaci\u00f3n, y puedes verlo funcionar al revisar el c\u00f3digo fuente de esta misma p\u00e1gina.</p>\n</div>\n<p>Vamos a agregar las mismas propiedades que en un blog con WordPress, as\u00ed que agregamos directamente las propiedades en nuestra plantilla de p\u00e1ginas, y en algunas propiedades usamos variables y en otras constantes, por ejemplo en <code>og:site_name</code>, <code>og:locale</code>, <code>og:type</code>, al igual que en el art\u00edculo anterior.</p>\n<p>Pero observa la forma en que generamos la propiedad <code>og:title</code>, mientras que en WordPress necesitamos <code>&lt;?php echo the_title_attribute( 'echo=0' ); ?&gt;</code> en Django basta con <code>{{entry.title}}</code>, veamos las dos l\u00edneas juntas:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">// En WordPress</span>\n<span class=\"x\">&lt;meta property=&quot;og:title&quot; content=&quot;</span><span class=\"cp\">&lt;?php</span> <span class=\"k\">echo</span> <span class=\"nx\">the_title_attribute</span><span class=\"p\">(</span> <span class=\"s1\">&#39;echo=0&#39;</span> <span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\">&quot; /&gt;</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>{# En Django #}\n<span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">property</span><span class=\"o\">=</span><span class=\"s\">&quot;og:title&quot;</span> <span class=\"na\">content</span><span class=\"o\">=</span><span class=\"s\">&quot;{{entry.title}}&quot;</span><span class=\"p\">&gt;</span>\n</pre></div>\n\n\n<p>Este es un ejemplo de la eficiencia que puedes obtener al programar tu blog con Django.</p>\n<p>Otro ejemplo es como generamos la imagen, que es la misma para todos los post<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> y usamos la funci\u00f3n <code>static</code> y le pasamos como par\u00e1metro la ruta del archivo, que Django busca y convierte en una URL correctamente formada.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">property</span><span class=\"o\">=</span><span class=\"s\">&quot;og:image&quot;</span> <span class=\"na\">content</span><span class=\"o\">=</span><span class=\"s\">&quot;http://namespace.mx{% static &#39;img/namespace.logo.png&#39; %}&quot;</span><span class=\"p\">&gt;</span>\n</pre></div>\n\n\n<p>Antes de presentar el c\u00f3digo completo, debemos recordar que el c\u00f3digo se escribe directamente en la plantilla, en lugar de procesarlo primero en un una funci\u00f3n que es evaluada en cada solicitud, por lo que volvemos a ganar eficiencia en comparaci\u00f3n con WordPress.</p>\n<p>Ahora si, el bloque completo.</p>\n<div class=\"codehilite\"><pre><span></span>{% block metafacebook %}\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">&quot;og:site_name&quot;</span> <span class=\"na\">content=</span><span class=\"s\">&quot;namespace.mx - Programamos en Python, Django y WordPress&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">&quot;og:locale&quot;</span> <span class=\"na\">content=</span><span class=\"s\">&quot;es_LA&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">&quot;og:type&quot;</span> <span class=\"na\">content=</span><span class=\"s\">&quot;article&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">&quot;og:title&quot;</span> <span class=\"na\">content=</span><span class=\"s\">&quot;{{entry.title}}&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">&quot;og:image&quot;</span> <span class=\"na\">content=</span><span class=\"s\">&quot;http://namespace.mx{% static &#39;img/namespace.logo.png&#39; %}&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">&quot;og:image:type&quot;</span> <span class=\"na\">content=</span><span class=\"s\">&quot;image/jpeg&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">&quot;og:image:width&quot;</span> <span class=\"na\">content=</span><span class=\"s\">&quot;200&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">&quot;og:image:height&quot;</span> <span class=\"na\">content=</span><span class=\"s\">&quot;200&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">&quot;og:description&quot;</span> <span class=\"na\">content=</span><span class=\"s\">&quot;{{ entry.resumen|truncatewords_html:30|striptags|safe }}&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">&quot;og:url&quot;</span> <span class=\"na\">content=</span><span class=\"s\">&quot;http://namespace.mx{{ entry.permalink }}&quot;</span><span class=\"nt\">&gt;</span>\n{% endblock metafacebook %}\n</pre></div>\n\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>M\u00e1s adelante, en un ejemplo m\u00e1s avanzado veremos como obtener las im\u00e1genes de un post.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "integrar-el-protocolo-opengraph-en-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 81, "fields": {"idx": "2cb87e0d-6160-40f5-b3c5-bb0c7d16a46c", "creado": "2017-07-29T04:41:12.165Z", "modificado": "2017-07-29T04:41:12.165Z", "title": "Como listar los tipos de post personalizados en un mapa de sitio de WordPress", "summary": "", "body": "Title: Como listar los tipos de post personalizados en un mapa de sitio de WordPress\r\nDate: 2013/12/07 03:47\r\nCategory: Desarrollo \r\nTags: genesiswp, wp_query, php, wordpress \r\nSlug: como-listar-los-tipos-de-post-personalizados-en-un\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nAyer estaba revisando la p\u00e1gina de archivo que vimos en el art\u00edculo anterior [C\u00f3mo crear un mapa de sitio en WordPress con Genesis Framework](http://conxb.com/19sblkG) y me di cuenta de algo: a la lista de art\u00edculos recientes le faltan las entradas personalizadas.\r\n\r\nM\u00e1s all\u00e1 de si son pocas o no, se espera que en esa lista est\u00e9n los 100 art\u00edculos m\u00e1s recientes, no solo los que tienen el tipo *post*. Lo que ocurre es que la funci\u00f3n que usamos `wp_get_archives( 'type=postbypost&limit=100' );` trabaja solo con este tipo de art\u00edculos.\r\n\r\nPara solucionar este problema vamos a escribir una consulta que nos muestre exactamente lo que queremos y vamos a modificar nuestra p\u00e1gina de archivo con esta funci\u00f3n.\r\n\r\nEl truco lo hace la funci\u00f3n `WP_Query`[^1], tal como lo veremos a continuaci\u00f3n.\r\n\r\n[^1]:A mi entender, [`WP_Query`](http://j.mp/cyberia-wpquery) es la funci\u00f3n m\u00e1s potente de WordPress y le vamos a dedicar muchos art\u00edculos para poder comprenderla y dominarla.\r\n\r\nLo primero que vamos a hacer es definir los argumentos para nuestra funci\u00f3n:\r\n\r\n```language-php\r\n<?php\r\n  $args=array(\r\n    'post_type' => array( 'post','peliculas', 'libros', 'apps'),\r\n    'post_status' => 'publish',\r\n    'posts_per_page' => 100,\r\n  );\r\n```\r\n\r\nEn la l\u00ednea 3, vemos un arreglo que indica los tipos de art\u00edculos que vamos a mostrar. En el arreglo inclu\u00edmos todos nuestros tipos personalizados y al propio tipo post, quedando as\u00ed: `array( 'post','peliculas', 'libros', 'apps')`.\r\n\r\nLa l\u00ednea 4 determina que solo se enlisten los art\u00edculos que hayan sido publicados, para evitar que se muestren los borradores, por ejemplo: `'post_status' => 'publish',`.\r\n\r\nLa l\u00ednea 5 establece el n\u00famero de art\u00edculos que vamos a mostrar: `100`, con el argumento `post_per_page`.\r\n\r\nEsos tres argumentos son suficientes para asegurar que tenemos todos los tipos de art\u00edculos en nuestro mapa de sitio.\r\n\r\nEstos argumentos los pasamos a la funci\u00f3n, primero creando una variable que contendr\u00e1 el objeto[^2] que devuelve `WP_Query` y a continuaci\u00f3n creado dicho objeto.\r\n\r\n[^2]: Los loops creados con `WP_Query` son objetos y accedemos a sus propiedades almacenadas en la variable respectiva.\r\n\r\n~~~language-php\r\n$my_query = null;\r\n$my_query = new WP_Query($args);\r\n~~~\r\n\r\nA continuaci\u00f3n tenemos un *loop* al que recorreremos una y otra vez hasta agotar la respuesta. Usaremos para hacer la lista, solo el t\u00edtulo y el permalink de los art\u00edculos, como vemos a continuaci\u00f3n.\r\n\r\n~~~language-php\r\nif( $my_query->have_posts() ) {\r\n    while ($my_query->have_posts()) : $my_query->the_post(); ?>\r\n      <li><a href=\"<?php the_permalink() ?>\" rel=\"bookmark\" title=\"Enlace permanente a <?php the_title_attribute(); ?>\"><?php the_title(); ?></a></li>\r\n      <?php\r\n    endwhile;\r\n  }\r\n  wp_reset_query();  \r\n?>\r\n~~~\r\n\r\nCerramos nuestro c\u00f3digo restaurando los datos globales que usamos con `the_post()`.\r\n\r\nMira el c\u00f3digo completo:\r\n\r\n```language-php\r\n<?php\r\n  $args=array(\r\n    'post_type' => array( 'post','peliculas', 'libros', 'apps'),\r\n    'post_status' => 'publish',\r\n    'posts_per_page' => 100,\r\n  );\r\n  $my_query = null;\r\n  $my_query = new WP_Query($args);\r\n  if( $my_query->have_posts() ) {\r\n    while ($my_query->have_posts()) : $my_query->the_post(); ?>\r\n      <li><a href=\"<?php the_permalink() ?>\" rel=\"bookmark\" title=\"Enlace permanente a <?php the_title_attribute(); ?>\"><?php the_title(); ?></a></li>\r\n      <?php\r\n    endwhile;\r\n  }\r\n  wp_reset_query();  \r\n?>\r\n```\r\n\r\nEste c\u00f3digo debe reemplazar en nuestra plantilla de archivo la l\u00ednea 47, y tendremos una salida como la que puedes ver en nuestro archivo[^3].\r\n\r\n[^3]: En realidad ya no existe el archivo de Cyberia.MX\r\n\r\n!!! alert-info \"Usa Genesis Framework\"\r\n    [Genesis][gen] te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, [Genesis][gen] te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple -- **!Empieza a usar hoy mismo [Genesis Framework][gen]!**\r\n   \r\n[gen]: http://ito.mx/genesis", "extend": "", "pub_date": "2014-12-08T05:37:50Z", "summary_html": "", "body_html": "<p>Ayer estaba revisando la p\u00e1gina de archivo que vimos en el art\u00edculo anterior <a href=\"http://conxb.com/19sblkG\">C\u00f3mo crear un mapa de sitio en WordPress con Genesis Framework</a> y me di cuenta de algo: a la lista de art\u00edculos recientes le faltan las entradas personalizadas.</p>\n<p>M\u00e1s all\u00e1 de si son pocas o no, se espera que en esa lista est\u00e9n los 100 art\u00edculos m\u00e1s recientes, no solo los que tienen el tipo <em>post</em>. Lo que ocurre es que la funci\u00f3n que usamos <code>wp_get_archives( 'type=postbypost&amp;limit=100' );</code> trabaja solo con este tipo de art\u00edculos.</p>\n<p>Para solucionar este problema vamos a escribir una consulta que nos muestre exactamente lo que queremos y vamos a modificar nuestra p\u00e1gina de archivo con esta funci\u00f3n.</p>\n<p>El truco lo hace la funci\u00f3n <code>WP_Query</code><sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>, tal como lo veremos a continuaci\u00f3n.</p>\n<p>Lo primero que vamos a hacer es definir los argumentos para nuestra funci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?php</span>\n  <span class=\"nv\">$args</span><span class=\"o\">=</span><span class=\"k\">array</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;post_type&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"k\">array</span><span class=\"p\">(</span> <span class=\"s1\">&#39;post&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;peliculas&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;libros&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;apps&#39;</span><span class=\"p\">),</span>\n    <span class=\"s1\">&#39;post_status&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;publish&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;posts_per_page&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">100</span><span class=\"p\">,</span>\n  <span class=\"p\">);</span>\n</pre></div>\n\n\n<p>En la l\u00ednea 3, vemos un arreglo que indica los tipos de art\u00edculos que vamos a mostrar. En el arreglo inclu\u00edmos todos nuestros tipos personalizados y al propio tipo post, quedando as\u00ed: <code>array( 'post','peliculas', 'libros', 'apps')</code>.</p>\n<p>La l\u00ednea 4 determina que solo se enlisten los art\u00edculos que hayan sido publicados, para evitar que se muestren los borradores, por ejemplo: <code>'post_status' =&gt; 'publish',</code>.</p>\n<p>La l\u00ednea 5 establece el n\u00famero de art\u00edculos que vamos a mostrar: <code>100</code>, con el argumento <code>post_per_page</code>.</p>\n<p>Esos tres argumentos son suficientes para asegurar que tenemos todos los tipos de art\u00edculos en nuestro mapa de sitio.</p>\n<p>Estos argumentos los pasamos a la funci\u00f3n, primero creando una variable que contendr\u00e1 el objeto<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> que devuelve <code>WP_Query</code> y a continuaci\u00f3n creado dicho objeto.</p>\n<div class=\"codehilite\"><pre><span></span>$my_query = null;\n$my_query = new WP_Query($args);\n</pre></div>\n\n\n<p>A continuaci\u00f3n tenemos un <em>loop</em> al que recorreremos una y otra vez hasta agotar la respuesta. Usaremos para hacer la lista, solo el t\u00edtulo y el permalink de los art\u00edculos, como vemos a continuaci\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span>if( $my_query-&gt;have_posts() ) {\n    while ($my_query-&gt;have_posts()) : $my_query-&gt;the_post(); ?&gt;\n      <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;</span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">the_permalink</span><span class=\"p\">()</span> <span class=\"cp\">?&gt;</span><span class=\"s\">&quot;</span> <span class=\"na\">rel=</span><span class=\"s\">&quot;bookmark&quot;</span> <span class=\"na\">title=</span><span class=\"s\">&quot;Enlace permanente a </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">the_title_attribute</span><span class=\"p\">();</span> <span class=\"cp\">?&gt;</span><span class=\"s\">&quot;</span><span class=\"nt\">&gt;</span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">the_title</span><span class=\"p\">();</span> <span class=\"cp\">?&gt;</span><span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n      <span class=\"cp\">&lt;?php</span>\n    <span class=\"k\">endwhile</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"nx\">wp_reset_query</span><span class=\"p\">();</span>  \n<span class=\"cp\">?&gt;</span>\n</pre></div>\n\n\n<p>Cerramos nuestro c\u00f3digo restaurando los datos globales que usamos con <code>the_post()</code>.</p>\n<p>Mira el c\u00f3digo completo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?php</span>\n  <span class=\"nv\">$args</span><span class=\"o\">=</span><span class=\"k\">array</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;post_type&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"k\">array</span><span class=\"p\">(</span> <span class=\"s1\">&#39;post&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;peliculas&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;libros&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;apps&#39;</span><span class=\"p\">),</span>\n    <span class=\"s1\">&#39;post_status&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;publish&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;posts_per_page&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">100</span><span class=\"p\">,</span>\n  <span class=\"p\">);</span>\n  <span class=\"nv\">$my_query</span> <span class=\"o\">=</span> <span class=\"k\">null</span><span class=\"p\">;</span>\n  <span class=\"nv\">$my_query</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">WP_Query</span><span class=\"p\">(</span><span class=\"nv\">$args</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"nv\">$my_query</span><span class=\"o\">-&gt;</span><span class=\"na\">have_posts</span><span class=\"p\">()</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"nv\">$my_query</span><span class=\"o\">-&gt;</span><span class=\"na\">have_posts</span><span class=\"p\">())</span> <span class=\"o\">:</span> <span class=\"nv\">$my_query</span><span class=\"o\">-&gt;</span><span class=\"na\">the_post</span><span class=\"p\">();</span> <span class=\"cp\">?&gt;</span>\n      <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;</span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">the_permalink</span><span class=\"p\">()</span> <span class=\"cp\">?&gt;</span><span class=\"s\">&quot;</span> <span class=\"na\">rel=</span><span class=\"s\">&quot;bookmark&quot;</span> <span class=\"na\">title=</span><span class=\"s\">&quot;Enlace permanente a </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">the_title_attribute</span><span class=\"p\">();</span> <span class=\"cp\">?&gt;</span><span class=\"s\">&quot;</span><span class=\"nt\">&gt;</span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">the_title</span><span class=\"p\">();</span> <span class=\"cp\">?&gt;</span><span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n      <span class=\"cp\">&lt;?php</span>\n    <span class=\"k\">endwhile</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"nx\">wp_reset_query</span><span class=\"p\">();</span>  \n<span class=\"cp\">?&gt;</span>\n</pre></div>\n\n\n<p>Este c\u00f3digo debe reemplazar en nuestra plantilla de archivo la l\u00ednea 47, y tendremos una salida como la que puedes ver en nuestro archivo<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup>.</p>\n<div class=\"admonition alert-info\">\n<p class=\"admonition-title\">Usa Genesis Framework</p>\n<p><a href=\"http://ito.mx/genesis\">Genesis</a> te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, <a href=\"http://ito.mx/genesis\">Genesis</a> te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple &ndash; <strong>!Empieza a usar hoy mismo <a href=\"http://ito.mx/genesis\">Genesis Framework</a>!</strong></p>\n</div>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>A mi entender, <a href=\"http://j.mp/cyberia-wpquery\"><code>WP_Query</code></a> es la funci\u00f3n m\u00e1s potente de WordPress y le vamos a dedicar muchos art\u00edculos para poder comprenderla y dominarla.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Los loops creados con <code>WP_Query</code> son objetos y accedemos a sus propiedades almacenadas en la variable respectiva.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>En realidad ya no existe el archivo de Cyberia.MX&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-listar-los-tipos-de-post-personalizados-en-un", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 82, "fields": {"idx": "ab3d3a99-bbd1-4bd6-9d04-cad7f6cdc54e", "creado": "2017-07-29T04:42:17.680Z", "modificado": "2017-07-29T04:42:17.680Z", "title": "Como instalar Python, Django, Nginx y Memcached en un servidor Ubuntu desde cero, parte 1", "summary": "", "body": "Title: Como instalar Python, Django, Nginx y Memcached en un servidor Ubuntu desde cero, parte 1\r\nDate: 2013/12/16 04:32\r\nCategory: Desarrollo \r\nTags: admin, python, django \r\nSlug: como-instalar-pytho-django-nginx-y-memcached-en-un\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nRecientemente me ofrecieron una oferta parte de [BurstNET][burst] para contratar una VPS a mitad de precio, as\u00ed que decid\u00ed dejar temporalmente mi VPS en [DigitalOcean](http://j.mp/ns-ocean) y probar suerte con este servidor con el que tengo el doble de recursos a menos de la mitad de precio. \r\n\r\nEl c\u00f3digo de  **namespace.mx** pas\u00f3 integr\u00f3 al servidor y una vez que todo funcionaba correctamente, hice el cambio de servidores, por lo que la mudanza fue transparente para los usuarios.\r\n\r\nPero vayamos por pasos.\r\n\r\n## Preparaci\u00f3n del Servidor\r\n\r\nComo servidor eleg\u00ed [Ubuntu 10.04 LTS Server](http://j.mp/18sLDf3) b\u00e1sicamente porque las otras im\u00e1genes que tiene disponibles [BurstNET][burst] ya no tienen soporte y esta versi\u00f3n es _Long Term Support_ y su soporte terminar\u00e1 en el 2015. Tambi\u00e9n es que estoy muy acostumbrado a Ubuntu y a los comandos de `apt-get`, claro.\r\n\r\nEn general cualquier distribuci\u00f3n de Ubuntu puede funcionar, pero para servidores recomiendo las que terminan en LTS. Puedes consultar que distribuci\u00f3n usas con este comando.\r\n\r\n    javier@dev:~$ cat /etc/issue\r\n    Ubuntu 10.04.1 LTS \\n \\l\r\n\r\nUna vez que recibes los datos para ingresar a tu VPS, algo que es inmediato, despu\u00e9s de pagar, tu servidor est\u00e1 listo.\r\n\r\nLo siguiente que hay que hacer es asegurarnos que hay que actualizarlo, usando el siguiente comando:\r\n\r\n\troot@dev:~# apt-get update\r\n    Obj http://ftp.debian.org squeeze Release.gpg\r\n    Ign http://ftp.debian.org squeeze/main Translation-es\r\n    Ign http://ftp.debian.org squeeze/contrib Translation-es        \r\n    Obj http://ftp.debian.org squeeze Release                       \r\n    Ign http://ftp.debian.org squeeze/main Packages/DiffIndex       \r\n    Ign http://ftp.debian.org squeeze/contrib Packages/DiffIndex\r\n    Obj http://security.debian.org squeeze/updates Release.gpg\r\n    Ign http://security.debian.org squeeze/updates/main Translation-es\r\n    Ign http://security.debian.org squeeze/updates/contrib Translation-es\r\n    Obj http://security.debian.org squeeze/updates Release \r\n    Ign http://security.debian.org squeeze/updates/main Packages/DiffIndex\r\n    Obj http://ftp.debian.org squeeze/main Packages\r\n    Ign http://security.debian.org squeeze/updates/contrib Packages/DiffIndex\r\n    Obj http://security.debian.org squeeze/updates/main Packages\r\n    Obj http://security.debian.org squeeze/updates/contrib Packages\r\n    Obj http://ftp.debian.org squeeze/contrib Packages\r\n    Leyendo lista de paquetes... Hecho\r\n    \t\r\nSi es necesario actualizar, usamos esta otra instrucci\u00f3n:\r\n\r\n    root@dev:~# apt-get upgrade\r\n    Leyendo lista de paquetes... Hecho\r\n    Creando \u00e1rbol de dependencias       \r\n    Leyendo la informaci\u00f3n de estado... Hecho\r\n    Los siguientes paquetes se han retenido:\r\n      apt apt-utils aptitude bind9-host cpp cpp-4.4 dhcp3-client dhcp3-common dnsutils gcc-4.4-base\r\n      iptables libbind9-60 libgcc1 libisccc60 liblwres60 libstdc++6 mutt python python-apt\r\n      python-minimal x11-utils\r\n    0 actualizados, 0 se instalar\u00e1n, 0 para eliminar y 21 no actualizados.\r\n\r\nY puede ser necesario hacer actualizaciones mayores, cuando quedan paquetes por actualizar, como se observa en el mensaje anterior, por lo que aplica el siguiente comando:\r\n\r\n    root@dev:~# apt-get dist-upgrade\r\n    Leyendo lista de paquetes... Hecho\r\n    Creando \u00e1rbol de dependencias       \r\n    Leyendo la informaci\u00f3n de estado... Hecho\r\n    Calculando la actualizaci\u00f3n... Listo\r\n    Los siguientes paquetes se ELIMINAR\u00c1N:\r\n      libept0\r\n    Se instalar\u00e1n los siguientes paquetes NUEVOS:\r\n      isc-dhcp-client isc-dhcp-common libboost-iostreams1.42.0 libdns69 libept1 libisc62 libisccfg62\r\n      libmpfr4 libnfnetlink0 libtokyocabinet8 libxapian22 libxcb-atom1 python-apt-common python2.6\r\n      python2.6-minimal\r\n    Se actualizar\u00e1n los siguientes paquetes:\r\n      apt apt-utils aptitude bind9-host cpp cpp-4.4 dhcp3-client dhcp3-common dnsutils gcc-4.4-base\r\n      iptables libbind9-60 libgcc1 libisccc60 liblwres60 libstdc++6 mutt python python-apt\r\n      python-minimal x11-utils\r\n    21 actualizados, 15 se instalar\u00e1n, 1 para eliminar y 0 no actualizados.\r\n    Necesito descargar 22.1MB de archivos.\r\n    Se utilizar\u00e1n 21.0MB de espacio de disco adicional despu\u00e9s de esta operaci\u00f3n.\r\n    \u00bfDesea continuar [S/n]?\r\n\r\nAseg\u00farate de cambiar la contrase\u00f1a que te mandaron originalmente por una en la que tu puedas confiar. Usa este comando para hacerlo:\r\n\r\n    root@dev:~# passwd\r\n\r\n## Crear un usuario\r\n\r\nEs importante aumentar la seguridad de nuestro servidor, por ello es muy recomendable no usar el usuario `root`, para evitar desde errores hasta fugas de seguridad. Para esto vamos a crear un usuario y le asignaremos permisos de administraci\u00f3n, pero usando contrase\u00f1as. Veamos como hacerlo.\r\n\r\n    root@dev:~# adduser javier\r\n    perl: warning: Setting locale failed.\r\n    perl: warning: Please check that your locale settings:\r\n\t    LANGUAGE = (unset),\r\n\t    LC_ALL = \"\",\r\n\t    LC_MONETARY = \"es_MX.UTF-8\",\r\n\t    LC_NUMERIC = \"es_MX.UTF-8\",\r\n\t    LC_MESSAGES = \"es_MX.UTF-8\",\r\n\t    LC_COLLATE = \"es_MX.UTF-8\",\r\n\t    LC_CTYPE = \"es_MX.UTF-8\",\r\n\t    LC_TIME = \"es_MX.UTF-8\",\r\n\t    LANG = \"C\"\r\n    are supported and installed on your system.\r\n    perl: warning: Faling back to the standard locale (\"C\").\r\n    Adding user `javier' ...\r\n    Adding new group `javier' (1000) ...\r\n    Adding new user `javier' (1000) with group `javier' ...\r\n    Creating home directory `/home/javier' ...\r\n    Copying files from `/etc/skel' ...\r\n    Enter new UNIX password: \r\n    Retype new UNIX password: \r\n    passwd: password updated successfully\r\n    Changing the user information for javier\r\n    Enter the new value, or press ENTER for the default\r\n\t    Full Name []: \r\n\t    Room Number []: \r\n\t    Work Phone []: \t\r\n\t    Home Phone []: \r\n\t    Other []: \r\n    Is the information correct? [Y/n] y\r\n\r\nEl siguiente paso es asignarle a este usuario permisos de administrador.\r\n\r\nDe esta manera un usuario normal, usar\u00e1 comandos como administrador usando `sudo comando` y su contrase\u00f1a, por lo que usar el usuario `root` ya no ser\u00e1 necesario y se reducen las posibilidades de *hackeo*, evita que hagamos destrozos a nivel del sistema y guarda los registros de las actividades en un archivo de bit\u00e1cora.\r\n\r\nPrimero debemos instalar el paquete `sudo` porque Debian 6 no lo instala por default.\r\n\r\n    root@dev:~# apt-get install sudo\r\n    Leyendo lista de paquetes... Hecho\r\n    Creando \u00e1rbol de dependencias       \r\n    Leyendo la informaci\u00f3n de estado... Hecho\r\n    Se instalar\u00e1n los siguientes paquetes NUEVOS:\r\n      sudo\r\n    Necesito descargar 611kB de archivos.\r\n    Se utilizar\u00e1n 967kB de espacio de disco adicional despu\u00e9s de esta operaci\u00f3n.\r\n    Des:1 http://ftp.debian.org squeeze/main sudo 1.7.4p4-2.squeeze.4 [611kB]\r\n    Descargados 611kB en 3s (155kB/s)\r\n    Seleccionando el paquete sudo previamente no seleccionado.\r\n    (Leyendo la base de datos ... 17878 ficheros o directorios instalados actualmente.)\r\n    Desempaquetando sudo (de .../sudo_1.7.4p4-2.squeeze.4_amd64.deb) ...\r\n    Procesando disparadores para man-db ...\r\n    Configurando sudo (1.7.4p4-2.squeeze.4) ...\r\n    No /etc/sudoers found... creating one for you.\r\n\r\nAhora editamos este archivo `/etc/sudoers` usando un comando reci\u00e9n instalado llamado `visudo` que abre este archivo especial, que siempre es de solo lectura, y permite editarlo sin interferir en los permisos especiales que tiene el archivo.\r\n\r\nBuscamos estas l\u00edneas y las remplazamos con nuestro usuario:\r\n\r\n    # User privilege specification\r\n    root    ALL=(ALL) ALL\r\n    \r\nPara que al final tengamos esta l\u00ednea:\r\n\r\n    javier    ALL=(ALL) ALL\r\n\r\nUna vez que hemos configurado los permisos de administraci\u00f3n, podemos cerrar la sesi\u00f3n de usuario y reconectarnos con nuestra cuenta sin privilegios, para continuar desde ah\u00ed con la configuraci\u00f3n del servidor.\r\n\r\n## Configurar SSH\r\n\r\nEn mi trabajo el puerto `22`, que corresponde al servidor `ssh` est\u00e1 bloqueado, por lo que debo usar otro distinto. Esto agrega seguridad a tu servidor, ya que adem\u00e1s vamos a impedir que se use el usuario `root` a trav\u00e9s de una conexi\u00f3n remota. Pero debes saber que si olvidas esta configuraci\u00f3n no podr\u00e1s entrar a tu sistema.\r\n\r\nAbrimos entonces el archivo `/etc/ssh/sshd_config`\r\n\r\n    javier@dev:~$ sudo vi /etc/ssh/sshd_config \r\n    \r\n    We trust you have received the usual lecture from the local System\r\n    Administrator. It usually boils down to these three things:\r\n\r\n        #1) Respect the privacy of others.\r\n        #2) Think before you type.\r\n        #3) With great power comes great responsibility.\r\n\r\n    [sudo] password for javier:\r\n\r\nEl mensaje aparece una sola vez y nos recuerda que debes ser precavidos cuando usamos los permisos de super usuario. \r\n\r\nAhora localizamos las l\u00edneas siguientes en el archivo y hacemos los ajustes necesarios:\r\n\r\n    Port 2222\r\n    PermitRootLogin no\r\n    UseDNS no\r\n    AllowUsers javier\r\n\r\nPara terminar, recargamos el servidor `sshd`, cerramos sesi\u00f3n y verificamos nuestra conexi\u00f3n.\r\n\r\n    javier@dev:~$ sudo /etc/init.d/ssh reload\r\n    \r\nY para conectarnos, debemos especificar el puerto que escribimos antes\r\n\r\n    namespace:~ javier$ ssh -p 2222 javier@10.13.25.35\r\n\r\n## Configurar la `timezone`\r\n\r\nResulta que la combinaci\u00f3n que usaremos de Django y PostgreSQL tienen una forma muy precisa de manejar las fechas, por lo que si no queremos ver resultados diferentes en nuestro sitio, debemos asegurarnos que el huso horario est\u00e1 bien configurado.\r\n\r\nObserva como el servidor te dar\u00e1 la hora del huso horario configurado en el sistema:\r\n\r\n    javier@dev:~$ date\r\n    lun dic  9 01:34:25 UTC 2013\r\n    javier@dev:~$ export TZ=Mexico/General\r\n    javier@dev:~$ date\r\n    dom dic  8 19:34:53 CST 2013\r\n\r\nPrimero nos da la hora del Meridiano de Greenwich, UTC o Zulu y luego la Hora del Centro de M\u00e9xico.\r\n\r\nPara hacer estos cambios permanentes *reconfiguraremos* los datos de la *timezone* como administradores. Recuerda seleccionar el huso horario que m\u00e1s te convenga.\r\n\r\n    javier@dev:~$ sudo dpkg-reconfigure tzdata\r\n\r\nSeleccionamos primero el \u00e1rea geogr\u00e1fica, en mi caso `America`, luego el huso horario, que en mi caso puede ser `Mexico_City`, aunque tambi\u00e9n ya vimos que funciona con `Mexico/General`, pero eso depende de la distribuci\u00f3n que uses. El resultado es el siguiente:\r\n\r\n    Current default time zone: 'America/Mexico_City'\r\n    Local time is now:      Sun Dec  8 19:42:51 CST 2013.\r\n    Universal Time is now:  Mon Dec  9 01:42:51 UTC 2013.\r\n\r\nEl `CST` que vemos corresponde a las siglas de *Central Standard Time* que es el mismo que el uso que llamamos Hora del Centro de M\u00e9xico o `ETC+6` y `ETC+5` en horario de verano o `DST`. Cr\u00e9anme que la precisi\u00f3n utilizada hace que estos detalles sean importantes.\r\n\r\n## Configuraci\u00f3n del servidor en Espa\u00f1ol\r\n\r\nPara configurar Debian 6.0 en espa\u00f1ol, debemos instalar el paquete `localization-config`, \r\n\r\n    javier@dev:~$ sudo apt-get install localization-config\r\n    Leyendo lista de paquetes... Hecho\r\n    Creando \u00e1rbol de dependencias       \r\n    Leyendo la informaci\u00f3n de estado... Hecho\r\n    Se instalar\u00e1n los siguientes paquetes extras:\r\n      libapt-pkg-perl libconfig-inifiles-perl\r\n    Se instalar\u00e1n los siguientes paquetes NUEVOS:\r\n      libapt-pkg-perl libconfig-inifiles-perl localization-config\r\n    0 actualizados, 3 se instalar\u00e1n, 0 para eliminar y 0 no actualizados.\r\n    Necesito descargar 193 kB de archivos.\r\n    Se utilizar\u00e1n 918 kB de espacio de disco adicional despu\u00e9s de esta operaci\u00f3n.\r\n    \u00bfDesea continuar [S/n]?\r\n    \r\nY a continuaci\u00f3n el comando `update-locale-config` junto con el c\u00f3digo del idioma que quieras,\r\n    \r\n    javier@dev:~$ sudo update-locale-config es_MX\r\n\r\nSi ahora usamos el comando `date`, veremos algo de lo que ha cambiado[^2],\r\n\r\n    javier@dev:~$ date\r\n    dom dic  8 19:52:18 CST 2013\r\n\r\n## Compilaci\u00f3n de Python\r\n\r\nEn mi servidor la versi\u00f3n instalada de Python es la 2.6.2, y como yo quer\u00eda una versi\u00f3n m\u00e1s nueva, descargu\u00e9 las fuentes de Python y me dispuse a compilarlas. \r\n\r\nNo tiene mucha ciencia, solo necesitas algunos cuantos paquetes para poder hacerlo, \r\n\r\nPrimero debemos instalar los programas de compilaci\u00f3n.\r\n\r\n    javier@dev:~$ sudo apt-get install build-essential\r\n\r\nTambi\u00e9n instal\u00e9, porque no estaba seguro de cuales librer\u00edas necesitaba, algunos paquetes de desarrollo que necesita Python para construir los m\u00f3dulos de la biblioteca est\u00e1ndar.\r\n\r\n    javier@dev:~$ sudo apt-get install libsqlite3-dev libreadline-dev libncurses5-dev libgdbm-dev libbz2-dev zlib1g-dev\r\n\r\nAhora descargamos el c\u00f3digo fuente directamente del sitio de Python, desde esta direcci\u00f3n [http://www.python.org/download/](http://www.python.org/download/), la versi\u00f3n actual es la 2.7.6.\r\n\r\n    javier@dev:~/download$ wget http://www.python.org/ftp/python/2.7.6/Python-2.7.6.tgz\r\n    --2013-12-14 20:23:59--  http://www.python.org/ftp/python/2.7.6/Python-2.7.6.tgz\r\n    Resolving www.python.org... 82.94.164.162, 2001:888:2000:d::a2\r\n    Connecting to www.python.org|82.94.164.162|:80... connected.\r\n    HTTP request sent, awaiting response... 200 OK\r\n    Length: 14725931 (14M) [application/x-tar]\r\n    Saving to: `Python-2.7.6.tgz'\r\n\r\n    100%[==========================================================>] 14,725,931  4.40M/s   in 3.7s    \r\n\r\n    2013-12-14 20:24:03 (3.75 MB/s) - `Python-2.7.6.tgz.1' saved [14725931/14725931]\r\n\r\nLo descompactamos con `tar xfz Python-2.7.6.tgz` y nos cambiamos al directorio creado `cd Pyhon-2.7.6` para configurar y compilar el c\u00f3digo fuente.\r\n\r\nPrimero lo configuramos, ejecutando el archivo `./configure` y luego compilamos el c\u00f3digo fuente con `make`, as\u00ed nom\u00e1s.\r\n\r\nDespu\u00e9s de una compilaci\u00f3n limpia, notar\u00e1s que hay un aviso referente a librer\u00edas faltantes que impiden que ciertos m\u00f3dulos se compilen. Para solucionar este problema, solo debemos instalar los paquetes `-dev` correspondientes, como vimos hace un momento.\r\n\r\n    Python build finished, but the necessary bits to build these modules were not found:\r\n    _bsddb             _tkinter           bsddb185        \r\n    dl                 imageop            sunaudiodev     \r\n    To find the necessary bits, look in setup.py in detect_modules() for the module's name.\r\n\r\n    running build_scripts\r\n    \r\nEn mi servidor no compil\u00e9 `tkinter` ni `sunaudiodev` porque no los voy a utilizar, pero si quisiera hacerlo tendr\u00eda que instalar las librer\u00edas de apoyo correspondientes.\r\n\r\n## Configuraci\u00f3n de Python y virtualenv\r\n\r\nAhora vamos a preparar el programa **Python** para poder usar entornos virtuales y mejorar la forma en la que trabajaremos con Django. \r\n\r\nPrimero debemos instalar un paquete que se llama [`setuptools`](https://pypi.python.org/pypi/setuptools) que nos dar\u00e1 un comando llamado `easy_install` y lo usaremos una sola vez para instalar `pip`.\r\n\r\nDespu\u00e9s de descargar y descomprimir el archivo, la instalaci\u00f3n se lleva a cabo con Python:\r\n\r\n    javier@dev:~/download/setuptools-2.0$ python setup.py install\r\n\r\nY luego, ya que est\u00e1 instalado, ejecutamos `easy_install`,\r\n    \r\n    javier@dev:~/download/setuptools-2.0$ easy_install pip\r\n\r\nY este es el programa que utilizaremos a partir de este momento para instalar y actualizar nuestro sistema de Python, ya que este `pip` junto con `virtualenv` nos permite configurar m\u00faltiples perfiles de Python sin que interfieran unos con otros.\r\n    \r\nAhora toca actualizar el paquete `virtualenv`,\r\n\r\n    javier@dev:~$ sudo pip install --upgrade virtualenv \r\n    \r\nAhora instalamos `virtualenvwrap` para manejar m\u00e1s f\u00e1cilmente nuestros entornos virtuales.\r\n\r\n    javier@dev:~$ sudo pip install virtualenvwrapper\r\n    \r\n!!! alert-error \"Precauci\u00f3n\"\r\n    Debes cuidar de no ejecutar el comando anterior mientras est\u00e9 activo un entorno virtual. Si no sabes si est\u00e1 activo uno, lo m\u00e1s seguro es que no.\r\n    \r\nA continuaci\u00f3n vamos a crear un directorio donde ubicaremos los distintos entornos virtuales y una serie de variables globales para facilitar el manejo de estos entorno.\r\n\r\nPrimero creamos el directorio:\r\n\r\n    javier@dev:~$ mkdir entornos\r\n    \r\nLuego editamos el archivo `~/.bashrc` y agregamos las siguientes variables.\r\n\r\n    # Variables de entorno para los Entornos Virtuales\r\n    export WORKON_HOME=~/entornos\r\n    source /usr/local/bin/virtualenvwrapper.sh\r\n    export PIP_VIRTUALENV_BASE=$WORKON_HOME\r\n    export PIP_RESPECT_VIRTUALENV=true\r\n\r\nSi usas Mac OS X, debes ajustar la ruta para `virtualenvwrapper.sh`, esa l\u00ednea debe quedar de la siguiente manera, \r\n\r\n    source /Library/Frameworks/Python.framework/Versions/2.7/bin/virtualenvwrapper.sh\r\n\r\nY por el momento, vamos a dejar as\u00ed la configuraci\u00f3n porque necesitamos instalar otros paquetes a nivel servidor y no en los entornos virtuales.\r\n\r\n## Instalaci\u00f3n de PostgreSQL\r\n\r\nPor motivos de trabajo, por convicci\u00f3n y por gusto seleccion\u00e9 PostgreSQL como el servidor de base de datos, aunque no he dudado en dudar otros motores cuando alg\u00fan cliente lo solicita, para mis proyectos personales he decidido usar al elefantito. Instalarlo en Debian es realmente muy simple:\r\n\r\n    javier@dev:~$ sudo apt-get install postgresql postgresql-contrib\r\n\r\nY ahora es momento de configurar a nuestro usuario, administrador de base de datos, por lo que debemos hacer lo siguiente, escribir el nombre del usuario, una contrase\u00f1a y elegir si el usuario reci\u00e9n creado tendr\u00e1 permisos para crear usuarios y bases.\r\n\r\n    javier@dev:~$ sudo su - postgres\r\n    postgres@dev:~$ createuser -P\r\n    Ingrese el nombre del rol a agregar: nspace\r\n    Ingrese la contrase\u00f1a para el nuevo rol: \r\n    Ingr\u00e9sela nuevamente: \r\n    \u00bfSer\u00e1 el nuevo rol un superusuario? (s/n) n\r\n        \r\nUna vez creado, creamos tambi\u00e9n la base de datos, y asignamos a nuestro usuario como el due\u00f1o de la base.\r\n\r\n    postgres@dev:~$ createdb --owner nspace  nbase\r\n    postgres@dev:~$ logout\r\n    \r\n## Creaci\u00f3n de entornos virtuales\r\n\r\nAhora que hemos instalado el manejador de bases de datos, entramos de lleno en la preparaci\u00f3n del entorno de trabajo *ideal* para nuestro sitio y debemos crear el entorno virtual exclusivo para este sitio.\r\n\r\nContar con entornos virtuales hace muy f\u00e1cil trabajar con diferentes proyectos en el mismo servidor sin que los requisitos de un proyecto interfieran con los otros. \r\n\r\nRecordemos que todos nuestros proyectos utilizan el directorio `entornos`, as\u00ed que procedemos a crear el entorno virtual para **namespace.mx**,\r\n\r\n    javier@dev:~$ mkvirtualenv nspace\r\n    New python executable in nspace/bin/python\r\n    Installing Setuptools..............................................................................................................................................................................................................................done.\r\n    Installing Pip.....................................................................................................................................................................................................................................................................................................................................done.\r\n    (nspace)javier@dev:~$\r\n    \r\nEste comando crea el entorno virtual y lo activa de una vez, el `(nspace)` en el indicador nos dice el nombre del entorno virtual en el que estamos trabajando. Si el entorno no est\u00e1 activado, lo podemos activar como sigue,\r\n\r\n    javier@dev:~$ workon nspace\r\n    \r\nY con esto tenemos listo nuestro entorno virtual para trabajar instalar Django.\r\n\r\n## Instalaci\u00f3n de Django\r\n\r\nLa instalaci\u00f3n de Django, con el servidor configurado como lo tenemos es algo verdaderamente trivial. Podr\u00edamos por ejemplo tener diferentes versiones de Django para distintos proyectos sin que uno afecte a otro, porque cada entorno virtual est\u00e1 aislado y no tiene acceso a los otros.\r\n\r\nEntonces, para instalarlo, solo debemos hacer lo siguiente, **con nuestro entorno activado**:\r\n\r\n    (nspace)javier@dev:~$ pip install django\r\n    Downloading/unpacking django\r\n      Downloading Django-1.6.tar.gz (6.6MB): 6.6MB downloaded\r\n      Running setup.py egg_info for package django\r\n        warning: no previously-included files matching '__pycache__' found under directory '*'\r\n        warning: no previously-included files matching '*.py[co]' found under directory '*'\r\n    Installing collected packages: django\r\n      Running setup.py install for django\r\n        changing mode of build/scripts-2.6/django-admin.py from 664 to 775\r\n        warning: no previously-included files matching '__pycache__' found under directory '*'\r\n        warning: no previously-included files matching '*.py[co]' found under directory '*'\r\n        changing mode of /home/javier/entornos/nspace/bin/django-admin.py to 775\r\n    Successfully installed django\r\n    Cleaning up...\r\n    \r\nCon esto es suficiente y podemos verificar la versi\u00f3n instalad de Django con el siguiente comando.\r\n\r\n    (nspace)javier@dev:~$ python\r\n    Python 2.6.6 (r266:84292, Dec 26 2010, 22:31:48) \r\n    [GCC 4.4.5] on linux2\r\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n    >>> import django\r\n    >>> django.VERSION\r\n    (1, 6, 0, 'final', 0)\r\n    >>> \r\n    (nspace)javier@dev:~$\r\n    \r\n## Instalaci\u00f3n de requisitos\r\n\r\nOtra ventaja de `pip` es que puede hacer una lista de los paquetes instalados en el entorno virtual activo\r\n\r\nEsto es importante, porque como dije al principio, estoy mudando mi blog y me interesa que no haya problemas por alg\u00fan paquete faltante, as\u00ed que en mi servidor actual, que en este caso es mi servidor de desarrollo, pido los paquetes instalados y los guardo en un archivo llamado `requisitos.txt`,\r\n\r\n    (nspace)namespace:proyecto_namespace javier$ pip freeze --local > requisitos.txt \r\n    \r\nEl archivo resultante es como el siguiente,\r\n\r\n    (nspace)namespace:proyecto_namespace javier$ cat requisitos.txt \r\n    BeautifulSoup==3.2.1\r\n    Django==1.6\r\n    Jinja2==2.7.1\r\n    Markdown==2.4.dev\r\n    MarkupSafe==0.18\r\n    Pygments==1.6\r\n    South==0.8.4\r\n    Sphinx==1.1.3\r\n    Unipath==1.0\r\n    amqp==1.3.3\r\n    anyjson==0.3.3\r\n    argparse==1.2.1\r\n    beautifulsoup4==4.3.2\r\n    billiard==3.3.0.11\r\n    brillixy==0.6.1\r\n    celery==3.1.3\r\n    django-annoying==0.7.7\r\n    django-braces==1.2.2\r\n    django-celery==3.1.1\r\n    django-debug-toolbar==0.11.0\r\n    django-floppyforms==1.1\r\n    django-taggit==0.11.1\r\n    docutils==0.11\r\n    guess-language==0.2\r\n    gunicorn==18.0\r\n    ipython==1.1.0\r\n    kombu==3.0.7\r\n    mdx-smartypants==1.5.0\r\n    namedentities==1.5.2\r\n    psycopg2==2.5.1\r\n    pyparsing==2.0.1\r\n    pyreadline==2.0\r\n    python-dateutil==2.2\r\n    python-memcached==1.53\r\n    python-pydown==0.1.0\r\n    pytz==2013.8\r\n    redis==2.8.0\r\n    scss==0.8.72\r\n    six==1.4.1\r\n    smartypants==1.8.3\r\n    sqlparse==0.1.10\r\n    times==0.6.2\r\n    \r\nY para instalar todos estos paquetes, debemos ejecutar la siguiente orden con nuestro entorno activado,\r\n\r\n    (nspace)namespace:proyecto_namespace javier$ pip install -r requisitos.txt\r\n\r\nNo importa la ruta inicial ni el nombre del archivo, aunque se acostumbra en ingl\u00e9s `requeriments.txt`, pero como ven, en espa\u00f1ol, `requisitos.txt` tambi\u00e9n funciona.\r\n\r\n## Configurar el *driver* de PostgreSQL con Django\r\n\r\nEn la lista de paquetes necesarios para nuestro proyecto se encuentra el *driver* que conecta a Django con PostgreSQL, en caso que sea necesario compilarlo, necesitar\u00e1s instalar[^3] (como administrador) los paquetes necesarios, que son los siguientes:\r\n\r\n* **`build-essentials`** -- que instala el compilador y los archivos y librer\u00edas asociados.\r\n* **`libpq-dev`** -- este paquete contiene los archivos necesarios para compilar m\u00f3dulos de PostgreSQL.\r\n\r\n## Ajustar la configuraci\u00f3n al nuevo servidor\r\n\r\nAhora debemos ajustar la configuraci\u00f3n del proyecto al nuevo servidor, solo en caso que hay cambios, pero por la configuraci\u00f3n segmentada, solo debemos ajustar el archivo de configuraci\u00f3n correspondiente. \r\n\r\nEn mi caso, el archivo ser\u00eda `producci\u00f3n.py`, pero la base de datos se llama igual, as\u00ed como mi usuario.\r\n\r\n\r\nEn el siguiente art\u00edculo veremos como est\u00e1 hecho este blog, pieza por pieza.\r\n\r\n[^1]: Me salgo del tema, lo s\u00e9, pero estoy usando un ejemplo vivo en un servidor real, los errores que aparecen, los resuelvo en el momento y los documento para que quede constancia.\r\n\r\n[^3]: Recuerda que estamos usando un servidor Ubuntu 10.04 LTS.\r\n\r\n[^2]: En el servidor que utilic\u00e9 creo que ya estaban los _locales_ configurados.\r\n\r\n[burst]: \"http://j.mp/ns-burst\"", "extend": "", "pub_date": "2013-12-17T05:41:12Z", "summary_html": "", "body_html": "<p>Recientemente me ofrecieron una oferta parte de <a href=\"&quot;http://j.mp/ns-burst&quot;\">BurstNET</a> para contratar una VPS a mitad de precio, as\u00ed que decid\u00ed dejar temporalmente mi VPS en <a href=\"http://j.mp/ns-ocean\">DigitalOcean</a> y probar suerte con este servidor con el que tengo el doble de recursos a menos de la mitad de precio. </p>\n<p>El c\u00f3digo de  <strong>namespace.mx</strong> pas\u00f3 integr\u00f3 al servidor y una vez que todo funcionaba correctamente, hice el cambio de servidores, por lo que la mudanza fue transparente para los usuarios.</p>\n<p>Pero vayamos por pasos.</p>\n<h2 id=\"preparacion-del-servidor\">Preparaci\u00f3n del Servidor</h2>\n<p>Como servidor eleg\u00ed <a href=\"http://j.mp/18sLDf3\">Ubuntu 10.04 LTS Server</a> b\u00e1sicamente porque las otras im\u00e1genes que tiene disponibles <a href=\"&quot;http://j.mp/ns-burst&quot;\">BurstNET</a> ya no tienen soporte y esta versi\u00f3n es <em>Long Term Support</em> y su soporte terminar\u00e1 en el 2015. Tambi\u00e9n es que estoy muy acostumbrado a Ubuntu y a los comandos de <code>apt-get</code>, claro.</p>\n<p>En general cualquier distribuci\u00f3n de Ubuntu puede funcionar, pero para servidores recomiendo las que terminan en LTS. Puedes consultar que distribuci\u00f3n usas con este comando.</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ cat /etc/issue\nUbuntu 10.04.1 LTS \\n \\l\n</pre></div>\n\n\n<p>Una vez que recibes los datos para ingresar a tu VPS, algo que es inmediato, despu\u00e9s de pagar, tu servidor est\u00e1 listo.</p>\n<p>Lo siguiente que hay que hacer es asegurarnos que hay que actualizarlo, usando el siguiente comando:</p>\n<div class=\"codehilite\"><pre><span></span>root@dev:~# apt-get update\nObj http://ftp.debian.org squeeze Release.gpg\nIgn http://ftp.debian.org squeeze/main Translation-es\nIgn http://ftp.debian.org squeeze/contrib Translation-es        \nObj http://ftp.debian.org squeeze Release                       \nIgn http://ftp.debian.org squeeze/main Packages/DiffIndex       \nIgn http://ftp.debian.org squeeze/contrib Packages/DiffIndex\nObj http://security.debian.org squeeze/updates Release.gpg\nIgn http://security.debian.org squeeze/updates/main Translation-es\nIgn http://security.debian.org squeeze/updates/contrib Translation-es\nObj http://security.debian.org squeeze/updates Release \nIgn http://security.debian.org squeeze/updates/main Packages/DiffIndex\nObj http://ftp.debian.org squeeze/main Packages\nIgn http://security.debian.org squeeze/updates/contrib Packages/DiffIndex\nObj http://security.debian.org squeeze/updates/main Packages\nObj http://security.debian.org squeeze/updates/contrib Packages\nObj http://ftp.debian.org squeeze/contrib Packages\nLeyendo lista de paquetes... Hecho\n</pre></div>\n\n\n<p>Si es necesario actualizar, usamos esta otra instrucci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span>root@dev:~# apt-get upgrade\nLeyendo lista de paquetes... Hecho\nCreando \u00e1rbol de dependencias       \nLeyendo la informaci\u00f3n de estado... Hecho\nLos siguientes paquetes se han retenido:\n  apt apt-utils aptitude bind9-host cpp cpp-4.4 dhcp3-client dhcp3-common dnsutils gcc-4.4-base\n  iptables libbind9-60 libgcc1 libisccc60 liblwres60 libstdc++6 mutt python python-apt\n  python-minimal x11-utils\n0 actualizados, 0 se instalar\u00e1n, 0 para eliminar y 21 no actualizados.\n</pre></div>\n\n\n<p>Y puede ser necesario hacer actualizaciones mayores, cuando quedan paquetes por actualizar, como se observa en el mensaje anterior, por lo que aplica el siguiente comando:</p>\n<div class=\"codehilite\"><pre><span></span>root@dev:~# apt-get dist-upgrade\nLeyendo lista de paquetes... Hecho\nCreando \u00e1rbol de dependencias       \nLeyendo la informaci\u00f3n de estado... Hecho\nCalculando la actualizaci\u00f3n... Listo\nLos siguientes paquetes se ELIMINAR\u00c1N:\n  libept0\nSe instalar\u00e1n los siguientes paquetes NUEVOS:\n  isc-dhcp-client isc-dhcp-common libboost-iostreams1.42.0 libdns69 libept1 libisc62 libisccfg62\n  libmpfr4 libnfnetlink0 libtokyocabinet8 libxapian22 libxcb-atom1 python-apt-common python2.6\n  python2.6-minimal\nSe actualizar\u00e1n los siguientes paquetes:\n  apt apt-utils aptitude bind9-host cpp cpp-4.4 dhcp3-client dhcp3-common dnsutils gcc-4.4-base\n  iptables libbind9-60 libgcc1 libisccc60 liblwres60 libstdc++6 mutt python python-apt\n  python-minimal x11-utils\n21 actualizados, 15 se instalar\u00e1n, 1 para eliminar y 0 no actualizados.\nNecesito descargar 22.1MB de archivos.\nSe utilizar\u00e1n 21.0MB de espacio de disco adicional despu\u00e9s de esta operaci\u00f3n.\n\u00bfDesea continuar [S/n]?\n</pre></div>\n\n\n<p>Aseg\u00farate de cambiar la contrase\u00f1a que te mandaron originalmente por una en la que tu puedas confiar. Usa este comando para hacerlo:</p>\n<div class=\"codehilite\"><pre><span></span>root@dev:~# passwd\n</pre></div>\n\n\n<h2 id=\"crear-un-usuario\">Crear un usuario</h2>\n<p>Es importante aumentar la seguridad de nuestro servidor, por ello es muy recomendable no usar el usuario <code>root</code>, para evitar desde errores hasta fugas de seguridad. Para esto vamos a crear un usuario y le asignaremos permisos de administraci\u00f3n, pero usando contrase\u00f1as. Veamos como hacerlo.</p>\n<div class=\"codehilite\"><pre><span></span>root@dev:~# adduser javier\nperl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n    LANGUAGE = (unset),\n    LC_ALL = &quot;&quot;,\n    LC_MONETARY = &quot;es_MX.UTF-8&quot;,\n    LC_NUMERIC = &quot;es_MX.UTF-8&quot;,\n    LC_MESSAGES = &quot;es_MX.UTF-8&quot;,\n    LC_COLLATE = &quot;es_MX.UTF-8&quot;,\n    LC_CTYPE = &quot;es_MX.UTF-8&quot;,\n    LC_TIME = &quot;es_MX.UTF-8&quot;,\n    LANG = &quot;C&quot;\nare supported and installed on your system.\nperl: warning: Faling back to the standard locale (&quot;C&quot;).\nAdding user `javier&#39; ...\nAdding new group `javier&#39; (1000) ...\nAdding new user `javier&#39; (1000) with group `javier&#39; ...\nCreating home directory `/home/javier&#39; ...\nCopying files from `/etc/skel&#39; ...\nEnter new UNIX password: \nRetype new UNIX password: \npasswd: password updated successfully\nChanging the user information for javier\nEnter the new value, or press ENTER for the default\n    Full Name []: \n    Room Number []: \n    Work Phone []:  \n    Home Phone []: \n    Other []: \nIs the information correct? [Y/n] y\n</pre></div>\n\n\n<p>El siguiente paso es asignarle a este usuario permisos de administrador.</p>\n<p>De esta manera un usuario normal, usar\u00e1 comandos como administrador usando <code>sudo comando</code> y su contrase\u00f1a, por lo que usar el usuario <code>root</code> ya no ser\u00e1 necesario y se reducen las posibilidades de <em>hackeo</em>, evita que hagamos destrozos a nivel del sistema y guarda los registros de las actividades en un archivo de bit\u00e1cora.</p>\n<p>Primero debemos instalar el paquete <code>sudo</code> porque Debian 6 no lo instala por default.</p>\n<div class=\"codehilite\"><pre><span></span>root@dev:~# apt-get install sudo\nLeyendo lista de paquetes... Hecho\nCreando \u00e1rbol de dependencias       \nLeyendo la informaci\u00f3n de estado... Hecho\nSe instalar\u00e1n los siguientes paquetes NUEVOS:\n  sudo\nNecesito descargar 611kB de archivos.\nSe utilizar\u00e1n 967kB de espacio de disco adicional despu\u00e9s de esta operaci\u00f3n.\nDes:1 http://ftp.debian.org squeeze/main sudo 1.7.4p4-2.squeeze.4 [611kB]\nDescargados 611kB en 3s (155kB/s)\nSeleccionando el paquete sudo previamente no seleccionado.\n(Leyendo la base de datos ... 17878 ficheros o directorios instalados actualmente.)\nDesempaquetando sudo (de .../sudo_1.7.4p4-2.squeeze.4_amd64.deb) ...\nProcesando disparadores para man-db ...\nConfigurando sudo (1.7.4p4-2.squeeze.4) ...\nNo /etc/sudoers found... creating one for you.\n</pre></div>\n\n\n<p>Ahora editamos este archivo <code>/etc/sudoers</code> usando un comando reci\u00e9n instalado llamado <code>visudo</code> que abre este archivo especial, que siempre es de solo lectura, y permite editarlo sin interferir en los permisos especiales que tiene el archivo.</p>\n<p>Buscamos estas l\u00edneas y las remplazamos con nuestro usuario:</p>\n<div class=\"codehilite\"><pre><span></span># User privilege specification\nroot    ALL=(ALL) ALL\n</pre></div>\n\n\n<p>Para que al final tengamos esta l\u00ednea:</p>\n<div class=\"codehilite\"><pre><span></span>javier    ALL=(ALL) ALL\n</pre></div>\n\n\n<p>Una vez que hemos configurado los permisos de administraci\u00f3n, podemos cerrar la sesi\u00f3n de usuario y reconectarnos con nuestra cuenta sin privilegios, para continuar desde ah\u00ed con la configuraci\u00f3n del servidor.</p>\n<h2 id=\"configurar-ssh\">Configurar SSH</h2>\n<p>En mi trabajo el puerto <code>22</code>, que corresponde al servidor <code>ssh</code> est\u00e1 bloqueado, por lo que debo usar otro distinto. Esto agrega seguridad a tu servidor, ya que adem\u00e1s vamos a impedir que se use el usuario <code>root</code> a trav\u00e9s de una conexi\u00f3n remota. Pero debes saber que si olvidas esta configuraci\u00f3n no podr\u00e1s entrar a tu sistema.</p>\n<p>Abrimos entonces el archivo <code>/etc/ssh/sshd_config</code></p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo vi /etc/ssh/sshd_config\n\nWe trust you have received the usual lecture from the local System\nAdministrator. It usually boils down to these three things:\n\n    #1) Respect the privacy of others.\n    #2) Think before you type.\n    #3) With great power comes great responsibility.\n\n[sudo] password for javier:\n</pre></div>\n\n\n<p>El mensaje aparece una sola vez y nos recuerda que debes ser precavidos cuando usamos los permisos de super usuario. </p>\n<p>Ahora localizamos las l\u00edneas siguientes en el archivo y hacemos los ajustes necesarios:</p>\n<div class=\"codehilite\"><pre><span></span>Port 2222\nPermitRootLogin no\nUseDNS no\nAllowUsers javier\n</pre></div>\n\n\n<p>Para terminar, recargamos el servidor <code>sshd</code>, cerramos sesi\u00f3n y verificamos nuestra conexi\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo /etc/init.d/ssh reload\n</pre></div>\n\n\n<p>Y para conectarnos, debemos especificar el puerto que escribimos antes</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nl\">namespace</span><span class=\"p\">:</span><span class=\"o\">~</span> <span class=\"n\">javier</span><span class=\"err\">$</span> <span class=\"n\">ssh</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"mi\">2222</span> <span class=\"n\">javier</span><span class=\"mf\">@10.13.25.35</span>\n</pre></div>\n\n\n<h2 id=\"configurar-la-timezone\">Configurar la <code>timezone</code></h2>\n<p>Resulta que la combinaci\u00f3n que usaremos de Django y PostgreSQL tienen una forma muy precisa de manejar las fechas, por lo que si no queremos ver resultados diferentes en nuestro sitio, debemos asegurarnos que el huso horario est\u00e1 bien configurado.</p>\n<p>Observa como el servidor te dar\u00e1 la hora del huso horario configurado en el sistema:</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ date\nlun dic  9 01:34:25 UTC 2013\njavier@dev:~$ export TZ=Mexico/General\njavier@dev:~$ date\ndom dic  8 19:34:53 CST 2013\n</pre></div>\n\n\n<p>Primero nos da la hora del Meridiano de Greenwich, UTC o Zulu y luego la Hora del Centro de M\u00e9xico.</p>\n<p>Para hacer estos cambios permanentes <em>reconfiguraremos</em> los datos de la <em>timezone</em> como administradores. Recuerda seleccionar el huso horario que m\u00e1s te convenga.</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo dpkg-reconfigure tzdata\n</pre></div>\n\n\n<p>Seleccionamos primero el \u00e1rea geogr\u00e1fica, en mi caso <code>America</code>, luego el huso horario, que en mi caso puede ser <code>Mexico_City</code>, aunque tambi\u00e9n ya vimos que funciona con <code>Mexico/General</code>, pero eso depende de la distribuci\u00f3n que uses. El resultado es el siguiente:</p>\n<div class=\"codehilite\"><pre><span></span>Current default time zone: &#39;America/Mexico_City&#39;\nLocal time is now:      Sun Dec  8 19:42:51 CST 2013.\nUniversal Time is now:  Mon Dec  9 01:42:51 UTC 2013.\n</pre></div>\n\n\n<p>El <code>CST</code> que vemos corresponde a las siglas de <em>Central Standard Time</em> que es el mismo que el uso que llamamos Hora del Centro de M\u00e9xico o <code>ETC+6</code> y <code>ETC+5</code> en horario de verano o <code>DST</code>. Cr\u00e9anme que la precisi\u00f3n utilizada hace que estos detalles sean importantes.</p>\n<h2 id=\"configuracion-del-servidor-en-espanol\">Configuraci\u00f3n del servidor en Espa\u00f1ol</h2>\n<p>Para configurar Debian 6.0 en espa\u00f1ol, debemos instalar el paquete <code>localization-config</code>, </p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo apt-get install localization-config\nLeyendo lista de paquetes... Hecho\nCreando \u00e1rbol de dependencias       \nLeyendo la informaci\u00f3n de estado... Hecho\nSe instalar\u00e1n los siguientes paquetes extras:\n  libapt-pkg-perl libconfig-inifiles-perl\nSe instalar\u00e1n los siguientes paquetes NUEVOS:\n  libapt-pkg-perl libconfig-inifiles-perl localization-config\n0 actualizados, 3 se instalar\u00e1n, 0 para eliminar y 0 no actualizados.\nNecesito descargar 193 kB de archivos.\nSe utilizar\u00e1n 918 kB de espacio de disco adicional despu\u00e9s de esta operaci\u00f3n.\n\u00bfDesea continuar [S/n]?\n</pre></div>\n\n\n<p>Y a continuaci\u00f3n el comando <code>update-locale-config</code> junto con el c\u00f3digo del idioma que quieras,</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo update-locale-config es_MX\n</pre></div>\n\n\n<p>Si ahora usamos el comando <code>date</code>, veremos algo de lo que ha cambiado<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">3</a></sup>,</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ date\ndom dic  8 19:52:18 CST 2013\n</pre></div>\n\n\n<h2 id=\"compilacion-de-python\">Compilaci\u00f3n de Python</h2>\n<p>En mi servidor la versi\u00f3n instalada de Python es la 2.6.2, y como yo quer\u00eda una versi\u00f3n m\u00e1s nueva, descargu\u00e9 las fuentes de Python y me dispuse a compilarlas. </p>\n<p>No tiene mucha ciencia, solo necesitas algunos cuantos paquetes para poder hacerlo, </p>\n<p>Primero debemos instalar los programas de compilaci\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo apt-get install build-essential\n</pre></div>\n\n\n<p>Tambi\u00e9n instal\u00e9, porque no estaba seguro de cuales librer\u00edas necesitaba, algunos paquetes de desarrollo que necesita Python para construir los m\u00f3dulos de la biblioteca est\u00e1ndar.</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo apt-get install libsqlite3-dev libreadline-dev libncurses5-dev libgdbm-dev libbz2-dev zlib1g-dev\n</pre></div>\n\n\n<p>Ahora descargamos el c\u00f3digo fuente directamente del sitio de Python, desde esta direcci\u00f3n <a href=\"http://www.python.org/download/\">http://www.python.org/download/</a>, la versi\u00f3n actual es la 2.7.6.</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~/download$ wget http://www.python.org/ftp/python/2.7.6/Python-2.7.6.tgz\n--2013-12-14 20:23:59--  http://www.python.org/ftp/python/2.7.6/Python-2.7.6.tgz\nResolving www.python.org... 82.94.164.162, 2001:888:2000:d::a2\nConnecting to www.python.org|82.94.164.162|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 14725931 (14M) [application/x-tar]\nSaving to: `Python-2.7.6.tgz&#39;\n\n100%[==========================================================&gt;] 14,725,931  4.40M/s   in 3.7s\n\n2013-12-14 20:24:03 (3.75 MB/s) - `Python-2.7.6.tgz.1&#39; saved [14725931/14725931]\n</pre></div>\n\n\n<p>Lo descompactamos con <code>tar xfz Python-2.7.6.tgz</code> y nos cambiamos al directorio creado <code>cd Pyhon-2.7.6</code> para configurar y compilar el c\u00f3digo fuente.</p>\n<p>Primero lo configuramos, ejecutando el archivo <code>./configure</code> y luego compilamos el c\u00f3digo fuente con <code>make</code>, as\u00ed nom\u00e1s.</p>\n<p>Despu\u00e9s de una compilaci\u00f3n limpia, notar\u00e1s que hay un aviso referente a librer\u00edas faltantes que impiden que ciertos m\u00f3dulos se compilen. Para solucionar este problema, solo debemos instalar los paquetes <code>-dev</code> correspondientes, como vimos hace un momento.</p>\n<div class=\"codehilite\"><pre><span></span>Python build finished, but the necessary bits to build these modules were not found:\n_bsddb             _tkinter           bsddb185        \ndl                 imageop            sunaudiodev     \nTo find the necessary bits, look in setup.py in detect_modules() for the module&#39;s name.\n\nrunning build_scripts\n</pre></div>\n\n\n<p>En mi servidor no compil\u00e9 <code>tkinter</code> ni <code>sunaudiodev</code> porque no los voy a utilizar, pero si quisiera hacerlo tendr\u00eda que instalar las librer\u00edas de apoyo correspondientes.</p>\n<h2 id=\"configuracion-de-python-y-virtualenv\">Configuraci\u00f3n de Python y virtualenv</h2>\n<p>Ahora vamos a preparar el programa <strong>Python</strong> para poder usar entornos virtuales y mejorar la forma en la que trabajaremos con Django. </p>\n<p>Primero debemos instalar un paquete que se llama <a href=\"https://pypi.python.org/pypi/setuptools\"><code>setuptools</code></a> que nos dar\u00e1 un comando llamado <code>easy_install</code> y lo usaremos una sola vez para instalar <code>pip</code>.</p>\n<p>Despu\u00e9s de descargar y descomprimir el archivo, la instalaci\u00f3n se lleva a cabo con Python:</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~/download/setuptools-2.0$ python setup.py install\n</pre></div>\n\n\n<p>Y luego, ya que est\u00e1 instalado, ejecutamos <code>easy_install</code>,</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~/download/setuptools-2.0$ easy_install pip\n</pre></div>\n\n\n<p>Y este es el programa que utilizaremos a partir de este momento para instalar y actualizar nuestro sistema de Python, ya que este <code>pip</code> junto con <code>virtualenv</code> nos permite configurar m\u00faltiples perfiles de Python sin que interfieran unos con otros.</p>\n<p>Ahora toca actualizar el paquete <code>virtualenv</code>,</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo pip install --upgrade virtualenv\n</pre></div>\n\n\n<p>Ahora instalamos <code>virtualenvwrap</code> para manejar m\u00e1s f\u00e1cilmente nuestros entornos virtuales.</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo pip install virtualenvwrapper\n</pre></div>\n\n\n<div class=\"admonition alert-error\">\n<p class=\"admonition-title\">Precauci\u00f3n</p>\n<p>Debes cuidar de no ejecutar el comando anterior mientras est\u00e9 activo un entorno virtual. Si no sabes si est\u00e1 activo uno, lo m\u00e1s seguro es que no.</p>\n</div>\n<p>A continuaci\u00f3n vamos a crear un directorio donde ubicaremos los distintos entornos virtuales y una serie de variables globales para facilitar el manejo de estos entorno.</p>\n<p>Primero creamos el directorio:</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ mkdir entornos\n</pre></div>\n\n\n<p>Luego editamos el archivo <code>~/.bashrc</code> y agregamos las siguientes variables.</p>\n<div class=\"codehilite\"><pre><span></span># Variables de entorno para los Entornos Virtuales\nexport WORKON_HOME=~/entornos\nsource /usr/local/bin/virtualenvwrapper.sh\nexport PIP_VIRTUALENV_BASE=$WORKON_HOME\nexport PIP_RESPECT_VIRTUALENV=true\n</pre></div>\n\n\n<p>Si usas Mac OS X, debes ajustar la ruta para <code>virtualenvwrapper.sh</code>, esa l\u00ednea debe quedar de la siguiente manera, </p>\n<div class=\"codehilite\"><pre><span></span>source /Library/Frameworks/Python.framework/Versions/2.7/bin/virtualenvwrapper.sh\n</pre></div>\n\n\n<p>Y por el momento, vamos a dejar as\u00ed la configuraci\u00f3n porque necesitamos instalar otros paquetes a nivel servidor y no en los entornos virtuales.</p>\n<h2 id=\"instalacion-de-postgresql\">Instalaci\u00f3n de PostgreSQL</h2>\n<p>Por motivos de trabajo, por convicci\u00f3n y por gusto seleccion\u00e9 PostgreSQL como el servidor de base de datos, aunque no he dudado en dudar otros motores cuando alg\u00fan cliente lo solicita, para mis proyectos personales he decidido usar al elefantito. Instalarlo en Debian es realmente muy simple:</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo apt-get install postgresql postgresql-contrib\n</pre></div>\n\n\n<p>Y ahora es momento de configurar a nuestro usuario, administrador de base de datos, por lo que debemos hacer lo siguiente, escribir el nombre del usuario, una contrase\u00f1a y elegir si el usuario reci\u00e9n creado tendr\u00e1 permisos para crear usuarios y bases.</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ sudo su - postgres\npostgres@dev:~$ createuser -P\nIngrese el nombre del rol a agregar: nspace\nIngrese la contrase\u00f1a para el nuevo rol: \nIngr\u00e9sela nuevamente: \n\u00bfSer\u00e1 el nuevo rol un superusuario? (s/n) n\n</pre></div>\n\n\n<p>Una vez creado, creamos tambi\u00e9n la base de datos, y asignamos a nuestro usuario como el due\u00f1o de la base.</p>\n<div class=\"codehilite\"><pre><span></span>postgres@dev:~$ createdb --owner nspace  nbase\npostgres@dev:~$ logout\n</pre></div>\n\n\n<h2 id=\"creacion-de-entornos-virtuales\">Creaci\u00f3n de entornos virtuales</h2>\n<p>Ahora que hemos instalado el manejador de bases de datos, entramos de lleno en la preparaci\u00f3n del entorno de trabajo <em>ideal</em> para nuestro sitio y debemos crear el entorno virtual exclusivo para este sitio.</p>\n<p>Contar con entornos virtuales hace muy f\u00e1cil trabajar con diferentes proyectos en el mismo servidor sin que los requisitos de un proyecto interfieran con los otros. </p>\n<p>Recordemos que todos nuestros proyectos utilizan el directorio <code>entornos</code>, as\u00ed que procedemos a crear el entorno virtual para <strong>namespace.mx</strong>,</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ mkvirtualenv nspace\nNew python executable in nspace/bin/python\nInstalling Setuptools..............................................................................................................................................................................................................................done.\nInstalling Pip.....................................................................................................................................................................................................................................................................................................................................done.\n(nspace)javier@dev:~$\n</pre></div>\n\n\n<p>Este comando crea el entorno virtual y lo activa de una vez, el <code>(nspace)</code> en el indicador nos dice el nombre del entorno virtual en el que estamos trabajando. Si el entorno no est\u00e1 activado, lo podemos activar como sigue,</p>\n<div class=\"codehilite\"><pre><span></span>javier@dev:~$ workon nspace\n</pre></div>\n\n\n<p>Y con esto tenemos listo nuestro entorno virtual para trabajar instalar Django.</p>\n<h2 id=\"instalacion-de-django\">Instalaci\u00f3n de Django</h2>\n<p>La instalaci\u00f3n de Django, con el servidor configurado como lo tenemos es algo verdaderamente trivial. Podr\u00edamos por ejemplo tener diferentes versiones de Django para distintos proyectos sin que uno afecte a otro, porque cada entorno virtual est\u00e1 aislado y no tiene acceso a los otros.</p>\n<p>Entonces, para instalarlo, solo debemos hacer lo siguiente, <strong>con nuestro entorno activado</strong>:</p>\n<div class=\"codehilite\"><pre><span></span>(nspace)javier@dev:~$ pip install django\nDownloading/unpacking django\n  Downloading Django-1.6.tar.gz (6.6MB): 6.6MB downloaded\n  Running setup.py egg_info for package django\n    warning: no previously-included files matching &#39;__pycache__&#39; found under directory &#39;*&#39;\n    warning: no previously-included files matching &#39;*.py[co]&#39; found under directory &#39;*&#39;\nInstalling collected packages: django\n  Running setup.py install for django\n    changing mode of build/scripts-2.6/django-admin.py from 664 to 775\n    warning: no previously-included files matching &#39;__pycache__&#39; found under directory &#39;*&#39;\n    warning: no previously-included files matching &#39;*.py[co]&#39; found under directory &#39;*&#39;\n    changing mode of /home/javier/entornos/nspace/bin/django-admin.py to 775\nSuccessfully installed django\nCleaning up...\n</pre></div>\n\n\n<p>Con esto es suficiente y podemos verificar la versi\u00f3n instalad de Django con el siguiente comando.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">(</span><span class=\"n\">nspace</span><span class=\"p\">)</span><span class=\"n\">javier</span><span class=\"nd\">@dev</span><span class=\"p\">:</span><span class=\"o\">~</span><span class=\"err\">$</span> <span class=\"n\">python</span>\n<span class=\"n\">Python</span> <span class=\"mf\">2.6</span><span class=\"o\">.</span><span class=\"mi\">6</span> <span class=\"p\">(</span><span class=\"n\">r266</span><span class=\"p\">:</span><span class=\"mi\">84292</span><span class=\"p\">,</span> <span class=\"n\">Dec</span> <span class=\"mi\">26</span> <span class=\"mi\">2010</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">:</span><span class=\"mi\">31</span><span class=\"p\">:</span><span class=\"mi\">48</span><span class=\"p\">)</span> \n<span class=\"p\">[</span><span class=\"n\">GCC</span> <span class=\"mf\">4.4</span><span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"n\">on</span> <span class=\"n\">linux2</span>\n<span class=\"n\">Type</span> <span class=\"s2\">&quot;help&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;copyright&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;credits&quot;</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;license&quot;</span> <span class=\"k\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">django</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">django</span><span class=\"o\">.</span><span class=\"n\">VERSION</span>\n<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;final&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"p\">(</span><span class=\"n\">nspace</span><span class=\"p\">)</span><span class=\"n\">javier</span><span class=\"nd\">@dev</span><span class=\"p\">:</span><span class=\"o\">~</span><span class=\"err\">$</span>\n</pre></div>\n\n\n<h2 id=\"instalacion-de-requisitos\">Instalaci\u00f3n de requisitos</h2>\n<p>Otra ventaja de <code>pip</code> es que puede hacer una lista de los paquetes instalados en el entorno virtual activo</p>\n<p>Esto es importante, porque como dije al principio, estoy mudando mi blog y me interesa que no haya problemas por alg\u00fan paquete faltante, as\u00ed que en mi servidor actual, que en este caso es mi servidor de desarrollo, pido los paquetes instalados y los guardo en un archivo llamado <code>requisitos.txt</code>,</p>\n<div class=\"codehilite\"><pre><span></span>(nspace)namespace:proyecto_namespace javier$ pip freeze --local &gt; requisitos.txt\n</pre></div>\n\n\n<p>El archivo resultante es como el siguiente,</p>\n<div class=\"codehilite\"><pre><span></span>(nspace)namespace:proyecto_namespace javier$ cat requisitos.txt \nBeautifulSoup==3.2.1\nDjango==1.6\nJinja2==2.7.1\nMarkdown==2.4.dev\nMarkupSafe==0.18\nPygments==1.6\nSouth==0.8.4\nSphinx==1.1.3\nUnipath==1.0\namqp==1.3.3\nanyjson==0.3.3\nargparse==1.2.1\nbeautifulsoup4==4.3.2\nbilliard==3.3.0.11\nbrillixy==0.6.1\ncelery==3.1.3\ndjango-annoying==0.7.7\ndjango-braces==1.2.2\ndjango-celery==3.1.1\ndjango-debug-toolbar==0.11.0\ndjango-floppyforms==1.1\ndjango-taggit==0.11.1\ndocutils==0.11\nguess-language==0.2\ngunicorn==18.0\nipython==1.1.0\nkombu==3.0.7\nmdx-smartypants==1.5.0\nnamedentities==1.5.2\npsycopg2==2.5.1\npyparsing==2.0.1\npyreadline==2.0\npython-dateutil==2.2\npython-memcached==1.53\npython-pydown==0.1.0\npytz==2013.8\nredis==2.8.0\nscss==0.8.72\nsix==1.4.1\nsmartypants==1.8.3\nsqlparse==0.1.10\ntimes==0.6.2\n</pre></div>\n\n\n<p>Y para instalar todos estos paquetes, debemos ejecutar la siguiente orden con nuestro entorno activado,</p>\n<div class=\"codehilite\"><pre><span></span>(nspace)namespace:proyecto_namespace javier$ pip install -r requisitos.txt\n</pre></div>\n\n\n<p>No importa la ruta inicial ni el nombre del archivo, aunque se acostumbra en ingl\u00e9s <code>requeriments.txt</code>, pero como ven, en espa\u00f1ol, <code>requisitos.txt</code> tambi\u00e9n funciona.</p>\n<h2 id=\"configurar-el-driver-de-postgresql-con-django\">Configurar el <em>driver</em> de PostgreSQL con Django</h2>\n<p>En la lista de paquetes necesarios para nuestro proyecto se encuentra el <em>driver</em> que conecta a Django con PostgreSQL, en caso que sea necesario compilarlo, necesitar\u00e1s instalar<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">2</a></sup> (como administrador) los paquetes necesarios, que son los siguientes:</p>\n<ul>\n<li><strong><code>build-essentials</code></strong> &ndash; que instala el compilador y los archivos y librer\u00edas asociados.</li>\n<li><strong><code>libpq-dev</code></strong> &ndash; este paquete contiene los archivos necesarios para compilar m\u00f3dulos de PostgreSQL.</li>\n</ul>\n<h2 id=\"ajustar-la-configuracion-al-nuevo-servidor\">Ajustar la configuraci\u00f3n al nuevo servidor</h2>\n<p>Ahora debemos ajustar la configuraci\u00f3n del proyecto al nuevo servidor, solo en caso que hay cambios, pero por la configuraci\u00f3n segmentada, solo debemos ajustar el archivo de configuraci\u00f3n correspondiente. </p>\n<p>En mi caso, el archivo ser\u00eda <code>producci\u00f3n.py</code>, pero la base de datos se llama igual, as\u00ed como mi usuario.</p>\n<p>En el siguiente art\u00edculo veremos como est\u00e1 hecho este blog, pieza por pieza.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Me salgo del tema, lo s\u00e9, pero estoy usando un ejemplo vivo en un servidor real, los errores que aparecen, los resuelvo en el momento y los documento para que quede constancia.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>Recuerda que estamos usando un servidor Ubuntu 10.04 LTS.&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>En el servidor que utilic\u00e9 creo que ya estaban los <em>locales</em> configurados.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-instalar-python-django-nginx-y-memcached-en-u", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 83, "fields": {"idx": "6b2f3544-9510-43b2-9679-2bfb4541bb16", "creado": "2017-07-29T04:43:14.784Z", "modificado": "2017-07-29T04:43:14.784Z", "title": "Tutorial de metadatos con MetaBox", "summary": "", "body": "Title: Tutorial de metadatos con MetaBox\r\nDate: 2013/12/26 20:05\r\nCategory: Desarrollo \r\nTags: php, genesiswp, wordpress\r\nSlug: tutorial-de-metadatos-con-metabox\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nWordPress tiene la habilidad de crear permitir a los autores asignar campos personalizados, llamados *custom fields*, a una entrada. Esta informaci\u00f3n se conoce como **metadatos**, es decir, informaci\u00f3n sobre otra informaci\u00f3n.\r\n\r\nPueden ser los datos de un libro que est\u00e9s leyendo (t\u00edtulo, autor, editorial, edici\u00f3n, rese\u00f1a), sobre una pel\u00edcula (t\u00edtulo, director, actores, resumen), sobre tu estado de \u00e1nimo (humor: feliz), sobre la m\u00fasica que est\u00e9s escuchando (Ahora suena: Dream On de Aerosmith).\r\n\r\nClaro que pueden contener informaci\u00f3n mucho m\u00e1s compleja, siempre en pares clave/valor. De hecho, los metadatos est\u00e1n planeados para aplicaciones de microformatos, esquemas de datos como Rich Snippets de Google u OpenGraph de Facebook.\r\n\r\nPero si en tu sitio utilizas siempre el mismo conjunto de campos personalizados, tener que elegirlos o escribirlos, cada vez que publicas un art\u00edculo, el proceso de vuelve muy poco eficiente. La soluci\u00f3n son las **MetaBoxes** (su traducci\u00f3n ser\u00eda MetaCajas) que son un conjunto de campos personalizados agrupados para su conveniencia en la pantalla de escritura de WordPress. Una vez que se ha definido una metabox, esos metadatos est\u00e1n a tu disposici\u00f3n para ser usados en cualquier post o p\u00e1gina de tu sitio de WordPress.\r\n\r\nVeamos un ejemplo simple. En los art\u00edculos publicados en Cyberia.MX[^1] aparece en la parte superior, una leyenda en letras blancas, que llamamos *SEOTexto*, utilizada para darle relevancia a las p\u00e1ginas en los buscadores y sean m\u00e1s f\u00e1cilmente encontradas por los usuarios. Este SEOTexto esta compuesto por dos partes, un texto corto que funciona como t\u00edtulo y una l\u00ednea r\u00e1pida e informativa. Muchos sitios implementan este tipo de t\u00e9cnicas, pero se imaginan tener que seleccionar los campos personalizados cada vez que publiques un art\u00edculo, corres el riesgo de olvidar alg\u00fan campo personalizado.\r\n\r\n[^1]: En este momento no hay ning\u00fan ejemplo vivo de un sitio con esta funcionalidad.\r\n\r\nLa soluci\u00f3n en Cyberia.MX fue crear una metabox con esos dos campos personalizados para facilitar su captura y los campos los utilizo en las entradas individuales para crear el SEOTexto.\r\n\r\nPara facilitar la creaci\u00f3n de las metaboxes, seleccione a la mejor biblioteca de funciones disponible para WordPress, que es la creada por *Dimas Begunoff* de **Far in Space** llamada [**WPAlchemy**](http://conxb.com/wp-alchemy).\r\n\r\nUna vez que lo has descargado, copia los archivos al directorio de tu child-theme, porque recuerda que no debes modificar directamente el [Framework Genesis][gen].\r\n\r\n[gen]: http://conxb.com/genesismx\r\n\r\nAhora coloca una llamada a esta funci\u00f3n en tu archivo `functions.php`, al principio del archivo:\r\n\r\n    :::PHP\r\n    include_once CHILD_DIR . '/lib/wpalchemy/MetaBox.php';\r\n\r\nSon dos archivos, pero este que estamos llamando es la biblioteca de la clase y el otro, que se llama `MediaAccess.php` es el que proporciona los medios para manipular los controles, que veremos en un art\u00edculo posterior, de nivel avanzado.\r\n\r\nAhora necesitamos crear una clase para nuestro SEOTexto, y lo hacemos de esta manera:\r\n\r\n    :::PHP\r\n    $ficha = new WPAlchemy_MetaBox(array (\r\n     'id' => '_ficha',\r\n     'title' => 'Texto Seo',\r\n     'template' => CHILD_DIR . '/lib/textoseo/ficha.php',\r\n     'types' => array('post'),\r\n     'context' => 'normal',\r\n     'prefix' => 'seo_',\r\n     'mode' => WPALCHEMY_MODE_EXTRACT )\r\n    );\r\n\r\nEn este fragmento de c\u00f3digo, creamos una ficha, de clase `WPAlchemy_MetaBox`, la identificamos como `_ficha`. Para no interferir con otros espacios de nombre, este identificador debe ser \u00fanico. Le asignamos un t\u00edtulo y nombramos una plantilla que usar\u00e1 nuestra metabox, indicamos en `types` que ser\u00e1 usado en art\u00edculos (en un ejemplo m\u00e1s avanzado, crearemos una metabox para un tipo personalizado).\r\n\r\nOtra clave importante es `prefix`, que identifica a nuestra caja, y tambi\u00e9n debe ser \u00fanico para que no interfiera con otros espacios de nombres. Lo que sigue es crear la plantilla que decimos en la declaraci\u00f3n de la clase que vamos a utilizar. La ficha de SEOTexto solo tiene dos campos, as\u00ed que es una plantilla muy sencilla.\r\n\r\n    :::PHP\r\n    <div class=\"ficha_tecnica\">\r\n     <p>\r\n     El texto que aparece en la parte superior de la p\u00e1gina, mejora en gran medida la forma en la que Google indexa las p\u00e1ginas, <br />\r\n     de ah\u00ed la necesidad de colocar adecuadamente un texto rico en palabras clave.\r\n     </p>\r\n\r\n     <?php /** T\u00edtulo SEO, va en H1 con formato especial **/ ?>\r\n     <label>T\u00edtulo SEO <span>(<em>incluir la palabra clave</em>)</span></label>\r\n     <p>\r\n     <input type=\"text\" name=\"<?php $metabox->the_name('seo_title'); ?>\" value=\"<?php $metabox->the_value('seo_title'); ?>\" />\r\n     <span>Escribe el t\u00edtulo SEO con la palabra clave principal. Ejemplo: <strong>Angry Birds para iPod</strong></span>\r\n     </p>\r\n\r\n     <?php /** Texto SEO, en una sola l\u00ednea **/ ?>\r\n     <label>Texto SEO <span>(<em>con palabras clave secundarias</em>)</span></label>\r\n     <p>\r\n     <input type=\"text\" name=\"<?php $metabox->the_name('seo_text'); ?>\" value=\"<?php $metabox->the_value('seo_text'); ?>\" />\r\n     <span>Escribir texto descriptivo en una sola l\u00ednea con palabras clave secundarias <strong>Un divertido juego de estrategia para dispositivos iPod</strong></span>\r\n     </p>\r\n\r\n     <div style=\"clear: both;\"></div>\r\n\r\n    </div>\r\n\r\nB\u00e1sicamente es un formulario que contiene dos campos y sus etiquetas. Lo importante son los valores `name` y `value` que sirve para identificar los valores que cambian en cada entrada, por eso, permitimos que los maneje la propia clase `metabox`.\r\n\r\n**`the_name`** es la funci\u00f3n de la clase `metabox` que asigna y recupera la clave `seo_text` y `the_value` de la misma clase, asigna y recupera el contenido del par. Este c\u00f3digo produce como salida la metabox en la pantalla de escritura de WordPress.\r\n\r\n!!! success \"Usa Genesis Framework\"\r\n    [Genesis][gen] te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, [Genesis][gen] te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple -- **!Empieza a usar hoy mismo [Genesis Framework][gen]!**", "extend": "", "pub_date": "2013-12-27T05:42:17Z", "summary_html": "", "body_html": "<p>WordPress tiene la habilidad de crear permitir a los autores asignar campos personalizados, llamados <em>custom fields</em>, a una entrada. Esta informaci\u00f3n se conoce como <strong>metadatos</strong>, es decir, informaci\u00f3n sobre otra informaci\u00f3n.</p>\n<p>Pueden ser los datos de un libro que est\u00e9s leyendo (t\u00edtulo, autor, editorial, edici\u00f3n, rese\u00f1a), sobre una pel\u00edcula (t\u00edtulo, director, actores, resumen), sobre tu estado de \u00e1nimo (humor: feliz), sobre la m\u00fasica que est\u00e9s escuchando (Ahora suena: Dream On de Aerosmith).</p>\n<p>Claro que pueden contener informaci\u00f3n mucho m\u00e1s compleja, siempre en pares clave/valor. De hecho, los metadatos est\u00e1n planeados para aplicaciones de microformatos, esquemas de datos como Rich Snippets de Google u OpenGraph de Facebook.</p>\n<p>Pero si en tu sitio utilizas siempre el mismo conjunto de campos personalizados, tener que elegirlos o escribirlos, cada vez que publicas un art\u00edculo, el proceso de vuelve muy poco eficiente. La soluci\u00f3n son las <strong>MetaBoxes</strong> (su traducci\u00f3n ser\u00eda MetaCajas) que son un conjunto de campos personalizados agrupados para su conveniencia en la pantalla de escritura de WordPress. Una vez que se ha definido una metabox, esos metadatos est\u00e1n a tu disposici\u00f3n para ser usados en cualquier post o p\u00e1gina de tu sitio de WordPress.</p>\n<p>Veamos un ejemplo simple. En los art\u00edculos publicados en Cyberia.MX<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> aparece en la parte superior, una leyenda en letras blancas, que llamamos <em>SEOTexto</em>, utilizada para darle relevancia a las p\u00e1ginas en los buscadores y sean m\u00e1s f\u00e1cilmente encontradas por los usuarios. Este SEOTexto esta compuesto por dos partes, un texto corto que funciona como t\u00edtulo y una l\u00ednea r\u00e1pida e informativa. Muchos sitios implementan este tipo de t\u00e9cnicas, pero se imaginan tener que seleccionar los campos personalizados cada vez que publiques un art\u00edculo, corres el riesgo de olvidar alg\u00fan campo personalizado.</p>\n<p>La soluci\u00f3n en Cyberia.MX fue crear una metabox con esos dos campos personalizados para facilitar su captura y los campos los utilizo en las entradas individuales para crear el SEOTexto.</p>\n<p>Para facilitar la creaci\u00f3n de las metaboxes, seleccione a la mejor biblioteca de funciones disponible para WordPress, que es la creada por <em>Dimas Begunoff</em> de <strong>Far in Space</strong> llamada <a href=\"http://conxb.com/wp-alchemy\"><strong>WPAlchemy</strong></a>.</p>\n<p>Una vez que lo has descargado, copia los archivos al directorio de tu child-theme, porque recuerda que no debes modificar directamente el <a href=\"http://conxb.com/genesismx\">Framework Genesis</a>.</p>\n<p>Ahora coloca una llamada a esta funci\u00f3n en tu archivo <code>functions.php</code>, al principio del archivo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">include_once CHILD_DIR . &#39;/lib/wpalchemy/MetaBox.php&#39;;</span>\n</pre></div>\n\n\n<p>Son dos archivos, pero este que estamos llamando es la biblioteca de la clase y el otro, que se llama <code>MediaAccess.php</code> es el que proporciona los medios para manipular los controles, que veremos en un art\u00edculo posterior, de nivel avanzado.</p>\n<p>Ahora necesitamos crear una clase para nuestro SEOTexto, y lo hacemos de esta manera:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">$ficha = new WPAlchemy_MetaBox(array (</span>\n<span class=\"x\"> &#39;id&#39; =&gt; &#39;_ficha&#39;,</span>\n<span class=\"x\"> &#39;title&#39; =&gt; &#39;Texto Seo&#39;,</span>\n<span class=\"x\"> &#39;template&#39; =&gt; CHILD_DIR . &#39;/lib/textoseo/ficha.php&#39;,</span>\n<span class=\"x\"> &#39;types&#39; =&gt; array(&#39;post&#39;),</span>\n<span class=\"x\"> &#39;context&#39; =&gt; &#39;normal&#39;,</span>\n<span class=\"x\"> &#39;prefix&#39; =&gt; &#39;seo_&#39;,</span>\n<span class=\"x\"> &#39;mode&#39; =&gt; WPALCHEMY_MODE_EXTRACT )</span>\n<span class=\"x\">);</span>\n</pre></div>\n\n\n<p>En este fragmento de c\u00f3digo, creamos una ficha, de clase <code>WPAlchemy_MetaBox</code>, la identificamos como <code>_ficha</code>. Para no interferir con otros espacios de nombre, este identificador debe ser \u00fanico. Le asignamos un t\u00edtulo y nombramos una plantilla que usar\u00e1 nuestra metabox, indicamos en <code>types</code> que ser\u00e1 usado en art\u00edculos (en un ejemplo m\u00e1s avanzado, crearemos una metabox para un tipo personalizado).</p>\n<p>Otra clave importante es <code>prefix</code>, que identifica a nuestra caja, y tambi\u00e9n debe ser \u00fanico para que no interfiera con otros espacios de nombres. Lo que sigue es crear la plantilla que decimos en la declaraci\u00f3n de la clase que vamos a utilizar. La ficha de SEOTexto solo tiene dos campos, as\u00ed que es una plantilla muy sencilla.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&lt;div class=&quot;ficha_tecnica&quot;&gt;</span>\n<span class=\"x\"> &lt;p&gt;</span>\n<span class=\"x\"> El texto que aparece en la parte superior de la p\u00e1gina, mejora en gran medida la forma en la que Google indexa las p\u00e1ginas, &lt;br /&gt;</span>\n<span class=\"x\"> de ah\u00ed la necesidad de colocar adecuadamente un texto rico en palabras clave.</span>\n<span class=\"x\"> &lt;/p&gt;</span>\n\n<span class=\"x\"> </span><span class=\"cp\">&lt;?php</span> <span class=\"sd\">/** T\u00edtulo SEO, va en H1 con formato especial **/</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\"> &lt;label&gt;T\u00edtulo SEO &lt;span&gt;(&lt;em&gt;incluir la palabra clave&lt;/em&gt;)&lt;/span&gt;&lt;/label&gt;</span>\n<span class=\"x\"> &lt;p&gt;</span>\n<span class=\"x\"> &lt;input type=&quot;text&quot; name=&quot;</span><span class=\"cp\">&lt;?php</span> <span class=\"nv\">$metabox</span><span class=\"o\">-&gt;</span><span class=\"na\">the_name</span><span class=\"p\">(</span><span class=\"s1\">&#39;seo_title&#39;</span><span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\">&quot; value=&quot;</span><span class=\"cp\">&lt;?php</span> <span class=\"nv\">$metabox</span><span class=\"o\">-&gt;</span><span class=\"na\">the_value</span><span class=\"p\">(</span><span class=\"s1\">&#39;seo_title&#39;</span><span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\">&quot; /&gt;</span>\n<span class=\"x\"> &lt;span&gt;Escribe el t\u00edtulo SEO con la palabra clave principal. Ejemplo: &lt;strong&gt;Angry Birds para iPod&lt;/strong&gt;&lt;/span&gt;</span>\n<span class=\"x\"> &lt;/p&gt;</span>\n\n<span class=\"x\"> </span><span class=\"cp\">&lt;?php</span> <span class=\"sd\">/** Texto SEO, en una sola l\u00ednea **/</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\"> &lt;label&gt;Texto SEO &lt;span&gt;(&lt;em&gt;con palabras clave secundarias&lt;/em&gt;)&lt;/span&gt;&lt;/label&gt;</span>\n<span class=\"x\"> &lt;p&gt;</span>\n<span class=\"x\"> &lt;input type=&quot;text&quot; name=&quot;</span><span class=\"cp\">&lt;?php</span> <span class=\"nv\">$metabox</span><span class=\"o\">-&gt;</span><span class=\"na\">the_name</span><span class=\"p\">(</span><span class=\"s1\">&#39;seo_text&#39;</span><span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\">&quot; value=&quot;</span><span class=\"cp\">&lt;?php</span> <span class=\"nv\">$metabox</span><span class=\"o\">-&gt;</span><span class=\"na\">the_value</span><span class=\"p\">(</span><span class=\"s1\">&#39;seo_text&#39;</span><span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\">&quot; /&gt;</span>\n<span class=\"x\"> &lt;span&gt;Escribir texto descriptivo en una sola l\u00ednea con palabras clave secundarias &lt;strong&gt;Un divertido juego de estrategia para dispositivos iPod&lt;/strong&gt;&lt;/span&gt;</span>\n<span class=\"x\"> &lt;/p&gt;</span>\n\n<span class=\"x\"> &lt;div style=&quot;clear: both;&quot;&gt;&lt;/div&gt;</span>\n\n<span class=\"x\">&lt;/div&gt;</span>\n</pre></div>\n\n\n<p>B\u00e1sicamente es un formulario que contiene dos campos y sus etiquetas. Lo importante son los valores <code>name</code> y <code>value</code> que sirve para identificar los valores que cambian en cada entrada, por eso, permitimos que los maneje la propia clase <code>metabox</code>.</p>\n<p><strong><code>the_name</code></strong> es la funci\u00f3n de la clase <code>metabox</code> que asigna y recupera la clave <code>seo_text</code> y <code>the_value</code> de la misma clase, asigna y recupera el contenido del par. Este c\u00f3digo produce como salida la metabox en la pantalla de escritura de WordPress.</p>\n<div class=\"admonition success\">\n<p class=\"admonition-title\">Usa Genesis Framework</p>\n<p><a href=\"http://conxb.com/genesismx\">Genesis</a> te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, <a href=\"http://conxb.com/genesismx\">Genesis</a> te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple &ndash; <strong>!Empieza a usar hoy mismo <a href=\"http://conxb.com/genesismx\">Genesis Framework</a>!</strong></p>\n</div>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>En este momento no hay ning\u00fan ejemplo vivo de un sitio con esta funcionalidad.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "tutorial-de-metadatos-con-metabox", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 84, "fields": {"idx": "96f22952-8a6b-4a1b-a227-b3a40e2eebd4", "creado": "2017-07-29T04:44:27.848Z", "modificado": "2017-07-29T04:44:27.848Z", "title": "C\u00f3mo crear un mapa de sitio en WordPress", "summary": "", "body": "Title: C\u00f3mo crear un mapa de sitio en WordPress\r\nDate: 2013/12/27 02:38\r\nCategory: Desarrollo \r\nTags: genesiswp, templates, php, wordpress\r\nSlug: como-crear-un-mapa-de-sitio-en-wordpress\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nUna forma de mejorar el SEO de nuestro sitio es creando un mapa de su contenido. Este mapa del sitio no solo ayuda a los buscadores a descubrir nuestro contenido, tambi\u00e9n ayuda a los visitantes en este descubrimiento. Con [Genesis Framework][gen] crear un mapa de sitio es muy f\u00e1cil.\r\n\r\n\u00bfYa conoces el [Archivo Cyberia.MX](http://cyberia.mx/archivo)? Contiene todas las p\u00e1ginas publicadas, la lista de categor\u00edas, de autores (aunque por el momento solo aparezco yo) y los 100 post m\u00e1s recientes. Esta p\u00e1gina usa una plantilla personalizada que contiene el c\u00f3digo que produce el resultado. Lo \u00fanico que hice fue crear una p\u00e1gina y seleccionar la plantilla `Archivo`. Eso fue suficiente para tener mi mapa del sitio tal como la ves.\r\n\r\nEn este tutorial para [Genesis Framework][gen] veremos c\u00f3mo crear una p\u00e1gina de archivo y al mismo tiempo vamos a revisar detalladamente las etiquetas de plantillas de WordPress relacionadas con el archivo.\r\nCrear un plantilla de p\u00e1gina\r\n\r\nComo vimos en el art\u00edculo anterior sobre _c\u00f3mo crear una portada personalizada_ vimos que para crear una plantilla de p\u00e1gina (en ingl\u00e9s _Template Page_) lo \u00fanico que necesitamos es insertar el comentario `Template Name: Archivo`, pero para mejorar la legibilidad de nuestro c\u00f3digo, agregamos comentarios adicionales. Veamos la primera parte del c\u00f3digo:\r\n\r\n    <?php\r\n     /**\r\n       * Template Name: Archivo\r\n       * Esta plantilla crea un mapa del sitio.\r\n       *\r\n       * @category Cyberia\r\n       * @package  Plantilla\r\n       * @author   Cyberia.MX\r\n       * @license  http://www.opensource.org/licenses/gpl-license.php GPL v2.0 (or later)\r\n       * @link     http://cyberia.mx/tag/genesiswp\r\n       **/\r\n\r\nRealmente solo es necesario incluir el contenido de la l\u00ednea 3, pero el resto del c\u00f3digo nos proporciona informaci\u00f3n importante y nos permite utilizar documentadores de c\u00f3digo como por ejemplo [phpDocumentor](http://www.phpdoc.org/) o [apigen](http://apigen.org/).\r\n\r\n### Eliminar y agregar acciones de los hooks en Genesis WordPress\r\n\r\nLos _hooks_ son \u201cganchos\u201d de los que colgamos acciones en [Genesis Framework][gen], lo que nos permite crear fragmentos de c\u00f3digo y contenido y colocarlos en cualquiera de los _hooks_ que define [Genesis Framework][gen].\r\n\r\nEsto nos permite crear nuestro sitio web como si fuera un figura hecha con bloques de lego, y las posibilidades son verdaderamente inmensas. Poco a poco iremos descubriendo en esta serie todas las posibilidades de los _hooks_.\r\n\r\nEn [Genesis Framework][gen] existen **\u00a151 hooks!** lo que nos permite controlar todo nuestro sitio, pero en nuestra plantilla de p\u00e1gina solo vamos a utiliza el _hook_ `genesis_post_content`. Este hook controla la salida del contenido del post o p\u00e1gina y si existe la imagen destacada, pero dentro del div `#content`.\r\n\r\nPrimero vamos a desactivar del _hook_ la acci\u00f3n preprogramada por [Genesis Framework][gen] y que llama a la funci\u00f3n interna `genesis_do_post_content`. Para desactivar esta acci\u00f3n usamos la funci\u00f3n `remove_action`, que tiene dos par\u00e1metros: el primero es el _hook_ y el segundo es la acci\u00f3n o funci\u00f3n que colgamos en el _hook_:\r\n    \r\n```php\r\n/** Desactivar la acci\u00f3n preprogramada por Genesis Framework **/\r\nremove_action( 'genesis_post_content', 'genesis_do_post_content' );\r\n```     \r\n\r\nLa siguiente actividad es agregar una acci\u00f3n a este mismo _hook_. Recuerda que las acciones son funciones cuya salida se coloca en ese \u201cgancho\u201d, as\u00ed que procura darle a tu acci\u00f3n/funci\u00f3n un nombre que te ayude a comprender para qu\u00e9 existe.\r\n\r\nTenemos que usar la funci\u00f3n `add_function` que tiene dos par\u00e1metros obligatorios y un tercero opcional: el primero es el nombre del _hook_, el segundo es el nombre de la acci\u00f3n/funci\u00f3n que colgamos a dicho _hook_ y el tercero, que es opcional, es la prioridad (si m\u00e1s de una acci\u00f3n est\u00e1 colgada al mismo _hook_ se coloca primero la acci\u00f3n de prioridad m\u00e1s baja); en nuestro _hook_ esta acci\u00f3n es la \u00fanica, por lo que agregar prioridades resulta ocioso.\r\n\r\n```php\r\nadd_action( 'genesis_post_content', 'cyberia_mapa_de_sitio' );\r\n```\r\n\r\nLlamamos a la acci\u00f3n `cyberia_mapa_de_sitio` porque va a producir el contenido de nuestro mapa del sitio, lo que ayudar\u00e1 a los visitantes y a los motores de b\u00fasqueda a descubrir y recorrer todo nuestro sitio.\r\n\r\n### Acciones que crean contenido en Genesis Framework\r\n\r\nLa acci\u00f3n `cyberia_mapa_de_sitio` es una funci\u00f3n que crear\u00e1 el contenido en nuestro sitio. Va a crear la lista de categor\u00edas, la lista de archivos por meses, la lista de autores y una lista con los 100 art\u00edculos m\u00e1s recientes.\r\n\r\nLo primero que hacemos es crear la funci\u00f3n y cerrar el c\u00f3digo PHP para mezclar el c\u00f3digo con etiquetas HTML.\r\n \r\n```php\r\nfunction cyberia_mapa_de_sitio() { ?>\r\n```\r\n\r\nA partir de este punto y hasta el cierre de la funci\u00f3n mezclaremos las etiquetas del HTML y el c\u00f3digo PHP.\r\n\r\n#### Lista de P\u00e1ginas\r\n\r\nLa salida de esta funci\u00f3n se muestra en dos columnas. Cada columna est\u00e1 englobada en una capa con el estilo que permite visualizarlas una a lado de la otra.\r\n\r\n```PHP\r\n<div class=\"archive-page\">\r\n   <h4>P\u00e1ginas</h4>\r\n   <ul>\r\n     <?php wp_list_pages( 'title_li=' ); ?>\r\n   </ul>\r\n```\r\n\r\nLa funci\u00f3n `wp_list_pages`[^1] muestra una lista de p\u00e1ginas con sus enlaces, toma varios argumentos en un arreglo, pero nosotros solo vamos a utilizar `title_li` sin ning\u00fan valor, para producir una salida de elementos englobada entre etiquetas `<ul> </ul>`. \r\n\r\n<p class=\"alert\">Al final de este art\u00edculo encontrar\u00e1s enlaces a todas las funciones utilizadas.</p>\r\n\r\n#### Lista de Categor\u00edas\r\n\r\n```php\r\n<h4>Categor\u00edas</h4>\r\n<ul>\r\n    <?php wp_list_categories( 'sort_column=name&title_li=' ); ?>\r\n</ul>\r\n```\r\n\r\nCon este fragmento de c\u00f3digo, mostramos la lista de categor\u00edas, usando la funci\u00f3n `wp_list_categories`[^2], y damos como argumentos que ordene la lista usando el nombre, es decir, por orden alfab\u00e9tico con `sort_column=name` y que no agrega nada a los elementos de la lista con `title_li=`.\r\n\r\n```php\r\n<ul>\r\n  <?php wp_list_categories( 'sort_column=name&title_li=' ); ?>\r\n</ul>\r\n```\r\n\r\n#### Archivos Mensuales\r\n\r\nLa tercera secci\u00f3n de nuestra columna corresponde a los archivos mensuales. Aqu\u00ed presentamos un enlace que lleva a cada mes que contenga art\u00edculos en nuestro blog, una de las muchas formas de presentar informaci\u00f3n que nos proporciona [Genesis Framework][gen] y WordPress.\r\n\r\n```php\r\n<h4>Archivos Mensuales</h4>\r\n  <ul>\r\n    <?php wp_get_archives( 'type=monthly' ); ?>\r\n  </ul>\r\n\r\n</div><!-- end .archive-page-->\r\n```\r\n\r\nLa funci\u00f3n utilizada es `wp_get_archives`[^3] y le indicamos en el par\u00e1metro que nos muestre los archivos mensuales con `type=monthly`.\r\n\r\nCon esta secci\u00f3n cerramos la primera columna.\r\n\r\n#### Lista de los archivos de un blog\r\n\r\nLa columna de la derecha contiene la lista de los 100 art\u00edculos m\u00e1s reciente de este blog, e inicia con la capa que forma la segunda columna de nuestro mapa de sitio.\r\n\r\n```php\r\n<div class=\"archive-page\">\r\n\r\n   <h4>Art\u00edculos Recientes</h4>\r\n   <ul>\r\n     <?php wp_get_archives( 'type=postbypost&limit=100' ); ?>\r\n   </ul>\r\n\r\n </div><!-- end .archive-page-->\r\n ```\r\n\r\nEn esta secci\u00f3n volvemos a hacer uso de la funci\u00f3n `wp_get_archives`[^3] pero ahora con diferentes argumentos.\r\n\r\n* **`type=postbypost`**. Significa que muestre los art\u00edculos o posts enlistados por el t\u00edtulo del post\r\n* **`limit=100`**. Establecemos el l\u00edmite de art\u00edculos que queremos mostrar. En el caso de Cyberia.MX mostramos los 100 art\u00edculos m\u00e1s recientes.\r\n\r\n### Cierre de una plantilla en Genesis Framework\r\n\r\nPara terminar nuestra plantilla llamamos al motor de nuestro blog. No tenemos que agregar encabeza, pie de p\u00e1gina, barras laterales o c\u00f3digos adicionales. [Genesis Framework][gen] colocar\u00e1 la salida de nuestra acci\u00f3n en el lugar adecuado, es decir en el gancho o _hook_ que especificamos.\r\n\r\n```php\r\n<?php\r\n}\r\n\r\ngenesis();\r\n```\r\n\r\nEste es un ejemplo sencillo de la potencia que nos proporciona [Genesis Framework][gen].\r\n\r\n### C\u00f3digo completo, plantilla Archivo\r\n\r\nAqu\u00ed tienes el c\u00f3digo completo de la plantilla.\r\n\r\n```php\r\n<?php\r\n /**\r\n   * Template Name: Archivo\r\n   * Esta plantilla crea un mapa del sitio.\r\n   *\r\n   * @category toledano\r\n   * @package  Plantilla\r\n   * @author   Cyberia.MX\r\n   * @license  http://www.opensource.org/licenses/gpl-license.php GPL v2.0 (or later)\r\n   * @link     http://yo.toledano.org/tag/genesiswp\r\n   **/\r\n\r\n /** Desactivar la acci\u00f3n preprogramada por Genesis Framework **/\r\nremove_action( 'genesis_post_content', 'genesis_do_post_content' );\r\nadd_action( 'genesis_post_content', 'toledano_mapa_de_sitio' );\r\n\r\n/**\r\n * Esta funci\u00f3n produce como salida un mapa del sitio en un esquema de dos\r\n * columnas, con etiquetas, categor\u00edas, archivos mensuales, autores y los archivos m\u00e1s recientes.\r\n */\r\n\r\nfunction toledano_mapa_de_sitio() { ?>\r\n\r\n  <div class=\"archive-page\">\r\n\r\n    <h4>P\u00e1ginas</h4>\r\n    <ul>\r\n      <?php wp_list_pages( 'title_li=' ); ?>\r\n    </ul>\r\n\r\n    <h4>Categor\u00edas</h4>\r\n    <ul>\r\n      <?php wp_list_categories( 'sort_column=name&title_li=' ); ?>\r\n    </ul>\r\n\r\n    <h4>Archivos Mensuales</h4>\r\n    <ul>\r\n      <?php wp_get_archives( 'type=monthly' ); ?>\r\n    </ul>\r\n\r\n  </div><!-- end .archive-page-->\r\n\r\n  <div class=\"archive-page\">\r\n\r\n    <h4>Art\u00edculos Recientes</h4>\r\n    <ul>\r\n      <?php wp_get_archives( 'type=postbypost&limit=100' ); ?>\r\n    </ul>\r\n\r\n  </div><!-- end .archive-page-->\r\n\r\n<?php\r\n}\r\n\r\ngenesis();\r\n```\r\n\r\n!!! notice \"Usa Genesis Framework\"\r\n    [Genesis][gen] te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, [Genesis][gen] te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple -- **!Empieza a usar hoy mismo [Genesis Framework][gen]!**\r\n\r\n[gen]: https://j.mp/genesismx\r\n\r\n[^1]: `wp_list_pages`: http://codex.wordpress.org/Function_Reference/wp_list_pages\r\n[^2]: `wp_list_categories`: http://codex.wordpress.org/Template_Tags/wp_list_categories\r\n[^3]: `wp_get_archives`: http://codex.wordpress.org/Template_Tags/wp_get_archives", "extend": "", "pub_date": "2013-12-28T05:43:14Z", "summary_html": "", "body_html": "<p>Una forma de mejorar el SEO de nuestro sitio es creando un mapa de su contenido. Este mapa del sitio no solo ayuda a los buscadores a descubrir nuestro contenido, tambi\u00e9n ayuda a los visitantes en este descubrimiento. Con <a href=\"https://j.mp/genesismx\">Genesis Framework</a> crear un mapa de sitio es muy f\u00e1cil.</p>\n<p>\u00bfYa conoces el <a href=\"http://cyberia.mx/archivo\">Archivo Cyberia.MX</a>? Contiene todas las p\u00e1ginas publicadas, la lista de categor\u00edas, de autores (aunque por el momento solo aparezco yo) y los 100 post m\u00e1s recientes. Esta p\u00e1gina usa una plantilla personalizada que contiene el c\u00f3digo que produce el resultado. Lo \u00fanico que hice fue crear una p\u00e1gina y seleccionar la plantilla <code>Archivo</code>. Eso fue suficiente para tener mi mapa del sitio tal como la ves.</p>\n<p>En este tutorial para <a href=\"https://j.mp/genesismx\">Genesis Framework</a> veremos c\u00f3mo crear una p\u00e1gina de archivo y al mismo tiempo vamos a revisar detalladamente las etiquetas de plantillas de WordPress relacionadas con el archivo.\nCrear un plantilla de p\u00e1gina</p>\n<p>Como vimos en el art\u00edculo anterior sobre <em>c\u00f3mo crear una portada personalizada</em> vimos que para crear una plantilla de p\u00e1gina (en ingl\u00e9s <em>Template Page</em>) lo \u00fanico que necesitamos es insertar el comentario <code>Template Name: Archivo</code>, pero para mejorar la legibilidad de nuestro c\u00f3digo, agregamos comentarios adicionales. Veamos la primera parte del c\u00f3digo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?php</span>\n <span class=\"sd\">/**</span>\n<span class=\"sd\">   * Template Name: Archivo</span>\n<span class=\"sd\">   * Esta plantilla crea un mapa del sitio.</span>\n<span class=\"sd\">   *</span>\n<span class=\"sd\">   * @category Cyberia</span>\n<span class=\"sd\">   * @package  Plantilla</span>\n<span class=\"sd\">   * @author   Cyberia.MX</span>\n<span class=\"sd\">   * @license  http://www.opensource.org/licenses/gpl-license.php GPL v2.0 (or later)</span>\n<span class=\"sd\">   * @link     http://cyberia.mx/tag/genesiswp</span>\n<span class=\"sd\">   **/</span>\n</pre></div>\n\n\n<p>Realmente solo es necesario incluir el contenido de la l\u00ednea 3, pero el resto del c\u00f3digo nos proporciona informaci\u00f3n importante y nos permite utilizar documentadores de c\u00f3digo como por ejemplo <a href=\"http://www.phpdoc.org/\">phpDocumentor</a> o <a href=\"http://apigen.org/\">apigen</a>.</p>\n<h3 id=\"eliminar-y-agregar-acciones-de-los-hooks-en-genesis-wordpress\">Eliminar y agregar acciones de los hooks en Genesis WordPress</h3>\n<p>Los <em>hooks</em> son \u201cganchos\u201d de los que colgamos acciones en <a href=\"https://j.mp/genesismx\">Genesis Framework</a>, lo que nos permite crear fragmentos de c\u00f3digo y contenido y colocarlos en cualquiera de los <em>hooks</em> que define <a href=\"https://j.mp/genesismx\">Genesis Framework</a>.</p>\n<p>Esto nos permite crear nuestro sitio web como si fuera un figura hecha con bloques de lego, y las posibilidades son verdaderamente inmensas. Poco a poco iremos descubriendo en esta serie todas las posibilidades de los <em>hooks</em>.</p>\n<p>En <a href=\"https://j.mp/genesismx\">Genesis Framework</a> existen <strong>\u00a151 hooks!</strong> lo que nos permite controlar todo nuestro sitio, pero en nuestra plantilla de p\u00e1gina solo vamos a utiliza el <em>hook</em> <code>genesis_post_content</code>. Este hook controla la salida del contenido del post o p\u00e1gina y si existe la imagen destacada, pero dentro del div <code>#content</code>.</p>\n<p>Primero vamos a desactivar del <em>hook</em> la acci\u00f3n preprogramada por <a href=\"https://j.mp/genesismx\">Genesis Framework</a> y que llama a la funci\u00f3n interna <code>genesis_do_post_content</code>. Para desactivar esta acci\u00f3n usamos la funci\u00f3n <code>remove_action</code>, que tiene dos par\u00e1metros: el primero es el <em>hook</em> y el segundo es la acci\u00f3n o funci\u00f3n que colgamos en el <em>hook</em>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">/** Desactivar la acci\u00f3n preprogramada por Genesis Framework **/</span>\n<span class=\"x\">remove_action( &#39;genesis_post_content&#39;, &#39;genesis_do_post_content&#39; );</span>\n</pre></div>\n\n\n<p>La siguiente actividad es agregar una acci\u00f3n a este mismo <em>hook</em>. Recuerda que las acciones son funciones cuya salida se coloca en ese \u201cgancho\u201d, as\u00ed que procura darle a tu acci\u00f3n/funci\u00f3n un nombre que te ayude a comprender para qu\u00e9 existe.</p>\n<p>Tenemos que usar la funci\u00f3n <code>add_function</code> que tiene dos par\u00e1metros obligatorios y un tercero opcional: el primero es el nombre del <em>hook</em>, el segundo es el nombre de la acci\u00f3n/funci\u00f3n que colgamos a dicho <em>hook</em> y el tercero, que es opcional, es la prioridad (si m\u00e1s de una acci\u00f3n est\u00e1 colgada al mismo <em>hook</em> se coloca primero la acci\u00f3n de prioridad m\u00e1s baja); en nuestro <em>hook</em> esta acci\u00f3n es la \u00fanica, por lo que agregar prioridades resulta ocioso.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">add_action( &#39;genesis_post_content&#39;, &#39;cyberia_mapa_de_sitio&#39; );</span>\n</pre></div>\n\n\n<p>Llamamos a la acci\u00f3n <code>cyberia_mapa_de_sitio</code> porque va a producir el contenido de nuestro mapa del sitio, lo que ayudar\u00e1 a los visitantes y a los motores de b\u00fasqueda a descubrir y recorrer todo nuestro sitio.</p>\n<h3 id=\"acciones-que-crean-contenido-en-genesis-framework\">Acciones que crean contenido en Genesis Framework</h3>\n<p>La acci\u00f3n <code>cyberia_mapa_de_sitio</code> es una funci\u00f3n que crear\u00e1 el contenido en nuestro sitio. Va a crear la lista de categor\u00edas, la lista de archivos por meses, la lista de autores y una lista con los 100 art\u00edculos m\u00e1s recientes.</p>\n<p>Lo primero que hacemos es crear la funci\u00f3n y cerrar el c\u00f3digo PHP para mezclar el c\u00f3digo con etiquetas HTML.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">function cyberia_mapa_de_sitio() { ?&gt;</span>\n</pre></div>\n\n\n<p>A partir de este punto y hasta el cierre de la funci\u00f3n mezclaremos las etiquetas del HTML y el c\u00f3digo PHP.</p>\n<h4 id=\"lista-de-paginas\">Lista de P\u00e1ginas</h4>\n<p>La salida de esta funci\u00f3n se muestra en dos columnas. Cada columna est\u00e1 englobada en una capa con el estilo que permite visualizarlas una a lado de la otra.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&lt;div class=&quot;archive-page&quot;&gt;</span>\n<span class=\"x\">   &lt;h4&gt;P\u00e1ginas&lt;/h4&gt;</span>\n<span class=\"x\">   &lt;ul&gt;</span>\n<span class=\"x\">     </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">wp_list_pages</span><span class=\"p\">(</span> <span class=\"s1\">&#39;title_li=&#39;</span> <span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">   &lt;/ul&gt;</span>\n</pre></div>\n\n\n<p>La funci\u00f3n <code>wp_list_pages</code><sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> muestra una lista de p\u00e1ginas con sus enlaces, toma varios argumentos en un arreglo, pero nosotros solo vamos a utilizar <code>title_li</code> sin ning\u00fan valor, para producir una salida de elementos englobada entre etiquetas <code>&lt;ul&gt; &lt;/ul&gt;</code>. </p>\n<p class=\"alert\">Al final de este art\u00edculo encontrar\u00e1s enlaces a todas las funciones utilizadas.</p>\n\n<h4 id=\"lista-de-categorias\">Lista de Categor\u00edas</h4>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&lt;h4&gt;Categor\u00edas&lt;/h4&gt;</span>\n<span class=\"x\">&lt;ul&gt;</span>\n<span class=\"x\">    </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">wp_list_categories</span><span class=\"p\">(</span> <span class=\"s1\">&#39;sort_column=name&amp;title_li=&#39;</span> <span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">&lt;/ul&gt;</span>\n</pre></div>\n\n\n<p>Con este fragmento de c\u00f3digo, mostramos la lista de categor\u00edas, usando la funci\u00f3n <code>wp_list_categories</code><sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>, y damos como argumentos que ordene la lista usando el nombre, es decir, por orden alfab\u00e9tico con <code>sort_column=name</code> y que no agrega nada a los elementos de la lista con <code>title_li=</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&lt;ul&gt;</span>\n<span class=\"x\">  </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">wp_list_categories</span><span class=\"p\">(</span> <span class=\"s1\">&#39;sort_column=name&amp;title_li=&#39;</span> <span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">&lt;/ul&gt;</span>\n</pre></div>\n\n\n<h4 id=\"archivos-mensuales\">Archivos Mensuales</h4>\n<p>La tercera secci\u00f3n de nuestra columna corresponde a los archivos mensuales. Aqu\u00ed presentamos un enlace que lleva a cada mes que contenga art\u00edculos en nuestro blog, una de las muchas formas de presentar informaci\u00f3n que nos proporciona <a href=\"https://j.mp/genesismx\">Genesis Framework</a> y WordPress.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&lt;h4&gt;Archivos Mensuales&lt;/h4&gt;</span>\n<span class=\"x\">  &lt;ul&gt;</span>\n<span class=\"x\">    </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">wp_get_archives</span><span class=\"p\">(</span> <span class=\"s1\">&#39;type=monthly&#39;</span> <span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">  &lt;/ul&gt;</span>\n\n<span class=\"x\">&lt;/div&gt;&lt;!-- end .archive-page--&gt;</span>\n</pre></div>\n\n\n<p>La funci\u00f3n utilizada es <code>wp_get_archives</code><sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup> y le indicamos en el par\u00e1metro que nos muestre los archivos mensuales con <code>type=monthly</code>.</p>\n<p>Con esta secci\u00f3n cerramos la primera columna.</p>\n<h4 id=\"lista-de-los-archivos-de-un-blog\">Lista de los archivos de un blog</h4>\n<p>La columna de la derecha contiene la lista de los 100 art\u00edculos m\u00e1s reciente de este blog, e inicia con la capa que forma la segunda columna de nuestro mapa de sitio.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&lt;div class=&quot;archive-page&quot;&gt;</span>\n\n<span class=\"x\">   &lt;h4&gt;Art\u00edculos Recientes&lt;/h4&gt;</span>\n<span class=\"x\">   &lt;ul&gt;</span>\n<span class=\"x\">     </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">wp_get_archives</span><span class=\"p\">(</span> <span class=\"s1\">&#39;type=postbypost&amp;limit=100&#39;</span> <span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">   &lt;/ul&gt;</span>\n\n<span class=\"x\"> &lt;/div&gt;&lt;!-- end .archive-page--&gt;</span>\n<span class=\"x\"> ```</span>\n\n<span class=\"x\">En esta secci\u00f3n volvemos a hacer uso de la funci\u00f3n `wp_get_archives`[^3] pero ahora con diferentes argumentos.</span>\n\n<span class=\"x\">* **`type=postbypost`**. Significa que muestre los art\u00edculos o posts enlistados por el t\u00edtulo del post</span>\n<span class=\"x\">* **`limit=100`**. Establecemos el l\u00edmite de art\u00edculos que queremos mostrar. En el caso de Cyberia.MX mostramos los 100 art\u00edculos m\u00e1s recientes.</span>\n\n<span class=\"x\">### Cierre de una plantilla en Genesis Framework</span>\n\n<span class=\"x\">Para terminar nuestra plantilla llamamos al motor de nuestro blog. No tenemos que agregar encabeza, pie de p\u00e1gina, barras laterales o c\u00f3digos adicionales. [Genesis Framework][gen] colocar\u00e1 la salida de nuestra acci\u00f3n en el lugar adecuado, es decir en el gancho o _hook_ que especificamos.</span>\n\n<span class=\"x\">```php</span>\n<span class=\"cp\">&lt;?php</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">genesis</span><span class=\"p\">();</span>\n</pre></div>\n\n\n<p>Este es un ejemplo sencillo de la potencia que nos proporciona <a href=\"https://j.mp/genesismx\">Genesis Framework</a>.</p>\n<h3 id=\"codigo-completo-plantilla-archivo\">C\u00f3digo completo, plantilla Archivo</h3>\n<p>Aqu\u00ed tienes el c\u00f3digo completo de la plantilla.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?php</span>\n <span class=\"sd\">/**</span>\n<span class=\"sd\">   * Template Name: Archivo</span>\n<span class=\"sd\">   * Esta plantilla crea un mapa del sitio.</span>\n<span class=\"sd\">   *</span>\n<span class=\"sd\">   * @category toledano</span>\n<span class=\"sd\">   * @package  Plantilla</span>\n<span class=\"sd\">   * @author   Cyberia.MX</span>\n<span class=\"sd\">   * @license  http://www.opensource.org/licenses/gpl-license.php GPL v2.0 (or later)</span>\n<span class=\"sd\">   * @link     http://yo.toledano.org/tag/genesiswp</span>\n<span class=\"sd\">   **/</span>\n\n <span class=\"sd\">/** Desactivar la acci\u00f3n preprogramada por Genesis Framework **/</span>\n<span class=\"nx\">remove_action</span><span class=\"p\">(</span> <span class=\"s1\">&#39;genesis_post_content&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;genesis_do_post_content&#39;</span> <span class=\"p\">);</span>\n<span class=\"nx\">add_action</span><span class=\"p\">(</span> <span class=\"s1\">&#39;genesis_post_content&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;toledano_mapa_de_sitio&#39;</span> <span class=\"p\">);</span>\n\n<span class=\"sd\">/**</span>\n<span class=\"sd\"> * Esta funci\u00f3n produce como salida un mapa del sitio en un esquema de dos</span>\n<span class=\"sd\"> * columnas, con etiquetas, categor\u00edas, archivos mensuales, autores y los archivos m\u00e1s recientes.</span>\n<span class=\"sd\"> */</span>\n\n<span class=\"k\">function</span> <span class=\"nf\">toledano_mapa_de_sitio</span><span class=\"p\">()</span> <span class=\"p\">{</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n\n<span class=\"x\">  &lt;div class=&quot;archive-page&quot;&gt;</span>\n\n<span class=\"x\">    &lt;h4&gt;P\u00e1ginas&lt;/h4&gt;</span>\n<span class=\"x\">    &lt;ul&gt;</span>\n<span class=\"x\">      </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">wp_list_pages</span><span class=\"p\">(</span> <span class=\"s1\">&#39;title_li=&#39;</span> <span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">    &lt;/ul&gt;</span>\n\n<span class=\"x\">    &lt;h4&gt;Categor\u00edas&lt;/h4&gt;</span>\n<span class=\"x\">    &lt;ul&gt;</span>\n<span class=\"x\">      </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">wp_list_categories</span><span class=\"p\">(</span> <span class=\"s1\">&#39;sort_column=name&amp;title_li=&#39;</span> <span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">    &lt;/ul&gt;</span>\n\n<span class=\"x\">    &lt;h4&gt;Archivos Mensuales&lt;/h4&gt;</span>\n<span class=\"x\">    &lt;ul&gt;</span>\n<span class=\"x\">      </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">wp_get_archives</span><span class=\"p\">(</span> <span class=\"s1\">&#39;type=monthly&#39;</span> <span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">    &lt;/ul&gt;</span>\n\n<span class=\"x\">  &lt;/div&gt;&lt;!-- end .archive-page--&gt;</span>\n\n<span class=\"x\">  &lt;div class=&quot;archive-page&quot;&gt;</span>\n\n<span class=\"x\">    &lt;h4&gt;Art\u00edculos Recientes&lt;/h4&gt;</span>\n<span class=\"x\">    &lt;ul&gt;</span>\n<span class=\"x\">      </span><span class=\"cp\">&lt;?php</span> <span class=\"nx\">wp_get_archives</span><span class=\"p\">(</span> <span class=\"s1\">&#39;type=postbypost&amp;limit=100&#39;</span> <span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"x\"></span>\n<span class=\"x\">    &lt;/ul&gt;</span>\n\n<span class=\"x\">  &lt;/div&gt;&lt;!-- end .archive-page--&gt;</span>\n\n<span class=\"cp\">&lt;?php</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">genesis</span><span class=\"p\">();</span>\n</pre></div>\n\n\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Usa Genesis Framework</p>\n<p><a href=\"https://j.mp/genesismx\">Genesis</a> te facilita contruir r\u00e1pida y f\u00e1cilmente incre\u00edbles sitios web con WordPress. No importa si eres un principiante o un desarrollador avanzado, <a href=\"https://j.mp/genesismx\">Genesis</a> te proporciona una base segura y optimizada para los motores de b\u00fasqueda con la que puede llegar a extremos que no son posibles usando solo WordPress. Es muy simple &ndash; <strong>!Empieza a usar hoy mismo <a href=\"https://j.mp/genesismx\">Genesis Framework</a>!</strong></p>\n</div>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p><code>wp_list_pages</code>: http://codex.wordpress.org/Function_Reference/wp_list_pages&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p><code>wp_list_categories</code>: http://codex.wordpress.org/Template_Tags/wp_list_categories&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p><code>wp_get_archives</code>: http://codex.wordpress.org/Template_Tags/wp_get_archives&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-crear-un-mapa-de-sitio-en-wordpress", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 85, "fields": {"idx": "56111bda-f3bc-4bdb-a152-ef41fd6c765b", "creado": "2017-07-29T04:46:18.637Z", "modificado": "2017-07-29T04:47:13.142Z", "title": "Como crear un mapa de sitio con Django", "summary": "", "body": "Title: Como crear un mapa de sitio con Django\r\nDate: 2013/12/27 03:12\r\nCategory: Desarrollo \r\nTags: views, django, python, templates \r\nSlug: como-crear-un-mapa-de-sitio-con-django\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nInspirado en un art\u00edculo anterior sobre como [crear mapas de sitio con WordPress](https://j.mp/19sblkG) me dispongo a crear la p\u00e1gina equivalente para **namespace.mx** que utiliza [Django](/tag/django/). El mapa del sitio es un archivo que contiene enlaces a todas las categor\u00edas, a todos los a\u00f1os y meses que contenga el blog, y a las 100 entradas m\u00e1s recientes.\r\n\r\n### Definiendo la URL\r\n\r\nEmpiezo definiendo la <abbr class=\"initialism\" title=\"Uniform Resource Locator\">URL</abbr> del mapa del sitio, y preciso que se encuentre escribiendo `/mapa/` en la barra de direcciones, as\u00ed que en mi archivo `urls.py` agrego la l\u00ednea con la expresi\u00f3n regular, la funci\u00f3n y nombre para usarla m\u00e1s f\u00e1cilmente.\r\n\r\n    url(r'^mapa/$', 'conxb.views.mapa', name='mapa'),\r\n\r\nAgrego un patr\u00f3n de b\u00fasqueda formado por `r('^mapa/$')`, donde la `r` indica que es una cadena `raw`, es decir, sin formato, el s\u00edmbolo `^` indica en sintaxis <abbr class=\"initialism\" title=\"RegEx o Expresiones Regulares\">regex</abbr> el inicio del patr\u00f3n y el s\u00edmbolo `$` indica el fin del dicho patr\u00f3n de b\u00fasqueda.\r\n\r\nLa funci\u00f3n que ser\u00e1 llamada cuando se encuentre el patr\u00f3n es `conxb.views.mapa`, sin argumentos. Tiene atajo, definido en `name='mapa'` que permite usar este atajo con la funci\u00f3n `reverse` en una vista o la funci\u00f3n `url` en una plantilla o _template_.\r\n\r\n### La vista para el mapa\r\n\r\nRecordemos que Django funciona bajo un esquema <abbr title=\"Model-View-Controler o Modelo-Vista-Presentaci\u00f3n\" class=\"initialism\">MVC</abbr> que separa la definci\u00f3n del objeto, la l\u00f3gica y la plantilla. En este caso, el modelo es la `Entrada` que ya est\u00e1 definida y debemos generar la _view_ o vista, es decir, la programaci\u00f3n que enviaremos a la plantilla.\r\n\r\n#### La lista de p\u00e1ginas\r\n\r\nDjango proporciona un modelo similar a las p\u00e1ginas en [WordPress](/wordpress/) que se llama `flatapages` o p\u00e1ginas simples. Debemos hacer una consulta para saber con qu\u00e9 p\u00e1ginas simples cuenta nuestro blog.\r\n\r\nEntonces el primer paso es importar el modelo, que se llama `FlatPage` del m\u00f3dulo `django.contrib.flatpages`, y hacer una consulta para extraer todas las p\u00e1ginas.\r\n\r\n    from django.contrib.flatpages.models import FlatPage\r\n    flats = FlatPage.objects.all()\r\n\r\n#### La lista de categor\u00edas\r\n\r\nRepetimos el procedimiento para las categor\u00edas, importamos el modelo y creamos una variable con el `queryset` o consulta.\r\n\r\n    from blog.models import Categoria\r\n    cats = Categoria.objects.all()\r\n\r\n#### Archivos mensuales\r\n\r\nPara crear los archivos mensuales usamos el modelo `Entry` que defines las entradas en este blog y obtenemos los meses en los que existen entradas agrupando los resultados. \r\n\r\nPara esto [Django](/tag/django/) proporciona un _manager_ o administrador de consultas muy \u00fatil que se llama `dates`. Toma como argumentos el campo que contiene la fecha, que en este caso es `pub_date`; el campo de ordenaci\u00f3n, que puede ser anual (`year`), mensual (`year`) y diario (`diario`) y un tercero que es opcional para indicar la ordenaci\u00f3n (`order='DESC'`)\r\n\r\n    from blog.models import Entry\r\n    meses = Entry.objects.dates('pub_date', 'month', order='DESC')\r\n\r\n#### La lista de art\u00edculos\r\n\r\nPara obtener los 100 posts m\u00e1s recientes, hacemos una nueva consulta al modelo `Entry`, especificando este l\u00edmite.\r\n\r\nLa consulta pide que los resultados se ordenen por fecha descendentemente, de ah\u00ed el signo menos (`-pub_date`) y dentro por \u00edndice de las entradas (`id` o `pk`). Limitamos el n\u00famero de resultados con notaci\u00f3n _slice_.\r\n\r\n    entries = Entry.objects.all().order_by('-pub_date','id')[:100]\r\n\r\n#### La vista completa\r\n\r\nCon estos datos terminados la consulta,  que queda de la siguiente manera. Observa que uso un decorardor `@render_to` de la app `annoying` que ahorra un mont\u00f3n de c\u00f3digo.\r\n\r\n    # Modulos del blog\r\n    from blog.models import Entry\r\n    from django.contrib.flatpages.models import FlatPage\r\n    from blog.models import Categoria\r\n    # Decorador de views\r\n    from annoying.decorators import render_to\r\n\r\n    @render_to('indice/mapa.html')\r\n    def mapa(request):\r\n        flats = FlatPage.objects.all()\r\n        cats = Categoria.objects.all()\r\n        meses = Entry.objects.dates('pub_date', 'month', order='DESC')\r\n        entries = Entry.objects.all().order_by('-pub_date','id')[:100]\r\n        return {'flats': flats, 'cats':cats, 'meses':meses, 'entries':entries}\r\n\r\nY con estos datos pasamos a la plantilla.\r\n\r\n### La plantilla del mapa\r\n\r\nPara asegurar la consistencia en la presentaci\u00f3n de la informaci\u00f3n y para asegurar una experiencia de usuario coherente con el resto del sitio, iniciamos extendiendo el archivo base y generamos nuestras columnas.\r\n\r\nLa primera columna, igual que en el ejemplo de [WordPress](/wordpress/) contiene las listas de p\u00e1ginas, categor\u00edas y meses.\r\n\r\nUsamos ciclos `for` para crear la lista de p\u00e1ginas, como se muestra a continuaci\u00f3n, para las p\u00e1ginas. La funci\u00f3n `get_absolute_url()` es un est\u00e1ndar en [Django](/django/) para este tipo de vistas. Pero como ver\u00e1s a continuaci\u00f3n, yo uso una propia llama `permalink`, aunque su funci\u00f3n es la misma.\r\n\r\n    <!-- listado de p\u00e1ginas -->\r\n    {% for page in flats %}\r\n    <li><a href=\"{{page.get_absolute_url}}\">{{page.title}}</a></li>\r\n    {% endfor %}\r\n\r\nEn realidad, todos los listados son iguales, como el de categor\u00edas:\r\n\r\n    {% for cat in cats %}\r\n      <li><a href=\"{{cat.permalink}}\">{{cat.title}}</a></li>\r\n    {% endfor %}\r\n\r\nEn el caso de los meses, debemos convertir la fecha en una <abbr class=\"initialism\" title=\"Uniform Resource Locator\">URL</abbr> correcta y usamos el filtro `date` de las plantillas de [Django](/django/).\r\n\r\n    {% for mes in meses %}\r\n        <li><a href=\"{{mes|date:'/Y/m/'}}\">{{mes|date:\"F \\d\\e\\l Y\"}}</a></li>\r\n    {% endfor %}\r\n\r\nY con esto terminamos la columna izquierda de nuestro mapa. \r\n\r\nLa columna derecha se forma con el listado de art\u00edculos, de forma id\u00e9ntica a las listas anteriores.\r\n\r\n    {% for entry in entries %}\r\n    <li><a href=\"{{entry.permalink}}\">{{entry.title}}</a></li>\r\n    {% endfor %}\r\n\r\nEl resultado final lo puedes ver en [**el mapa del sitio**](/archivo/).", "extend": "", "pub_date": "2013-12-28T05:44:28Z", "summary_html": "", "body_html": "<p>Inspirado en un art\u00edculo anterior sobre como <a href=\"https://j.mp/19sblkG\">crear mapas de sitio con WordPress</a> me dispongo a crear la p\u00e1gina equivalente para <strong>namespace.mx</strong> que utiliza <a href=\"/tag/django/\">Django</a>. El mapa del sitio es un archivo que contiene enlaces a todas las categor\u00edas, a todos los a\u00f1os y meses que contenga el blog, y a las 100 entradas m\u00e1s recientes.</p>\n<h3 id=\"definiendo-la-url\">Definiendo la URL</h3>\n<p>Empiezo definiendo la <abbr class=\"initialism\" title=\"Uniform Resource Locator\">URL</abbr> del mapa del sitio, y preciso que se encuentre escribiendo <code>/mapa/</code> en la barra de direcciones, as\u00ed que en mi archivo <code>urls.py</code> agrego la l\u00ednea con la expresi\u00f3n regular, la funci\u00f3n y nombre para usarla m\u00e1s f\u00e1cilmente.</p>\n<div class=\"codehilite\"><pre><span></span>url(r&#39;^mapa/$&#39;, &#39;conxb.views.mapa&#39;, name=&#39;mapa&#39;),\n</pre></div>\n\n\n<p>Agrego un patr\u00f3n de b\u00fasqueda formado por <code>r('^mapa/$')</code>, donde la <code>r</code> indica que es una cadena <code>raw</code>, es decir, sin formato, el s\u00edmbolo <code>^</code> indica en sintaxis <abbr class=\"initialism\" title=\"RegEx o Expresiones Regulares\">regex</abbr> el inicio del patr\u00f3n y el s\u00edmbolo <code>$</code> indica el fin del dicho patr\u00f3n de b\u00fasqueda.</p>\n<p>La funci\u00f3n que ser\u00e1 llamada cuando se encuentre el patr\u00f3n es <code>conxb.views.mapa</code>, sin argumentos. Tiene atajo, definido en <code>name='mapa'</code> que permite usar este atajo con la funci\u00f3n <code>reverse</code> en una vista o la funci\u00f3n <code>url</code> en una plantilla o <em>template</em>.</p>\n<h3 id=\"la-vista-para-el-mapa\">La vista para el mapa</h3>\n<p>Recordemos que Django funciona bajo un esquema <abbr title=\"Model-View-Controler o Modelo-Vista-Presentaci\u00f3n\" class=\"initialism\">MVC</abbr> que separa la definci\u00f3n del objeto, la l\u00f3gica y la plantilla. En este caso, el modelo es la <code>Entrada</code> que ya est\u00e1 definida y debemos generar la <em>view</em> o vista, es decir, la programaci\u00f3n que enviaremos a la plantilla.</p>\n<h4 id=\"la-lista-de-paginas\">La lista de p\u00e1ginas</h4>\n<p>Django proporciona un modelo similar a las p\u00e1ginas en <a href=\"/wordpress/\">WordPress</a> que se llama <code>flatapages</code> o p\u00e1ginas simples. Debemos hacer una consulta para saber con qu\u00e9 p\u00e1ginas simples cuenta nuestro blog.</p>\n<p>Entonces el primer paso es importar el modelo, que se llama <code>FlatPage</code> del m\u00f3dulo <code>django.contrib.flatpages</code>, y hacer una consulta para extraer todas las p\u00e1ginas.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.flatpages.models</span> <span class=\"kn\">import</span> <span class=\"n\">FlatPage</span>\n<span class=\"n\">flats</span> <span class=\"o\">=</span> <span class=\"n\">FlatPage</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<h4 id=\"la-lista-de-categorias\">La lista de categor\u00edas</h4>\n<p>Repetimos el procedimiento para las categor\u00edas, importamos el modelo y creamos una variable con el <code>queryset</code> o consulta.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">blog.models</span> <span class=\"kn\">import</span> <span class=\"n\">Categoria</span>\n<span class=\"n\">cats</span> <span class=\"o\">=</span> <span class=\"n\">Categoria</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<h4 id=\"archivos-mensuales\">Archivos mensuales</h4>\n<p>Para crear los archivos mensuales usamos el modelo <code>Entry</code> que defines las entradas en este blog y obtenemos los meses en los que existen entradas agrupando los resultados. </p>\n<p>Para esto <a href=\"/tag/django/\">Django</a> proporciona un <em>manager</em> o administrador de consultas muy \u00fatil que se llama <code>dates</code>. Toma como argumentos el campo que contiene la fecha, que en este caso es <code>pub_date</code>; el campo de ordenaci\u00f3n, que puede ser anual (<code>year</code>), mensual (<code>year</code>) y diario (<code>diario</code>) y un tercero que es opcional para indicar la ordenaci\u00f3n (<code>order='DESC'</code>)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">blog.models</span> <span class=\"kn\">import</span> <span class=\"n\">Entry</span>\n<span class=\"n\">meses</span> <span class=\"o\">=</span> <span class=\"n\">Entry</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">dates</span><span class=\"p\">(</span><span class=\"s1\">&#39;pub_date&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;month&#39;</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;DESC&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"la-lista-de-articulos\">La lista de art\u00edculos</h4>\n<p>Para obtener los 100 posts m\u00e1s recientes, hacemos una nueva consulta al modelo <code>Entry</code>, especificando este l\u00edmite.</p>\n<p>La consulta pide que los resultados se ordenen por fecha descendentemente, de ah\u00ed el signo menos (<code>-pub_date</code>) y dentro por \u00edndice de las entradas (<code>id</code> o <code>pk</code>). Limitamos el n\u00famero de resultados con notaci\u00f3n <em>slice</em>.</p>\n<div class=\"codehilite\"><pre><span></span>entries = Entry.objects.all().order_by(&#39;-pub_date&#39;,&#39;id&#39;)[:100]\n</pre></div>\n\n\n<h4 id=\"la-vista-completa\">La vista completa</h4>\n<p>Con estos datos terminados la consulta,  que queda de la siguiente manera. Observa que uso un decorardor <code>@render_to</code> de la app <code>annoying</code> que ahorra un mont\u00f3n de c\u00f3digo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\"># Modulos del blog</span>\n<span class=\"kn\">from</span> <span class=\"nn\">blog.models</span> <span class=\"kn\">import</span> <span class=\"n\">Entry</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.flatpages.models</span> <span class=\"kn\">import</span> <span class=\"n\">FlatPage</span>\n<span class=\"kn\">from</span> <span class=\"nn\">blog.models</span> <span class=\"kn\">import</span> <span class=\"n\">Categoria</span>\n<span class=\"c1\"># Decorador de views</span>\n<span class=\"kn\">from</span> <span class=\"nn\">annoying.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">render_to</span>\n\n<span class=\"nd\">@render_to</span><span class=\"p\">(</span><span class=\"s1\">&#39;indice/mapa.html&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">mapa</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">flats</span> <span class=\"o\">=</span> <span class=\"n\">FlatPage</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n    <span class=\"n\">cats</span> <span class=\"o\">=</span> <span class=\"n\">Categoria</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n    <span class=\"n\">meses</span> <span class=\"o\">=</span> <span class=\"n\">Entry</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">dates</span><span class=\"p\">(</span><span class=\"s1\">&#39;pub_date&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;month&#39;</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;DESC&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">entries</span> <span class=\"o\">=</span> <span class=\"n\">Entry</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">&#39;-pub_date&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">)[:</span><span class=\"mi\">100</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;flats&#39;</span><span class=\"p\">:</span> <span class=\"n\">flats</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cats&#39;</span><span class=\"p\">:</span><span class=\"n\">cats</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meses&#39;</span><span class=\"p\">:</span><span class=\"n\">meses</span><span class=\"p\">,</span> <span class=\"s1\">&#39;entries&#39;</span><span class=\"p\">:</span><span class=\"n\">entries</span><span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Y con estos datos pasamos a la plantilla.</p>\n<h3 id=\"la-plantilla-del-mapa\">La plantilla del mapa</h3>\n<p>Para asegurar la consistencia en la presentaci\u00f3n de la informaci\u00f3n y para asegurar una experiencia de usuario coherente con el resto del sitio, iniciamos extendiendo el archivo base y generamos nuestras columnas.</p>\n<p>La primera columna, igual que en el ejemplo de <a href=\"/wordpress/\">WordPress</a> contiene las listas de p\u00e1ginas, categor\u00edas y meses.</p>\n<p>Usamos ciclos <code>for</code> para crear la lista de p\u00e1ginas, como se muestra a continuaci\u00f3n, para las p\u00e1ginas. La funci\u00f3n <code>get_absolute_url()</code> es un est\u00e1ndar en <a href=\"/django/\">Django</a> para este tipo de vistas. Pero como ver\u00e1s a continuaci\u00f3n, yo uso una propia llama <code>permalink</code>, aunque su funci\u00f3n es la misma.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">&lt;!-- listado de p\u00e1ginas --&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">page</span> <span class=\"k\">in</span> <span class=\"nv\">flats</span> <span class=\"cp\">%}</span>\n<span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;</span><span class=\"cp\">{{</span><span class=\"nv\">page.get_absolute_url</span><span class=\"cp\">}}</span><span class=\"s\">&quot;</span><span class=\"nt\">&gt;</span><span class=\"cp\">{{</span><span class=\"nv\">page.title</span><span class=\"cp\">}}</span><span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n</pre></div>\n\n\n<p>En realidad, todos los listados son iguales, como el de categor\u00edas:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">cat</span> <span class=\"k\">in</span> <span class=\"nv\">cats</span> <span class=\"cp\">%}</span>\n  <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;</span><span class=\"cp\">{{</span><span class=\"nv\">cat.permalink</span><span class=\"cp\">}}</span><span class=\"s\">&quot;</span><span class=\"nt\">&gt;</span><span class=\"cp\">{{</span><span class=\"nv\">cat.title</span><span class=\"cp\">}}</span><span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n</pre></div>\n\n\n<p>En el caso de los meses, debemos convertir la fecha en una <abbr class=\"initialism\" title=\"Uniform Resource Locator\">URL</abbr> correcta y usamos el filtro <code>date</code> de las plantillas de <a href=\"/django/\">Django</a>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">mes</span> <span class=\"k\">in</span> <span class=\"nv\">meses</span> <span class=\"cp\">%}</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;</span><span class=\"cp\">{{</span><span class=\"nv\">mes</span><span class=\"o\">|</span><span class=\"nf\">date</span><span class=\"s1\">:&#39;/Y/m/&#39;</span><span class=\"cp\">}}</span><span class=\"s\">&quot;</span><span class=\"nt\">&gt;</span><span class=\"cp\">{{</span><span class=\"nv\">mes</span><span class=\"o\">|</span><span class=\"nf\">date</span><span class=\"s2\">:&quot;F \\d\\e\\l Y&quot;</span><span class=\"cp\">}}</span><span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n</pre></div>\n\n\n<p>Y con esto terminamos la columna izquierda de nuestro mapa. </p>\n<p>La columna derecha se forma con el listado de art\u00edculos, de forma id\u00e9ntica a las listas anteriores.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">entry</span> <span class=\"k\">in</span> <span class=\"nv\">entries</span> <span class=\"cp\">%}</span>\n<span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;</span><span class=\"cp\">{{</span><span class=\"nv\">entry.permalink</span><span class=\"cp\">}}</span><span class=\"s\">&quot;</span><span class=\"nt\">&gt;</span><span class=\"cp\">{{</span><span class=\"nv\">entry.title</span><span class=\"cp\">}}</span><span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n</pre></div>\n\n\n<p>El resultado final lo puedes ver en <a href=\"/archivo/\"><strong>el mapa del sitio</strong></a>.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-crear-un-mapa-de-sitio-con-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 86, "fields": {"idx": "23e34e54-51d3-4b19-bbd1-3f840dcea091", "creado": "2017-07-29T04:48:41.026Z", "modificado": "2017-07-29T04:48:41.026Z", "title": "C\u00f3mo encontrar archivos con Python", "summary": "", "body": "Title: C\u00f3mo encontrar archivos con Python\r\nDate: 2014/01/05 04:03\r\nCategory: Desarrollo \r\nTags: tools, python, scripts \r\nSlug: como-encontrar-archivos-con-python\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nEste es el problema: Tengo muchos archivos de karaoke que vienen en pares de archivos `mp3` y `cdg`, el primero tiene la m\u00fasica y el segundo tiene las letras de las canciones. Pero son varios cientos de canciones distribuidas en muchos directorios.\r\n\r\nLo que yo quer\u00eda era crear una lista de los archivos cdg para poder usarla con el programa de *karaokes*, por lo que use `fnmatch` que hace esto mucho m\u00e1s f\u00e1cil, en solo una l\u00ednea.\r\n\r\nPrimero vamos a importar dos m\u00f3dulos necesarios para hacer esta b\u00fasqueda, el primero es `os` que contiene el generador `walk` para recorrer los directorios y el segundo es `fnmatch` para encontrar coincidencias.\r\n\r\n    import os\r\n    import fnmatch\r\n\r\nY vamos a crear una lista donde almacenaremos todas las coincidencias.\r\n\r\n    coincide=[]\r\n\r\nA continuaci\u00f3n vamos a recorrer el directorio en cuesti\u00f3n con la funci\u00f3n `os.walk` para tener los nombres de los archivos. Cuando un archivo coincida con nuestra b\u00fasqueda, colocamos la ruta completa en la lista `coincide`. Usamos la funci\u00f3n `fnmatch.filter` que toma dos argumentos, el primero es el archivo y el segundo es la coincidencia que buscamos.\r\n\r\n    for root, dirnames, filenames in os.walk('\\Karaoke'):\r\n      for filename in fnmatch.filter(filenames, '*.cdg'):\r\n          coincide.append(os.path.join(root, filename))\r\n      \r\nCuando el filtro encuentra una coincidencia se ejecuta la \u00faltima instrucci\u00f3n que es agregar a la lista el archivo con la ruta completa.\r\n\r\nEsto imprime los resultados en la pantalla, pero unas l\u00edneas m\u00e1s permite guardar la lista en un archivo:\r\n\r\n    i = 1\r\n    f = open ('granlista.txt', 'w')\r\n    for m in matches:\r\n        f.write('F%s=..\\..\\..%s\\n' % (i, m))\r\n        i+=1\r\n        \r\nY con eso tenemos una lista de archivos con la terminaci\u00f3n deseada.", "extend": "", "pub_date": "2014-01-06T05:47:13Z", "summary_html": "", "body_html": "<p>Este es el problema: Tengo muchos archivos de karaoke que vienen en pares de archivos <code>mp3</code> y <code>cdg</code>, el primero tiene la m\u00fasica y el segundo tiene las letras de las canciones. Pero son varios cientos de canciones distribuidas en muchos directorios.</p>\n<p>Lo que yo quer\u00eda era crear una lista de los archivos cdg para poder usarla con el programa de <em>karaokes</em>, por lo que use <code>fnmatch</code> que hace esto mucho m\u00e1s f\u00e1cil, en solo una l\u00ednea.</p>\n<p>Primero vamos a importar dos m\u00f3dulos necesarios para hacer esta b\u00fasqueda, el primero es <code>os</code> que contiene el generador <code>walk</code> para recorrer los directorios y el segundo es <code>fnmatch</code> para encontrar coincidencias.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">fnmatch</span>\n</pre></div>\n\n\n<p>Y vamos a crear una lista donde almacenaremos todas las coincidencias.</p>\n<div class=\"codehilite\"><pre><span></span>coincide=[]\n</pre></div>\n\n\n<p>A continuaci\u00f3n vamos a recorrer el directorio en cuesti\u00f3n con la funci\u00f3n <code>os.walk</code> para tener los nombres de los archivos. Cuando un archivo coincida con nuestra b\u00fasqueda, colocamos la ruta completa en la lista <code>coincide</code>. Usamos la funci\u00f3n <code>fnmatch.filter</code> que toma dos argumentos, el primero es el archivo y el segundo es la coincidencia que buscamos.</p>\n<div class=\"codehilite\"><pre><span></span>for root, dirnames, filenames in os.walk(&#39;\\Karaoke&#39;):\n  for filename in fnmatch.filter(filenames, &#39;*.cdg&#39;):\n      coincide.append(os.path.join(root, filename))\n</pre></div>\n\n\n<p>Cuando el filtro encuentra una coincidencia se ejecuta la \u00faltima instrucci\u00f3n que es agregar a la lista el archivo con la ruta completa.</p>\n<p>Esto imprime los resultados en la pantalla, pero unas l\u00edneas m\u00e1s permite guardar la lista en un archivo:</p>\n<div class=\"codehilite\"><pre><span></span>i = 1\nf = open (&#39;granlista.txt&#39;, &#39;w&#39;)\nfor m in matches:\n    f.write(&#39;F%s=..\\..\\..%s\\n&#39; % (i, m))\n    i+=1\n</pre></div>\n\n\n<p>Y con eso tenemos una lista de archivos con la terminaci\u00f3n deseada.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-encontrar-archivos-con-python", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 87, "fields": {"idx": "426650a6-5ee0-4f1b-a3d4-9f7e320029ab", "creado": "2017-07-29T04:49:54.682Z", "modificado": "2017-07-29T04:49:54.682Z", "title": "Encontrar archivos en Linux con find", "summary": "", "body": "Title: Encontrar archivos en Linux con find\r\nDate: 2014/01/10 02:59\r\nCategory: Desarrollo \r\nTags: linux, tools \r\nSlug: encontrar-archivos-en-linux-con-find\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nSeguramente te has enfrentado al problema de que subes un directorio a tu servidor y resulta que todos los permisos est\u00e1n incorrectos. O peor a\u00fan, solo los permisos de los archivos PHP o de los directorios.\r\n\r\nBueno, pues aqui est\u00e1 la soluci\u00f3n, simple y elegante: usar el comando `find`. Dejo algunos ejemplos:\r\n\r\n#### Cambiar los permisos de todos los directorios a 775:\r\n\r\nAplica los permisos especificados (`chmod 755`) a todos los directorios (`-type d`) encontrados en la ruta.\r\n\r\n    find . -type d -exec chmod 775   {} \\;\r\n\r\n#### Cambiar el due\u00f1o de todos los directorios:\r\n\r\nEn el mismo sentido que el ejemplo anterior, aplica el comando especificado (`chown usuario:grupo`) a los directorios (`-type d`):\r\n\r\n    find . -type d -exec chown usuario:grupo   {} \\;\r\n\r\n#### Cambiar los permisos de todos los archivos a 664:\r\n\r\nEl objetivo ahora es contrar todos los archivos (`-type f`) que se encuentran debajo del directorio actual y cambiarles los permisos (`chmod 644`)\r\n\r\n    find . -type f -exec chmod 644 {} \\;\r\n\r\n<div style=\"max-width:360px; margin: 25px auto;\">\r\n<!-- cyberia.336x289.01.top -->\r\n<ins class=\"adsbygoogle\"\r\nstyle=\"display:inline-block;width:336px;height:280px\"\r\ndata-ad-client=\"ca-pub-9466828947698623\"\r\ndata-ad-slot=\"8590866557\"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n</div>\r\n<div style=\"clear:both;\"></div>\r\n\r\n#### Cambiar los permisos de todos los archivos con extensi\u00f3n PHP a 664:\r\n\r\n    find . -type f -name '*php' -exec chmod 664  {} \\;\r\n\r\nEste comando se lee de la siguiente manera.\r\n\r\n* `.` El punto indica el directorio actual. `find` busca en todos los subdirectorios a partir del lugar donde se ejecuta.\r\n* `-type f` Indica que las coincidencias deben ser tipo archivo o `file`.\r\n* `-name '*php` Indica que las coincidencias deben ser cuando la terminaci\u00f3n sea `php`\r\n* `-exec comando {} \\;` Indica que el comando se ejecutar\u00e1 agregando las coincidencias al final. El punto y coma sirve para que regrese `0 (cero) si tuvo \u00e9xito. Y la diagonal es para _escapar_ el punto y coma.", "extend": "", "pub_date": "2014-01-11T05:48:41Z", "summary_html": "", "body_html": "<p>Seguramente te has enfrentado al problema de que subes un directorio a tu servidor y resulta que todos los permisos est\u00e1n incorrectos. O peor a\u00fan, solo los permisos de los archivos PHP o de los directorios.</p>\n<p>Bueno, pues aqui est\u00e1 la soluci\u00f3n, simple y elegante: usar el comando <code>find</code>. Dejo algunos ejemplos:</p>\n<h4 id=\"cambiar-los-permisos-de-todos-los-directorios-a-775\">Cambiar los permisos de todos los directorios a 775:</h4>\n<p>Aplica los permisos especificados (<code>chmod 755</code>) a todos los directorios (<code>-type d</code>) encontrados en la ruta.</p>\n<div class=\"codehilite\"><pre><span></span>find . -type d -exec chmod 775   {} \\;\n</pre></div>\n\n\n<h4 id=\"cambiar-el-dueno-de-todos-los-directorios\">Cambiar el due\u00f1o de todos los directorios:</h4>\n<p>En el mismo sentido que el ejemplo anterior, aplica el comando especificado (<code>chown usuario:grupo</code>) a los directorios (<code>-type d</code>):</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">find</span> <span class=\"o\">.</span> <span class=\"nt\">-type</span> <span class=\"nt\">d</span> <span class=\"nt\">-exec</span> <span class=\"nt\">chown</span> <span class=\"nt\">usuario</span><span class=\"p\">:</span><span class=\"nd\">grupo</span>   <span class=\"p\">{}</span> <span class=\"err\">\\</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<h4 id=\"cambiar-los-permisos-de-todos-los-archivos-a-664\">Cambiar los permisos de todos los archivos a 664:</h4>\n<p>El objetivo ahora es contrar todos los archivos (<code>-type f</code>) que se encuentran debajo del directorio actual y cambiarles los permisos (<code>chmod 644</code>)</p>\n<div class=\"codehilite\"><pre><span></span>find . -type f -exec chmod 644 {} \\;\n</pre></div>\n\n\n<div style=\"max-width:360px; margin: 25px auto;\">\n<!-- cyberia.336x289.01.top -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:inline-block;width:336px;height:280px\"\ndata-ad-client=\"ca-pub-9466828947698623\"\ndata-ad-slot=\"8590866557\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n</div>\n\n<div style=\"clear:both;\"></div>\n\n<h4 id=\"cambiar-los-permisos-de-todos-los-archivos-con-extension-php-a-664\">Cambiar los permisos de todos los archivos con extensi\u00f3n PHP a 664:</h4>\n<div class=\"codehilite\"><pre><span></span>find . -type f -name &#39;*php&#39; -exec chmod 664  {} \\;\n</pre></div>\n\n\n<p>Este comando se lee de la siguiente manera.</p>\n<ul>\n<li><code>.</code> El punto indica el directorio actual. <code>find</code> busca en todos los subdirectorios a partir del lugar donde se ejecuta.</li>\n<li><code>-type f</code> Indica que las coincidencias deben ser tipo archivo o <code>file</code>.</li>\n<li><code>-name '*php</code> Indica que las coincidencias deben ser cuando la terminaci\u00f3n sea <code>php</code></li>\n<li><code>-exec comando {} \\;</code> Indica que el comando se ejecutar\u00e1 agregando las coincidencias al final. El punto y coma sirve para que regrese `0 (cero) si tuvo \u00e9xito. Y la diagonal es para <em>escapar</em> el punto y coma.</li>\n</ul>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "encontrar-archivos-en-linux-con-find", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 88, "fields": {"idx": "16a33d6b-b3cd-48b0-ae11-6f0927a9a000", "creado": "2017-07-29T04:50:35.933Z", "modificado": "2017-07-29T04:50:35.933Z", "title": "Configurar PostgreSQL en Heroku", "summary": "", "body": "Title: [^Configurar PostgreSQL en Heroku]\r\nDate: 2014/01/12 01:42\r\nCategory: Desarrollo\r\nTags: postgresql, paas\r\nSlug: configurar-postgresql-en-heroku\r\nAuthor: Javier Sanchez Toledano\r\nSummary:\r\n\r\nVimos en un [art\u00edculo anterior](http://j.mp/ns-nitro01) como configurar nuestro entorno de trabajo para desarrollar una aplicaci\u00f3n de Django en [Nitrous.IO][nitro]. Ahora vamos a crear una base de datos en PostgreSQL usando la plataforma gratuita que proporciona [Heroku][heroku].\r\n\r\n__[Heroku][heroku]__ es una plataforma de servicios de c\u00f3mputo (en ingl\u00e9s se llaman PaaS: _Plataform As A Service_) basada en Ubuntu que soporta distintos lenguajes de programaci\u00f3n y proporciona herramientas de desarrollo en distintos niveles, desde el gratuito hasta el de alto desempe\u00f1o.\r\n\r\nPara el proyecto __Krypton__ vamos a crear una base de datos en PostgreSQL y la vamos a conectar con nuestra aplicaci\u00f3n desarrollada en [Nitrous.IO][nitro], aunque por la fortaleza de la plataforma podemos usarla en otros proyectos, no solo en los desarrollados en Django.\r\n\r\n## C\u00f3mo crear una base de PostgreSQL en Heroku\r\n\r\nLo primero que tienes que hacer es ir a [Heroku PostgreSQL](http://j.mp/ns-psql-heroku) y crear una cuenta:\r\n\r\n![Heroku PostgreSQL](https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-01-heroku.png)\r\n\r\nInscribirse es gratis y tendr\u00e1s un servidor de base de datos PostgreSQL gratuito, aunque limitado a 10 mil registros. Para el desarrollo de nuestro proyecto eso es suficiente, cuentan con un plan b\u00e1sico que solo cuesta 9 d\u00f3lares mensuales, aunque hay servicios bastante robustos para soportar cualquier tipo de carga, incluso las aplicaciones m\u00e1s pesadas.\r\n\r\n<div style=\"max-width:360px; margin: 25px auto;\">\r\n<!-- cyberia.336x289.01.top -->\r\n<ins class=\"adsbygoogle\"\r\nstyle=\"display:inline-block;width:336px;height:280px\"\r\ndata-ad-client=\"ca-pub-9466828947698623\"\r\ndata-ad-slot=\"8590866557\"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n</div>\r\n<div style=\"clear:both;\"></div>\r\n\r\nAs\u00ed que elegimos el plan de desarrollador que es gratuito y agregamos una base de datos.\r\n\r\n![Plan Dev](https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-02-heroku.png)\r\n\r\nSe crea con esto una base de datos con un nombre aleatorio pero \u00fanico. Si quieres cambiarle el nombre para que te sea m\u00e1s f\u00e1cil tienes que irte al men\u00fa Apps,\r\n\r\n![Menu Apps](https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-04-heroku.png)\r\n\r\nAh\u00ed ver\u00e1s la lista de tus aplicaciones, selecciona la que acabas de crear,\r\n\r\n![Lista de Apps](https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-05-heroku.png)\r\n\r\nUna vez dentro del panel de control de tu aplicaci\u00f3n, selecciona el men\u00fa _Settings_ d\u00f3nde ver\u00e1s la opci\u00f3n para cambiar el nombre en _Rename_.\r\n\r\n![Rename](https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-06-heroku.png)\r\n\r\nDe regreso a tu base de datos, dentro del panel de control de tu base de datos, encontrar\u00e1s ah\u00ed los datos necesarios para conectarnos desde nuestra aplicaci\u00f3n. Toma nota de ellos.\r\n\r\n![Datos de conexi\u00f3n](https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-07-heroku.png)\r\n\r\nPara facilitarnos la vida, vamos a colocar estos datos dentro de nuestro entorno en [Nitrous.IO][nitro], y una forma es colocarlas en variables de entorno, dentro de nuestro archivo `.bashrc`\r\n\r\n    export KRYPTON_DATABASE_HOST=exxxxxxxxxxxxxx.amazonaws.com\r\n    export KRYPTON_DATABASE_NAME=dxxxxxxxxxxxxxxj\r\n    export KRYPTON_DATABASE_USER=gxxxxxxxxxxxxxxn\r\n    export KRYPTON_DATABASE_PASS=8xxxxxxxxxxxxxxU\r\n    export KRYPTON_DATABASE_PORT=5432\r\n\r\nPara usarlos en Django, por ejemplo, tendr\u00edamos que asegurarnos que tenemos en nuestro archivo `settings.py` el m\u00f3dulo `os` y tomar estos datos del entorno.\r\n\r\n    import os\r\n\r\n    DATABASES = {\r\n      'default': {\r\n          'ENGINE': 'django.db.backends.postgresql_psycopg2',\r\n            'HOST': os.environ[KRYPTON_DATABASE_HOST],\r\n            'NAME': os.environ[KRYPTON_DATABASE_NAME],\r\n            'USER': os.environ[KRYPTON_DATABASE_USER],\r\n        'PASSWORD': os.environ[KRYPTON_DATABASE_PASS],\r\n            'PORT': 5432,\r\n      }\r\n    }\r\n\r\nY listo, ya tenemos una base de datos PostgreSQL, en [Heroku][heroku], una plataforma de servicios que contribuir\u00e1 al \u00e9xito de nuestro proyecto.\r\n\r\n[nitro]: http://j.mp/ns-nitro\r\n[heroku]: http://j.mp/ns-heroku", "extend": "", "pub_date": "2014-01-13T05:49:54Z", "summary_html": "", "body_html": "<p>Vimos en un <a href=\"http://j.mp/ns-nitro01\">art\u00edculo anterior</a> como configurar nuestro entorno de trabajo para desarrollar una aplicaci\u00f3n de Django en <a href=\"http://j.mp/ns-nitro\">Nitrous.IO</a>. Ahora vamos a crear una base de datos en PostgreSQL usando la plataforma gratuita que proporciona <a href=\"http://j.mp/ns-heroku\">Heroku</a>.</p>\n<p><strong><a href=\"http://j.mp/ns-heroku\">Heroku</a></strong> es una plataforma de servicios de c\u00f3mputo (en ingl\u00e9s se llaman PaaS: <em>Plataform As A Service</em>) basada en Ubuntu que soporta distintos lenguajes de programaci\u00f3n y proporciona herramientas de desarrollo en distintos niveles, desde el gratuito hasta el de alto desempe\u00f1o.</p>\n<p>Para el proyecto <strong>Krypton</strong> vamos a crear una base de datos en PostgreSQL y la vamos a conectar con nuestra aplicaci\u00f3n desarrollada en <a href=\"http://j.mp/ns-nitro\">Nitrous.IO</a>, aunque por la fortaleza de la plataforma podemos usarla en otros proyectos, no solo en los desarrollados en Django.</p>\n<h2 id=\"como-crear-una-base-de-postgresql-en-heroku\">C\u00f3mo crear una base de PostgreSQL en Heroku</h2>\n<p>Lo primero que tienes que hacer es ir a <a href=\"http://j.mp/ns-psql-heroku\">Heroku PostgreSQL</a> y crear una cuenta:</p>\n<p><img alt=\"Heroku PostgreSQL\" src=\"https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-01-heroku.png\"></p>\n<p>Inscribirse es gratis y tendr\u00e1s un servidor de base de datos PostgreSQL gratuito, aunque limitado a 10 mil registros. Para el desarrollo de nuestro proyecto eso es suficiente, cuentan con un plan b\u00e1sico que solo cuesta 9 d\u00f3lares mensuales, aunque hay servicios bastante robustos para soportar cualquier tipo de carga, incluso las aplicaciones m\u00e1s pesadas.</p>\n<div style=\"max-width:360px; margin: 25px auto;\">\n<!-- cyberia.336x289.01.top -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:inline-block;width:336px;height:280px\"\ndata-ad-client=\"ca-pub-9466828947698623\"\ndata-ad-slot=\"8590866557\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n</div>\n\n<div style=\"clear:both;\"></div>\n\n<p>As\u00ed que elegimos el plan de desarrollador que es gratuito y agregamos una base de datos.</p>\n<p><img alt=\"Plan Dev\" src=\"https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-02-heroku.png\"></p>\n<p>Se crea con esto una base de datos con un nombre aleatorio pero \u00fanico. Si quieres cambiarle el nombre para que te sea m\u00e1s f\u00e1cil tienes que irte al men\u00fa Apps,</p>\n<p><img alt=\"Menu Apps\" src=\"https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-04-heroku.png\"></p>\n<p>Ah\u00ed ver\u00e1s la lista de tus aplicaciones, selecciona la que acabas de crear,</p>\n<p><img alt=\"Lista de Apps\" src=\"https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-05-heroku.png\"></p>\n<p>Una vez dentro del panel de control de tu aplicaci\u00f3n, selecciona el men\u00fa <em>Settings</em> d\u00f3nde ver\u00e1s la opci\u00f3n para cambiar el nombre en <em>Rename</em>.</p>\n<p><img alt=\"Rename\" src=\"https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-06-heroku.png\"></p>\n<p>De regreso a tu base de datos, dentro del panel de control de tu base de datos, encontrar\u00e1s ah\u00ed los datos necesarios para conectarnos desde nuestra aplicaci\u00f3n. Toma nota de ellos.</p>\n<p><img alt=\"Datos de conexi\u00f3n\" src=\"https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro02-07-heroku.png\"></p>\n<p>Para facilitarnos la vida, vamos a colocar estos datos dentro de nuestro entorno en <a href=\"http://j.mp/ns-nitro\">Nitrous.IO</a>, y una forma es colocarlas en variables de entorno, dentro de nuestro archivo <code>.bashrc</code></p>\n<div class=\"codehilite\"><pre><span></span>export KRYPTON_DATABASE_HOST=exxxxxxxxxxxxxx.amazonaws.com\nexport KRYPTON_DATABASE_NAME=dxxxxxxxxxxxxxxj\nexport KRYPTON_DATABASE_USER=gxxxxxxxxxxxxxxn\nexport KRYPTON_DATABASE_PASS=8xxxxxxxxxxxxxxU\nexport KRYPTON_DATABASE_PORT=5432\n</pre></div>\n\n\n<p>Para usarlos en Django, por ejemplo, tendr\u00edamos que asegurarnos que tenemos en nuestro archivo <code>settings.py</code> el m\u00f3dulo <code>os</code> y tomar estos datos del entorno.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s1\">&#39;default&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s1\">&#39;ENGINE&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;django.db.backends.postgresql_psycopg2&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;HOST&#39;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"n\">KRYPTON_DATABASE_HOST</span><span class=\"p\">],</span>\n        <span class=\"s1\">&#39;NAME&#39;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"n\">KRYPTON_DATABASE_NAME</span><span class=\"p\">],</span>\n        <span class=\"s1\">&#39;USER&#39;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"n\">KRYPTON_DATABASE_USER</span><span class=\"p\">],</span>\n    <span class=\"s1\">&#39;PASSWORD&#39;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"n\">KRYPTON_DATABASE_PASS</span><span class=\"p\">],</span>\n        <span class=\"s1\">&#39;PORT&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5432</span><span class=\"p\">,</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Y listo, ya tenemos una base de datos PostgreSQL, en <a href=\"http://j.mp/ns-heroku\">Heroku</a>, una plataforma de servicios que contribuir\u00e1 al \u00e9xito de nuestro proyecto.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "configurar-postgresql-en-heroku", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 89, "fields": {"idx": "109e6175-de70-42a9-93ef-e2594ea635c4", "creado": "2017-07-29T04:51:34.804Z", "modificado": "2017-07-29T04:51:34.804Z", "title": "Configuraciones M\u00faltiples para Django", "summary": "", "body": "Title: Configuraciones M\u00faltiples para Django\r\nDate: 2014/01/12 10:05\r\nCategory: Desarrollo \r\nTags: paas, django\r\nSlug: configuraciones-multiples-para-django\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nEste es el cuarto art\u00edculo de una serie dedicada a documentar la creaci\u00f3n de un sitio web. Los tres art\u00edculos anteriores son los siguientes:\r\n\r\n* [C\u00f3mo desarrollar una aplicaci\u00f3n con Nitrous.IO](https://j.mp/ns-nitro01)\r\n* [Configurar PostgreSQL en Heroku](https://j.mp/ns-nitro02)\r\n* [Configurar un blog con Zinna y Django en Nitrous.IO](https://j.mp/ns-nitro03)\r\n\r\nEste art\u00edculo tiene que ver con un patr\u00f3n de programaci\u00f3n que permite mantener un proyecto de Django de forma profesional y sin tiempos muertos. Considera que en con el **Proyecto Krypton** tengo un *servidor local*, en mi laptop; tengo el *servidor de ensayos* y pruebas en [Nitrous.IO][nitro] y mi *servidor de producci\u00f3n*, donde correr\u00e1 el proyecto una vez terminado. \r\n\r\nCada uno de estos tres servidores usa una base de datos distinta, en el servidor local tengo instalado el paquete `django-admin-bar`  y adem\u00e1s edito las plantillas usando `compass`. En el servidor de pruebas uso una base de datos en Heroku. En el servidor de producci\u00f3n no aplica la opci\u00f3n de `DEBUG`, uso `Gunicorn`, etc. Es decir, hay diferentes entornos de desarrollo y uno de los principios de Django, el principal desde mi punto de vista, dice que no debemos repetirnos (**DRY**, es No Te Repitas o *Don't Repeat Yourself* ) y otro m\u00e1s dice que debemos usar la menor cantidad de c\u00f3digo. \r\n\r\nEntonces seguiremos estos principios de programaci\u00f3n y usaremos una configuraci\u00f3n com\u00fan para los tres entornos y configuraciones espec\u00edficas para cada uno, que contengan **solo las opciones necesarias para cada ambiente**.\r\n\r\nTendremos una configuraci\u00f3n que llamaremos `local`, para mi laptop; una configuraci\u00f3n llamada `nitro` para el servidor de despliegue y una configuraci\u00f3n llamada `producci\u00f3n` para el sitio que servir\u00e1 a los usuarios. Estas tres configuraciones tendr\u00e1n una base en com\u00fan y as\u00ed la llamaremos `base` y con esa vamos a empezar.\r\n\r\n<div style=\"max-width:360px; margin: 25px auto;\">\r\n<!-- cyberia.336x289.01.top -->\r\n<ins class=\"adsbygoogle\"\r\nstyle=\"display:inline-block;width:336px;height:280px\"\r\ndata-ad-client=\"ca-pub-9466828947698623\"\r\ndata-ad-slot=\"8590866557\"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n</div>\r\n<div style=\"clear:both;\"></div>\r\n\r\n## Configuraci\u00f3n base de Django en un ambiente m\u00faltiple\r\n\r\nLo primero que tenemos que hacer es crear un paquete llamado `settings` en nuestra app principal. Es decir, Django de forma predeterminada crea un archivo `settings.py` que es un m\u00f3dulo por si mismo, puedes importarlo en otras aplicaciones y usar las constantes definidas en ese archivo, como lo har\u00edas con otro m\u00f3dulo. \r\n\r\nAl crear un directorio y colocar un archivo `__init__.py` en \u00e9l, este directorio se convierte en un **paquete** y por lo tanto puede contener otros m\u00f3dulos dentro de su nombre de espacio (o *namespace*) a los que podemos acceder con la notaci\u00f3n de punto. Es decir, tendremos un m\u00f3dulo `settings.base`, `settings.local`, `settings.nitro` y `settings.produccion` y solo tenemos que activar el m\u00f3dulo correspondiente al entorno de desarrollo en el que estemos.\r\n\r\nVamos a nuestro IDE y creamos una carpeta a la que llamaremos `settings`, haciendo clic con el bot\u00f3n derecho (o con ctrl + clic en las Mac) y eligiendo `New Folder`, aparece una peque\u00f1a \u00e1rea de edici\u00f3n donde escribiremos el nombre `settings`:\r\n\r\n![folder settings](https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro04-02-settings.png)\r\n\r\nDentro de esta carpeta y con la misma t\u00e9cnica del bot\u00f3n derecho (ctrl+clic si usas Mac) crearemos un archivo al que nombraremos `__init__.py`. El nombre es importante, son donde guiones de subrayado (`__`), luego la palabra `init` y luego otros dos guiones de subrayado (`__`). Este archivo le indica a Python que este directorio es un paquete que contiene uno o m\u00e1s m\u00f3dulos.\r\n\r\nEste archivo puede estar vac\u00edo, aunque el programa que utilizo para editar en el entorno `local` agrega esta l\u00ednea:\r\n\r\n    __author__ = 'Javier Sanchez'\r\n    \r\nAhora vamos a crear el archivo de configuraci\u00f3n base, que contiene las constantes comunes para todos los entornos de desarrollo y producci\u00f3n. Por lo tanto, creamos un nuevo archivo llamado `base.py` dentro de la carpeta `settings`. \r\n\r\nPara hacer m\u00e1s f\u00e1cil la creaci\u00f3n de nuestra configuraci\u00f3n base, vamos a abrir el archivo `settings.py` original y de ah\u00ed tomaremos las constantes comunes.\r\n\r\n## La configuraci\u00f3n base\r\n\r\n**1. Codificaci\u00f3n** - \r\nLa primera l\u00ednea de mi archivo es la indicaci\u00f3n de codificaci\u00f3n, ya que documento mi c\u00f3digo en espa\u00f1ol con acentos y `\u00f1`, es importante decirle a Python que use `UTF-8` para procesar mis archivos.\r\n\r\n    # -*- coding: utf-8 -*-\r\n    \r\nDespu\u00e9s acostumbro a colocar la identificaci\u00f3n del archivo dentro del proyecto. No es precisamente para usarlas como *docstrings* pero me funcionan. Tal vez en el futuro pueda reemplazarlas[^1].\r\n\r\n    #         name: mx.com.criptomonedas.settings.base\r\n    #       author: Javier Sanchez Toledano\r\n    #        email: javier(at)namespace.mx\r\n    #          url: https://namespace.mx\r\n    #  description: Configuraci\u00f3n base para el proyecto krypton\r\n    #      version: 0.1.0\r\n\r\n**2. La ruta base** - \r\nHasta la versi\u00f3n 1.5.x de Django, las rutas hacia los directorios de un proyecto \r\nten\u00edan que escribirse completas, lo que se conoce como *hard coding*. A partir de la versi\u00f3n 1.6 las rutas se *calculan* usando como punto de partida el archivo actual. \r\n\r\nDe forma predeterminada se usa el m\u00f3dulo `os.path` para esto, aunque tambi\u00e9n es posible usar [Unipath](https://j.mp/ns-Unipath) que parece ser una soluci\u00f3n m\u00e1s elegante y es la que usaremos en este proyecto. Usando las rutas calculadas nos aseguramos que nuestro proyecto siempre funcione, sin importar d\u00f3nde lo coloquemos, y no importando tampoco el sistema operativo ni el sistema de archivos utilizado.\r\n\r\n    from unipath import Path\r\n    PROJECT_DIR = Path(__file__).ancestor(3)\r\n    MEDIA_ROOT = PROJECT_DIR.child(\"media\")\r\n    STATIC_URL = '/assets/'\r\n    STATIC_ROOT = PROJECT_DIR.child(\"static\")\r\n    STATICFILES_DIRS = (\r\n        PROJECT_DIR.child(\"assets\"),\r\n    )\r\n    TEMPLATE_DIRS = (\r\n        PROJECT_DIR.child(\"templates\"),\r\n    )\r\n    \r\n**3. Constantes comunes** -\r\nLas siguientes l\u00edneas muestras las constantes comunes para los diferentes entornos en donde se ejecutar\u00e1 el proyecto Krypton. \r\n\r\n    MIDDLEWARE_CLASSES = (\r\n        'django.contrib.sessions.middleware.SessionMiddleware',\r\n        'django.middleware.common.CommonMiddleware',\r\n        'django.middleware.csrf.CsrfViewMiddleware',\r\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n        'django.contrib.messages.middleware.MessageMiddleware',\r\n        'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n    )\r\n    ROOT_URLCONF = 'krypton.urls'\r\n    WSGI_APPLICATION = 'krypton.wsgi.application'\r\n\r\n    # Internacionalizaci\u00f3n\r\n    # Ver https://docs.djangoproject.com/en/1.6/topics/i18n/\r\n    LANGUAGE_CODE = 'es-mx'\r\n    TIME_ZONE = 'Mexico/General'\r\n    USE_I18N = True\r\n    USE_L10N = True\r\n    USE_TZ = True\r\n\r\n    SITE_ID = 1\r\n    ALLOWED_HOSTS = []\r\n\r\n    import django.conf.global_settings as DEFAULT_SETTINGS\r\n    TEMPLATE_CONTEXT_PROCESSORS = DEFAULT_SETTINGS.TEMPLATE_CONTEXT_PROCESSORS + (\r\n        \"django.core.context_processors.request\",\r\n    )\r\n    \r\n**4. Las aplicaciones comunes** - \r\nVeremos m\u00e1s adelante que es posible activar aplicaciones en un ambiente local que no est\u00e9n presentes en otros, mientras tanto configuramos las aplicaciones y nos remitimos a [la documentaci\u00f3n de Zinnia](https://j.mp/ns-zinnia-doc-apps), que el blog elegido para el proyecto.\r\n\r\n    INSTALLED_APPS = (\r\n      'django.contrib.auth',\r\n      'django.contrib.admin',\r\n      'django.contrib.sites',\r\n      'django.contrib.comments',\r\n      'django.contrib.sessions',\r\n      'django.contrib.messages',\r\n      'django.contrib.staticfiles',\r\n      'django.contrib.contenttypes',\r\n      'tagging',\r\n      'mptt',\r\n      'zinnia',\r\n    )\r\n\r\nVemos que aparecen ciertas aplicaciones que no est\u00e1n en la configuraci\u00f3n b\u00e1sica, como `django.contrib.sites` para la gesti\u00f3n sitios, el sistema de comentarios `django.contrib.comments`, el gestor de tipos de contenido `django.contrib.contenttypes`, la aplicaci\u00f3n `taggit` para etiquetas, `mptt` que es una aplicaci\u00f3n que ocupa internamente Zinnia[^2] y la propia aplicaci\u00f3n del blog `zinnia`.\r\n\r\n**5. Lo que se deja fuera** - \r\nSe dejan fuera varias constante, que van entonces en las configuraciones espec\u00edficas.\r\n\r\nLa primera es la configuraci\u00f3n de la base de datos, `DATABASES`. Aunque en los tres entornos de desarrollo uso [PostgreSQL](https://j.mp/ns-postgresql) en producci\u00f3n y en [Nitrous.IO][nitro] y [Posrgress.app](https://j.mp/ns-postgresqapp) en Mac, los par\u00e1metros de conexi\u00f3n cambian.\r\n\r\nTambi\u00e9n queda fuera la clave secreta (`SECRET_KEY`) que como **buen pr\u00e1ctica**\r\n es conveniente dejarla en las variables de entorno. Tal vez en el entorno de desarrollo que tu utilices sea diferente, pero tanto en [Nitrous.IO][nitro]  como en Mac y en mi servidor de producci\u00f3n puedo usar `export` dentro del archivo `.bashrc` para tener esa variable delicada de forma controlada.\r\n\r\nTener las variables *sensibles* dentro del entorno en el que se ejecute la aplicaci\u00f3n podr\u00eda dar la impresi\u00f3n que no es necesario contar con configuraciones espec\u00edficas. Sin embargo, como desarrollador, encuentro m\u00e1s c\u00f3modo ver esos datos de forma independiente. Es por eso que prefiero definirla de forma separada.\r\n\r\n## Configuraci\u00f3n de Django para un servidor de desarrollo\r\n\r\nAhora en el IDE vamos a crear un archivo llamado `nitro.py` dentro de nuestro m\u00f3dulo de `settings` y vamos a colocar ah\u00ed las configuraciones restantes y que son espec\u00edficas para nuestro servidor de desarrollo.\r\n\r\n**1. La clave secreta** - \r\nDespu\u00e9s de las l\u00edneas de codificaci\u00f3n e identificaci\u00f3n empezamos importando la configuraci\u00f3n base, que contiene las opciones comunes.\r\n\r\n    from .base import *\r\n\r\nComo ves hacemos uso de la ruta relativa, para simplificar el c\u00f3digo utilizado. Luego importamos el m\u00f3dulo `os` para tener acceso a las variables del entorno, usando la lista `os.environ`:\r\n\r\n    import os\r\n    SECRET_KEY = os.environ['NITRO_SECRET_KEY']\r\n\r\n**2. Configuraci\u00f3n de la base de datos** - \r\nTenemos dos opciones, colocar los datos de conexi\u00f3n que no proporciona Heroku o bien usar la recomendaci\u00f3n de Nitrous.IO de usar variables de entorno. Las dos opciones son v\u00e1lidas, as\u00ed que queda al gusto de cada uno.\r\n\r\n    DATABASES = {\r\n      'default': {\r\n          'ENGINE': 'django.db.backends.postgresql_psycopg2',\r\n            'HOST': os.environ['KRYPTON_DATABASE_HOST'],      \r\n            'NAME': os.environ['KRYPTON_DATABASE_NAME'],\r\n            'USER': os.environ['KRYPTON_DATABASE_USER'],\r\n        'PASSWORD': os.environ['KRYPTON_DATABASE_PASS'],\r\n            'PORT': 5432,    \r\n      }\r\n    }\r\n\r\n**3. Depuraci\u00f3n** - \r\nPodemos especificar tres opciones relacionadas con la depuraci\u00f3n del c\u00f3digo y son las siguientes:\r\n\r\n    DEBUG = True\r\n    TEMPLATE_DEBUG = True\r\n    ALLOWED_HOSTS = []\r\n    \r\nLa primera, `DEBUG` muestra mensajes informativos cuando encuentra un error en el c\u00f3digo, de forma que nos ayuda a solucionarlo. Lo mismo pasa con `TEMPLATE_DEBUG` pero ahora con las plantillas. Si est\u00e1s dos opciones est\u00e1n en falso (`False`), entonces debemos especificar que direcciones de internet tienen permitido servir la aplicaci\u00f3n, pero eso lo veremos cuando despleguemos nuestro proyecto en producci\u00f3n.\r\n\r\nEl archivo de configuraci\u00f3n `local.py` es muy parecido, solo que como est\u00e1 en mi laptop, la seguridad es un poco m\u00e1s relajada y codifico completamente la clave secreta y los par\u00e1metros de conexi\u00f3n a mi base de datos.\r\n\r\n## Uso de configuraciones espec\u00edficas en Django\r\n\r\nAhora bien, para verificar que nuestro servidor est\u00e1 funcionando debemos indicarle a Django d\u00f3nde est\u00e1 la configuraci\u00f3n, es decir, como se llama el m\u00f3dulo. Podemos hacerlo usando variables de entorno, colocando la siguiente l\u00ednea en el archivo `.bashrc` o el que corresponda en tu sistema operativo o servidor de despliegue:\r\n\r\n    export DJANGO_SETTINGS_MODULE=krypton.settings.local\r\n    \r\nPero tambi\u00e9n podemos hacerlo desde la l\u00ednea de comandos, arrancando nuestro servidor de esta forma:\r\n\r\n    python manage.py runserver 0.0.0.0:8000 --settings=krypton.settings.local\r\n    \r\nComo verificamos que nuestra configuraci\u00f3n independiente funciona, dejamos aqu\u00ed este art\u00edculo.\r\n\r\n    0 errors found                                                                                                                                                 \r\n    January 12, 2014 - 03:58:54                                                                                                                                    \r\n    Django version 1.6.1, using settings 'krypton.settings.nitro'                                                                                                  \r\n    Starting development server at http://0.0.0.0:8000/                                                                                                            \r\n    Quit the server with CONTROL-C.                                                                                                                                \r\n    [12/Jan/2014 03:59:43] \"GET / HTTP/1.1\" 200 1757\r\n\r\nEn la pr\u00f3xima entrega de la serie veremos con se configura Zinnia.\r\n\r\n[nitro]: http://j.mp/ns-nitro\r\n\r\n[^1]: Usar *docstrings* es una buena pr\u00e1ctica que debo adoptar de inmediato, pero primero tengo que aprender a usar [Sphinx](http://pythonhosted.org/an_example_pypi_project/sphinx.html#full-code-example)\r\n\r\n[^2]: La verdad no se qu\u00e9 es y para qu\u00e9 sirve, pero prometo averiguarlo.", "extend": "", "pub_date": "2014-01-13T05:50:36Z", "summary_html": "", "body_html": "<p>Este es el cuarto art\u00edculo de una serie dedicada a documentar la creaci\u00f3n de un sitio web. Los tres art\u00edculos anteriores son los siguientes:</p>\n<ul>\n<li><a href=\"https://j.mp/ns-nitro01\">C\u00f3mo desarrollar una aplicaci\u00f3n con Nitrous.IO</a></li>\n<li><a href=\"https://j.mp/ns-nitro02\">Configurar PostgreSQL en Heroku</a></li>\n<li><a href=\"https://j.mp/ns-nitro03\">Configurar un blog con Zinna y Django en Nitrous.IO</a></li>\n</ul>\n<p>Este art\u00edculo tiene que ver con un patr\u00f3n de programaci\u00f3n que permite mantener un proyecto de Django de forma profesional y sin tiempos muertos. Considera que en con el <strong>Proyecto Krypton</strong> tengo un <em>servidor local</em>, en mi laptop; tengo el <em>servidor de ensayos</em> y pruebas en <a href=\"http://j.mp/ns-nitro\">Nitrous.IO</a> y mi <em>servidor de producci\u00f3n</em>, donde correr\u00e1 el proyecto una vez terminado. </p>\n<p>Cada uno de estos tres servidores usa una base de datos distinta, en el servidor local tengo instalado el paquete <code>django-admin-bar</code>  y adem\u00e1s edito las plantillas usando <code>compass</code>. En el servidor de pruebas uso una base de datos en Heroku. En el servidor de producci\u00f3n no aplica la opci\u00f3n de <code>DEBUG</code>, uso <code>Gunicorn</code>, etc. Es decir, hay diferentes entornos de desarrollo y uno de los principios de Django, el principal desde mi punto de vista, dice que no debemos repetirnos (<strong>DRY</strong>, es No Te Repitas o <em>Don&rsquo;t Repeat Yourself</em> ) y otro m\u00e1s dice que debemos usar la menor cantidad de c\u00f3digo. </p>\n<p>Entonces seguiremos estos principios de programaci\u00f3n y usaremos una configuraci\u00f3n com\u00fan para los tres entornos y configuraciones espec\u00edficas para cada uno, que contengan <strong>solo las opciones necesarias para cada ambiente</strong>.</p>\n<p>Tendremos una configuraci\u00f3n que llamaremos <code>local</code>, para mi laptop; una configuraci\u00f3n llamada <code>nitro</code> para el servidor de despliegue y una configuraci\u00f3n llamada <code>producci\u00f3n</code> para el sitio que servir\u00e1 a los usuarios. Estas tres configuraciones tendr\u00e1n una base en com\u00fan y as\u00ed la llamaremos <code>base</code> y con esa vamos a empezar.</p>\n<div style=\"max-width:360px; margin: 25px auto;\">\n<!-- cyberia.336x289.01.top -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:inline-block;width:336px;height:280px\"\ndata-ad-client=\"ca-pub-9466828947698623\"\ndata-ad-slot=\"8590866557\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n</div>\n\n<div style=\"clear:both;\"></div>\n\n<h2 id=\"configuracion-base-de-django-en-un-ambiente-multiple\">Configuraci\u00f3n base de Django en un ambiente m\u00faltiple</h2>\n<p>Lo primero que tenemos que hacer es crear un paquete llamado <code>settings</code> en nuestra app principal. Es decir, Django de forma predeterminada crea un archivo <code>settings.py</code> que es un m\u00f3dulo por si mismo, puedes importarlo en otras aplicaciones y usar las constantes definidas en ese archivo, como lo har\u00edas con otro m\u00f3dulo. </p>\n<p>Al crear un directorio y colocar un archivo <code>__init__.py</code> en \u00e9l, este directorio se convierte en un <strong>paquete</strong> y por lo tanto puede contener otros m\u00f3dulos dentro de su nombre de espacio (o <em>namespace</em>) a los que podemos acceder con la notaci\u00f3n de punto. Es decir, tendremos un m\u00f3dulo <code>settings.base</code>, <code>settings.local</code>, <code>settings.nitro</code> y <code>settings.produccion</code> y solo tenemos que activar el m\u00f3dulo correspondiente al entorno de desarrollo en el que estemos.</p>\n<p>Vamos a nuestro IDE y creamos una carpeta a la que llamaremos <code>settings</code>, haciendo clic con el bot\u00f3n derecho (o con ctrl + clic en las Mac) y eligiendo <code>New Folder</code>, aparece una peque\u00f1a \u00e1rea de edici\u00f3n donde escribiremos el nombre <code>settings</code>:</p>\n<p><img alt=\"folder settings\" src=\"https://dl.dropboxusercontent.com/u/1090580/nspace/201401/nitro04-02-settings.png\"></p>\n<p>Dentro de esta carpeta y con la misma t\u00e9cnica del bot\u00f3n derecho (ctrl+clic si usas Mac) crearemos un archivo al que nombraremos <code>__init__.py</code>. El nombre es importante, son donde guiones de subrayado (<code>__</code>), luego la palabra <code>init</code> y luego otros dos guiones de subrayado (<code>__</code>). Este archivo le indica a Python que este directorio es un paquete que contiene uno o m\u00e1s m\u00f3dulos.</p>\n<p>Este archivo puede estar vac\u00edo, aunque el programa que utilizo para editar en el entorno <code>local</code> agrega esta l\u00ednea:</p>\n<div class=\"codehilite\"><pre><span></span>__author__ = &#39;Javier Sanchez&#39;\n</pre></div>\n\n\n<p>Ahora vamos a crear el archivo de configuraci\u00f3n base, que contiene las constantes comunes para todos los entornos de desarrollo y producci\u00f3n. Por lo tanto, creamos un nuevo archivo llamado <code>base.py</code> dentro de la carpeta <code>settings</code>. </p>\n<p>Para hacer m\u00e1s f\u00e1cil la creaci\u00f3n de nuestra configuraci\u00f3n base, vamos a abrir el archivo <code>settings.py</code> original y de ah\u00ed tomaremos las constantes comunes.</p>\n<h2 id=\"la-configuracion-base\">La configuraci\u00f3n base</h2>\n<p><strong>1. Codificaci\u00f3n</strong> - \nLa primera l\u00ednea de mi archivo es la indicaci\u00f3n de codificaci\u00f3n, ya que documento mi c\u00f3digo en espa\u00f1ol con acentos y <code>\u00f1</code>, es importante decirle a Python que use <code>UTF-8</code> para procesar mis archivos.</p>\n<div class=\"codehilite\"><pre><span></span># -*- coding: utf-8 -*-\n</pre></div>\n\n\n<p>Despu\u00e9s acostumbro a colocar la identificaci\u00f3n del archivo dentro del proyecto. No es precisamente para usarlas como <em>docstrings</em> pero me funcionan. Tal vez en el futuro pueda reemplazarlas<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>.</p>\n<div class=\"codehilite\"><pre><span></span>#         name: mx.com.criptomonedas.settings.base\n#       author: Javier Sanchez Toledano\n#        email: javier(at)namespace.mx\n#          url: https://namespace.mx\n#  description: Configuraci\u00f3n base para el proyecto krypton\n#      version: 0.1.0\n</pre></div>\n\n\n<p><strong>2. La ruta base</strong> - \nHasta la versi\u00f3n 1.5.x de Django, las rutas hacia los directorios de un proyecto \nten\u00edan que escribirse completas, lo que se conoce como <em>hard coding</em>. A partir de la versi\u00f3n 1.6 las rutas se <em>calculan</em> usando como punto de partida el archivo actual. </p>\n<p>De forma predeterminada se usa el m\u00f3dulo <code>os.path</code> para esto, aunque tambi\u00e9n es posible usar <a href=\"https://j.mp/ns-Unipath\">Unipath</a> que parece ser una soluci\u00f3n m\u00e1s elegante y es la que usaremos en este proyecto. Usando las rutas calculadas nos aseguramos que nuestro proyecto siempre funcione, sin importar d\u00f3nde lo coloquemos, y no importando tampoco el sistema operativo ni el sistema de archivos utilizado.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">unipath</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"n\">PROJECT_DIR</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ancestor</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">MEDIA_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s2\">&quot;media&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">STATIC_URL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/assets/&#39;</span>\n<span class=\"n\">STATIC_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s2\">&quot;static&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">STATICFILES_DIRS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s2\">&quot;assets&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n<span class=\"n\">TEMPLATE_DIRS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">PROJECT_DIR</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"p\">(</span><span class=\"s2\">&quot;templates&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n<p><strong>3. Constantes comunes</strong> -\nLas siguientes l\u00edneas muestras las constantes comunes para los diferentes entornos en donde se ejecutar\u00e1 el proyecto Krypton. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">MIDDLEWARE_CLASSES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">&#39;django.contrib.sessions.middleware.SessionMiddleware&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;django.middleware.common.CommonMiddleware&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;django.middleware.csrf.CsrfViewMiddleware&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;django.contrib.messages.middleware.MessageMiddleware&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">ROOT_URLCONF</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;krypton.urls&#39;</span>\n<span class=\"n\">WSGI_APPLICATION</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;krypton.wsgi.application&#39;</span>\n\n<span class=\"c1\"># Internacionalizaci\u00f3n</span>\n<span class=\"c1\"># Ver https://docs.djangoproject.com/en/1.6/topics/i18n/</span>\n<span class=\"n\">LANGUAGE_CODE</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;es-mx&#39;</span>\n<span class=\"n\">TIME_ZONE</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Mexico/General&#39;</span>\n<span class=\"n\">USE_I18N</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n<span class=\"n\">USE_L10N</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n<span class=\"n\">USE_TZ</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n\n<span class=\"n\">SITE_ID</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">ALLOWED_HOSTS</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">django.conf.global_settings</span> <span class=\"kn\">as</span> <span class=\"nn\">DEFAULT_SETTINGS</span>\n<span class=\"n\">TEMPLATE_CONTEXT_PROCESSORS</span> <span class=\"o\">=</span> <span class=\"n\">DEFAULT_SETTINGS</span><span class=\"o\">.</span><span class=\"n\">TEMPLATE_CONTEXT_PROCESSORS</span> <span class=\"o\">+</span> <span class=\"p\">(</span>\n    <span class=\"s2\">&quot;django.core.context_processors.request&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n<p><strong>4. Las aplicaciones comunes</strong> - \nVeremos m\u00e1s adelante que es posible activar aplicaciones en un ambiente local que no est\u00e9n presentes en otros, mientras tanto configuramos las aplicaciones y nos remitimos a <a href=\"https://j.mp/ns-zinnia-doc-apps\">la documentaci\u00f3n de Zinnia</a>, que el blog elegido para el proyecto.</p>\n<div class=\"codehilite\"><pre><span></span>INSTALLED_APPS = (\n  &#39;django.contrib.auth&#39;,\n  &#39;django.contrib.admin&#39;,\n  &#39;django.contrib.sites&#39;,\n  &#39;django.contrib.comments&#39;,\n  &#39;django.contrib.sessions&#39;,\n  &#39;django.contrib.messages&#39;,\n  &#39;django.contrib.staticfiles&#39;,\n  &#39;django.contrib.contenttypes&#39;,\n  &#39;tagging&#39;,\n  &#39;mptt&#39;,\n  &#39;zinnia&#39;,\n)\n</pre></div>\n\n\n<p>Vemos que aparecen ciertas aplicaciones que no est\u00e1n en la configuraci\u00f3n b\u00e1sica, como <code>django.contrib.sites</code> para la gesti\u00f3n sitios, el sistema de comentarios <code>django.contrib.comments</code>, el gestor de tipos de contenido <code>django.contrib.contenttypes</code>, la aplicaci\u00f3n <code>taggit</code> para etiquetas, <code>mptt</code> que es una aplicaci\u00f3n que ocupa internamente Zinnia<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> y la propia aplicaci\u00f3n del blog <code>zinnia</code>.</p>\n<p><strong>5. Lo que se deja fuera</strong> - \nSe dejan fuera varias constante, que van entonces en las configuraciones espec\u00edficas.</p>\n<p>La primera es la configuraci\u00f3n de la base de datos, <code>DATABASES</code>. Aunque en los tres entornos de desarrollo uso <a href=\"https://j.mp/ns-postgresql\">PostgreSQL</a> en producci\u00f3n y en <a href=\"http://j.mp/ns-nitro\">Nitrous.IO</a> y <a href=\"https://j.mp/ns-postgresqapp\">Posrgress.app</a> en Mac, los par\u00e1metros de conexi\u00f3n cambian.</p>\n<p>Tambi\u00e9n queda fuera la clave secreta (<code>SECRET_KEY</code>) que como <strong>buen pr\u00e1ctica</strong>\n es conveniente dejarla en las variables de entorno. Tal vez en el entorno de desarrollo que tu utilices sea diferente, pero tanto en <a href=\"http://j.mp/ns-nitro\">Nitrous.IO</a>  como en Mac y en mi servidor de producci\u00f3n puedo usar <code>export</code> dentro del archivo <code>.bashrc</code> para tener esa variable delicada de forma controlada.</p>\n<p>Tener las variables <em>sensibles</em> dentro del entorno en el que se ejecute la aplicaci\u00f3n podr\u00eda dar la impresi\u00f3n que no es necesario contar con configuraciones espec\u00edficas. Sin embargo, como desarrollador, encuentro m\u00e1s c\u00f3modo ver esos datos de forma independiente. Es por eso que prefiero definirla de forma separada.</p>\n<h2 id=\"configuracion-de-django-para-un-servidor-de-desarrollo\">Configuraci\u00f3n de Django para un servidor de desarrollo</h2>\n<p>Ahora en el IDE vamos a crear un archivo llamado <code>nitro.py</code> dentro de nuestro m\u00f3dulo de <code>settings</code> y vamos a colocar ah\u00ed las configuraciones restantes y que son espec\u00edficas para nuestro servidor de desarrollo.</p>\n<p><strong>1. La clave secreta</strong> - \nDespu\u00e9s de las l\u00edneas de codificaci\u00f3n e identificaci\u00f3n empezamos importando la configuraci\u00f3n base, que contiene las opciones comunes.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">.base</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre></div>\n\n\n<p>Como ves hacemos uso de la ruta relativa, para simplificar el c\u00f3digo utilizado. Luego importamos el m\u00f3dulo <code>os</code> para tener acceso a las variables del entorno, usando la lista <code>os.environ</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;NITRO_SECRET_KEY&#39;</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p><strong>2. Configuraci\u00f3n de la base de datos</strong> - \nTenemos dos opciones, colocar los datos de conexi\u00f3n que no proporciona Heroku o bien usar la recomendaci\u00f3n de Nitrous.IO de usar variables de entorno. Las dos opciones son v\u00e1lidas, as\u00ed que queda al gusto de cada uno.</p>\n<div class=\"codehilite\"><pre><span></span>DATABASES = {\n  &#39;default&#39;: {\n      &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n        &#39;HOST&#39;: os.environ[&#39;KRYPTON_DATABASE_HOST&#39;],      \n        &#39;NAME&#39;: os.environ[&#39;KRYPTON_DATABASE_NAME&#39;],\n        &#39;USER&#39;: os.environ[&#39;KRYPTON_DATABASE_USER&#39;],\n    &#39;PASSWORD&#39;: os.environ[&#39;KRYPTON_DATABASE_PASS&#39;],\n        &#39;PORT&#39;: 5432,    \n  }\n}\n</pre></div>\n\n\n<p><strong>3. Depuraci\u00f3n</strong> - \nPodemos especificar tres opciones relacionadas con la depuraci\u00f3n del c\u00f3digo y son las siguientes:</p>\n<div class=\"codehilite\"><pre><span></span>DEBUG = True\nTEMPLATE_DEBUG = True\nALLOWED_HOSTS = []\n</pre></div>\n\n\n<p>La primera, <code>DEBUG</code> muestra mensajes informativos cuando encuentra un error en el c\u00f3digo, de forma que nos ayuda a solucionarlo. Lo mismo pasa con <code>TEMPLATE_DEBUG</code> pero ahora con las plantillas. Si est\u00e1s dos opciones est\u00e1n en falso (<code>False</code>), entonces debemos especificar que direcciones de internet tienen permitido servir la aplicaci\u00f3n, pero eso lo veremos cuando despleguemos nuestro proyecto en producci\u00f3n.</p>\n<p>El archivo de configuraci\u00f3n <code>local.py</code> es muy parecido, solo que como est\u00e1 en mi laptop, la seguridad es un poco m\u00e1s relajada y codifico completamente la clave secreta y los par\u00e1metros de conexi\u00f3n a mi base de datos.</p>\n<h2 id=\"uso-de-configuraciones-especificas-en-django\">Uso de configuraciones espec\u00edficas en Django</h2>\n<p>Ahora bien, para verificar que nuestro servidor est\u00e1 funcionando debemos indicarle a Django d\u00f3nde est\u00e1 la configuraci\u00f3n, es decir, como se llama el m\u00f3dulo. Podemos hacerlo usando variables de entorno, colocando la siguiente l\u00ednea en el archivo <code>.bashrc</code> o el que corresponda en tu sistema operativo o servidor de despliegue:</p>\n<div class=\"codehilite\"><pre><span></span>export DJANGO_SETTINGS_MODULE=krypton.settings.local\n</pre></div>\n\n\n<p>Pero tambi\u00e9n podemos hacerlo desde la l\u00ednea de comandos, arrancando nuestro servidor de esta forma:</p>\n<div class=\"codehilite\"><pre><span></span>python manage.py runserver 0.0.0.0:8000 --settings=krypton.settings.local\n</pre></div>\n\n\n<p>Como verificamos que nuestra configuraci\u00f3n independiente funciona, dejamos aqu\u00ed este art\u00edculo.</p>\n<div class=\"codehilite\"><pre><span></span>0 errors found                                                                                                                                                 \nJanuary 12, 2014 - 03:58:54                                                                                                                                    \nDjango version 1.6.1, using settings &#39;krypton.settings.nitro&#39;                                                                                                  \nStarting development server at http://0.0.0.0:8000/                                                                                                            \nQuit the server with CONTROL-C.                                                                                                                                \n[12/Jan/2014 03:59:43] &quot;GET / HTTP/1.1&quot; 200 1757\n</pre></div>\n\n\n<p>En la pr\u00f3xima entrega de la serie veremos con se configura Zinnia.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Usar <em>docstrings</em> es una buena pr\u00e1ctica que debo adoptar de inmediato, pero primero tengo que aprender a usar <a href=\"http://pythonhosted.org/an_example_pypi_project/sphinx.html#full-code-example\">Sphinx</a>&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>La verdad no se qu\u00e9 es y para qu\u00e9 sirve, pero prometo averiguarlo.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "configuraciones-multiples-para-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 90, "fields": {"idx": "4b959eee-d2f5-457b-882d-acc2ab156af6", "creado": "2017-07-29T04:52:14.950Z", "modificado": "2017-07-29T04:52:14.950Z", "title": "Configurar varios proyectos en un solo servidor", "summary": "", "body": "Title: Configurar varios proyectos en un solo servidor\r\nDate: 2014/01/16 03:52\r\nCategory: Desarrollo \r\nTags: nginx, admin \r\nSlug: configurar-varios-proyectos-en-un-solo-servidor\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nListos para lanzar nuestro **proyecto krypton** en producci\u00f3n vamos a crear el\r\nsitio en el servidor d\u00f3nde se ejecuta este mismo sitio, es decir que\r\n[namespace.mx](https://namespace.mx) y\r\n[criptomonedas.com.mx](http://criptomonedas.com.mx) estar\u00e1n en el mismo\r\nservidor.\r\n\r\nVamos a crear tanto para el _proyecto namespace_ como para el _proyecto\r\nkrypron_ un entorno virtual, un arrancador **gunicorn**, un controlador en\r\n**supervisor** y un sitio para el servidor **nginx**.\r\n\r\nPrimero creamos el entorno virtual `krypton` y lo activamos.\r\n\r\n    mkvirtualenv krypton\r\n    workon krypton\r\n\r\nAhora vamos a instalar los requisitos de la aplicaci\u00f3n, que ya hab\u00edamos generado en [Nitrous.IO](http://conxb.com/ns.nitro).\r\n\r\n    pip install - r requisitos.txt\r\n\r\n## Configuraci\u00f3n de Gunicorn\r\n\r\nEl siguiente paso es configurar `gunicorn`. [Gunicorn](http://conxb.com/ns-gunicorn) es un servidor de aplicaciones especializado para Python que es intermediario entre el servidor web exterior y el proyecto en Django.\r\n\r\nSe instala para cada proyecto, usando `pip`:\r\n\r\n    pip install gunicorn\r\n\r\nA continuaci\u00f3n vamos a crear el archivo `gunicorn_start` para cada proyecto, en la ruta `entorno/bin/`, por ejemplo para el proyecto krypton, esta es la ruta: `/home/krypton/entornos/krypton/bin/gunicorn_start` y ah\u00ed colocamos las variables de entorno que ocupa nuestro proyecto. Este es el contenido para el **proyecto krypton**.\r\n\r\n    :::Bash\r\n    #!/bin/bash\r\n    NAME=\"krypton\" # Nombre de la aplicaci\u00f3n\r\n    DJANGODIR=/home/javier/proyecto_krypton/krypton # Directorio del proyecto\r\n    SOCKFILE=/home/javier/proyecto_krypton/run/krypton.sock # activamos la comunicaci\u00f3n con el servidor via socket\r\n    USER=javier # el usuario que ejecuta el proyecto\r\n    GROUP=javier # el grupo al que pertenece el proyecto\r\n    NUM_WORKERS=3 # cuantos workers vamos a desplegar\r\n\r\n    echo \"Starting $NAME as `whoami`\"\r\n\r\n    # Activamos el entorno virtual\r\n    cd $DJANGODIR\r\n    source /home/javier/entornos/krypton/bin/activate\r\n    export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE\r\n    export PYTHONPATH=$DJANGODIR:$PYTHONPATH\r\n\r\n    # Creamos las variables del entorno de producci\u00f3n\r\n    export KRYPTON_DATABASE_HOST='exxxxxxxxxxxx4-27.compute-3.amazonaws.com'\r\n    export KRYPTON_DATABASE_NAME='dxxxxxxxxxxxxj'\r\n    export KRYPTON_DATABASE_PORT='5432'\r\n    export KRYPTON_DATABASE_USER='gxxxxxxxxxxxxn'\r\n    export KRYPTON_DATABASE_PASS='8xxxxxxxxxxxxU'\r\n\r\n    export NITRO_SECRET_KEY='*oxxxxxxxxxxxxxxxxg'\r\n    export DJANGO_SETTINGS_MODULE='krypton.settings.produccion'\r\n    export DJANGO_WSGI_MODULE=krypton.wsgi # WSGI module name\r\n\r\n    # Creamos el directorio de ejecucion\r\n    RUNDIR=$(dirname $SOCKFILE)\r\n    test -d $RUNDIR || mkdir -p $RUNDIR\r\n\r\n    # Arrancamos el servidor gunicorn\r\n    # Los programas controlados por supervisor no deben ejecutarse como demonios (--daemon)\r\n    exec /home/javier/entornos/krypton/bin/gunicorn ${DJANGO_WSGI_MODULE}:application --name $NAME --workers $NUM_WORKERS --user=$USER --group=$GROUP --log-level=debug --bind=unix:$SOCKFILE\r\n\r\nEl archivo `gunicorn_start` debe tener permisos de ejecuci\u00f3n, as\u00ed debemos cambiarle los permisos con el siguiente comando:\r\n\r\n    chmod 755 gunicorn_start\r\n\r\n### El controlador supervisor\r\n\r\n[Supervisord](http://conxb.com/ns-supervisor) es un programa que permite controlar y supervisar la ejecuci\u00f3n de programas en Linux.\r\n\r\nPara instalarlo debemos usar `apt-get` en sistemas basados en Debian o el instalador que que te corresponda. Tambi\u00e9n debemos asegurarnos que se est\u00e1 ejecutando.\r\n\r\n    sudo apt-get install supervisor\r\n    sudo service supervisor start\r\n\r\nAhora debemos crear los archivos para supervisar las aplicaciones, que tiene el siguiente formato:\r\n\r\n    [program:krypton]\r\n    command = /home/javier/entornos/krypton/bin/gunicorn_start ; Que programa ejecutamos\r\n    user = javier ; El usuarios que lo ejecuta\r\n    stdout_logfile = /home/javier/proyecto_krypton/logs/gunicorn_supervisor.log ; La bitacora\r\n    redirect_stderr = true\r\n\r\nA continuaci\u00f3n debemos hacer que `supervisor` lea los archivos:\r\n\r\n    sudo supervisorctl reread\r\n\r\nLuego hay que activarlo:\r\n    \r\n    sudo supervisorctl update\r\n    sudo supervisorctl start krypton\r\n\r\n## Configuraci\u00f3n de Nginx\r\n\r\nEs es un servidor web, que ha resultado una excelente alternativa a Apache2, el tradicional servidor de la web. La configuraci\u00f3n no podr\u00eda ser m\u00e1s diferente que la de Apache, pero a\u00fan as\u00ed es basten sencilla, una vez que comprendes como funciona.\r\n\r\nNginx va a funcionar como un intermediario entre el exterior y nuestra aplicaci\u00f3n. Es decir, un visitante solicita una p\u00e1gina a `nginx` y este a su vez se la solicita a `gunicorn` usando _sockets_ que es una forma muy r\u00e1pida de comunicaci\u00f3n entre procesos.\r\n\r\nEste sistema tiene tres ventajas muy grandes: el interior (es decir, nuestra aplicaci\u00f3n) nunca est\u00e1 expuesta al exterior, la aplicaci\u00f3n solo entrega la parte din\u00e1mica del sitio, y tercero `nginx` es muy eficiente entregando contenido est\u00e1tico lo que resta carga a la aplicaci\u00f3n.\r\n\r\n<div style=\"max-width:360px; margin: 25px auto;\">\r\n<!-- cyberia.336x289.01.top -->\r\n<ins class=\"adsbygoogle\"\r\nstyle=\"display:inline-block;width:336px;height:280px\"\r\ndata-ad-client=\"ca-pub-9466828947698623\"\r\ndata-ad-slot=\"8590866557\"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n</div>\r\n<div style=\"clear:both;\"></div> \r\n\r\nEste es el archivo del proyecto krypton, ubicado en el directorio `/etc/nginx/sites-available`:\r\n\r\n    upstream krypton_app_server {\r\n      server unix:/home/javier/proyecto_krypton/run/krypton.sock fail_timeout=0;\r\n    }\r\n\r\n    server {\r\n      # Escucha del servidor\r\n      listen 80;\r\n      server_name criptomonedas.com.mx;\r\n\r\n      # Compresi\u00f3n de archivos\r\n      gzip              on;\r\n      gzip_buffers      16 8k;\r\n      gzip_comp_level   4;\r\n      gzip_http_version 1.0;\r\n      gzip_min_length   1280;\r\n      gzip_types        text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon image/bmp;\r\n      gzip_vary         on;\r\n\r\n      # Bit\u00e1cora y registro de errores\r\n      access_log //home/javier/proyecto_krypton/logs/nginx-access.log;\r\n      error_log /home/javier/proyecto_krypton/logs/nginx-error.log;\r\n\r\n      # Contenido est\u00e1tico\r\n      location /assets/ {\r\n        alias /home/javier/proyecto_krypton/krypton/assets/;\r\n        expires 1y;\r\n        log_not_found off;\r\n      }\r\n\r\n      location /media/ {\r\n        alias /home/javier/proyecto_krypton/krypton/media/;\r\n        expires 1y;\r\n        log_not_found off;\r\n      }\r\n\r\n      location / {\r\n        # No se que sea, pero si tiene una entrada en Wikipedia debe ser importante\r\n        # http://en.wikipedia.org/wiki/X-Forwarded-For\r\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n\r\n        # pasa el encabezado Host a krypton para que funcione \r\n        # la redirecci\u00f3n correctamente.\r\n        proxy_set_header Host $http_host;\r\n\r\n        # Y para que nginx no haga osos con la redirecciones,\r\n        # que al cabo ya esta arriba que onda\r\n        proxy_redirect off;\r\n\r\n        # Hacemos que los archivos est\u00e1ticos los sirva nginx \r\n        # por lo que no pasamos esas solicitudes a krypton\r\n        if (!-f $request_filename) {\r\n          proxy_pass http://krypton_app_server;\r\n          break;\r\n        }\r\n      }\r\n\r\n      # Error 500 - Si uso la misma en todos mis proyectos\r\n      error_page 500 502 503 504 /500.html;\r\n      location = /500.html {\r\n        root /home/javier/proyecto_namespace/namespace/assets/;\r\n      }\r\n    }\r\n\r\nLuego lo ponemos como sitio habilitado:\r\n\r\n    sudo ln -s /etc/nginx/sites-available/krypton.conf /etc/nginx/sites-enable/03krypton\r\n\r\nEl enlace se llama `03krypton` solo por cuesti\u00f3n de orden, hay otros sitios en mi servidor y se cargan de forma ordenada. \r\n\r\nAhora solo tenemos que reiniciar el servidor y nuestro sitio estar\u00e1 listo.\r\n\r\n    sudo service nginx restart\r\n\r\nY ya est\u00e1 completamente operativo el blog __Criptomonedas__.", "extend": "", "pub_date": "2014-01-17T05:51:35Z", "summary_html": "", "body_html": "<p>Listos para lanzar nuestro <strong>proyecto krypton</strong> en producci\u00f3n vamos a crear el\nsitio en el servidor d\u00f3nde se ejecuta este mismo sitio, es decir que\n<a href=\"https://namespace.mx\">namespace.mx</a> y\n<a href=\"http://criptomonedas.com.mx\">criptomonedas.com.mx</a> estar\u00e1n en el mismo\nservidor.</p>\n<p>Vamos a crear tanto para el <em>proyecto namespace</em> como para el <em>proyecto\nkrypron</em> un entorno virtual, un arrancador <strong>gunicorn</strong>, un controlador en\n<strong>supervisor</strong> y un sitio para el servidor <strong>nginx</strong>.</p>\n<p>Primero creamos el entorno virtual <code>krypton</code> y lo activamos.</p>\n<div class=\"codehilite\"><pre><span></span>mkvirtualenv krypton\nworkon krypton\n</pre></div>\n\n\n<p>Ahora vamos a instalar los requisitos de la aplicaci\u00f3n, que ya hab\u00edamos generado en <a href=\"http://conxb.com/ns.nitro\">Nitrous.IO</a>.</p>\n<div class=\"codehilite\"><pre><span></span>pip install - r requisitos.txt\n</pre></div>\n\n\n<h2 id=\"configuracion-de-gunicorn\">Configuraci\u00f3n de Gunicorn</h2>\n<p>El siguiente paso es configurar <code>gunicorn</code>. <a href=\"http://conxb.com/ns-gunicorn\">Gunicorn</a> es un servidor de aplicaciones especializado para Python que es intermediario entre el servidor web exterior y el proyecto en Django.</p>\n<p>Se instala para cada proyecto, usando <code>pip</code>:</p>\n<div class=\"codehilite\"><pre><span></span>pip install gunicorn\n</pre></div>\n\n\n<p>A continuaci\u00f3n vamos a crear el archivo <code>gunicorn_start</code> para cada proyecto, en la ruta <code>entorno/bin/</code>, por ejemplo para el proyecto krypton, esta es la ruta: <code>/home/krypton/entornos/krypton/bin/gunicorn_start</code> y ah\u00ed colocamos las variables de entorno que ocupa nuestro proyecto. Este es el contenido para el <strong>proyecto krypton</strong>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"ch\">#!/bin/bash</span>\n<span class=\"nv\">NAME</span><span class=\"o\">=</span><span class=\"s2\">&quot;krypton&quot;</span> <span class=\"c1\"># Nombre de la aplicaci\u00f3n</span>\n<span class=\"nv\">DJANGODIR</span><span class=\"o\">=</span>/home/javier/proyecto_krypton/krypton <span class=\"c1\"># Directorio del proyecto</span>\n<span class=\"nv\">SOCKFILE</span><span class=\"o\">=</span>/home/javier/proyecto_krypton/run/krypton.sock <span class=\"c1\"># activamos la comunicaci\u00f3n con el servidor via socket</span>\n<span class=\"nv\">USER</span><span class=\"o\">=</span>javier <span class=\"c1\"># el usuario que ejecuta el proyecto</span>\n<span class=\"nv\">GROUP</span><span class=\"o\">=</span>javier <span class=\"c1\"># el grupo al que pertenece el proyecto</span>\n<span class=\"nv\">NUM_WORKERS</span><span class=\"o\">=</span><span class=\"m\">3</span> <span class=\"c1\"># cuantos workers vamos a desplegar</span>\n\n<span class=\"nb\">echo</span> <span class=\"s2\">&quot;Starting </span><span class=\"nv\">$NAME</span><span class=\"s2\"> as `whoami`&quot;</span>\n\n<span class=\"c1\"># Activamos el entorno virtual</span>\n<span class=\"nb\">cd</span> <span class=\"nv\">$DJANGODIR</span>\n<span class=\"nb\">source</span> /home/javier/entornos/krypton/bin/activate\n<span class=\"nb\">export</span> <span class=\"nv\">DJANGO_SETTINGS_MODULE</span><span class=\"o\">=</span><span class=\"nv\">$DJANGO_SETTINGS_MODULE</span>\n<span class=\"nb\">export</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span><span class=\"nv\">$DJANGODIR</span>:<span class=\"nv\">$PYTHONPATH</span>\n\n<span class=\"c1\"># Creamos las variables del entorno de producci\u00f3n</span>\n<span class=\"nb\">export</span> <span class=\"nv\">KRYPTON_DATABASE_HOST</span><span class=\"o\">=</span><span class=\"s1\">&#39;exxxxxxxxxxxx4-27.compute-3.amazonaws.com&#39;</span>\n<span class=\"nb\">export</span> <span class=\"nv\">KRYPTON_DATABASE_NAME</span><span class=\"o\">=</span><span class=\"s1\">&#39;dxxxxxxxxxxxxj&#39;</span>\n<span class=\"nb\">export</span> <span class=\"nv\">KRYPTON_DATABASE_PORT</span><span class=\"o\">=</span><span class=\"s1\">&#39;5432&#39;</span>\n<span class=\"nb\">export</span> <span class=\"nv\">KRYPTON_DATABASE_USER</span><span class=\"o\">=</span><span class=\"s1\">&#39;gxxxxxxxxxxxxn&#39;</span>\n<span class=\"nb\">export</span> <span class=\"nv\">KRYPTON_DATABASE_PASS</span><span class=\"o\">=</span><span class=\"s1\">&#39;8xxxxxxxxxxxxU&#39;</span>\n\n<span class=\"nb\">export</span> <span class=\"nv\">NITRO_SECRET_KEY</span><span class=\"o\">=</span><span class=\"s1\">&#39;*oxxxxxxxxxxxxxxxxg&#39;</span>\n<span class=\"nb\">export</span> <span class=\"nv\">DJANGO_SETTINGS_MODULE</span><span class=\"o\">=</span><span class=\"s1\">&#39;krypton.settings.produccion&#39;</span>\n<span class=\"nb\">export</span> <span class=\"nv\">DJANGO_WSGI_MODULE</span><span class=\"o\">=</span>krypton.wsgi <span class=\"c1\"># WSGI module name</span>\n\n<span class=\"c1\"># Creamos el directorio de ejecucion</span>\n<span class=\"nv\">RUNDIR</span><span class=\"o\">=</span><span class=\"k\">$(</span>dirname <span class=\"nv\">$SOCKFILE</span><span class=\"k\">)</span>\n<span class=\"nb\">test</span> -d <span class=\"nv\">$RUNDIR</span> <span class=\"o\">||</span> mkdir -p <span class=\"nv\">$RUNDIR</span>\n\n<span class=\"c1\"># Arrancamos el servidor gunicorn</span>\n<span class=\"c1\"># Los programas controlados por supervisor no deben ejecutarse como demonios (--daemon)</span>\n<span class=\"nb\">exec</span> /home/javier/entornos/krypton/bin/gunicorn <span class=\"si\">${</span><span class=\"nv\">DJANGO_WSGI_MODULE</span><span class=\"si\">}</span>:application --name <span class=\"nv\">$NAME</span> --workers <span class=\"nv\">$NUM_WORKERS</span> --user<span class=\"o\">=</span><span class=\"nv\">$USER</span> --group<span class=\"o\">=</span><span class=\"nv\">$GROUP</span> --log-level<span class=\"o\">=</span>debug --bind<span class=\"o\">=</span>unix:<span class=\"nv\">$SOCKFILE</span>\n</pre></div>\n\n\n<p>El archivo <code>gunicorn_start</code> debe tener permisos de ejecuci\u00f3n, as\u00ed debemos cambiarle los permisos con el siguiente comando:</p>\n<div class=\"codehilite\"><pre><span></span>chmod 755 gunicorn_start\n</pre></div>\n\n\n<h3 id=\"el-controlador-supervisor\">El controlador supervisor</h3>\n<p><a href=\"http://conxb.com/ns-supervisor\">Supervisord</a> es un programa que permite controlar y supervisar la ejecuci\u00f3n de programas en Linux.</p>\n<p>Para instalarlo debemos usar <code>apt-get</code> en sistemas basados en Debian o el instalador que que te corresponda. Tambi\u00e9n debemos asegurarnos que se est\u00e1 ejecutando.</p>\n<div class=\"codehilite\"><pre><span></span>sudo apt-get install supervisor\nsudo service supervisor start\n</pre></div>\n\n\n<p>Ahora debemos crear los archivos para supervisar las aplicaciones, que tiene el siguiente formato:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[program:krypton]</span>\n<span class=\"na\">command</span> <span class=\"o\">=</span> <span class=\"s\">/home/javier/entornos/krypton/bin/gunicorn_start ; Que programa ejecutamos</span>\n<span class=\"na\">user</span> <span class=\"o\">=</span> <span class=\"s\">javier ; El usuarios que lo ejecuta</span>\n<span class=\"na\">stdout_logfile</span> <span class=\"o\">=</span> <span class=\"s\">/home/javier/proyecto_krypton/logs/gunicorn_supervisor.log ; La bitacora</span>\n<span class=\"na\">redirect_stderr</span> <span class=\"o\">=</span> <span class=\"s\">true</span>\n</pre></div>\n\n\n<p>A continuaci\u00f3n debemos hacer que <code>supervisor</code> lea los archivos:</p>\n<div class=\"codehilite\"><pre><span></span>sudo supervisorctl reread\n</pre></div>\n\n\n<p>Luego hay que activarlo:</p>\n<div class=\"codehilite\"><pre><span></span>sudo supervisorctl update\nsudo supervisorctl start krypton\n</pre></div>\n\n\n<h2 id=\"configuracion-de-nginx\">Configuraci\u00f3n de Nginx</h2>\n<p>Es es un servidor web, que ha resultado una excelente alternativa a Apache2, el tradicional servidor de la web. La configuraci\u00f3n no podr\u00eda ser m\u00e1s diferente que la de Apache, pero a\u00fan as\u00ed es basten sencilla, una vez que comprendes como funciona.</p>\n<p>Nginx va a funcionar como un intermediario entre el exterior y nuestra aplicaci\u00f3n. Es decir, un visitante solicita una p\u00e1gina a <code>nginx</code> y este a su vez se la solicita a <code>gunicorn</code> usando <em>sockets</em> que es una forma muy r\u00e1pida de comunicaci\u00f3n entre procesos.</p>\n<p>Este sistema tiene tres ventajas muy grandes: el interior (es decir, nuestra aplicaci\u00f3n) nunca est\u00e1 expuesta al exterior, la aplicaci\u00f3n solo entrega la parte din\u00e1mica del sitio, y tercero <code>nginx</code> es muy eficiente entregando contenido est\u00e1tico lo que resta carga a la aplicaci\u00f3n.</p>\n<div style=\"max-width:360px; margin: 25px auto;\">\n<!-- cyberia.336x289.01.top -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:inline-block;width:336px;height:280px\"\ndata-ad-client=\"ca-pub-9466828947698623\"\ndata-ad-slot=\"8590866557\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n</div>\n\n<div style=\"clear:both;\"></div>\n\n<p>Este es el archivo del proyecto krypton, ubicado en el directorio <code>/etc/nginx/sites-available</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">upstream</span> <span class=\"nt\">krypton_app_server</span> <span class=\"p\">{</span>\n  <span class=\"err\">server</span> <span class=\"n\">unix</span><span class=\"p\">:</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">javier</span><span class=\"o\">/</span><span class=\"n\">proyecto_krypton</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"o\">/</span><span class=\"n\">krypton</span><span class=\"o\">.</span><span class=\"n\">sock</span> <span class=\"n\">fail_timeout</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"nt\">server</span> <span class=\"p\">{</span>\n  <span class=\"err\">#</span> <span class=\"err\">Escucha</span> <span class=\"err\">del</span> <span class=\"err\">servidor</span>\n  <span class=\"err\">listen</span> <span class=\"err\">80</span><span class=\"p\">;</span>\n  <span class=\"err\">server_name</span> <span class=\"err\">criptomonedas.com.mx</span><span class=\"p\">;</span>\n\n  <span class=\"err\">#</span> <span class=\"err\">Compresi\u00f3n</span> <span class=\"err\">de</span> <span class=\"err\">archivos</span>\n  <span class=\"err\">gzip</span>              <span class=\"err\">on</span><span class=\"p\">;</span>\n  <span class=\"err\">gzip_buffers</span>      <span class=\"err\">16</span> <span class=\"err\">8k</span><span class=\"p\">;</span>\n  <span class=\"err\">gzip_comp_level</span>   <span class=\"err\">4</span><span class=\"p\">;</span>\n  <span class=\"err\">gzip_http_version</span> <span class=\"err\">1.0</span><span class=\"p\">;</span>\n  <span class=\"err\">gzip_min_length</span>   <span class=\"err\">1280</span><span class=\"p\">;</span>\n  <span class=\"err\">gzip_types</span>        <span class=\"err\">text/plain</span> <span class=\"err\">text/css</span> <span class=\"err\">application/x-javascript</span> <span class=\"err\">text/xml</span> <span class=\"err\">application/xml</span> <span class=\"err\">application/xml+rss</span> <span class=\"err\">text/javascript</span> <span class=\"err\">image/x-icon</span> <span class=\"err\">image/bmp</span><span class=\"p\">;</span>\n  <span class=\"err\">gzip_vary</span>         <span class=\"err\">on</span><span class=\"p\">;</span>\n\n  <span class=\"err\">#</span> <span class=\"err\">Bit\u00e1cora</span> <span class=\"err\">y</span> <span class=\"err\">registro</span> <span class=\"err\">de</span> <span class=\"err\">errores</span>\n  <span class=\"err\">access_log</span> <span class=\"err\">//home/javier/proyecto_krypton/logs/nginx-access.log</span><span class=\"p\">;</span>\n  <span class=\"err\">error_log</span> <span class=\"err\">/home/javier/proyecto_krypton/logs/nginx-error.log</span><span class=\"p\">;</span>\n\n  <span class=\"err\">#</span> <span class=\"err\">Contenido</span> <span class=\"err\">est\u00e1tico</span>\n  <span class=\"err\">location</span> <span class=\"err\">/assets/</span> <span class=\"err\">{</span>\n    <span class=\"err\">alias</span> <span class=\"err\">/home/javier/proyecto_krypton/krypton/assets/</span><span class=\"p\">;</span>\n    <span class=\"err\">expires</span> <span class=\"err\">1y</span><span class=\"p\">;</span>\n    <span class=\"err\">log_not_found</span> <span class=\"err\">off</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nt\">location</span> <span class=\"o\">/</span><span class=\"nt\">media</span><span class=\"o\">/</span> <span class=\"p\">{</span>\n    <span class=\"err\">alias</span> <span class=\"err\">/home/javier/proyecto_krypton/krypton/media/</span><span class=\"p\">;</span>\n    <span class=\"err\">expires</span> <span class=\"err\">1y</span><span class=\"p\">;</span>\n    <span class=\"err\">log_not_found</span> <span class=\"err\">off</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nt\">location</span> <span class=\"o\">/</span> <span class=\"p\">{</span>\n    <span class=\"err\">#</span> <span class=\"err\">No</span> <span class=\"err\">se</span> <span class=\"err\">que</span> <span class=\"err\">sea,</span> <span class=\"err\">pero</span> <span class=\"err\">si</span> <span class=\"err\">tiene</span> <span class=\"err\">una</span> <span class=\"err\">entrada</span> <span class=\"err\">en</span> <span class=\"err\">Wikipedia</span> <span class=\"err\">debe</span> <span class=\"err\">ser</span> <span class=\"err\">importante</span>\n    <span class=\"err\">#</span> <span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">en</span><span class=\"o\">.</span><span class=\"n\">wikipedia</span><span class=\"o\">.</span><span class=\"n\">org</span><span class=\"o\">/</span><span class=\"n\">wiki</span><span class=\"o\">/</span><span class=\"n\">X-Forwarded-For</span>\n    <span class=\"n\">proxy_set_header</span> <span class=\"n\">X-Forwarded-For</span> <span class=\"err\">$</span><span class=\"n\">proxy_add_x_forwarded_for</span><span class=\"p\">;</span>\n\n    <span class=\"err\">#</span> <span class=\"err\">pasa</span> <span class=\"err\">el</span> <span class=\"err\">encabezado</span> <span class=\"err\">Host</span> <span class=\"err\">a</span> <span class=\"err\">krypton</span> <span class=\"err\">para</span> <span class=\"err\">que</span> <span class=\"err\">funcione</span> \n    <span class=\"err\">#</span> <span class=\"err\">la</span> <span class=\"err\">redirecci\u00f3n</span> <span class=\"err\">correctamente.</span>\n    <span class=\"err\">proxy_set_header</span> <span class=\"err\">Host</span> <span class=\"err\">$http_host</span><span class=\"p\">;</span>\n\n    <span class=\"err\">#</span> <span class=\"err\">Y</span> <span class=\"err\">para</span> <span class=\"err\">que</span> <span class=\"err\">nginx</span> <span class=\"err\">no</span> <span class=\"err\">haga</span> <span class=\"err\">osos</span> <span class=\"err\">con</span> <span class=\"err\">la</span> <span class=\"err\">redirecciones,</span>\n    <span class=\"err\">#</span> <span class=\"err\">que</span> <span class=\"err\">al</span> <span class=\"err\">cabo</span> <span class=\"err\">ya</span> <span class=\"err\">esta</span> <span class=\"err\">arriba</span> <span class=\"err\">que</span> <span class=\"err\">onda</span>\n    <span class=\"err\">proxy_redirect</span> <span class=\"err\">off</span><span class=\"p\">;</span>\n\n    <span class=\"err\">#</span> <span class=\"err\">Hacemos</span> <span class=\"err\">que</span> <span class=\"err\">los</span> <span class=\"err\">archivos</span> <span class=\"err\">est\u00e1ticos</span> <span class=\"err\">los</span> <span class=\"err\">sirva</span> <span class=\"err\">nginx</span> \n    <span class=\"err\">#</span> <span class=\"err\">por</span> <span class=\"err\">lo</span> <span class=\"err\">que</span> <span class=\"err\">no</span> <span class=\"err\">pasamos</span> <span class=\"err\">esas</span> <span class=\"err\">solicitudes</span> <span class=\"err\">a</span> <span class=\"err\">krypton</span>\n    <span class=\"err\">if</span> <span class=\"err\">(!-f</span> <span class=\"err\">$request_filename)</span> <span class=\"err\">{</span>\n      <span class=\"err\">proxy_pass</span> <span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">krypton_app_server</span><span class=\"p\">;</span>\n      <span class=\"err\">break</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"err\">}</span>\n\n  <span class=\"err\">#</span> <span class=\"nt\">Error</span> <span class=\"nt\">500</span> <span class=\"nt\">-</span> <span class=\"nt\">Si</span> <span class=\"nt\">uso</span> <span class=\"nt\">la</span> <span class=\"nt\">misma</span> <span class=\"nt\">en</span> <span class=\"nt\">todos</span> <span class=\"nt\">mis</span> <span class=\"nt\">proyectos</span>\n  <span class=\"nt\">error_page</span> <span class=\"nt\">500</span> <span class=\"nt\">502</span> <span class=\"nt\">503</span> <span class=\"nt\">504</span> <span class=\"o\">/</span><span class=\"nt\">500</span><span class=\"p\">.</span><span class=\"nc\">html</span><span class=\"o\">;</span>\n  <span class=\"nt\">location</span> <span class=\"o\">=</span> <span class=\"o\">/</span><span class=\"nt\">500</span><span class=\"p\">.</span><span class=\"nc\">html</span> <span class=\"p\">{</span>\n    <span class=\"err\">root</span> <span class=\"err\">/home/javier/proyecto_namespace/namespace/assets/</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"err\">}</span>\n</pre></div>\n\n\n<p>Luego lo ponemos como sitio habilitado:</p>\n<div class=\"codehilite\"><pre><span></span>sudo ln -s /etc/nginx/sites-available/krypton.conf /etc/nginx/sites-enable/03krypton\n</pre></div>\n\n\n<p>El enlace se llama <code>03krypton</code> solo por cuesti\u00f3n de orden, hay otros sitios en mi servidor y se cargan de forma ordenada. </p>\n<p>Ahora solo tenemos que reiniciar el servidor y nuestro sitio estar\u00e1 listo.</p>\n<div class=\"codehilite\"><pre><span></span>sudo service nginx restart\n</pre></div>\n\n\n<p>Y ya est\u00e1 completamente operativo el blog <strong>Criptomonedas</strong>.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "configurar-varios-proyectos-en-un-solo-servidor", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 91, "fields": {"idx": "1a0ba98e-fc9d-481b-9f1e-eabeaac5fe91", "creado": "2017-07-29T04:52:45.315Z", "modificado": "2017-07-29T04:52:45.315Z", "title": "Configuraci\u00f3n de Nginx y WordPress", "summary": "", "body": "Title: Configuraci\u00f3n de Nginx y WordPress\r\nDate: 2014/01/19 03:25\r\nCategory: Desarrollo \r\nTags: nginx, wordpress, admin\r\nSlug: configuracion-de-nginx-y-wordpress\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\nPues resulta que cambiar al servidor Nginx fue m\u00e1s f\u00e1cil de lo que pensaba. [Nginx][nginx], que se pronuncia algo as\u00ed como _engine x_ o sea \"motor x\" en ingl\u00e9s es un servidor web, un proxy inverso, y un proxy de correo escrito por Igor Sysoev. Es muy famoso porque funciona en sitios gigantes de Rusia, como Yandex, el buscador; Mail.Ru, un servidor de correo; adem\u00e1s lo utilizan sitios de alto tr\u00e1fico como Netflix y WordPress.\r\n\r\nSeg\u00fan sitios especializados, Nginx tiene el 15% de la cuota de mercado de servidores y tiene una acelerada tendencia a la alza.\r\n\r\n## Nginx y yo\r\n\r\nHab\u00eda intentado antes usar otros servidores web que hicieran funcionar este sitio y el finado `xxx.xx` de forma m\u00e1s eficiente, hab\u00eda intentado con Cherokee Project (que funciona muy bien con Django, pero no pude agregarle soporte para PHP),  con LiteSpeed server (pero no pude hacer funcionar el certificado de seguridad y no pude compilar PHP). Yo s\u00e9, es mi culpa.\r\n\r\nY entonces decid\u00ed probar con Nginx y me llev\u00e9 una sorpresa. Al principio su configuraci\u00f3n me parec\u00eda un poco cr\u00edptica, pero despu\u00e9s la entend\u00ed y ahora me parece bastante l\u00f3gica y coherente. Y el rendimiento es supremo: no solo es m\u00e1s r\u00e1pido que Apache2, tambi\u00e9n es m\u00e1s f\u00e1cil la gesti\u00f3n de contenido est\u00e1tico, el cache del sitio, la ejecuci\u00f3n de PHP es acelerada y es facil\u00edsimo instalar certificados de seguridad.\r\n\r\n## Nginx y WordPress\r\n\r\nEn realidad la configuraci\u00f3n funciona para cualquier sitio que necesite WordPress, pero escribo mi experiencia ahora que regrese a WordPress y [Genesis Framework][genesis] en mi blog personal [**Yo, Toledano**](http://yo.toledano.org)[^1].\r\n\r\n### Desinstalaci\u00f3n de Apache2\r\n\r\nEn mi servidor ven\u00eda instalado `apache2` como servidor, pero no lo iba a ocupar. Intent\u00e9 desinstalarlo, pero me apareci\u00f3n extra\u00f1os mensajes acerca de que se iban a desinstalar otros paquetes. Y es que en Ubuntu, `apache2` pertenece al grupo `base` como requisito. Si lo quietaba, pues intentaba desinstalar todo el grupo base y pues no.\r\n\r\nEntonces decid\u00ed desactivarlo. Simplemente no iba a arrancar autom\u00e1ticamente, solo cuando yo lo hiciera manualmente. Para desactivar el servicio utilic\u00e9 este comando:\r\n\r\n    update-rc.d -f  apache2 remove\r\n    \r\n\r\n### Instalaci\u00f3n de Nginx\r\n\r\nNginx utiliza una variaci\u00f3n de FastCGI con PHP que es m\u00e1s eficiente que la implementaci\u00f3n original llamada `php-fpm` que significa en ingl\u00e9s *FastCGI Process Manager* que tiene algunas caracter\u00edsticas que lo hacen sobresalir, por ejemplo:\r\n\r\n* Los procesos se crean bajo demanda\r\n* Estad\u00edsticas b\u00e1sicas\r\n* Gesti\u00f3n de procesos avanzada con paradas y arranques en caliente (_graceful stop/start_)\r\n* Habilidad para iniciar _workers_ con diferentes usuarios, grupos, entornos, etc.\r\n* Registro en las bit\u00e1coras est\u00e1ndar del sistema\r\n* y muchas m\u00e1s\u2026\r\n\r\nEntonces necesitamos instalar precisamente el paquete `nginx` y el paquete `php-fpm`:\r\n\r\n    sudo apt-get install nginx php5-fpm\r\n\r\nUbuntu se encargar\u00e1 adem\u00e1s de instalar todas las dependencias necesarias para que ambos programas se ejecuten adecuadamente. Ambos programas instalan servicios que podemos parar, arrancar o revisar con el comando `service`:\r\n\r\n    sudo service nginx start\r\n    sudo service php-fpm stop\r\n\r\n## Configuraci\u00f3n de Nginx\r\n\r\nAhora vamos a ver como configurar un dominio con Nginx para que funcione con WordPress. Y vamos a ver que es eso de proxy inverso.\r\n\r\nVamos a crear un archivo en la siguiente ruta:\r\n\r\n    /etc/nginx/sites-availabe/wordpress.conf\r\n    \r\ndonde colocaremos la configuraci\u00f3n de nuestro sitio. Al colocarlos ah\u00ed quedan disponibles (como su nombre lo dice) y se activan hasta que colocamos un enlace en el directorio `sites-enable`.\r\n\r\n### Sobre el dominio\r\n\r\nPrimero vamos a configurar el dominio, le vamos a indicar a Nginx que escuhe peticiones para ese dominio y en que puerto va a escuchar.\r\n\r\n    server {\r\n        listen 80;\r\n        server_name example.com;\r\n\r\n        client_max_body_size 200m;\r\n\r\n        root /ruta/hacia/mis/archivos;\r\n        index index.php index.html index.htm;\r\n    }\r\n\r\n\r\nEsta es la primera parte de nuestro archivo de configuraci\u00f3n. Veamos las opciones utilizadas detalladamente. **Todas las l\u00edneas termina con punto y coma `;`**.\r\n\r\n* **`listen`**:  \r\nser refiere al puerto de escucha. El puerto est\u00e1ndar es el 80, o el 443 si utilizas certificados de seguridad, en cualquier caso, aqu\u00ed especificas el n\u00famero de puerto.\r\n* **`server_name`**:  \r\nsimplemente colocamos el nombre del dominio.\r\n* **`client_max_body_size`**  \r\nhabilita al servidor de responder con contenido de gran tama\u00f1o. \r\n* **`root`**  \r\nindica la ruta donde se encuentran los archivos, recuerda que la ruta debe ser completa.\r\n* **`index`**  \r\nindica que archivo debe devoler Nginx cuando no se solicita ninguno. Va a enviar el primero si existe, si no intenrar\u00e1 con el segundo, sino con el tercero, etc.\r\n\r\n### Compresi\u00f3n de salida\r\n\r\nComprimir la salida de nuestro sitio es una buena pr\u00e1ctica, no solo ahorra ancho de banda, sino que es m\u00e1s r\u00e1pida la respuesta porque los archivos son m\u00e1s peque\u00f1os, lo que resulta en una mejor experiencia para el usuario. Esta es la configuraci\u00f3n para la compresi\u00f3n dentro del grupo `server`[^2].\r\n\r\n    gzip on;\r\n    gzip_disable \"msie6\";\r\n    gzip_vary on;\r\n    gzip_proxied any;\r\n    gzip_comp_level 6;\r\n    gzip_buffers 16 8k;\r\n    gzip_http_version 1.1;\r\n    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript\r\n\r\nAlgunas l\u00edneas debemos revisarlas con m\u00e1s detalle: `gzip on` activa la compresi\u00f3n. La l\u00ednea `gzip_disable` dice para Internet Explorer 6 no debe funcionar. La \u00faltima l\u00ednea nos dice que tipos de archivos debe comprimir. No cambies los valores propuestos a menos que de verdad sepas lo que est\u00e1s haciendo.\r\n\r\n\r\n### Ubicaciones\r\n\r\nAhora, igualmente dentro del grupo `server` vamos a crear subgrupos para definir ubicaciones dentro del servidor y su comportamiento. Veamos una ubicaci\u00f3n, llamada `location` por Nginx y analicemos su contenido.\r\n\r\nPodr\u00eda parecer que las expresiones regulares son muy dif\u00edciles pero ya existe mucha informaci\u00f3n y ejemplos en la red, as\u00ed que no debe ser complicado encontrar una regla para nuestras situaciones m\u00e1s comunes.\r\n\r\n    location ~ \\.php$ {\r\n        try_files $uri =404;\r\n        fastcgi_pass unix:/var/run/php5-fpm.sock;\r\n        fastcgi_index index.php;\r\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\r\n        include fastcgi_params;\r\n    }\r\n    \r\n**`location`**   \r\nIndica el comportamiento de la `location` definida a continuaci\u00f3n. En este caso la regla es `~`, una expresi\u00f3n regular que indica cualquier coincidencia, respetando may\u00fasculas. La segunda regla es `\\.php$` que significa que aplica a todos los archivos cuya terminaci\u00f3n sea `.php`.  \r\n  \r\n  A continuaci\u00f3n abrimos un subgrupo donde indicaremos cu\u00e1l ser\u00e1 el comportamiento dentro de la regla que acabamos de definir.   \r\n  \r\n* **`try_files`**: dice que intente encontrar el archivo y si falla, que lance un error 404.\r\n* **`fastcgi_pass`**: indica la ubicaci\u00f3n del servidor `fastcgi`. Usar _sockets_  es m\u00e1s eficiente que usar servidores de red.\r\n* **`fastcgi_index`**: Nos dice cu\u00e1l es el archivo por default para esta ubicaci\u00f3n y \r\n* **`fastcgi_param`** nos dice con qu\u00e9 par\u00e1metros debemos llamar al procesador FastCGI.\r\n   \r\nEntonces ya definimos qu\u00e9 hacer con los archivos `.php`. Veamos otro ejemplo.\r\n    \r\n### Especificar el cache de navegaci\u00f3n\r\n\r\nGoogle[^3] recomienda para mejorar el desempe\u00f1o de los sitios web que ciertos tipos de archivo deben enviarse tal cual son, sin agregarles _cookies_ e indicando cuando expira ese contenido, de modo que si el navegador lo tiene en su cache, utilice ese archivo en vez de descargarlo.\r\n\r\nVamos a crac otro conjunto de reglas, ahora aplicables a esos archivos que queremos acelerar, los iconos, im\u00e1genes, archivos de hojas de estilo, JavaScript y archivos de fuentes.\r\n\r\n    location ~* \\.(?:ico|css|js|gif|jpe?g|png|ttf|woff)$ {\r\n      access_log off;\r\n      expires 30d;\r\n      add_header Pragma public;\r\n      add_header Cache-Control \"public, mustrevalidate, proxy-revalidate\";\r\n    }\r\n    \r\nLas reglas definidas para estos archivos dicen que deben enviarse los encabezados `Pragma public` y `Cache-Control`.   `access_log` dice que el acceso a estos archivos no se registre en las bit\u00e1coras; `expires` dice que el navegador debe guardar esos archivos por 30 d\u00edas antes de solicitarlos de nuevo.\r\n\r\n### Permalinks de WordPress\r\n\r\nEl siguiente conjunto de reglas, es el m\u00e1s simple y activan los permalinks en WordPress. En realidad es una sola regla muy simple, pero toral para nuestro sitio.\r\n\r\n    location / {\r\n      try_files $uri $uri/ /index.html;\r\n    }\r\n\r\nWordPress procesa los permalinks  con el archivo \u00edndice atrapando los errores 404. En  `apache` cuando llamamos a un post de WordPress con permalink _bonito_ se produce un error 404 porque dicho post no existe f\u00edsicamente en le servidor, entonces WordPress atrapa el error y manda la solicitud al archivo `index.php` que lo procesa  adecuadamente.\r\n\r\nCon Nginx pasa exactamente lo mismo, solo que la regla dice:\r\n    \r\n    try_files $uri $uri/ /index.html;\r\n    \r\nintenta enviar la solicitud, si fallas, manda el \u00edndice de la ubicaci\u00f3n (que en nuestro caso es precisamente `index.php`) y si eso falla, manda el archivo `\u00edndex.html`.\r\n\r\nEs decir, al usar _pretty permalinks_ siempre nos quedaremos en la segunda opci\u00f3n y todo funcionar\u00e1 como se espera.\r\n\r\n### Otras reglas para WordPress\r\n\r\nLas siguientes dos reglas nos dicen que hacer con los archivos `robots.txt` y `favicon.ico`, simplemente no registramos los accesos a esos archivos y no lanzamos mensajes de error si no est\u00e1n presentes.\r\n\r\n  location = /robots.txt  { access_log off; log_not_found off; }\r\n    location = /favicon.ico { access_log off; log_not_found off; }\r\n\r\nLa \u00faltima ubicaci\u00f3n que vamos a definir es la del error 500, por si falla el servidor, los visitantes vean algo mejor que el indescifrable mensaje de error de Nginx.\r\n\r\n    error_page 500 502 503 504 /500.html;\r\n    location = /500.html {\r\n      root /siempre/uso/la_misma/ruta/assets/;\r\n    }\r\n\r\n## Proxy reversible, \u00bfqu\u00e9 pokem\u00f3n es ese?\r\n\r\nEn el modelo tradicional cliente/servidor que conocemos gracias al popular servidor Apache, cuando un visitante hace una solicitud a nuestro navegador, la solicitud es procesada por Apache.\r\n\r\nNginx funciona como un intermediario entre el servidor y los visitantes, lo que nos da pauta a tratar de forma m\u00e1s eficiente la respuestas que entregamos a los usuarios.\r\n\r\nPor ejemplo, Nginx se encarga de los archivos est\u00e1ticos, por lo que no son una carga para la aplicaci\u00f3n. Comprime la salida antes de enviarla a los visitantes, y evita que la aplicaci\u00f3n tenga que hacerlo. Podemos balancear la carga de nuestra aplicaci\u00f3n, ejecutando una copia de la aplicaci\u00f3n e indicado a Nginx que la use cuando sea necesario. Puede manejar cache de la aplicaci\u00f3n, respondiendo r\u00e1pidamente con las copias almacenadas sin tener que llamar a la aplicaci\u00f3n. Entre otras cosas.\r\n\r\nNginx es tan eficiente como proxy reversible, que incluso se puede utilizar como intermediario entre el exterior y *el propio servidor Apache*. \r\n\r\nAl hacer que Nginx se encargue de la comunicaci\u00f3n con el exterior, nuestra aplicaci\u00f3n se encarga de una sola cosa, sin administrar cargas adicionales.\r\n\r\n## El archivo completo\r\n\r\nAqu\u00ed te presento el archivo completo para que lo utilices en tu propio servidor, solo tienes que hacer unos peque\u00f1os ajustes para indicar tu servidor `server_name` y la ra\u00edz de tu sitio `roto`.\r\n\r\n    server {\r\n      ##\r\n      # Datos del Servidor - tienes que ajustarlo\r\n      ##\r\n      listen 80;\r\n      server_name example.com;     \r\n      root /la/ruta/a/tu/sitio;\r\n\r\n      ##\r\n      # No cambiar a partir de este punto hasta error 500\r\n      ##\r\n      index index.php index.html index.htm;\r\n      client_max_body_size 4G;\r\n      \r\n      ##\r\n      # Procesar archivos .php con php-fpm\r\n      ##\r\n      location ~ \\.php$ {\r\n        try_files $uri =404;\r\n        fastcgi_pass unix:/var/run/php5-fpm.sock;\r\n        fastcgi_index index.php;\r\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\r\n        include fastcgi_params;\r\n      }  \r\n\r\n      ##\r\n      # Archivos est\u00e1ticos\r\n      ##\r\n      location ~* \\.(?:ico|css|js|gif|jpe?g|png|ttf|woff)$ {\r\n        access_log off;\r\n        expires 30d;\r\n        add_header Pragma public;\r\n        add_header Cache-Control \"public, mustrevalidate, proxy-revalidate\";\r\n      }\r\n\r\n      ##\r\n      # Permalinks bonitos para WordPress\r\n      ##\r\n      location / {\r\n        try_files $uri $uri/ /index.html;\r\n      }\r\n\r\n      ##\r\n      # No registrar robots.txt y favicon.ico\r\n      ##\r\n      location = /robots.txt { access_log off; log_not_found off; }\r\n      location = /favicon.ico { access_log off; log_not_found off; }\r\n\r\n      ##\r\n      # Compresi\u00f3n de archivos\r\n      ##\r\n      gzip on;\r\n      gzip_disable \"msie6\";\r\n      gzip_vary on;\r\n      gzip_proxied any;\r\n      gzip_comp_level 6;\r\n      gzip_buffers 16 8k;\r\n      gzip_http_version 1.1;\r\n      gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript\r\n\r\n      ##\r\n      # P\u00e1ginas de error 500\r\n      ##\r\n      error_page 500 502 503 504 /500.html;\r\n      location = /500.html {\r\n        root /siempre/uso/la/misma/ruta/;\r\n      }\r\n    }\r\n\r\n\r\n\r\n[nginx]: http://j.mp/ns-nginx\r\n[genesis]: http://j.mp/ns-genesis\r\n\r\n[^1]: Y de la mano de Amy Lee Adams, como podr\u00e1n ustedes apreciar.\r\n\r\n[^2]: Esto quiere decir que debe estar **dentro** de las llaves que engloban todas las configuraciones de `server`.\r\n\r\n[^3]: En ingl\u00e9s [*Leverage Browse Caching*](http://j.mp/ns-cache-browsing)", "extend": "", "pub_date": "2014-01-20T05:52:15Z", "summary_html": "", "body_html": "<p>Pues resulta que cambiar al servidor Nginx fue m\u00e1s f\u00e1cil de lo que pensaba. <a href=\"http://j.mp/ns-nginx\">Nginx</a>, que se pronuncia algo as\u00ed como <em>engine x</em> o sea &ldquo;motor x&rdquo; en ingl\u00e9s es un servidor web, un proxy inverso, y un proxy de correo escrito por Igor Sysoev. Es muy famoso porque funciona en sitios gigantes de Rusia, como Yandex, el buscador; Mail.Ru, un servidor de correo; adem\u00e1s lo utilizan sitios de alto tr\u00e1fico como Netflix y WordPress.</p>\n<p>Seg\u00fan sitios especializados, Nginx tiene el 15% de la cuota de mercado de servidores y tiene una acelerada tendencia a la alza.</p>\n<h2 id=\"nginx-y-yo\">Nginx y yo</h2>\n<p>Hab\u00eda intentado antes usar otros servidores web que hicieran funcionar este sitio y el finado <code>xxx.xx</code> de forma m\u00e1s eficiente, hab\u00eda intentado con Cherokee Project (que funciona muy bien con Django, pero no pude agregarle soporte para PHP),  con LiteSpeed server (pero no pude hacer funcionar el certificado de seguridad y no pude compilar PHP). Yo s\u00e9, es mi culpa.</p>\n<p>Y entonces decid\u00ed probar con Nginx y me llev\u00e9 una sorpresa. Al principio su configuraci\u00f3n me parec\u00eda un poco cr\u00edptica, pero despu\u00e9s la entend\u00ed y ahora me parece bastante l\u00f3gica y coherente. Y el rendimiento es supremo: no solo es m\u00e1s r\u00e1pido que Apache2, tambi\u00e9n es m\u00e1s f\u00e1cil la gesti\u00f3n de contenido est\u00e1tico, el cache del sitio, la ejecuci\u00f3n de PHP es acelerada y es facil\u00edsimo instalar certificados de seguridad.</p>\n<h2 id=\"nginx-y-wordpress\">Nginx y WordPress</h2>\n<p>En realidad la configuraci\u00f3n funciona para cualquier sitio que necesite WordPress, pero escribo mi experiencia ahora que regrese a WordPress y <a href=\"http://j.mp/ns-genesis\">Genesis Framework</a> en mi blog personal <a href=\"http://yo.toledano.org\"><strong>Yo, Toledano</strong></a><sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>.</p>\n<h3 id=\"desinstalacion-de-apache2\">Desinstalaci\u00f3n de Apache2</h3>\n<p>En mi servidor ven\u00eda instalado <code>apache2</code> como servidor, pero no lo iba a ocupar. Intent\u00e9 desinstalarlo, pero me apareci\u00f3n extra\u00f1os mensajes acerca de que se iban a desinstalar otros paquetes. Y es que en Ubuntu, <code>apache2</code> pertenece al grupo <code>base</code> como requisito. Si lo quietaba, pues intentaba desinstalar todo el grupo base y pues no.</p>\n<p>Entonces decid\u00ed desactivarlo. Simplemente no iba a arrancar autom\u00e1ticamente, solo cuando yo lo hiciera manualmente. Para desactivar el servicio utilic\u00e9 este comando:</p>\n<div class=\"codehilite\"><pre><span></span>update-rc.d -f  apache2 remove\n</pre></div>\n\n\n<h3 id=\"instalacion-de-nginx\">Instalaci\u00f3n de Nginx</h3>\n<p>Nginx utiliza una variaci\u00f3n de FastCGI con PHP que es m\u00e1s eficiente que la implementaci\u00f3n original llamada <code>php-fpm</code> que significa en ingl\u00e9s <em>FastCGI Process Manager</em> que tiene algunas caracter\u00edsticas que lo hacen sobresalir, por ejemplo:</p>\n<ul>\n<li>Los procesos se crean bajo demanda</li>\n<li>Estad\u00edsticas b\u00e1sicas</li>\n<li>Gesti\u00f3n de procesos avanzada con paradas y arranques en caliente (<em>graceful stop/start</em>)</li>\n<li>Habilidad para iniciar <em>workers</em> con diferentes usuarios, grupos, entornos, etc.</li>\n<li>Registro en las bit\u00e1coras est\u00e1ndar del sistema</li>\n<li>y muchas m\u00e1s\u2026</li>\n</ul>\n<p>Entonces necesitamos instalar precisamente el paquete <code>nginx</code> y el paquete <code>php-fpm</code>:</p>\n<div class=\"codehilite\"><pre><span></span>sudo apt-get install nginx php5-fpm\n</pre></div>\n\n\n<p>Ubuntu se encargar\u00e1 adem\u00e1s de instalar todas las dependencias necesarias para que ambos programas se ejecuten adecuadamente. Ambos programas instalan servicios que podemos parar, arrancar o revisar con el comando <code>service</code>:</p>\n<div class=\"codehilite\"><pre><span></span>sudo service nginx start\nsudo service php-fpm stop\n</pre></div>\n\n\n<h2 id=\"configuracion-de-nginx\">Configuraci\u00f3n de Nginx</h2>\n<p>Ahora vamos a ver como configurar un dominio con Nginx para que funcione con WordPress. Y vamos a ver que es eso de proxy inverso.</p>\n<p>Vamos a crear un archivo en la siguiente ruta:</p>\n<div class=\"codehilite\"><pre><span></span>/etc/nginx/sites-availabe/wordpress.conf\n</pre></div>\n\n\n<p>donde colocaremos la configuraci\u00f3n de nuestro sitio. Al colocarlos ah\u00ed quedan disponibles (como su nombre lo dice) y se activan hasta que colocamos un enlace en el directorio <code>sites-enable</code>.</p>\n<h3 id=\"sobre-el-dominio\">Sobre el dominio</h3>\n<p>Primero vamos a configurar el dominio, le vamos a indicar a Nginx que escuhe peticiones para ese dominio y en que puerto va a escuchar.</p>\n<div class=\"codehilite\"><pre><span></span>server {\n    listen 80;\n    server_name example.com;\n\n    client_max_body_size 200m;\n\n    root /ruta/hacia/mis/archivos;\n    index index.php index.html index.htm;\n}\n</pre></div>\n\n\n<p>Esta es la primera parte de nuestro archivo de configuraci\u00f3n. Veamos las opciones utilizadas detalladamente. <strong>Todas las l\u00edneas termina con punto y coma <code>;</code></strong>.</p>\n<ul>\n<li><strong><code>listen</code></strong>:<br>\nser refiere al puerto de escucha. El puerto est\u00e1ndar es el 80, o el 443 si utilizas certificados de seguridad, en cualquier caso, aqu\u00ed especificas el n\u00famero de puerto.</li>\n<li><strong><code>server_name</code></strong>:<br>\nsimplemente colocamos el nombre del dominio.</li>\n<li><strong><code>client_max_body_size</code></strong><br>\nhabilita al servidor de responder con contenido de gran tama\u00f1o. </li>\n<li><strong><code>root</code></strong><br>\nindica la ruta donde se encuentran los archivos, recuerda que la ruta debe ser completa.</li>\n<li><strong><code>index</code></strong><br>\nindica que archivo debe devoler Nginx cuando no se solicita ninguno. Va a enviar el primero si existe, si no intenrar\u00e1 con el segundo, sino con el tercero, etc.</li>\n</ul>\n<h3 id=\"compresion-de-salida\">Compresi\u00f3n de salida</h3>\n<p>Comprimir la salida de nuestro sitio es una buena pr\u00e1ctica, no solo ahorra ancho de banda, sino que es m\u00e1s r\u00e1pida la respuesta porque los archivos son m\u00e1s peque\u00f1os, lo que resulta en una mejor experiencia para el usuario. Esta es la configuraci\u00f3n para la compresi\u00f3n dentro del grupo <code>server</code><sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>.</p>\n<div class=\"codehilite\"><pre><span></span>gzip on;\ngzip_disable &quot;msie6&quot;;\ngzip_vary on;\ngzip_proxied any;\ngzip_comp_level 6;\ngzip_buffers 16 8k;\ngzip_http_version 1.1;\ngzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript\n</pre></div>\n\n\n<p>Algunas l\u00edneas debemos revisarlas con m\u00e1s detalle: <code>gzip on</code> activa la compresi\u00f3n. La l\u00ednea <code>gzip_disable</code> dice para Internet Explorer 6 no debe funcionar. La \u00faltima l\u00ednea nos dice que tipos de archivos debe comprimir. No cambies los valores propuestos a menos que de verdad sepas lo que est\u00e1s haciendo.</p>\n<h3 id=\"ubicaciones\">Ubicaciones</h3>\n<p>Ahora, igualmente dentro del grupo <code>server</code> vamos a crear subgrupos para definir ubicaciones dentro del servidor y su comportamiento. Veamos una ubicaci\u00f3n, llamada <code>location</code> por Nginx y analicemos su contenido.</p>\n<p>Podr\u00eda parecer que las expresiones regulares son muy dif\u00edciles pero ya existe mucha informaci\u00f3n y ejemplos en la red, as\u00ed que no debe ser complicado encontrar una regla para nuestras situaciones m\u00e1s comunes.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">location</span> <span class=\"o\">~</span> <span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"nc\">php</span><span class=\"o\">$</span> <span class=\"p\">{</span>\n    <span class=\"err\">try_files</span> <span class=\"err\">$uri</span> <span class=\"err\">=404</span><span class=\"p\">;</span>\n    <span class=\"err\">fastcgi_pass</span> <span class=\"n\">unix</span><span class=\"p\">:</span><span class=\"o\">/</span><span class=\"n\">var</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"o\">/</span><span class=\"n\">php5-fpm</span><span class=\"o\">.</span><span class=\"n\">sock</span><span class=\"p\">;</span>\n    <span class=\"err\">fastcgi_index</span> <span class=\"err\">index.php</span><span class=\"p\">;</span>\n    <span class=\"err\">fastcgi_param</span> <span class=\"err\">SCRIPT_FILENAME</span> <span class=\"err\">$document_root$fastcgi_script_name</span><span class=\"p\">;</span>\n    <span class=\"err\">include</span> <span class=\"err\">fastcgi_params</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p><strong><code>location</code></strong> <br>\nIndica el comportamiento de la <code>location</code> definida a continuaci\u00f3n. En este caso la regla es <code>~</code>, una expresi\u00f3n regular que indica cualquier coincidencia, respetando may\u00fasculas. La segunda regla es <code>\\.php$</code> que significa que aplica a todos los archivos cuya terminaci\u00f3n sea <code>.php</code>.  </p>\n<p>A continuaci\u00f3n abrimos un subgrupo donde indicaremos cu\u00e1l ser\u00e1 el comportamiento dentro de la regla que acabamos de definir.   </p>\n<ul>\n<li><strong><code>try_files</code></strong>: dice que intente encontrar el archivo y si falla, que lance un error 404.</li>\n<li><strong><code>fastcgi_pass</code></strong>: indica la ubicaci\u00f3n del servidor <code>fastcgi</code>. Usar <em>sockets</em>  es m\u00e1s eficiente que usar servidores de red.</li>\n<li><strong><code>fastcgi_index</code></strong>: Nos dice cu\u00e1l es el archivo por default para esta ubicaci\u00f3n y </li>\n<li><strong><code>fastcgi_param</code></strong> nos dice con qu\u00e9 par\u00e1metros debemos llamar al procesador FastCGI.</li>\n</ul>\n<p>Entonces ya definimos qu\u00e9 hacer con los archivos <code>.php</code>. Veamos otro ejemplo.</p>\n<h3 id=\"especificar-el-cache-de-navegacion\">Especificar el cache de navegaci\u00f3n</h3>\n<p>Google<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup> recomienda para mejorar el desempe\u00f1o de los sitios web que ciertos tipos de archivo deben enviarse tal cual son, sin agregarles <em>cookies</em> e indicando cuando expira ese contenido, de modo que si el navegador lo tiene en su cache, utilice ese archivo en vez de descargarlo.</p>\n<p>Vamos a crac otro conjunto de reglas, ahora aplicables a esos archivos que queremos acelerar, los iconos, im\u00e1genes, archivos de hojas de estilo, JavaScript y archivos de fuentes.</p>\n<div class=\"codehilite\"><pre><span></span>location ~* \\.(?:ico|css|js|gif|jpe?g|png|ttf|woff)$ {\n  access_log off;\n  expires 30d;\n  add_header Pragma public;\n  add_header Cache-Control &quot;public, mustrevalidate, proxy-revalidate&quot;;\n}\n</pre></div>\n\n\n<p>Las reglas definidas para estos archivos dicen que deben enviarse los encabezados <code>Pragma public</code> y <code>Cache-Control</code>.   <code>access_log</code> dice que el acceso a estos archivos no se registre en las bit\u00e1coras; <code>expires</code> dice que el navegador debe guardar esos archivos por 30 d\u00edas antes de solicitarlos de nuevo.</p>\n<h3 id=\"permalinks-de-wordpress\">Permalinks de WordPress</h3>\n<p>El siguiente conjunto de reglas, es el m\u00e1s simple y activan los permalinks en WordPress. En realidad es una sola regla muy simple, pero toral para nuestro sitio.</p>\n<div class=\"codehilite\"><pre><span></span>location / {\n  try_files $uri $uri/ /index.html;\n}\n</pre></div>\n\n\n<p>WordPress procesa los permalinks  con el archivo \u00edndice atrapando los errores 404. En  <code>apache</code> cuando llamamos a un post de WordPress con permalink <em>bonito</em> se produce un error 404 porque dicho post no existe f\u00edsicamente en le servidor, entonces WordPress atrapa el error y manda la solicitud al archivo <code>index.php</code> que lo procesa  adecuadamente.</p>\n<p>Con Nginx pasa exactamente lo mismo, solo que la regla dice:</p>\n<div class=\"codehilite\"><pre><span></span>try_files $uri $uri/ /index.html;\n</pre></div>\n\n\n<p>intenta enviar la solicitud, si fallas, manda el \u00edndice de la ubicaci\u00f3n (que en nuestro caso es precisamente <code>index.php</code>) y si eso falla, manda el archivo <code>\u00edndex.html</code>.</p>\n<p>Es decir, al usar <em>pretty permalinks</em> siempre nos quedaremos en la segunda opci\u00f3n y todo funcionar\u00e1 como se espera.</p>\n<h3 id=\"otras-reglas-para-wordpress\">Otras reglas para WordPress</h3>\n<p>Las siguientes dos reglas nos dicen que hacer con los archivos <code>robots.txt</code> y <code>favicon.ico</code>, simplemente no registramos los accesos a esos archivos y no lanzamos mensajes de error si no est\u00e1n presentes.</p>\n<p>location = /robots.txt  { access_log off; log_not_found off; }\n    location = /favicon.ico { access_log off; log_not_found off; }</p>\n<p>La \u00faltima ubicaci\u00f3n que vamos a definir es la del error 500, por si falla el servidor, los visitantes vean algo mejor que el indescifrable mensaje de error de Nginx.</p>\n<div class=\"codehilite\"><pre><span></span>error_page 500 502 503 504 /500.html;\nlocation = /500.html {\n  root /siempre/uso/la_misma/ruta/assets/;\n}\n</pre></div>\n\n\n<h2 id=\"proxy-reversible-que-pokemon-es-ese\">Proxy reversible, \u00bfqu\u00e9 pokem\u00f3n es ese?</h2>\n<p>En el modelo tradicional cliente/servidor que conocemos gracias al popular servidor Apache, cuando un visitante hace una solicitud a nuestro navegador, la solicitud es procesada por Apache.</p>\n<p>Nginx funciona como un intermediario entre el servidor y los visitantes, lo que nos da pauta a tratar de forma m\u00e1s eficiente la respuestas que entregamos a los usuarios.</p>\n<p>Por ejemplo, Nginx se encarga de los archivos est\u00e1ticos, por lo que no son una carga para la aplicaci\u00f3n. Comprime la salida antes de enviarla a los visitantes, y evita que la aplicaci\u00f3n tenga que hacerlo. Podemos balancear la carga de nuestra aplicaci\u00f3n, ejecutando una copia de la aplicaci\u00f3n e indicado a Nginx que la use cuando sea necesario. Puede manejar cache de la aplicaci\u00f3n, respondiendo r\u00e1pidamente con las copias almacenadas sin tener que llamar a la aplicaci\u00f3n. Entre otras cosas.</p>\n<p>Nginx es tan eficiente como proxy reversible, que incluso se puede utilizar como intermediario entre el exterior y <em>el propio servidor Apache</em>. </p>\n<p>Al hacer que Nginx se encargue de la comunicaci\u00f3n con el exterior, nuestra aplicaci\u00f3n se encarga de una sola cosa, sin administrar cargas adicionales.</p>\n<h2 id=\"el-archivo-completo\">El archivo completo</h2>\n<p>Aqu\u00ed te presento el archivo completo para que lo utilices en tu propio servidor, solo tienes que hacer unos peque\u00f1os ajustes para indicar tu servidor <code>server_name</code> y la ra\u00edz de tu sitio <code>roto</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">server</span> <span class=\"p\">{</span>\n  <span class=\"err\">##</span>\n  <span class=\"err\">#</span> <span class=\"err\">Datos</span> <span class=\"err\">del</span> <span class=\"err\">Servidor</span> <span class=\"err\">-</span> <span class=\"err\">tienes</span> <span class=\"err\">que</span> <span class=\"err\">ajustarlo</span>\n  <span class=\"err\">##</span>\n  <span class=\"err\">listen</span> <span class=\"err\">80</span><span class=\"p\">;</span>\n  <span class=\"err\">server_name</span> <span class=\"err\">example.com</span><span class=\"p\">;</span>     \n  <span class=\"err\">root</span> <span class=\"err\">/la/ruta/a/tu/sitio</span><span class=\"p\">;</span>\n\n  <span class=\"err\">##</span>\n  <span class=\"err\">#</span> <span class=\"err\">No</span> <span class=\"err\">cambiar</span> <span class=\"err\">a</span> <span class=\"err\">partir</span> <span class=\"err\">de</span> <span class=\"err\">este</span> <span class=\"err\">punto</span> <span class=\"err\">hasta</span> <span class=\"err\">error</span> <span class=\"err\">500</span>\n  <span class=\"err\">##</span>\n  <span class=\"err\">index</span> <span class=\"err\">index.php</span> <span class=\"err\">index.html</span> <span class=\"err\">index.htm</span><span class=\"p\">;</span>\n  <span class=\"err\">client_max_body_size</span> <span class=\"err\">4G</span><span class=\"p\">;</span>\n\n  <span class=\"err\">##</span>\n  <span class=\"err\">#</span> <span class=\"err\">Procesar</span> <span class=\"err\">archivos</span> <span class=\"err\">.php</span> <span class=\"err\">con</span> <span class=\"err\">php-fpm</span>\n  <span class=\"err\">##</span>\n  <span class=\"err\">location</span> <span class=\"err\">~</span> <span class=\"err\">\\.php$</span> <span class=\"err\">{</span>\n    <span class=\"err\">try_files</span> <span class=\"err\">$uri</span> <span class=\"err\">=404</span><span class=\"p\">;</span>\n    <span class=\"err\">fastcgi_pass</span> <span class=\"n\">unix</span><span class=\"p\">:</span><span class=\"o\">/</span><span class=\"n\">var</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"o\">/</span><span class=\"n\">php5-fpm</span><span class=\"o\">.</span><span class=\"n\">sock</span><span class=\"p\">;</span>\n    <span class=\"err\">fastcgi_index</span> <span class=\"err\">index.php</span><span class=\"p\">;</span>\n    <span class=\"err\">fastcgi_param</span> <span class=\"err\">SCRIPT_FILENAME</span> <span class=\"err\">$document_root$fastcgi_script_name</span><span class=\"p\">;</span>\n    <span class=\"err\">include</span> <span class=\"err\">fastcgi_params</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"err\">##</span>\n  <span class=\"err\">#</span> <span class=\"nt\">Archivos</span> <span class=\"nt\">est\u00e1ticos</span>\n  <span class=\"err\">##</span>\n  <span class=\"nt\">location</span> <span class=\"o\">~*</span> <span class=\"err\">\\</span><span class=\"o\">.(?</span><span class=\"p\">:</span><span class=\"nd\">ico</span><span class=\"o\">|</span><span class=\"nt\">css</span><span class=\"o\">|</span><span class=\"nt\">js</span><span class=\"o\">|</span><span class=\"nt\">gif</span><span class=\"o\">|</span><span class=\"nt\">jpe</span><span class=\"o\">?</span><span class=\"nt\">g</span><span class=\"o\">|</span><span class=\"nt\">png</span><span class=\"o\">|</span><span class=\"nt\">ttf</span><span class=\"o\">|</span><span class=\"nt\">woff</span><span class=\"o\">)$</span> <span class=\"p\">{</span>\n    <span class=\"err\">access_log</span> <span class=\"err\">off</span><span class=\"p\">;</span>\n    <span class=\"err\">expires</span> <span class=\"err\">30d</span><span class=\"p\">;</span>\n    <span class=\"err\">add_header</span> <span class=\"err\">Pragma</span> <span class=\"err\">public</span><span class=\"p\">;</span>\n    <span class=\"err\">add_header</span> <span class=\"err\">Cache-Control</span> <span class=\"err\">&quot;public,</span> <span class=\"err\">mustrevalidate,</span> <span class=\"err\">proxy-revalidate&quot;</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"err\">##</span>\n  <span class=\"err\">#</span> <span class=\"nt\">Permalinks</span> <span class=\"nt\">bonitos</span> <span class=\"nt\">para</span> <span class=\"nt\">WordPress</span>\n  <span class=\"err\">##</span>\n  <span class=\"nt\">location</span> <span class=\"o\">/</span> <span class=\"p\">{</span>\n    <span class=\"err\">try_files</span> <span class=\"err\">$uri</span> <span class=\"err\">$uri/</span> <span class=\"err\">/index.html</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"err\">##</span>\n  <span class=\"err\">#</span> <span class=\"nt\">No</span> <span class=\"nt\">registrar</span> <span class=\"nt\">robots</span><span class=\"p\">.</span><span class=\"nc\">txt</span> <span class=\"nt\">y</span> <span class=\"nt\">favicon</span><span class=\"p\">.</span><span class=\"nc\">ico</span>\n  <span class=\"err\">##</span>\n  <span class=\"nt\">location</span> <span class=\"o\">=</span> <span class=\"o\">/</span><span class=\"nt\">robots</span><span class=\"p\">.</span><span class=\"nc\">txt</span> <span class=\"p\">{</span> <span class=\"err\">access_log</span> <span class=\"err\">off</span><span class=\"p\">;</span> <span class=\"err\">log_not_found</span> <span class=\"err\">off</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n  <span class=\"nt\">location</span> <span class=\"o\">=</span> <span class=\"o\">/</span><span class=\"nt\">favicon</span><span class=\"p\">.</span><span class=\"nc\">ico</span> <span class=\"p\">{</span> <span class=\"err\">access_log</span> <span class=\"err\">off</span><span class=\"p\">;</span> <span class=\"err\">log_not_found</span> <span class=\"err\">off</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n\n  <span class=\"err\">##</span>\n  <span class=\"err\">#</span> <span class=\"nt\">Compresi\u00f3n</span> <span class=\"nt\">de</span> <span class=\"nt\">archivos</span>\n  <span class=\"err\">##</span>\n  <span class=\"nt\">gzip</span> <span class=\"nt\">on</span><span class=\"o\">;</span>\n  <span class=\"nt\">gzip_disable</span> <span class=\"s2\">&quot;msie6&quot;</span><span class=\"o\">;</span>\n  <span class=\"nt\">gzip_vary</span> <span class=\"nt\">on</span><span class=\"o\">;</span>\n  <span class=\"nt\">gzip_proxied</span> <span class=\"nt\">any</span><span class=\"o\">;</span>\n  <span class=\"nt\">gzip_comp_level</span> <span class=\"nt\">6</span><span class=\"o\">;</span>\n  <span class=\"nt\">gzip_buffers</span> <span class=\"nt\">16</span> <span class=\"nt\">8k</span><span class=\"o\">;</span>\n  <span class=\"nt\">gzip_http_version</span> <span class=\"nt\">1</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"o\">;</span>\n  <span class=\"nt\">gzip_types</span> <span class=\"nt\">text</span><span class=\"o\">/</span><span class=\"nt\">plain</span> <span class=\"nt\">text</span><span class=\"o\">/</span><span class=\"nt\">css</span> <span class=\"nt\">application</span><span class=\"o\">/</span><span class=\"nt\">json</span> <span class=\"nt\">application</span><span class=\"o\">/</span><span class=\"nt\">x-javascript</span> <span class=\"nt\">text</span><span class=\"o\">/</span><span class=\"nt\">xml</span> <span class=\"nt\">application</span><span class=\"o\">/</span><span class=\"nt\">xml</span> <span class=\"nt\">application</span><span class=\"o\">/</span><span class=\"nt\">xml</span><span class=\"o\">+</span><span class=\"nt\">rss</span> <span class=\"nt\">text</span><span class=\"o\">/</span><span class=\"nt\">javascript</span>\n\n  <span class=\"err\">##</span>\n  <span class=\"err\">#</span> <span class=\"nt\">P\u00e1ginas</span> <span class=\"nt\">de</span> <span class=\"nt\">error</span> <span class=\"nt\">500</span>\n  <span class=\"err\">##</span>\n  <span class=\"nt\">error_page</span> <span class=\"nt\">500</span> <span class=\"nt\">502</span> <span class=\"nt\">503</span> <span class=\"nt\">504</span> <span class=\"o\">/</span><span class=\"nt\">500</span><span class=\"p\">.</span><span class=\"nc\">html</span><span class=\"o\">;</span>\n  <span class=\"nt\">location</span> <span class=\"o\">=</span> <span class=\"o\">/</span><span class=\"nt\">500</span><span class=\"p\">.</span><span class=\"nc\">html</span> <span class=\"p\">{</span>\n    <span class=\"err\">root</span> <span class=\"err\">/siempre/uso/la/misma/ruta/</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"err\">}</span>\n</pre></div>\n\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Y de la mano de Amy Lee Adams, como podr\u00e1n ustedes apreciar.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Esto quiere decir que debe estar <strong>dentro</strong> de las llaves que engloban todas las configuraciones de <code>server</code>.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>En ingl\u00e9s <a href=\"http://j.mp/ns-cache-browsing\"><em>Leverage Browse Caching</em></a>&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "configuracion-de-nginx-y-wordpress", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 92, "fields": {"idx": "d8dd9215-bc2e-4bba-86f7-f35b3fc25c4a", "creado": "2017-07-29T04:54:36.386Z", "modificado": "2017-07-29T04:54:36.386Z", "title": "Annoying, un b\u00e1sico para tus proyectos", "summary": "Un m\u00f3dulo para facilitarte la vida en Django.", "body": "Title: Annoying, un b\u00e1sico para tus proyectos\r\nDate: 2014/03/14 22:48\r\nCategory: Desarrollo\r\nTags: models, patterns, django, modules\r\nSlug: annoying-basico-para-proyectos\r\nAuthor: Javier Sanchez Toledano\r\nemail: javier@namespace.mx\r\nSummary: Un m\u00f3dulo para facilitarte la vida en Django.\r\n\r\n \r\n\r\nHasta antes de la versi\u00f3n 1.6 de **Django**, configurar los archivos est\u00e1ticos era un gran problema para m\u00ed, porque creo que nunca hab\u00eda entendido como funcionaba. Entonces me encontr\u00e9 con m\u00f3dulo excelente llamado [`django-annoying`][annoying] contiene algunas funciones que hacen que el trabajo sea mucho m\u00e1s f\u00e1cil. \r\n\r\nLa verdad no soy bueno usando **decorators**, ya que no los entiendo, pero hay uno de _django-annoying_ que me gusta mucho usar porque hace que usar las plantillas sea muy sencillo. Pero tiene muchas caracter\u00edsticas m\u00e1s.\r\n\r\n### Caracter\u00edsticas\r\n\r\n* `render_to_decorator` - Facilita la escritura de vistas o _views_ y reduce el tiempo de escritura. Este es el decorador que m\u00e1s me gusta, m\u00e1s abajo veremos como se usa.\r\n* `signals_decorator` - Dicen que permite usar se\u00f1ales como decorador. Nunca he usado las se\u00f1ales, as\u00ed que no entiendo como funciona.\r\n* `ajax_decorator` - Regresa un objeto `JsonResponse` con un diccionario como contenido. Nunca lo he usado.\r\n* `get_config` - Es una **funci\u00f3n** que regresa una variable de configuraci\u00f3n de `django.settings`, si es que existe o bien un valor por default. Nunca la he usado, pero me parece \u00fatil.\r\n\r\n\r\nMiren, para que vean como lo uso, les mostrar\u00e9 una vista simple escrita sin este m\u00f3dulo y luego la misma pero con `annoying`.\r\n\r\n    :::Python\r\n    def main(request):\r\n        \"\"\"Main listing.\"\"\"\r\n        avisos = Aviso.objects.all().order_by(\"-creacion\")\r\n        paginator = Paginator(avisos, 5)\r\n    \r\n        try: \r\n            page = int(request.GET.get(\"page\", '1'))\r\n        except ValueError: \r\n            page = 1\r\n    \r\n        try:\r\n            avisos = paginator.page(page)\r\n        except (InvalidPage, EmptyPage):\r\n            avisos = paginator.page(paginator.num_pages)\r\n    \r\n        return render_to_response(\"avisos/lista.html\", \r\n            {'avisos':avisos, 'title':'Avisos'},\r\n            context_instance=RequestContext(request) )\r\n\r\nAhora esta misma fista con `annoying` se ve as\u00ed.\r\n\r\n    :::Python\r\n    from annoying.decorators import render_to\r\n    \r\n    @render_to('index.html')\r\n    def main(request):\r\n        \"\"\"Main listing.\"\"\"\r\n        avisos = Aviso.objects.all().order_by(\"-creacion\")\r\n        paginator = Paginator(avisos, 5)\r\n\r\n        try: \r\n            page = int(request.GET.get(\"page\", '1'))\r\n        except ValueError: \r\n            page = 1\r\n\r\n        try:\r\n            avisos = paginator.page(page)\r\n        except (InvalidPage, EmptyPage):\r\n            avisos = paginator.page(paginator.num_pages)\r\n\r\n        return {'avisos':avisos, 'title':'Avisos'}\r\n        \r\nComo pueden ver la magia ocurre en el momento de regresar el resultado de la vista. El contexto y la plantilla pasan autom\u00e1ticamente gracias a nuestro decorador. Solo tenemos que preocuparnos por los datos de nuestra vista.\r\n\r\n\u00bfQu\u00e9 les parece?\r\n\r\n\r\n[annoying]: https://goo.gl/Z86Mtd", "extend": "", "pub_date": "2014-03-15T05:52:45Z", "summary_html": "<p>Un m\u00f3dulo para facilitarte la vida en Django.</p>", "body_html": "<p>Hasta antes de la versi\u00f3n 1.6 de <strong>Django</strong>, configurar los archivos est\u00e1ticos era un gran problema para m\u00ed, porque creo que nunca hab\u00eda entendido como funcionaba. Entonces me encontr\u00e9 con m\u00f3dulo excelente llamado <a href=\"https://goo.gl/Z86Mtd\"><code>django-annoying</code></a> contiene algunas funciones que hacen que el trabajo sea mucho m\u00e1s f\u00e1cil. </p>\n<p>La verdad no soy bueno usando <strong>decorators</strong>, ya que no los entiendo, pero hay uno de <em>django-annoying</em> que me gusta mucho usar porque hace que usar las plantillas sea muy sencillo. Pero tiene muchas caracter\u00edsticas m\u00e1s.</p>\n<h3 id=\"caracteristicas\">Caracter\u00edsticas</h3>\n<ul>\n<li><code>render_to_decorator</code> - Facilita la escritura de vistas o <em>views</em> y reduce el tiempo de escritura. Este es el decorador que m\u00e1s me gusta, m\u00e1s abajo veremos como se usa.</li>\n<li><code>signals_decorator</code> - Dicen que permite usar se\u00f1ales como decorador. Nunca he usado las se\u00f1ales, as\u00ed que no entiendo como funciona.</li>\n<li><code>ajax_decorator</code> - Regresa un objeto <code>JsonResponse</code> con un diccionario como contenido. Nunca lo he usado.</li>\n<li><code>get_config</code> - Es una <strong>funci\u00f3n</strong> que regresa una variable de configuraci\u00f3n de <code>django.settings</code>, si es que existe o bien un valor por default. Nunca la he usado, pero me parece \u00fatil.</li>\n</ul>\n<p>Miren, para que vean como lo uso, les mostrar\u00e9 una vista simple escrita sin este m\u00f3dulo y luego la misma pero con <code>annoying</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Main listing.&quot;&quot;&quot;</span>\n    <span class=\"n\">avisos</span> <span class=\"o\">=</span> <span class=\"n\">Aviso</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s2\">&quot;-creacion&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">paginator</span> <span class=\"o\">=</span> <span class=\"n\">Paginator</span><span class=\"p\">(</span><span class=\"n\">avisos</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span> \n        <span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;page&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">))</span>\n    <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span> \n        <span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">avisos</span> <span class=\"o\">=</span> <span class=\"n\">paginator</span><span class=\"o\">.</span><span class=\"n\">page</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"n\">InvalidPage</span><span class=\"p\">,</span> <span class=\"n\">EmptyPage</span><span class=\"p\">):</span>\n        <span class=\"n\">avisos</span> <span class=\"o\">=</span> <span class=\"n\">paginator</span><span class=\"o\">.</span><span class=\"n\">page</span><span class=\"p\">(</span><span class=\"n\">paginator</span><span class=\"o\">.</span><span class=\"n\">num_pages</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">render_to_response</span><span class=\"p\">(</span><span class=\"s2\">&quot;avisos/lista.html&quot;</span><span class=\"p\">,</span> \n        <span class=\"p\">{</span><span class=\"s1\">&#39;avisos&#39;</span><span class=\"p\">:</span><span class=\"n\">avisos</span><span class=\"p\">,</span> <span class=\"s1\">&#39;title&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;Avisos&#39;</span><span class=\"p\">},</span>\n        <span class=\"n\">context_instance</span><span class=\"o\">=</span><span class=\"n\">RequestContext</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span> <span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Ahora esta misma fista con <code>annoying</code> se ve as\u00ed.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">annoying.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">render_to</span>\n\n<span class=\"nd\">@render_to</span><span class=\"p\">(</span><span class=\"s1\">&#39;index.html&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Main listing.&quot;&quot;&quot;</span>\n    <span class=\"n\">avisos</span> <span class=\"o\">=</span> <span class=\"n\">Aviso</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s2\">&quot;-creacion&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">paginator</span> <span class=\"o\">=</span> <span class=\"n\">Paginator</span><span class=\"p\">(</span><span class=\"n\">avisos</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span> \n        <span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;page&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">))</span>\n    <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span> \n        <span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">avisos</span> <span class=\"o\">=</span> <span class=\"n\">paginator</span><span class=\"o\">.</span><span class=\"n\">page</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"n\">InvalidPage</span><span class=\"p\">,</span> <span class=\"n\">EmptyPage</span><span class=\"p\">):</span>\n        <span class=\"n\">avisos</span> <span class=\"o\">=</span> <span class=\"n\">paginator</span><span class=\"o\">.</span><span class=\"n\">page</span><span class=\"p\">(</span><span class=\"n\">paginator</span><span class=\"o\">.</span><span class=\"n\">num_pages</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;avisos&#39;</span><span class=\"p\">:</span><span class=\"n\">avisos</span><span class=\"p\">,</span> <span class=\"s1\">&#39;title&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;Avisos&#39;</span><span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Como pueden ver la magia ocurre en el momento de regresar el resultado de la vista. El contexto y la plantilla pasan autom\u00e1ticamente gracias a nuestro decorador. Solo tenemos que preocuparnos por los datos de nuestra vista.</p>\n<p>\u00bfQu\u00e9 les parece?</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "annoying-un-basico-para-tus-proyectos", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 93, "fields": {"idx": "58ae85ac-4e60-49a6-9fb0-628ea18f9f68", "creado": "2017-07-29T04:55:24.164Z", "modificado": "2017-07-29T04:55:24.164Z", "title": "Control de Planes de Acci\u00f3n con Django", "summary": "Desarrollo de una aplicaci\u00f3n para el control de planes de acci\u00f3n y seguimiento, de acuerdo a la norma ISO 9001:2015 y a la norma COSO II para el control de riesgos.", "body": "Title: Control de Planes de Acci\u00f3n con Django  \r\nDate: 2014-11-16 20:36:30  \r\nCategory: Desarrollo  \r\nTags: calidad, cpas, python, django,   \r\nAuthor: Javier Sanchez Toledano  \r\nSummary: Desarrollo de una aplicaci\u00f3n para el control de planes de acci\u00f3n y seguimiento, de acuerdo a la norma ISO 9001:2015 y a la norma COSO II para el control de riesgos.\r\n\r\nPlaneamos usar Django para controlar los planes de acci\u00f3n y seguimiento como una forma de asegurarnos que estas acciones era efectivas y que el control era eficiente. \r\n\r\n## Datos constantes en el Control de Planes de Acci\u00f3n\r\nExisten algunos datos que son constantes en todos los planes de acci\u00f3n. Colocarlos accesibles a todos los modelos de la aplicaci\u00f3n es una buena idea. Estos son los datos.\r\n\r\n\r\n#### Procesos en el SGC\r\nEl proceso en el que se detect\u00f3 la _no conformidad_ o d\u00f3nde el control de riesgos no fue efectivo. Tenemos cuatro procesos y agregamos una constante m\u00e1s por si es necesario crear un _Plan de Acci\u00f3n_ que afecte al sistema. \r\n\r\n```python\r\nPROCESO = (\r\n    (1, 'Planeaci\u00f3n'),\r\n    (2, 'Apoyo Soporte'),\r\n    (3, 'Clave'),\r\n    (4, 'MSA'),\r\n    (5, 'SGC'),\r\n)\r\n```\r\n\r\n#### Tipos de Plan de Acci\u00f3n\r\nLa norma __ISO 9001:2015__ nos dice que hay varias formas en las que puede ocurrir la mejora. Por ejemplo, de manera *reactiva* (por ejemplo, acci\u00f3n correctiva), de manera *incremental* (por ejemplo, mejora continua), mediante un *cambio significativo* (por ejemplo, avance), de manera *creativa* (por ejemplo, innovaci\u00f3n) o por *reorganizaci\u00f3n* (por ejemplo, transformaci\u00f3n).\r\n\r\nAunque no creo que todos estos tipos de _**cambio**_ ocurran en nuestro sistema, por ejemplo, no entiendo el _creativo_, pero no cuesta nada agregarlo.\r\n\r\n```python\r\nTIPO = (\r\n    (1, 'Reactivo'),\r\n    (2, 'Incremental'),\r\n    (3, 'Innovaci\u00f3n'),\r\n    (4, 'Avance'),\r\n    (5, 'Transformaci\u00f3n'),\r\n)\r\n```\r\n\r\n#### Detecci\u00f3n de la no conformidad\r\nPara la correcta determinaci\u00f3n de la _no conformidad_ debemos indicar __cu\u00e1ndo__ se encontr\u00f3, por ejemplo durante una auditor\u00eda, en la revisi\u00f3n por la direcci\u00f3n, al analizar los indicadores o los riesgos, etc.\r\n\r\n```python\r\nDETECCION = (\r\n    (1, 'Auditoria Interna'),\r\n    (2, 'Auditoria Externa'),\r\n    (3, 'Revisi\u00f3n por los Vocales'),\r\n    (4, 'Quejas'),\r\n    (5, 'Otros'),\r\n)\r\n```\r\n\r\n\r\n\r\n#### Tipo de mejora\r\nTambi\u00e9n indicamos en la identificaci\u00f3n del plan, si la mejora es a un proceso en particular, al producto o servicio o al sistema de gesti\u00f3n en lo general.\r\n\r\n```python\r\nMEJORA = (\r\n    (1, 'Procesos'),\r\n    (2, 'Servicio'),\r\n    (3, 'Sistema')\r\n)\r\n```\r\n\r\n#### Estado de una acci\u00f3n\r\nLa norma nos dice que debemos revisar la eficacia de las acciones tomadas, tambi\u00e9n debemos informar sobre el estado de las acciones en cada revisi\u00f3n por la direcci\u00f3n, para eso le agregamos un _estado_ a cada acci\u00f3n.\r\n\r\n+ __Seguimiento__ - Este es un estado gen\u00e9rico, en general no recomiendo usarlo, pero a veces, es necesario (sobre todo cuando no tenemos mucho que entregar).\r\n+ __Revisi\u00f3n de la Evidencia__ -  Cuando el auditor encargado del plan recibe una evidencia del due\u00f1o de plan, esta acci\u00f3n pasa a este estado, es un estado temporal.\r\n+ __En espera de una respuesta__ - Tambi\u00e9n es un estado temporal, por ejemplo cuando en nuestra acci\u00f3n correctiva solicitamos presupuesto.\r\n+ __En espera de una acci\u00f3n__ - Cuando alguien m\u00e1s nos tiene que entregar algo (documento, producto o servicio) para que el plan siga fluyendo.\r\n+ __En espera de un evento__ - Cuando esperamos que algo pase, antes de continuar con el plan de acci\u00f3n.\r\n+ __Cerrada__ -  Cuando la acci\u00f3n correctiva termin\u00f3, no importa si fue o no efectiva.\r\n\r\nEstos estados son importantes, porque como veremos a detalle m\u00e1s adelante, no podemos cerrar una acci\u00f3n correctiva de forma manual, se cierran de forma autom\u00e1tica de acuerdo al seguimiento y la evidencia registrada.\r\n\r\n```python\r\nA_ESTADO = (\r\n    (1, u'Seguimiento'),\r\n    (2, u'Revisi\u00f3n de Evidencia'),\r\n    (3, u'En espera de una respuesta'),\r\n    (4, u'En espera de una acci\u00f3n'),\r\n    (5, u'En espera de un evento'),\r\n    (6, u'Cerrada')\r\n)\r\n```\r\n\r\n## Modelos para el Control de Planes de Acci\u00f3n\r\n\r\n### Modelo Plan\r\nLa definici\u00f3n de un plan de acci\u00f3n incluye ocho elementos, seis de ellos definidos en este plan y los otros dos ocupan su propio modelo.\r\n\r\nEmpezamos con la definici\u00f3n del modelo:\r\n\r\n```python\r\nclass Plan(models.Model):\r\n    class Meta:\r\n        verbose_name = _(u'Plan de Acci\u00f3n')\r\n        verbose_name_plural = _(u'Planes de Acci\u00f3n')\r\n```\r\n\r\n#### I. Identificaci\u00f3n\r\nLa identificaci\u00f3n del plan incluye los datos de fechas de detecci\u00f3n y de llenado, el proceso que afecta, el tipo de plan, cu\u00e1ndo se detect\u00f3 la no conformidad, que tipo de mejora realiza este plan y un peque\u00f1o nombre \u00fanico.\r\n\r\nYa explicamos antes algunos de estos valores y los otros se explican a si mismos. Esta es su definici\u00f3n.\r\n\r\n```python\r\n    # #################################### #\r\n    # I. Identificaci\u00f3n del plan\r\n    fecha_llenado = models.DateField(\r\n        'Fecha de Llenado',\r\n        default=datetime.date.today()\r\n    )\r\n    fecha_deteccion = models.DateField('Fecha de Detecci\u00f3n')\r\n    proceso = models.PositiveSmallIntegerField(choices=PROCESO)\r\n    tipo = models.PositiveSmallIntegerField(choices=TIPO)\r\n    deteccion = models.PositiveSmallIntegerField(choices=DETECCION)\r\n    mejora = models.PositiveSmallIntegerField(choices=MEJORA)\r\n    nombre = models.CharField(max_length=40)\r\n```\r\n\r\n#### II. Revisi\u00f3n de la no conformidad\r\nAhora debemos revisar la no conformidad, para saber qu\u00e9 requisito no se cumpli\u00f3 o d\u00f3nde no fue suficiente el control de riesgos. En este apartado, se redacta la no conformidad de una manera objetiva y clara (__redacci\u00f3n__), tambi\u00e9n es posible ampliar los datos en un campo llamado (__declaraci\u00f3n__) para agregar informaci\u00f3n que ayude a comprender la no conformidad. Se indican las evidencias objetivas que nos llevaron a tomar la decisi\u00f3n de levantar la no conformidad (__evidencias__). Indicamos tambi\u00e9n el requisito que se incumpl\u00edo y por \u00faltimo, debemos indicar si hemos tenido alguna no conformidad similar o relacionada, para saber mejor qu\u00e9 est\u00e1 pasando.\r\n\r\n```python\r\n    # #################################### #\r\n    # II. Revisi\u00f3n\r\n    redaccion = HTMLField(default='', blank=True, null=True)\r\n    declaracion = HTMLField(default='', blank=True, null=True)\r\n    evidencia = HTMLField(default='', blank=True, null=True)\r\n    requisitos = HTMLField(default='', blank=True, null=True)\r\n    relacionadas = HTMLField(default='', blank=True, null=True)\r\n```\r\n\r\n#### III. Responsabilidades\r\nEste apartado es completamente opcional. En mi opini\u00f3n no es necesario, pero es un requisito de los usuarios del sistema. Indica quienes son los responsables de ejecutar el plan, de revisarlo y darle seguimiento... algo que se repite en las acciones, por cierto.\r\n\r\n```python\r\n    # #################################### #\r\n    # III. Responsabilidades\r\n    informacion = models.CharField(max_length=30, blank=True, null=True)\r\n    aplicacion = models.CharField(max_length=30, blank=True, null=True)\r\n    responsable = models.CharField(max_length=30, blank=True, null=True)\r\n```\r\n\r\n#### IV. Reacci\u00f3n\r\nCuando se declara una no conformidad debemos _reaccionar_ sin demora injustificada. Debemos tomar las medidas, por medio de acciones correctivas, para contener la no conformidad (algunas veces no se podr\u00e1 eliminar) y, si es necesario, hacer frente a las consecuencias.\r\n\r\n```python\r\n# #################################### #\r\n    # IV. Reacci\u00f3n\r\n    correccion = HTMLField(default=\"\", blank=True, null=True)\r\n    consecuencias = models.FileField(blank=True, null=True)\r\n    reaccion_responsable = models.ForeignKey(\r\n        Pipol, blank=True, null=True)\r\n    reaccion_evidencia = models.FileField(blank=True, null=True)\r\n```\r\n\r\n#### V. Determinaci\u00f3n de las causas\r\nUna vez contenida la no conformidad, debemos analizar la declaraci\u00f3n de no conformidad as\u00ed como las evidencias presentadas. El objetivo es determinar la causa, de modo que podamos eliminarla (o reducir la probabilidad que ocurra de nuevo).\r\n\r\nPara este an\u00e1lisis es preferible hacerlo con datos estad\u00edsticos que den certeza a nuestras decisiones, aunque tambi\u00e9n podemos usar otras t\u00e9cnicas como la \u00abCausa y Efecto\u00bb, lluvia de ideas, cinco porques. El objetivo es encontrar la causa que origina la no conformidad (o el riesgo) y tomar medidas para eliminarla o controlarla hasta niveles aceptables.\r\n\r\n```python\r\n    # #################################### #\r\n    # V. Determinaci\u00f3n de las Causas\r\n    pescadito = models.FileField(blank=True, null=True)\r\n    cincopq = models.FileField('5 Por qu\u00e9s', blank=True, null=True)\r\n    causa_raiz = HTMLField(default='', blank=True, null=True)\r\n```\r\n\r\n#### VI. Determinaci\u00f3n de acciones\r\nSeg\u00fan el flujo del proceso definido por la norma, despu\u00e9s de determinas las acciones necesarias para eliminar las causas que originan la no conformidad y verificar la eficacia de estas acciones.\r\n\r\nEn esta aplicaci\u00f3n tanto las acciones como el seguimiento a las mismas tienen su propio modelo, que se relacionan en cascada, es decir, el modelo de seguimiento est\u00e1 relacionado con el modelo de acciones que a su vez est\u00e1 relacionado con el modelo de plan.\r\n\r\nEn el siguiente art\u00edculo veremos estos dos m\u00f3dulos.\r\n\r\n#### VII. Cierre\r\nEl apartado dedicado al cierre del plan es, en realidad, para compatibilidad con el procedimiento anterior. Tiene campos para indicar si se elimin\u00f3 la causa ra\u00edz o si hay recurrencia y otros campos para alguna aclaraci\u00f3n que sea pertinente. Pero en general, el plan de acci\u00f3n puede considerarse cerrado con base en la evidencia del seguimiento a las acciones.\r\n\r\n\r\n```python\r\n    # #################################### #\r\n    # VIII. Cierre\r\n    eliminacion = models.BooleanField(default=False)\r\n    txt_eliminacion = HTMLField(blank=True, null=True)\r\n    recurrencia = models.BooleanField(default=False)\r\n    txt_recuerrencia = HTMLField(blank=True, null=True)\r\n```\r\n\r\n### Conclusi\u00f3n\r\n\r\nEste es el modelo para los planes de acci\u00f3n. Parecen muchos campos, pero la idea es llenarlos conforme vaya ejecut\u00e1ndose el proceso de cierre de la no conformidad. Por eso la mayor\u00eda est\u00e1 marcado como `null`, para usarlos solo cuando tengamos informaci\u00f3n.\r\n\r\nEste plan es la base del proceso, pero la verdadera magia ocurre con los modelos relacionados, como veremos en el art\u00edculo siguiente.", "extend": "", "pub_date": "2014-11-17T02:36:30Z", "summary_html": "<p>Desarrollo de una aplicaci\u00f3n para el control de planes de acci\u00f3n y seguimiento, de acuerdo a la norma ISO 9001:2015 y a la norma COSO II para el control de riesgos.</p>", "body_html": "<p>Planeamos usar Django para controlar los planes de acci\u00f3n y seguimiento como una forma de asegurarnos que estas acciones era efectivas y que el control era eficiente. </p>\n<h2 id=\"datos-constantes-en-el-control-de-planes-de-accion\">Datos constantes en el Control de Planes de Acci\u00f3n</h2>\n<p>Existen algunos datos que son constantes en todos los planes de acci\u00f3n. Colocarlos accesibles a todos los modelos de la aplicaci\u00f3n es una buena idea. Estos son los datos.</p>\n<h4 id=\"procesos-en-el-sgc\">Procesos en el SGC</h4>\n<p>El proceso en el que se detect\u00f3 la <em>no conformidad</em> o d\u00f3nde el control de riesgos no fue efectivo. Tenemos cuatro procesos y agregamos una constante m\u00e1s por si es necesario crear un <em>Plan de Acci\u00f3n</em> que afecte al sistema. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">PROCESO</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Planeaci\u00f3n&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Apoyo Soporte&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Clave&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;MSA&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;SGC&#39;</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"tipos-de-plan-de-accion\">Tipos de Plan de Acci\u00f3n</h4>\n<p>La norma <strong>ISO 9001:2015</strong> nos dice que hay varias formas en las que puede ocurrir la mejora. Por ejemplo, de manera <em>reactiva</em> (por ejemplo, acci\u00f3n correctiva), de manera <em>incremental</em> (por ejemplo, mejora continua), mediante un <em>cambio significativo</em> (por ejemplo, avance), de manera <em>creativa</em> (por ejemplo, innovaci\u00f3n) o por <em>reorganizaci\u00f3n</em> (por ejemplo, transformaci\u00f3n).</p>\n<p>Aunque no creo que todos estos tipos de <em><strong>cambio</strong></em> ocurran en nuestro sistema, por ejemplo, no entiendo el <em>creativo</em>, pero no cuesta nada agregarlo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">TIPO</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Reactivo&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Incremental&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Innovaci\u00f3n&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Avance&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Transformaci\u00f3n&#39;</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"deteccion-de-la-no-conformidad\">Detecci\u00f3n de la no conformidad</h4>\n<p>Para la correcta determinaci\u00f3n de la <em>no conformidad</em> debemos indicar <strong>cu\u00e1ndo</strong> se encontr\u00f3, por ejemplo durante una auditor\u00eda, en la revisi\u00f3n por la direcci\u00f3n, al analizar los indicadores o los riesgos, etc.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">DETECCION</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Auditoria Interna&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Auditoria Externa&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Revisi\u00f3n por los Vocales&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Quejas&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Otros&#39;</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"tipo-de-mejora\">Tipo de mejora</h4>\n<p>Tambi\u00e9n indicamos en la identificaci\u00f3n del plan, si la mejora es a un proceso en particular, al producto o servicio o al sistema de gesti\u00f3n en lo general.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">MEJORA</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Procesos&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Servicio&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Sistema&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"estado-de-una-accion\">Estado de una acci\u00f3n</h4>\n<p>La norma nos dice que debemos revisar la eficacia de las acciones tomadas, tambi\u00e9n debemos informar sobre el estado de las acciones en cada revisi\u00f3n por la direcci\u00f3n, para eso le agregamos un <em>estado</em> a cada acci\u00f3n.</p>\n<ul>\n<li><strong>Seguimiento</strong> - Este es un estado gen\u00e9rico, en general no recomiendo usarlo, pero a veces, es necesario (sobre todo cuando no tenemos mucho que entregar).</li>\n<li><strong>Revisi\u00f3n de la Evidencia</strong> -  Cuando el auditor encargado del plan recibe una evidencia del due\u00f1o de plan, esta acci\u00f3n pasa a este estado, es un estado temporal.</li>\n<li><strong>En espera de una respuesta</strong> - Tambi\u00e9n es un estado temporal, por ejemplo cuando en nuestra acci\u00f3n correctiva solicitamos presupuesto.</li>\n<li><strong>En espera de una acci\u00f3n</strong> - Cuando alguien m\u00e1s nos tiene que entregar algo (documento, producto o servicio) para que el plan siga fluyendo.</li>\n<li><strong>En espera de un evento</strong> - Cuando esperamos que algo pase, antes de continuar con el plan de acci\u00f3n.</li>\n<li><strong>Cerrada</strong> -  Cuando la acci\u00f3n correctiva termin\u00f3, no importa si fue o no efectiva.</li>\n</ul>\n<p>Estos estados son importantes, porque como veremos a detalle m\u00e1s adelante, no podemos cerrar una acci\u00f3n correctiva de forma manual, se cierran de forma autom\u00e1tica de acuerdo al seguimiento y la evidencia registrada.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">A_ESTADO</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">&#39;Seguimiento&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">&#39;Revisi\u00f3n de Evidencia&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">&#39;En espera de una respuesta&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">&#39;En espera de una acci\u00f3n&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">&#39;En espera de un evento&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">&#39;Cerrada&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n<h2 id=\"modelos-para-el-control-de-planes-de-accion\">Modelos para el Control de Planes de Acci\u00f3n</h2>\n<h3 id=\"modelo-plan\">Modelo Plan</h3>\n<p>La definici\u00f3n de un plan de acci\u00f3n incluye ocho elementos, seis de ellos definidos en este plan y los otros dos ocupan su propio modelo.</p>\n<p>Empezamos con la definici\u00f3n del modelo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Plan</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">&#39;Plan de Acci\u00f3n&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">verbose_name_plural</span> <span class=\"o\">=</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">&#39;Planes de Acci\u00f3n&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"i-identificacion\">I. Identificaci\u00f3n</h4>\n<p>La identificaci\u00f3n del plan incluye los datos de fechas de detecci\u00f3n y de llenado, el proceso que afecta, el tipo de plan, cu\u00e1ndo se detect\u00f3 la no conformidad, que tipo de mejora realiza este plan y un peque\u00f1o nombre \u00fanico.</p>\n<p>Ya explicamos antes algunos de estos valores y los otros se explican a si mismos. Esta es su definici\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"c1\"># #################################### #</span>\n    <span class=\"c1\"># I. Identificaci\u00f3n del plan</span>\n    <span class=\"n\">fecha_llenado</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span>\n        <span class=\"s1\">&#39;Fecha de Llenado&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">()</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">fecha_deteccion</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"s1\">&#39;Fecha de Detecci\u00f3n&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">proceso</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveSmallIntegerField</span><span class=\"p\">(</span><span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">PROCESO</span><span class=\"p\">)</span>\n    <span class=\"n\">tipo</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveSmallIntegerField</span><span class=\"p\">(</span><span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">TIPO</span><span class=\"p\">)</span>\n    <span class=\"n\">deteccion</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveSmallIntegerField</span><span class=\"p\">(</span><span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">DETECCION</span><span class=\"p\">)</span>\n    <span class=\"n\">mejora</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveSmallIntegerField</span><span class=\"p\">(</span><span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">MEJORA</span><span class=\"p\">)</span>\n    <span class=\"n\">nombre</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"ii-revision-de-la-no-conformidad\">II. Revisi\u00f3n de la no conformidad</h4>\n<p>Ahora debemos revisar la no conformidad, para saber qu\u00e9 requisito no se cumpli\u00f3 o d\u00f3nde no fue suficiente el control de riesgos. En este apartado, se redacta la no conformidad de una manera objetiva y clara (<strong>redacci\u00f3n</strong>), tambi\u00e9n es posible ampliar los datos en un campo llamado (<strong>declaraci\u00f3n</strong>) para agregar informaci\u00f3n que ayude a comprender la no conformidad. Se indican las evidencias objetivas que nos llevaron a tomar la decisi\u00f3n de levantar la no conformidad (<strong>evidencias</strong>). Indicamos tambi\u00e9n el requisito que se incumpl\u00edo y por \u00faltimo, debemos indicar si hemos tenido alguna no conformidad similar o relacionada, para saber mejor qu\u00e9 est\u00e1 pasando.</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"c1\"># #################################### #</span>\n    <span class=\"c1\"># II. Revisi\u00f3n</span>\n    <span class=\"n\">redaccion</span> <span class=\"o\">=</span> <span class=\"n\">HTMLField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">declaracion</span> <span class=\"o\">=</span> <span class=\"n\">HTMLField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">evidencia</span> <span class=\"o\">=</span> <span class=\"n\">HTMLField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">requisitos</span> <span class=\"o\">=</span> <span class=\"n\">HTMLField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">relacionadas</span> <span class=\"o\">=</span> <span class=\"n\">HTMLField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"iii-responsabilidades\">III. Responsabilidades</h4>\n<p>Este apartado es completamente opcional. En mi opini\u00f3n no es necesario, pero es un requisito de los usuarios del sistema. Indica quienes son los responsables de ejecutar el plan, de revisarlo y darle seguimiento&hellip; algo que se repite en las acciones, por cierto.</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"c1\"># #################################### #</span>\n    <span class=\"c1\"># III. Responsabilidades</span>\n    <span class=\"n\">informacion</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">aplicacion</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">responsable</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"iv-reaccion\">IV. Reacci\u00f3n</h4>\n<p>Cuando se declara una no conformidad debemos <em>reaccionar</em> sin demora injustificada. Debemos tomar las medidas, por medio de acciones correctivas, para contener la no conformidad (algunas veces no se podr\u00e1 eliminar) y, si es necesario, hacer frente a las consecuencias.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\"># #################################### #</span>\n    <span class=\"c1\"># IV. Reacci\u00f3n</span>\n    <span class=\"n\">correccion</span> <span class=\"o\">=</span> <span class=\"n\">HTMLField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">consecuencias</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FileField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">reaccion_responsable</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span>\n        <span class=\"n\">Pipol</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">reaccion_evidencia</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FileField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"v-determinacion-de-las-causas\">V. Determinaci\u00f3n de las causas</h4>\n<p>Una vez contenida la no conformidad, debemos analizar la declaraci\u00f3n de no conformidad as\u00ed como las evidencias presentadas. El objetivo es determinar la causa, de modo que podamos eliminarla (o reducir la probabilidad que ocurra de nuevo).</p>\n<p>Para este an\u00e1lisis es preferible hacerlo con datos estad\u00edsticos que den certeza a nuestras decisiones, aunque tambi\u00e9n podemos usar otras t\u00e9cnicas como la \u00abCausa y Efecto\u00bb, lluvia de ideas, cinco porques. El objetivo es encontrar la causa que origina la no conformidad (o el riesgo) y tomar medidas para eliminarla o controlarla hasta niveles aceptables.</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"c1\"># #################################### #</span>\n    <span class=\"c1\"># V. Determinaci\u00f3n de las Causas</span>\n    <span class=\"n\">pescadito</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FileField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">cincopq</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FileField</span><span class=\"p\">(</span><span class=\"s1\">&#39;5 Por qu\u00e9s&#39;</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">causa_raiz</span> <span class=\"o\">=</span> <span class=\"n\">HTMLField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<h4 id=\"vi-determinacion-de-acciones\">VI. Determinaci\u00f3n de acciones</h4>\n<p>Seg\u00fan el flujo del proceso definido por la norma, despu\u00e9s de determinas las acciones necesarias para eliminar las causas que originan la no conformidad y verificar la eficacia de estas acciones.</p>\n<p>En esta aplicaci\u00f3n tanto las acciones como el seguimiento a las mismas tienen su propio modelo, que se relacionan en cascada, es decir, el modelo de seguimiento est\u00e1 relacionado con el modelo de acciones que a su vez est\u00e1 relacionado con el modelo de plan.</p>\n<p>En el siguiente art\u00edculo veremos estos dos m\u00f3dulos.</p>\n<h4 id=\"vii-cierre\">VII. Cierre</h4>\n<p>El apartado dedicado al cierre del plan es, en realidad, para compatibilidad con el procedimiento anterior. Tiene campos para indicar si se elimin\u00f3 la causa ra\u00edz o si hay recurrencia y otros campos para alguna aclaraci\u00f3n que sea pertinente. Pero en general, el plan de acci\u00f3n puede considerarse cerrado con base en la evidencia del seguimiento a las acciones.</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"c1\"># #################################### #</span>\n    <span class=\"c1\"># VIII. Cierre</span>\n    <span class=\"n\">eliminacion</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">txt_eliminacion</span> <span class=\"o\">=</span> <span class=\"n\">HTMLField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">recurrencia</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">txt_recuerrencia</span> <span class=\"o\">=</span> <span class=\"n\">HTMLField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<h3 id=\"conclusion\">Conclusi\u00f3n</h3>\n<p>Este es el modelo para los planes de acci\u00f3n. Parecen muchos campos, pero la idea es llenarlos conforme vaya ejecut\u00e1ndose el proceso de cierre de la no conformidad. Por eso la mayor\u00eda est\u00e1 marcado como <code>null</code>, para usarlos solo cuando tengamos informaci\u00f3n.</p>\n<p>Este plan es la base del proceso, pero la verdadera magia ocurre con los modelos relacionados, como veremos en el art\u00edculo siguiente.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "control-de-planes-de-accion-con-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 94, "fields": {"idx": "9d7ba48d-3628-4c3b-8f2d-01c87256cfd5", "creado": "2017-07-29T04:56:46.945Z", "modificado": "2017-07-29T04:56:46.945Z", "title": "Aplicaciones reusables con Django", "summary": "", "body": "Title: Aplicaciones reusables con Django\r\nDate: 2015-08-09 12:45:20 a.m.\r\nCategory: Desarrollo\r\nTags:  django, setuptools, python\r\nAuthor: Javier Sanchez Toledano\r\nSummary: \r\n\r\n\r\n\r\nTengo que crear una aplicaci\u00f3n reusable en Django. \r\n\r\n\u00bfLes platiqu\u00e9 de la aplicaci\u00f3n para controlar las quejas, sugerencias y felicitaciones en el cuadro de mando? Pues se me ocurri\u00f3 hacerlo en un proyecto pero no pens\u00e9 como integrarlo al proyecto actual.\r\n\r\nLa soluci\u00f3n es convertir el proyecto en un paquete de Python, de esos que instalas con `pip` y los puedes descargar del \u00edndice de paquetes de Python (PyPI). Bueno, hoy tengo que aprender a hacerlos.\r\n\r\n<!--more-->\r\n\r\nUn paquete de Python proporciona una forma de agrupar c\u00f3digo relacionado para poder reutilizarlo de forma simple. Un paquete de Python, por lo tanto, consiste en uno o m\u00e1s archivos de c\u00f3digo Python (tambi\u00e9n conocido como _\u00abm\u00f3dulos\u00bb_).\r\n\r\nSe puede importar un paquete usando `import foo.bar` o `from foo import bar`. Para que un directorio se convierta en un paquete, debe contener un archivo especial llamado `__init__.py`, no importa si el archivo est\u00e1 vac\u00edo.\r\n\r\nEn este sentido, una _app_ de Django es un paquete de Python cuyo prop\u00f3sito espec\u00edfico es ser utilizado en un proyecto de Django. Un _app_ de Django deber\u00eda seguir las buenas pr\u00e1cticas definidas por el Proyecto Django, por ejemplo, deber\u00edan contar con un archivo `models.py`.\r\n\r\n## Control de quejas como una aplicaci\u00f3n reusable\r\n\r\nComo ya verifiqu\u00e9 que funciona, esta es la estructura de mi aplicaci\u00f3n\r\n\r\n```\r\ncrm\\\r\n    manage.py\r\n    core\\\r\n        __init__.py\r\n        settings.py\r\n        urls.py\r\n        wsgi.py\r\n        templatetags\\\r\n            __init__.py\r\n            crm_extras.py\r\n    quejas\\\r\n        __init__.py\r\n        admin.py\r\n        models.py\r\n        views.py\r\n        migrations\\\r\n            __init__.py\r\n    data\\\r\n        crm.db\r\n    assets\\\r\n        css\\\r\n            bootstrap.min.css\r\n            animate.min.css\r\n            iconfont.css\r\n            style.css\r\n        js\\\r\n            jquery.js\r\n            bootstrap.min.js\r\n            retina.min.js\r\n            animatescroll.js\r\n        img\\\r\n            mac1.jpg\r\n            mac2.jpg\r\n            mac3.jpg\r\n    templates\\\r\n        index.html\r\n```\r\n\r\nLa aplicaci\u00f3n que necesito en realidad es la que se llama `app` y podr\u00eda copiarla a mi proyecto de Cuadro de Mando para usarla inmediatamente, pero si lo hago as\u00ed, entonces cual es el chiste de este art\u00edculo, \u00bfverdad?\r\n\r\n### Programas necesarios\r\n\r\nSe necesitan varios progamas para crear los paquetes en Django. Por ejemmplo `setuptools`, y `pip`. Pero tambi\u00e9n utilizo `brew` para instalar programas en Mac OS X y `pip`. Adem\u00e1s el c\u00f3digo est\u00e1 ubicado en GitHub, por lo que tambi\u00e9n necesito `git`.\r\n\r\n## Empaquetando apps\r\n\r\nEn Python, el verbo _empaquetar_ se refiere a preparar una aplicaci\u00f3n en un formato espec\u00edfico para poder instalarla y usarla f\u00e1cilmente. El propio _framework_ Django est\u00e1 empaquetado de una forma muy similar a esta. Dicen, que para una aplicaci\u00f3n tan simple como la de `quejas`, crear el empaquetado no es tan dif\u00edcil.\r\n\r\n### Procedimiento\r\n\r\n1. Lo primero que tienes que hacer es elegir el nombre de la aplicaci\u00f3n, en este caso debemos crear un directorio fuera de la estructura de de crm. Llamaremos a este directorio `sgc-crm`.\r\n\r\n    Cuando elijas el nombre de tu aplicaci\u00f3n debes evitar los conflictos de nombres de tu paquete con el directorio PyPI. Algo que puede ayudar es agregar un prefijo como `django-` al nombre del paquete para su distribuci\u00f3n,\r\n     \r\n    El nombre de la aplicaci\u00f3n, el que colocas en la constante `INSTALLED_APPS` _debe _ ser \u00fanico. Evita usar cualquier dombre usado por los paquetes que se distribuyen con Django, como `auth`, `admin` o `contrib`, por ejemplo.\r\n\r\n1. Ahora movemos el directorio `crm` al directorio `sgc-crm`.\r\n\r\n1. A continuaci\u00f3n hay que crearun archivo llamado `scg-crm\\README.rst` con el siguiente contenido.\r\n\r\n        ======\r\n        Quejas\r\n        ======\r\n\r\n        Quejas es una aplicaci\u00f3n simple escrita en Django que permite visualizar los datos de Quejas, Sugerencias y Felicitaciones captadas en el INE Tlaxcala. \r\n\r\n        La documentaci\u00f3n detallada se encuentra en el directorio \"docs\".\r\n        \r\n        Inicio r\u00e1pido\r\n        -------------\r\n        \r\n        1. Agrega \"quejas\" a la constante INSTALLED_APPS en tu configuraci\u00f3n::\r\n        \r\n            INSTALLED_APPS = (\r\n                ...\r\n                'polls',\r\n            )\r\n        \r\n        2. Incluye la configuraci\u00f3n de URLs en el archivo urls.py de tu proyecto, por ejemplo::\r\n            \r\n            url(r'quejas/', include('quejas.urls')),\r\n\r\n        3. Ejecura `python manage.py syncdb` para crear los modelos utilizados por la aplicaci\u00f3n de Quejas.\r\n        \r\n        4. Inicia un servidor de desarrollo y visita la direcci\u00f3n http://127.0.0.1:8000/quejas/ para verificar el desempe\u00f1o de la aplicaci\u00f3n.\r\n\r\n1. Crea un archivo `LICENCE`, usa alguna de las licencias que propone GitHub por ejemplo. Investiga un poco para que decidas cu\u00e1l es la licencia que m\u00e1s te convenga.\r\n\r\n1. Crea un archivo `setup.py` el cual proporciona los detalles sobre c\u00f3mo contruir e instalar la aplicaci\u00f3n. La explicaci\u00f3n completa la dejaremos para otro momento (la verdad, tengo que investigar primero). Hay que crear el archivo `sgc-crm\\setup.py` con el siguiente contenido:\r\n\r\n        import os\r\n        from setuptools import setup\r\n\r\n        README = open(os.path.join(os.path.dirname(__file__), 'README.rst')).read()\r\n\r\n        # allow setup.py to be run from any path\r\n        os.chdir(os.path.normpath(os.path.join(os.path.abspath(__file__), os.pardir)))\r\n\r\n        setup(\r\n            name='sgc-crm',\r\n            version='0.1',\r\n            packages=['quejas'],\r\n            include_package_data=True,\r\n            license='BSD License',  \r\n            description='Un m\u00f3dulo para el indicador de quejas.',\r\n            long_description=README,\r\n            url='http://yo.toledano.org/',\r\n            author='Javier Sanchez Toledano',\r\n            author_email='javier@koding.mx',\r\n            classifiers=[\r\n                'Environment :: Web Environment',\r\n                'Framework :: Django',\r\n                'Intended Audience :: Developers',\r\n                'License :: OSI Approved :: BSD License', \r\n                'Operating System :: OS Independent',\r\n                'Programming Language :: Python',\r\n                'Programming Language :: Python :: 2.6',\r\n                'Programming Language :: Python :: 2.7',\r\n                'Topic :: Internet :: WWW/HTTP',\r\n                'Topic :: Internet :: WWW/HTTP :: Dynamic Content',\r\n            ],\r\n        )\r\n\r\n1. Solo se incluyen los m\u00f3dulos y paquetes inclu\u00eddos en el paquete por default. Para incluir archivos adicionales necesitamos crear un archivo `MANIFEST.in`. La documentaci\u00f3n de `setuptools` explica con detalle como crear este archivo, para nosotros basta con incluir las plantillas, los archivos est\u00e1ticos y los archivos de `LEEME` y de licencia en el archivo `sgc-crm\\MANIFEST.in`.\r\n\r\n        include LICENSE\r\n        include README.rst\r\n        recursive-include crm/static *\r\n        recursive-include crm/templates *\r\n\r\n1. Con esto de los premios al m\u00e9rito es importante documentar todo lo que se hace y como funciona esta aplicaci\u00f3n. Creo que lo har\u00e9 en otro momento. Pero voy a crear, eso si, el directorio `sgc-crm\\docs` para que cuando, en el futuro, me de tiempo de crear la documentaci\u00f3n, pueda incluirla. Hay que agregar esta l\u00ednea en el archivo `sgc-crm\\MANIFEST.in`.\r\n\r\n        recursive-include docs \r\n\r\n    Este directorio no se ba a incluir en el paquete a menos que tenga de verdad alg\u00fan archivo. Muchos programadores incluyen la documentaci\u00f3n en sitios como [readthedocs.org](https://readthedocs.org/) (no es mi caso).\r\n\r\n1. Por \u00faltimo, debemos crear el paquete con el comando `pythons setup.py sdist` (desde fuera de `sgc-crm`) y si todo sale bien tendremos el paquete `sgc-crm-0.1.tar.gz`.\r\n\r\nVeamos...", "extend": "", "pub_date": "2015-08-10T04:55:24Z", "summary_html": "", "body_html": "<p>Tengo que crear una aplicaci\u00f3n reusable en Django. </p>\n<p>\u00bfLes platiqu\u00e9 de la aplicaci\u00f3n para controlar las quejas, sugerencias y felicitaciones en el cuadro de mando? Pues se me ocurri\u00f3 hacerlo en un proyecto pero no pens\u00e9 como integrarlo al proyecto actual.</p>\n<p>La soluci\u00f3n es convertir el proyecto en un paquete de Python, de esos que instalas con <code>pip</code> y los puedes descargar del \u00edndice de paquetes de Python (PyPI). Bueno, hoy tengo que aprender a hacerlos.</p>\n<!--more-->\n\n<p>Un paquete de Python proporciona una forma de agrupar c\u00f3digo relacionado para poder reutilizarlo de forma simple. Un paquete de Python, por lo tanto, consiste en uno o m\u00e1s archivos de c\u00f3digo Python (tambi\u00e9n conocido como <em>\u00abm\u00f3dulos\u00bb</em>).</p>\n<p>Se puede importar un paquete usando <code>import foo.bar</code> o <code>from foo import bar</code>. Para que un directorio se convierta en un paquete, debe contener un archivo especial llamado <code>__init__.py</code>, no importa si el archivo est\u00e1 vac\u00edo.</p>\n<p>En este sentido, una <em>app</em> de Django es un paquete de Python cuyo prop\u00f3sito espec\u00edfico es ser utilizado en un proyecto de Django. Un <em>app</em> de Django deber\u00eda seguir las buenas pr\u00e1cticas definidas por el Proyecto Django, por ejemplo, deber\u00edan contar con un archivo <code>models.py</code>.</p>\n<h2 id=\"control-de-quejas-como-una-aplicacion-reusable\">Control de quejas como una aplicaci\u00f3n reusable</h2>\n<p>Como ya verifiqu\u00e9 que funciona, esta es la estructura de mi aplicaci\u00f3n</p>\n<div class=\"codehilite\"><pre><span></span>crm\\\n    manage.py\n    core\\\n        __init__.py\n        settings.py\n        urls.py\n        wsgi.py\n        templatetags\\\n            __init__.py\n            crm_extras.py\n    quejas\\\n        __init__.py\n        admin.py\n        models.py\n        views.py\n        migrations\\\n            __init__.py\n    data\\\n        crm.db\n    assets\\\n        css\\\n            bootstrap.min.css\n            animate.min.css\n            iconfont.css\n            style.css\n        js\\\n            jquery.js\n            bootstrap.min.js\n            retina.min.js\n            animatescroll.js\n        img\\\n            mac1.jpg\n            mac2.jpg\n            mac3.jpg\n    templates\\\n        index.html\n</pre></div>\n\n\n<p>La aplicaci\u00f3n que necesito en realidad es la que se llama <code>app</code> y podr\u00eda copiarla a mi proyecto de Cuadro de Mando para usarla inmediatamente, pero si lo hago as\u00ed, entonces cual es el chiste de este art\u00edculo, \u00bfverdad?</p>\n<h3 id=\"programas-necesarios\">Programas necesarios</h3>\n<p>Se necesitan varios progamas para crear los paquetes en Django. Por ejemmplo <code>setuptools</code>, y <code>pip</code>. Pero tambi\u00e9n utilizo <code>brew</code> para instalar programas en Mac OS X y <code>pip</code>. Adem\u00e1s el c\u00f3digo est\u00e1 ubicado en GitHub, por lo que tambi\u00e9n necesito <code>git</code>.</p>\n<h2 id=\"empaquetando-apps\">Empaquetando apps</h2>\n<p>En Python, el verbo <em>empaquetar</em> se refiere a preparar una aplicaci\u00f3n en un formato espec\u00edfico para poder instalarla y usarla f\u00e1cilmente. El propio <em>framework</em> Django est\u00e1 empaquetado de una forma muy similar a esta. Dicen, que para una aplicaci\u00f3n tan simple como la de <code>quejas</code>, crear el empaquetado no es tan dif\u00edcil.</p>\n<h3 id=\"procedimiento\">Procedimiento</h3>\n<ol>\n<li>\n<p>Lo primero que tienes que hacer es elegir el nombre de la aplicaci\u00f3n, en este caso debemos crear un directorio fuera de la estructura de de crm. Llamaremos a este directorio <code>sgc-crm</code>.</p>\n<p>Cuando elijas el nombre de tu aplicaci\u00f3n debes evitar los conflictos de nombres de tu paquete con el directorio PyPI. Algo que puede ayudar es agregar un prefijo como <code>django-</code> al nombre del paquete para su distribuci\u00f3n,</p>\n<p>El nombre de la aplicaci\u00f3n, el que colocas en la constante <code>INSTALLED_APPS</code> _debe _ ser \u00fanico. Evita usar cualquier dombre usado por los paquetes que se distribuyen con Django, como <code>auth</code>, <code>admin</code> o <code>contrib</code>, por ejemplo.</p>\n</li>\n<li>\n<p>Ahora movemos el directorio <code>crm</code> al directorio <code>sgc-crm</code>.</p>\n</li>\n<li>\n<p>A continuaci\u00f3n hay que crearun archivo llamado <code>scg-crm\\README.rst</code> con el siguiente contenido.</p>\n<div class=\"codehilite\"><pre><span></span>======\nQuejas\n======\n\nQuejas es una aplicaci\u00f3n simple escrita en Django que permite visualizar los datos de Quejas, Sugerencias y Felicitaciones captadas en el INE Tlaxcala.\n\nLa documentaci\u00f3n detallada se encuentra en el directorio &quot;docs&quot;.\n\nInicio r\u00e1pido\n-------------\n\n1. Agrega &quot;quejas&quot; a la constante INSTALLED_APPS en tu configuraci\u00f3n::\n\n    INSTALLED_APPS = (\n        ...\n        &#39;polls&#39;,\n    )\n\n2. Incluye la configuraci\u00f3n de URLs en el archivo urls.py de tu proyecto, por ejemplo::\n\n    url(r&#39;quejas/&#39;, include(&#39;quejas.urls&#39;)),\n\n3. Ejecura `python manage.py syncdb` para crear los modelos utilizados por la aplicaci\u00f3n de Quejas.\n\n4. Inicia un servidor de desarrollo y visita la direcci\u00f3n http://127.0.0.1:8000/quejas/ para verificar el desempe\u00f1o de la aplicaci\u00f3n.\n</pre></div>\n\n\n</li>\n<li>\n<p>Crea un archivo <code>LICENCE</code>, usa alguna de las licencias que propone GitHub por ejemplo. Investiga un poco para que decidas cu\u00e1l es la licencia que m\u00e1s te convenga.</p>\n</li>\n<li>\n<p>Crea un archivo <code>setup.py</code> el cual proporciona los detalles sobre c\u00f3mo contruir e instalar la aplicaci\u00f3n. La explicaci\u00f3n completa la dejaremos para otro momento (la verdad, tengo que investigar primero). Hay que crear el archivo <code>sgc-crm\\setup.py</code> con el siguiente contenido:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">setuptools</span> <span class=\"kn\">import</span> <span class=\"n\">setup</span>\n\n<span class=\"n\">README</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"s1\">&#39;README.rst&#39;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># allow setup.py to be run from any path</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chdir</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">normpath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">pardir</span><span class=\"p\">)))</span>\n\n<span class=\"n\">setup</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;sgc-crm&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">&#39;0.1&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">packages</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;quejas&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">include_package_data</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">license</span><span class=\"o\">=</span><span class=\"s1\">&#39;BSD License&#39;</span><span class=\"p\">,</span>  \n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;Un m\u00f3dulo para el indicador de quejas.&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">long_description</span><span class=\"o\">=</span><span class=\"n\">README</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">&#39;http://yo.toledano.org/&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">author</span><span class=\"o\">=</span><span class=\"s1\">&#39;Javier Sanchez Toledano&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">author_email</span><span class=\"o\">=</span><span class=\"s1\">&#39;javier@koding.mx&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">classifiers</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"s1\">&#39;Environment :: Web Environment&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Framework :: Django&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Intended Audience :: Developers&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;License :: OSI Approved :: BSD License&#39;</span><span class=\"p\">,</span> \n        <span class=\"s1\">&#39;Operating System :: OS Independent&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Programming Language :: Python&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Programming Language :: Python :: 2.6&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Programming Language :: Python :: 2.7&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Topic :: Internet :: WWW/HTTP&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;Topic :: Internet :: WWW/HTTP :: Dynamic Content&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</pre></div>\n\n\n</li>\n<li>\n<p>Solo se incluyen los m\u00f3dulos y paquetes inclu\u00eddos en el paquete por default. Para incluir archivos adicionales necesitamos crear un archivo <code>MANIFEST.in</code>. La documentaci\u00f3n de <code>setuptools</code> explica con detalle como crear este archivo, para nosotros basta con incluir las plantillas, los archivos est\u00e1ticos y los archivos de <code>LEEME</code> y de licencia en el archivo <code>sgc-crm\\MANIFEST.in</code>.</p>\n<div class=\"codehilite\"><pre><span></span>include LICENSE\ninclude README.rst\nrecursive-include crm/static *\nrecursive-include crm/templates *\n</pre></div>\n\n\n</li>\n<li>\n<p>Con esto de los premios al m\u00e9rito es importante documentar todo lo que se hace y como funciona esta aplicaci\u00f3n. Creo que lo har\u00e9 en otro momento. Pero voy a crear, eso si, el directorio <code>sgc-crm\\docs</code> para que cuando, en el futuro, me de tiempo de crear la documentaci\u00f3n, pueda incluirla. Hay que agregar esta l\u00ednea en el archivo <code>sgc-crm\\MANIFEST.in</code>.</p>\n<div class=\"codehilite\"><pre><span></span>recursive-include docs\n</pre></div>\n\n\n<p>Este directorio no se ba a incluir en el paquete a menos que tenga de verdad alg\u00fan archivo. Muchos programadores incluyen la documentaci\u00f3n en sitios como <a href=\"https://readthedocs.org/\">readthedocs.org</a> (no es mi caso).</p>\n</li>\n<li>\n<p>Por \u00faltimo, debemos crear el paquete con el comando <code>pythons setup.py sdist</code> (desde fuera de <code>sgc-crm</code>) y si todo sale bien tendremos el paquete <code>sgc-crm-0.1.tar.gz</code>.</p>\n</li>\n</ol>\n<p>Veamos&hellip;</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "aplicaciones-reusables-con-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 95, "fields": {"idx": "ad7d13c6-abbe-4ad4-ada7-c355286ac16b", "creado": "2017-07-29T04:57:26.410Z", "modificado": "2017-07-29T04:57:26.410Z", "title": "Uso de las etiquetas de autor\u00eda en Genesis", "summary": "Como aprovechar las etiquetas de autor\u00eda de Googla para mejorar la presencia de nuestro sitio en los resultados de las b\u00fasquedas.", "body": "Title: Uso de las etiquetas de autor\u00eda en Genesis  \r\nDate: 2014/04/21 13:24  \r\nCategory: Desarrollo  \r\nTags: genesiswp, wordpress\r\nSummary: Como aprovechar las etiquetas de autor\u00eda de Googla para mejorar la presencia de nuestro sitio en los resultados de las b\u00fasquedas.\r\n\r\n\r\n<p>Aunque esta caracter\u00edstica ya tiene bastante tiempo no he visto que se muy utilizada, me refiero a las <b>etiquetas de Autor\u00eda</b>. Estas etiquetas permiten a las los autores identificar el contenido creado por ellas y ellos en la red<sup class=\"footnote\"><a href=\"#fn4555e7ef-f402-4495-992b-f3da915fdb36\">1</a></sup>. </p>\r\n\r\n<p>Por ejemplo si un autor de alg\u00fan diario escribe sus art\u00edculos usando esta etiqueta, su pueden conectar estos art\u00edculos con la p\u00e1gina del autor. Una p\u00e1gina de autor describe e identifica al autor y puede incluir su biograf\u00eda, su foto, una lista de art\u00edculos, enlaces a otros sitios, etc<sup class=\"footnote\"><a href=\"#fn57215f53-81da-430f-8d3a-b5743d08f27f\">2</a></sup>.</p>\r\n\r\n<p>La etiqueta de autor\u00eda es realmente muy simple, se trata \u00fanicamente de agregar <code>rel=\"author\"</code> a los enlaces para permitirle a los motores de b\u00fasqueda la identificaci\u00f3n de trabajos del mismo autor en toda la web. </p>\r\n\r\n<p>Es importante que comprendas el impacto que esta etiqueta de autor\u00eda tendr\u00e1 en las b\u00fasquedas que se realicen en Google. Con la <b>etiqueta de autor\u00eda</b> podr\u00e1s:</p>\r\n\r\n<ul>\r\n\t\t<li>Podr\u00e1s hacer un an\u00e1lisis de las estad\u00edsticas<sup class=\"footnote\"><a href=\"#fn4819b022-1478-4867-b1b6-49029ccd8133\">3</a></sup> por autor.</li>\r\n\t\t<li>Podr\u00e1s resaltar y diferenciar tus resultados en las b\u00fasquedas.</li>\r\n\t\t<li>Ganar m\u00e1s seguidores en Google+.</li>\r\n\t\t<li>Ayudar a tus usuarios a encontrar m\u00e1s de tus contenidos en la web.</li>\r\n\t</ul>\r\n\r\n<h2>C\u00f3mo utilizar la etiqueta de autor\u00eda con Genesis Framework</h2>\r\n\r\n<p>Este es un tutorial para utilizar la etiqueta de autor\u00eda con Genesis Framework.</p>\r\n\r\n<h4>1. Necesitas un perfil de Google Plus</h4>\r\n\r\n<p>Lo primero que necesitas es crear un perfil de Google Plus, y por supuesto, una cuenta de Google. As\u00ed que si no cuentas con una, puedes crearla en este enlace: <a href=\"http://j.mp/cyberia-googleplus\">http://j.mp/cyberia-googleplus</a>.</p>\r\n\r\n<p>A continuaci\u00f3n debes crear un <a href=\"http://j.mp/cyberia-googleprofile\">Perfil de Google+</a>, recuerda subir una buena foto para tu portada y comletar la informaci\u00f3n m\u00e1s relevante para tus clientes.</p>\r\n\r\n<p>El \u00faltimo paso en esta secci\u00f3n, es verificar la autor\u00eda de tu obre a tu perfil de Google; simplemente visita esta p\u00e1gina <a href=\"https://plus.google.com/authorship\">https://plus.google.com/authorship</a>, escribe tu direcci\u00f3n de correo en la caja y reg\u00edstrate. Recuerda que la direcci\u00f3n de correo debe ser del mismo dominio que el sitio del que reclamas la autor\u00eda<sup class=\"footnote\"><a href=\"#fn4bdf5f67-510e-4503-801a-51c9b5a41103\">4</a></sup>. </p>\r\n\r\n<p><img src=\"http://cyberia.mx/media/Snap_2012.04.22-21.56.05_002-600x325.jpg\" alt=\".\" title=\"Snap_2012.04.22 21.56.05_002\" width=\"600\" height=\"325\" class=\"aligncenter size-large wp-image-1262\" /></p>\r\n\r\n<p>Te env\u00edan un enlace a tu correo elctr\u00f3nico y al seguirlo verificas tu correo y queda enlazado a tu perfil. Con esta operaci\u00f3n Google te identificar\u00e1 como el autor cuando en tus p\u00e1ginas aparezca la etiqueta de autor\u00eda.</p>\r\n\r\n<h4>2. Modificaci\u00f3n del Perfil de WordPress</h4>\r\n\r\n<p>En esta secci\u00f3n necesitas un peque\u00f1o <em>hack</em> (una modificaci\u00f3n al comportamiento est\u00e1ndar de WordPress) en las p\u00e1ginas de perfil. WordPress permite que existan varios autores en un blog, por lo que esta modificaci\u00f3n es una buena pr\u00e1ctica que te ahorrar\u00e1 tiempo y estandarizar\u00e1 la informaci\u00f3n de tu sitio.</p>\r\n\r\n<p>Primero debemos agregar un campo al perfil de los autores, WordPress carece de este campo, pero solo debes agregar el siguiente c\u00f3digo a tu archivo <code>functions.php</code> para contar con esta informaci\u00f3n:</p>\r\n  \r\n<pre class=\"brush:php\">\r\n/* *** Agrega la URL de Google Profile al perfil del autor en WordPress *** */\r\nadd_filter( &#39;user_contactmethods&#39;, &#39;cyberia_google_profile&#39;, 10, 1);\r\nfunction cyberia_google_profile( $contactmethods ) {\r\n  // Add Google Profiles\r\n  $contactmethods[&#39;google_profile&#39;] = &#39;Perfil de Google&#39;;\r\n  return $contactmethods;\r\n} \r\n</pre>\r\n\r\n<p>Ahora aparecer\u00e1 una nueva caja de datos en los m\u00e9todos de contacto y se rellena con la <span class=\"caps\">URL</span> del perfil de Google del autor.</p>\r\n\r\n<p><img src=\"http://cyberia.mx/media/Snap_2012.04.22-22.52.57_003-600x329.jpg\" alt=\".\" title=\"Snap_2012.04.22 22.52.57_003\" width=\"600\" height=\"329\" class=\"aligncenter size-large wp-image-1264\" /></p>\r\n\r\n<h4>Agregar la etiqueta de autor\u00eda a la informaci\u00f3n de los art\u00edculos</h4>\r\n\r\n<p>El c\u00f3digo para agregar la etiqueta de autor\u00eda puede parecer muy complicado al principio<sup class=\"footnote\"><a href=\"#fn633da8f0-faf8-4dc6-9be3-902de323af80\">5</a></sup>, pero vamos a diseccionar y analizar cada uno de sus componentes para entenderlo mejor. Primero veamos el c\u00f3digo.</p>\r\n\r\n\r\n<pre class=\"brush:php\">/* *** Agregar Google Authorship ***  */\r\nadd_filter( &#39;genesis_post_info&#39;, &#39;cyberia_filtrar_info&#39; );\r\nfunction cyberia_filtrar_info($post_info) {\r\n  if (!is_page()) {\r\n    $post_info = &#39;[ post_date] por [ post_author_posts_link]&#38;nbsp;&#60;a rel=&#34;me author&#34; href=&#34;&#39;. get_the_author_meta( &#39;google_profile&#39; ) .&#39;/about&#34;&#62;&#60;img class=&#34;plus&#34; src=&#34;http://cyberia.mx/images/gplus.png&#34; width=&#34;12&#34; height=&#34;12&#34; border=&#34;0&#34; align=&#34;&#34; alt=&#34;Google+&#34; title=&#34;Google+ Profile&#34;&#62;&#60;/a&#62; a las [ post_time] [ post_comments] [ post_edit]&#39;;\r\n    return $post_info;\r\n  }\r\n}\r\n</pre>\r\n\r\n<p>La primera l\u00ednea agrega una funci\u00f3n al filtro <code>genesis_info_post</code>. Esta funci\u00f3n se llama <code>cyberia_filtrar_info</code> y recibe como argumento la informaci\u00f3n del post.</p>\r\n\r\n<p>Este c\u00f3digo es el que se usa en <b>Cyberia.MX</b>, por eso se ve en la l\u00ednea 4 que solo funciona cuando NO se trata de p\u00e1ginas.</p>\r\n\r\n<p>En la l\u00ednea 5 cambiamos el <code>post_info</code> que nos mando la funci\u00f3n con uno nuevo que nosotros especificamos. Los campos <code>post_date</code>, <code>post_author_posts_link</code>, <code>post_time</code>, <code>post_comments</code> y <code>post_edit</code> son atajos que proporciona <a href=\"/go/genesis\"><b>Genesis Framework</b></a> pero agregamos este enlace clave:</p>\r\n\r\n<pre class=\"brush:php,first-line:5\">&#60;a rel=&#34;me author&#34; href=&#34;&#39;. get_the_author_meta( &#39;google_profile&#39; ) .&#39;/about&#34;&#62;&#60;img class=&#34;plus&#34; src=&#34;http://cyberia.mx/images/gplus.png&#34; width=&#34;12&#34; height=&#34;12&#34; border=&#34;0&#34; align=&#34;&#34; alt=&#34;Google+&#34; title=&#34;Google+ Profile&#34;&#62;&#60;/a&#62;\r\n</pre>\r\n\r\n<p>Como podr\u00e1s ver, la funci\u00f3n <code>get_the_author_meta('google_profile')</code> es la que se encarga de colocar la <span class=\"caps\">URL</span> del perfil del autor y as\u00ed formar el enlace. Un mini ic\u00f3no completa este trabajo y hace el enlace un poco m\u00e1s notorio<sup class=\"footnote\"><a href=\"#fn301804ea-3242-4829-83e5-1a74398bcaae\">6</a></sup>.</p>\r\n\r\n<h4>La Etiqueta de Autor\u00eda</h4>\r\n\r\n<p>Este enlace contiene la <b>etiqueta de autor\u00eda</b> que es <code>rel=\"author\"</code>. Esto es entonces un enlace a un sitio central verificado por Google, es decir nuestro perfil de Google Plus, donde verificamos la autor\u00eda de nuestros art\u00edculos y le damos m\u00e1s relevancia a los resultados de las b\u00fasquedas.</p>\r\n\r\n<p>Esta etiqueta de autor\u00eda, <code>rel='author'</code> es parte de los fragmentos enriquecidos con microformatos que est\u00e1 promoviendo Google activamente, porque agregan informaci\u00f3n sobre nuestro art\u00edculo que entienden y aprovechan los buscadores.</p>\r\n\r\n<h4>Prueba de la Etiqueta de Autor\u00eda y Microformatos</h4>\r\n\r\n<p>Para verificar que has realizado todos los pasos correctamente, visita esta p\u00e1gina <a href=\"http://www.google.com/webmasters/tools/richsnippets\">http://www.google.com/webmasters/tools/richsnippets</a> y en la caja que aperece escribe la <span class=\"caps\">URL</span> de tu sitio.</p>\r\n\r\n<p><img src=\"http://cyberia.mx/media/Snap_2012.04.22-23.54.20_004-600x395.jpg\" alt=\".\" title=\"Snap_2012.04.22 23.54.20_004\" width=\"600\" height=\"395\" class=\"aligncenter size-large wp-image-1265\" /></p>\r\n\r\n<p>Si quieres ver c\u00f3mo debe verse usa esta p\u00e1gina de Cyberia.MX: <a href=\"http://cyberia.mx/apps/angry-birds\">Angry Birds</a> que no solamente tiene la etiqueta de autor\u00eda, tambi\u00e9n tiene microformatos que especifican la opini\u00f3n de una aplicaci\u00f3n.</p>\r\n\r\n<p>Espero que te haya servido este tutorial para <a href=\"/go/genesis\"><b>Genesis Framework</b></a> y las <b>Etiquetas de Autor\u00eda</b>.</p>\r\n\r\n<hr />\r\n\r\n<h3>Notas</h3>\r\n\r\n<p id=\"fn4555e7ef-f402-4495-992b-f3da915fdb36\" class=\"footnote\"><sup>1</sup>Voy a trabajar en un proyecto sobre equidad de g\u00e9nero y esto es para empezar a acostumbrarme.</p>\r\n\r\n<p id=\"fn57215f53-81da-430f-8d3a-b5743d08f27f\" class=\"footnote\"><sup>2</sup>Puedes leer m\u00e1s sobre este tema en el blog <a href=\"http://j.mp/JGHIJb\">Webmaster Central</a></p>\r\n\r\n<p id=\"fn4819b022-1478-4867-b1b6-49029ccd8133\" class=\"footnote\"><sup>3</sup>El art\u00edculo se llama <a href=\"http://j.mp/I49XGE\">Clics e impresiones por autor</a></p>\r\n\r\n<p id=\"fn4bdf5f67-510e-4503-801a-51c9b5a41103\" class=\"footnote\"><sup>4</sup>En realidad, ignoro el por qu\u00e9 de esta demanda, pero si no tienes una direcci\u00f3n de correo, puedes usar un <a href=\"http://j.mp/JGRf2X\">m\u00e9todo alterno</a></p>\r\n\r\n<p id=\"fn633da8f0-faf8-4dc6-9be3-902de323af80\" class=\"footnote\"><sup>5</sup>Los filtros para mi son muy complicados, pero sigo aprendiendo.</p>\r\n\r\n<p id=\"fn301804ea-3242-4829-83e5-1a74398bcaae\" class=\"footnote\"><sup>6</sup>Aunque el color desentona con el tema de <strong>Cyberia.MX</strong> un poco #opino.</p>", "extend": "", "pub_date": "2014-04-22T04:56:47Z", "summary_html": "<p>Como aprovechar las etiquetas de autor\u00eda de Googla para mejorar la presencia de nuestro sitio en los resultados de las b\u00fasquedas.</p>", "body_html": "<p>Aunque esta caracter\u00edstica ya tiene bastante tiempo no he visto que se muy utilizada, me refiero a las <b>etiquetas de Autor\u00eda</b>. Estas etiquetas permiten a las los autores identificar el contenido creado por ellas y ellos en la red<sup class=\"footnote\"><a href=\"#fn4555e7ef-f402-4495-992b-f3da915fdb36\">1</a></sup>. </p>\n\n<p>Por ejemplo si un autor de alg\u00fan diario escribe sus art\u00edculos usando esta etiqueta, su pueden conectar estos art\u00edculos con la p\u00e1gina del autor. Una p\u00e1gina de autor describe e identifica al autor y puede incluir su biograf\u00eda, su foto, una lista de art\u00edculos, enlaces a otros sitios, etc<sup class=\"footnote\"><a href=\"#fn57215f53-81da-430f-8d3a-b5743d08f27f\">2</a></sup>.</p>\n\n<p>La etiqueta de autor\u00eda es realmente muy simple, se trata \u00fanicamente de agregar <code>rel=\"author\"</code> a los enlaces para permitirle a los motores de b\u00fasqueda la identificaci\u00f3n de trabajos del mismo autor en toda la web. </p>\n\n<p>Es importante que comprendas el impacto que esta etiqueta de autor\u00eda tendr\u00e1 en las b\u00fasquedas que se realicen en Google. Con la <b>etiqueta de autor\u00eda</b> podr\u00e1s:</p>\n\n<ul>\n        <li>Podr\u00e1s hacer un an\u00e1lisis de las estad\u00edsticas<sup class=\"footnote\"><a href=\"#fn4819b022-1478-4867-b1b6-49029ccd8133\">3</a></sup> por autor.</li>\n        <li>Podr\u00e1s resaltar y diferenciar tus resultados en las b\u00fasquedas.</li>\n        <li>Ganar m\u00e1s seguidores en Google+.</li>\n        <li>Ayudar a tus usuarios a encontrar m\u00e1s de tus contenidos en la web.</li>\n    </ul>\n\n<h2>C\u00f3mo utilizar la etiqueta de autor\u00eda con Genesis Framework</h2>\n\n<p>Este es un tutorial para utilizar la etiqueta de autor\u00eda con Genesis Framework.</p>\n\n<h4>1. Necesitas un perfil de Google Plus</h4>\n\n<p>Lo primero que necesitas es crear un perfil de Google Plus, y por supuesto, una cuenta de Google. As\u00ed que si no cuentas con una, puedes crearla en este enlace: <a href=\"http://j.mp/cyberia-googleplus\">http://j.mp/cyberia-googleplus</a>.</p>\n\n<p>A continuaci\u00f3n debes crear un <a href=\"http://j.mp/cyberia-googleprofile\">Perfil de Google+</a>, recuerda subir una buena foto para tu portada y comletar la informaci\u00f3n m\u00e1s relevante para tus clientes.</p>\n\n<p>El \u00faltimo paso en esta secci\u00f3n, es verificar la autor\u00eda de tu obre a tu perfil de Google; simplemente visita esta p\u00e1gina <a href=\"https://plus.google.com/authorship\">https://plus.google.com/authorship</a>, escribe tu direcci\u00f3n de correo en la caja y reg\u00edstrate. Recuerda que la direcci\u00f3n de correo debe ser del mismo dominio que el sitio del que reclamas la autor\u00eda<sup class=\"footnote\"><a href=\"#fn4bdf5f67-510e-4503-801a-51c9b5a41103\">4</a></sup>. </p>\n\n<p><img src=\"http://cyberia.mx/media/Snap_2012.04.22-21.56.05_002-600x325.jpg\" alt=\".\" title=\"Snap_2012.04.22 21.56.05_002\" width=\"600\" height=\"325\" class=\"aligncenter size-large wp-image-1262\" /></p>\n\n<p>Te env\u00edan un enlace a tu correo elctr\u00f3nico y al seguirlo verificas tu correo y queda enlazado a tu perfil. Con esta operaci\u00f3n Google te identificar\u00e1 como el autor cuando en tus p\u00e1ginas aparezca la etiqueta de autor\u00eda.</p>\n\n<h4>2. Modificaci\u00f3n del Perfil de WordPress</h4>\n\n<p>En esta secci\u00f3n necesitas un peque\u00f1o <em>hack</em> (una modificaci\u00f3n al comportamiento est\u00e1ndar de WordPress) en las p\u00e1ginas de perfil. WordPress permite que existan varios autores en un blog, por lo que esta modificaci\u00f3n es una buena pr\u00e1ctica que te ahorrar\u00e1 tiempo y estandarizar\u00e1 la informaci\u00f3n de tu sitio.</p>\n\n<p>Primero debemos agregar un campo al perfil de los autores, WordPress carece de este campo, pero solo debes agregar el siguiente c\u00f3digo a tu archivo <code>functions.php</code> para contar con esta informaci\u00f3n:</p>\n\n<pre class=\"brush:php\">\n/* *** Agrega la URL de Google Profile al perfil del autor en WordPress *** */\nadd_filter( &#39;user_contactmethods&#39;, &#39;cyberia_google_profile&#39;, 10, 1);\nfunction cyberia_google_profile( $contactmethods ) {\n  // Add Google Profiles\n  $contactmethods[&#39;google_profile&#39;] = &#39;Perfil de Google&#39;;\n  return $contactmethods;\n} \n</pre>\n\n<p>Ahora aparecer\u00e1 una nueva caja de datos en los m\u00e9todos de contacto y se rellena con la <span class=\"caps\">URL</span> del perfil de Google del autor.</p>\n\n<p><img src=\"http://cyberia.mx/media/Snap_2012.04.22-22.52.57_003-600x329.jpg\" alt=\".\" title=\"Snap_2012.04.22 22.52.57_003\" width=\"600\" height=\"329\" class=\"aligncenter size-large wp-image-1264\" /></p>\n\n<h4>Agregar la etiqueta de autor\u00eda a la informaci\u00f3n de los art\u00edculos</h4>\n\n<p>El c\u00f3digo para agregar la etiqueta de autor\u00eda puede parecer muy complicado al principio<sup class=\"footnote\"><a href=\"#fn633da8f0-faf8-4dc6-9be3-902de323af80\">5</a></sup>, pero vamos a diseccionar y analizar cada uno de sus componentes para entenderlo mejor. Primero veamos el c\u00f3digo.</p>\n\n<pre class=\"brush:php\">/* *** Agregar Google Authorship ***  */\nadd_filter( &#39;genesis_post_info&#39;, &#39;cyberia_filtrar_info&#39; );\nfunction cyberia_filtrar_info($post_info) {\n  if (!is_page()) {\n    $post_info = &#39;[ post_date] por [ post_author_posts_link]&#38;nbsp;&#60;a rel=&#34;me author&#34; href=&#34;&#39;. get_the_author_meta( &#39;google_profile&#39; ) .&#39;/about&#34;&#62;&#60;img class=&#34;plus&#34; src=&#34;http://cyberia.mx/images/gplus.png&#34; width=&#34;12&#34; height=&#34;12&#34; border=&#34;0&#34; align=&#34;&#34; alt=&#34;Google+&#34; title=&#34;Google+ Profile&#34;&#62;&#60;/a&#62; a las [ post_time] [ post_comments] [ post_edit]&#39;;\n    return $post_info;\n  }\n}\n</pre>\n\n<p>La primera l\u00ednea agrega una funci\u00f3n al filtro <code>genesis_info_post</code>. Esta funci\u00f3n se llama <code>cyberia_filtrar_info</code> y recibe como argumento la informaci\u00f3n del post.</p>\n\n<p>Este c\u00f3digo es el que se usa en <b>Cyberia.MX</b>, por eso se ve en la l\u00ednea 4 que solo funciona cuando NO se trata de p\u00e1ginas.</p>\n\n<p>En la l\u00ednea 5 cambiamos el <code>post_info</code> que nos mando la funci\u00f3n con uno nuevo que nosotros especificamos. Los campos <code>post_date</code>, <code>post_author_posts_link</code>, <code>post_time</code>, <code>post_comments</code> y <code>post_edit</code> son atajos que proporciona <a href=\"/go/genesis\"><b>Genesis Framework</b></a> pero agregamos este enlace clave:</p>\n\n<pre class=\"brush:php,first-line:5\">&#60;a rel=&#34;me author&#34; href=&#34;&#39;. get_the_author_meta( &#39;google_profile&#39; ) .&#39;/about&#34;&#62;&#60;img class=&#34;plus&#34; src=&#34;http://cyberia.mx/images/gplus.png&#34; width=&#34;12&#34; height=&#34;12&#34; border=&#34;0&#34; align=&#34;&#34; alt=&#34;Google+&#34; title=&#34;Google+ Profile&#34;&#62;&#60;/a&#62;\n</pre>\n\n<p>Como podr\u00e1s ver, la funci\u00f3n <code>get_the_author_meta('google_profile')</code> es la que se encarga de colocar la <span class=\"caps\">URL</span> del perfil del autor y as\u00ed formar el enlace. Un mini ic\u00f3no completa este trabajo y hace el enlace un poco m\u00e1s notorio<sup class=\"footnote\"><a href=\"#fn301804ea-3242-4829-83e5-1a74398bcaae\">6</a></sup>.</p>\n\n<h4>La Etiqueta de Autor\u00eda</h4>\n\n<p>Este enlace contiene la <b>etiqueta de autor\u00eda</b> que es <code>rel=\"author\"</code>. Esto es entonces un enlace a un sitio central verificado por Google, es decir nuestro perfil de Google Plus, donde verificamos la autor\u00eda de nuestros art\u00edculos y le damos m\u00e1s relevancia a los resultados de las b\u00fasquedas.</p>\n\n<p>Esta etiqueta de autor\u00eda, <code>rel='author'</code> es parte de los fragmentos enriquecidos con microformatos que est\u00e1 promoviendo Google activamente, porque agregan informaci\u00f3n sobre nuestro art\u00edculo que entienden y aprovechan los buscadores.</p>\n\n<h4>Prueba de la Etiqueta de Autor\u00eda y Microformatos</h4>\n\n<p>Para verificar que has realizado todos los pasos correctamente, visita esta p\u00e1gina <a href=\"http://www.google.com/webmasters/tools/richsnippets\">http://www.google.com/webmasters/tools/richsnippets</a> y en la caja que aperece escribe la <span class=\"caps\">URL</span> de tu sitio.</p>\n\n<p><img src=\"http://cyberia.mx/media/Snap_2012.04.22-23.54.20_004-600x395.jpg\" alt=\".\" title=\"Snap_2012.04.22 23.54.20_004\" width=\"600\" height=\"395\" class=\"aligncenter size-large wp-image-1265\" /></p>\n\n<p>Si quieres ver c\u00f3mo debe verse usa esta p\u00e1gina de Cyberia.MX: <a href=\"http://cyberia.mx/apps/angry-birds\">Angry Birds</a> que no solamente tiene la etiqueta de autor\u00eda, tambi\u00e9n tiene microformatos que especifican la opini\u00f3n de una aplicaci\u00f3n.</p>\n\n<p>Espero que te haya servido este tutorial para <a href=\"/go/genesis\"><b>Genesis Framework</b></a> y las <b>Etiquetas de Autor\u00eda</b>.</p>\n\n<hr />\n\n<h3>Notas</h3>\n\n<p id=\"fn4555e7ef-f402-4495-992b-f3da915fdb36\" class=\"footnote\"><sup>1</sup>Voy a trabajar en un proyecto sobre equidad de g\u00e9nero y esto es para empezar a acostumbrarme.</p>\n\n<p id=\"fn57215f53-81da-430f-8d3a-b5743d08f27f\" class=\"footnote\"><sup>2</sup>Puedes leer m\u00e1s sobre este tema en el blog <a href=\"http://j.mp/JGHIJb\">Webmaster Central</a></p>\n\n<p id=\"fn4819b022-1478-4867-b1b6-49029ccd8133\" class=\"footnote\"><sup>3</sup>El art\u00edculo se llama <a href=\"http://j.mp/I49XGE\">Clics e impresiones por autor</a></p>\n\n<p id=\"fn4bdf5f67-510e-4503-801a-51c9b5a41103\" class=\"footnote\"><sup>4</sup>En realidad, ignoro el por qu\u00e9 de esta demanda, pero si no tienes una direcci\u00f3n de correo, puedes usar un <a href=\"http://j.mp/JGRf2X\">m\u00e9todo alterno</a></p>\n\n<p id=\"fn633da8f0-faf8-4dc6-9be3-902de323af80\" class=\"footnote\"><sup>5</sup>Los filtros para mi son muy complicados, pero sigo aprendiendo.</p>\n\n<p id=\"fn301804ea-3242-4829-83e5-1a74398bcaae\" class=\"footnote\"><sup>6</sup>Aunque el color desentona con el tema de <strong>Cyberia.MX</strong> un poco #opino.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "uso-de-las-etiquetas-de-autoria-en-genesis", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 96, "fields": {"idx": "01e71342-f72b-49f2-be24-17530423d03e", "creado": "2017-07-29T05:04:57.058Z", "modificado": "2017-07-29T05:04:57.058Z", "title": "Personalizar Genesis", "summary": "", "body": "Title: Personalizar Genesis\r\nDate: 2015-08-09 12:46:18 a.m.\r\nCategory: Desarrollo\r\nTags:  wordpress, genesis, php\r\nAuthor: Javier Sanchez Toledano\r\nSummary:\r\n\r\nAunque lo m\u00e1s recomendable es hacerlo mediante un _plugin_ para conservar los cambios a trav\u00e9s de temas y versiones, la forma original (y que sigue en uso) es usar el archivo `functions.php` y esa es la forma en la que voy a presentar las modificaciones a este tema.\r\n\r\nEl tema que usa este sitio es [**Agency Pro**][agency] un tema que utiliza [**Genesis Framework**][genesis] para funcionar. Aprovecha todas las ventajas del nuevo marcado `HTML5` y tiene una presentaci\u00f3n realmente diferente a lo que nos ten\u00eda acostumbrado _StudioPress_.\r\n\r\n<!--more-->\r\n\r\nLas modificaciones que hice incluyen el cambio de tipograf\u00eda, el uso de la versi\u00f3n m\u00e1s reciente de _jQuery_, modificaciones a los estilos de diversos elementos como `pre` y `code` y por supuesto, _transparencias_, muchas transparencias.\r\n\r\n## Registro de Scripts\r\n\r\nPara reemplazar la versi\u00f3n de _jQuery_ que usa WordPress, primero debemos eliminar del registro[^1] de guiones la versi\u00f3n _oficial_ y registrar la que nosotros queremos, dentro del archivo `functions.php`\r\n\r\nDe modo que agregamos una acci\u00f3n a la fila de carga de guiones y ah\u00ed eliminamos del registro la versi\u00f3n actual, registramos la nueva y la colocamos en la fila[^2].\r\n\r\n    :::php\r\n    /* *** jQuery 2.1.1 *** */\r\n    add_action( 'wp_enqueue_scripts', 'jQuery211', 99);\r\n    function jQuery211() {\r\n      wp_deregister_script( 'jquery' );\r\n      wp_register_script( 'jquery', '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js' );;\r\n      wp_enqueue_script( 'jquery', '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js', array( 'jquery' ), '2.1.1', false );\r\n    }\r\n\r\nEsta funci\u00f3n crea unn grupo de _scripts_ llamado `jQuery211` que contiene un solo _script_: `jquery.min.js` en su versi\u00f3n `2.1.1`.\r\n\r\nUsando el mismo gancho `wp_enqueue_scripts`, agregamos otros _scripts_ que son necesarios para la m\u00fasica. En esta ocasiones, nos aseguramos que solo est\u00e9n disponibles en las entradas individuales.\r\n\r\n    :::php\r\n    add_action('wp_enqueue_scripts', 'estilos_toledanos');\r\n    function estilos_toledanos() {\r\n        if ( is_singular( 'post' ) ) {\r\n              wp_enqueue_style('music', '/assets/css/xemusicplayer.css');\r\n            wp_register_script('music', '/assets/js/jquery-xemusicplayer-1.0.0.min.js' );\r\n             wp_enqueue_script('music', '/assets/js/jquery-xemusicplayer-1.0.0.min.js', true );\r\n            wp_register_script('video', '//cdnjs.cloudflare.com/ajax/libs/fitvids/1.0.1/jquery.fitvids.min.js');\r\n             wp_enqueue_script('video', '//cdnjs.cloudflare.com/ajax/libs/fitvids/1.0.1/jquery.fitvids.min.js', true);\r\n        }\r\n    }\r\n\r\n## Registro de Estilos\r\n\r\nEl siguiente paso tambi\u00e9n ocurre en el archivo `functions.php` y consiste en  reemplazar la tipograf\u00eda usada en el tema original que es [EB Garamond](https://www.google.com/fonts/specimen/EB+Garamond) por [__Lato__](https://www.google.com/fonts/specimen/Lato).\r\n\r\nPara esto hay una funci\u00f3n muy parecida a la anterior para anotar en la lista de estilos uno m\u00e1s: `wp_enqueue_style`:\r\n\r\n    :::php\r\n    wp_enqueue_style('google-fonts', '//fonts.googleapis.com/css?family=Lato:300,700,300italic,700italic|Spinnaker', array(), CHILD_THEME_VERSION);\r\n\r\nEsta l\u00ednea registra los estilos para las fuentes Lato y Spinnaker usados en el tema, pero debe usarse dentro del _hook_ `wp_enqueue_scripts`, por lo que debemos crear una funci\u00f3n que lo haga.\r\n\r\n    add_action('wp_enqueue_scripts', 'toledano_fuentes');\r\n    function toledano_fuentes() {\r\n        wp_enqueue_style('google-fonts', '//fonts.googleapis.com/css?family=Lato:300,700,300italic,700italic|Spinnaker', array(), CHILD_THEME_VERSION);\r\n    }\r\n\r\nEl procedimiento de reemplazo de la tipograf\u00eda requiere de un paso adicional en la hoja de estilos, pero eso lo haremos m\u00e1s adelante.\r\n\r\n## Usar ganchos en Genesis Framework\r\n\r\nAprovechando que estamos en el archivo `functions.php` vamos a agregar unas cuantas cosas mas usando ganchos ya sea de WordPress o alguno de los m\u00e1s de 50 que nos proporciona [Genesis Framework][genesis].\r\n\r\n### Agregar scripts a una p\u00e1gina\r\n\r\nVamos a agregar un _script_ a nuestra p\u00e1gina en la secci\u00f3n `head` y para ello vamos a utilizar el gancho (o _hook_) de WordPress `wp_head`:\r\n\r\n    add_action('wp_head', 'toledano_adsense', 30);\r\n    function toledano_adsense() {\r\n      echo '<script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>';\r\n    }\r\n\r\n### El gancho `genesis_before`\r\n\r\nEl gancho `genesis_before` se coloca inmediatamente despu\u00e9s de la marca `body` y antes de cualquier contenido, y este punto es el que buscamos para insertar el siguiente gui\u00f3n de _Google Tag Manager_ [^3]:\r\n\r\n    :::html\r\n    add_action('genesis_before', 'toledano_tag_manager');\r\n    function toledano_tag_manager() {?>\r\n        <!-- Google Tag Manager -->\r\n        <noscript>\r\n        <iframe\r\n          src=\"//www.googletagmanager.com/ns.html?id=xxx-xxxxxx\"\r\n          height=\"0\"\r\n          width=\"0\"\r\n          style=\"display:none;visibility:hidden\"></iframe>\r\n        </noscript>\r\n        <script>\r\n        (function(w,d,s,l,i){\r\n          w[l]=w[l]||[];w[l].push({\r\n            'gtm.start': new Date().getTime(),event:'gtm.js'\r\n          });\r\n          var f=d.getElementsByTagName(s)[0],\r\n              j=d.createElement(s),\r\n              dl=l!='dataLayer'?'&l='+l:'';\r\n          j.async=true;\r\n          j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\r\n        })\r\n        (window,document,'script','dataLayer','xxx-xxxxxx');\r\n        </script>\r\n    <!-- End Google Tag Manager -->\r\n    <?php }\r\n\r\n\r\n## Filtros en Genesis Framework\r\n\r\nUna de las caracter\u00edsticas m\u00e1s poderosas[^4] de [Genesis Framework][genesis] son los filtros, que modifican muchas funciones. En este tema vamos a usar un filtro para cambiar el pie de p\u00e1gina.\r\n\r\n    add_filter( 'genesis_footer_creds_text', 'toledano_creds_text' );\r\n    function toledano_creds_text() {\r\n      echo '<div class=\"creds\"><p>';\r\n      echo '<a href=\"/blog/\">Blog</a>';\r\n      echo ' &middot; <a href=\"/archivo/\" title=\"Mapa del Sitio\">Mapa del Sitio</a> ';\r\n      echo ' &middot; <a href=\"/politica/\" title=\"Pol\u00edtica de Privacidad\">Aviso de Privacidad</a>';\r\n      echo ' &middot; <a href=\"/contacto/\" title=\"Formulario de Contacto\">Contacto</a>';\r\n      echo '</p><p>';\r\n      echo 'Copyright &copy; ';\r\n      echo date('Y');\r\n      echo ' &middot; Tema <a href=\"/ir/agency\"><strong>Agency Pro</strong></a> ';\r\n      echo ' &middot; Funciona con <a href=\"/ir/genesis\" title=\"Genesis Framework\">Genesis Framework</a>';\r\n      echo '</p></div>';\r\n    }\r\n\r\nEstas son todas las modificaciones que hice al archivo `functions.php`. Dec\u00eda al principio que lo ideal era colocar estos cambios en un plugin, porque cuando se actualice el tema, lo que haya cambiado en el archivo se perder\u00e1, y en cambio, en una extensi\u00f3n, no pasar\u00eda eso. Otra ventaja adicional es que no importa que cambie de tema, los cambios se aplican desde el plugin y seguir\u00edan funcionando.\r\n\r\nEl d\u00eda de ma\u00f1ana veremos los cambios en los estilos, que tambi\u00e9n son muy interesantes.\r\n\r\n[agency]: https://goo.gl/J2ZZEX\r\n[genesis]: https://goo.gl/rHtSjL\r\n\r\n[^1]: En ingl\u00e9s hay una palabra para eso: _deregister_, ser\u00eda algo as\u00ed como _desregistrar_.  \r\n[^2]: En realidad, dado que la funci\u00f3n es `enqueue`, el verbo ser\u00eda _encolar_, pero, obvio, nunca voy a usar tal aberraci\u00f3n (aunque sea correcta).  \r\n[^3]: El sistema de __Google Tag Manager__ es buen\u00edsimo y creo que no se conoce ni se usa ampliamente. Tendr\u00e9 que escribir sobre \u00e9l para darlo a conocer.  \r\n[^4]: Pero que casi nunca uso porque _\u00a1no les entiendo!_", "extend": "", "pub_date": "2015-08-10T04:57:26Z", "summary_html": "", "body_html": "<p>Aunque lo m\u00e1s recomendable es hacerlo mediante un <em>plugin</em> para conservar los cambios a trav\u00e9s de temas y versiones, la forma original (y que sigue en uso) es usar el archivo <code>functions.php</code> y esa es la forma en la que voy a presentar las modificaciones a este tema.</p>\n<p>El tema que usa este sitio es <a href=\"https://goo.gl/J2ZZEX\"><strong>Agency Pro</strong></a> un tema que utiliza <a href=\"https://goo.gl/rHtSjL\"><strong>Genesis Framework</strong></a> para funcionar. Aprovecha todas las ventajas del nuevo marcado <code>HTML5</code> y tiene una presentaci\u00f3n realmente diferente a lo que nos ten\u00eda acostumbrado <em>StudioPress</em>.</p>\n<!--more-->\n\n<p>Las modificaciones que hice incluyen el cambio de tipograf\u00eda, el uso de la versi\u00f3n m\u00e1s reciente de <em>jQuery</em>, modificaciones a los estilos de diversos elementos como <code>pre</code> y <code>code</code> y por supuesto, <em>transparencias</em>, muchas transparencias.</p>\n<h2 id=\"registro-de-scripts\">Registro de Scripts</h2>\n<p>Para reemplazar la versi\u00f3n de <em>jQuery</em> que usa WordPress, primero debemos eliminar del registro<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> de guiones la versi\u00f3n <em>oficial</em> y registrar la que nosotros queremos, dentro del archivo <code>functions.php</code></p>\n<p>De modo que agregamos una acci\u00f3n a la fila de carga de guiones y ah\u00ed eliminamos del registro la versi\u00f3n actual, registramos la nueva y la colocamos en la fila<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">/* *** jQuery 2.1.1 *** */</span>\n<span class=\"x\">add_action( &#39;wp_enqueue_scripts&#39;, &#39;jQuery211&#39;, 99);</span>\n<span class=\"x\">function jQuery211() {</span>\n<span class=\"x\">  wp_deregister_script( &#39;jquery&#39; );</span>\n<span class=\"x\">  wp_register_script( &#39;jquery&#39;, &#39;//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&#39; );;</span>\n<span class=\"x\">  wp_enqueue_script( &#39;jquery&#39;, &#39;//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&#39;, array( &#39;jquery&#39; ), &#39;2.1.1&#39;, false );</span>\n<span class=\"x\">}</span>\n</pre></div>\n\n\n<p>Esta funci\u00f3n crea unn grupo de <em>scripts</em> llamado <code>jQuery211</code> que contiene un solo <em>script</em>: <code>jquery.min.js</code> en su versi\u00f3n <code>2.1.1</code>.</p>\n<p>Usando el mismo gancho <code>wp_enqueue_scripts</code>, agregamos otros <em>scripts</em> que son necesarios para la m\u00fasica. En esta ocasiones, nos aseguramos que solo est\u00e9n disponibles en las entradas individuales.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">add_action(&#39;wp_enqueue_scripts&#39;, &#39;estilos_toledanos&#39;);</span>\n<span class=\"x\">function estilos_toledanos() {</span>\n<span class=\"x\">    if ( is_singular( &#39;post&#39; ) ) {</span>\n<span class=\"x\">          wp_enqueue_style(&#39;music&#39;, &#39;/assets/css/xemusicplayer.css&#39;);</span>\n<span class=\"x\">        wp_register_script(&#39;music&#39;, &#39;/assets/js/jquery-xemusicplayer-1.0.0.min.js&#39; );</span>\n<span class=\"x\">         wp_enqueue_script(&#39;music&#39;, &#39;/assets/js/jquery-xemusicplayer-1.0.0.min.js&#39;, true );</span>\n<span class=\"x\">        wp_register_script(&#39;video&#39;, &#39;//cdnjs.cloudflare.com/ajax/libs/fitvids/1.0.1/jquery.fitvids.min.js&#39;);</span>\n<span class=\"x\">         wp_enqueue_script(&#39;video&#39;, &#39;//cdnjs.cloudflare.com/ajax/libs/fitvids/1.0.1/jquery.fitvids.min.js&#39;, true);</span>\n<span class=\"x\">    }</span>\n<span class=\"x\">}</span>\n</pre></div>\n\n\n<h2 id=\"registro-de-estilos\">Registro de Estilos</h2>\n<p>El siguiente paso tambi\u00e9n ocurre en el archivo <code>functions.php</code> y consiste en  reemplazar la tipograf\u00eda usada en el tema original que es <a href=\"https://www.google.com/fonts/specimen/EB+Garamond\">EB Garamond</a> por <a href=\"https://www.google.com/fonts/specimen/Lato\"><strong>Lato</strong></a>.</p>\n<p>Para esto hay una funci\u00f3n muy parecida a la anterior para anotar en la lista de estilos uno m\u00e1s: <code>wp_enqueue_style</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">wp_enqueue_style(&#39;google-fonts&#39;, &#39;//fonts.googleapis.com/css?family=Lato:300,700,300italic,700italic|Spinnaker&#39;, array(), CHILD_THEME_VERSION);</span>\n</pre></div>\n\n\n<p>Esta l\u00ednea registra los estilos para las fuentes Lato y Spinnaker usados en el tema, pero debe usarse dentro del <em>hook</em> <code>wp_enqueue_scripts</code>, por lo que debemos crear una funci\u00f3n que lo haga.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">add_action</span><span class=\"p\">(</span><span class=\"s1\">&#39;wp_enqueue_scripts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;toledano_fuentes&#39;</span><span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">toledano_fuentes() {</span>\n    <span class=\"nx\">wp_enqueue_style</span><span class=\"p\">(</span><span class=\"s1\">&#39;google-fonts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;//fonts.googleapis.com/css?family=Lato:300,700,300italic,700italic|Spinnaker&#39;</span><span class=\"p\">,</span> <span class=\"nx\">array</span><span class=\"p\">(),</span> <span class=\"nx\">CHILD_THEME_VERSION</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>El procedimiento de reemplazo de la tipograf\u00eda requiere de un paso adicional en la hoja de estilos, pero eso lo haremos m\u00e1s adelante.</p>\n<h2 id=\"usar-ganchos-en-genesis-framework\">Usar ganchos en Genesis Framework</h2>\n<p>Aprovechando que estamos en el archivo <code>functions.php</code> vamos a agregar unas cuantas cosas mas usando ganchos ya sea de WordPress o alguno de los m\u00e1s de 50 que nos proporciona <a href=\"https://goo.gl/rHtSjL\">Genesis Framework</a>.</p>\n<h3 id=\"agregar-scripts-a-una-pagina\">Agregar scripts a una p\u00e1gina</h3>\n<p>Vamos a agregar un <em>script</em> a nuestra p\u00e1gina en la secci\u00f3n <code>head</code> y para ello vamos a utilizar el gancho (o <em>hook</em>) de WordPress <code>wp_head</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">add_action</span><span class=\"p\">(</span><span class=\"s1\">&#39;wp_head&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;toledano_adsense&#39;</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">toledano_adsense() {</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;&#39;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<h3 id=\"el-gancho-genesis_before\">El gancho <code>genesis_before</code></h3>\n<p>El gancho <code>genesis_before</code> se coloca inmediatamente despu\u00e9s de la marca <code>body</code> y antes de cualquier contenido, y este punto es el que buscamos para insertar el siguiente gui\u00f3n de <em>Google Tag Manager</em> <sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup>:</p>\n<div class=\"codehilite\"><pre><span></span>add_action(&#39;genesis_before&#39;, &#39;toledano_tag_manager&#39;);\nfunction toledano_tag_manager() {?&gt;\n    <span class=\"c\">&lt;!-- Google Tag Manager --&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">noscript</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">iframe</span>\n      <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;//www.googletagmanager.com/ns.html?id=xxx-xxxxxx&quot;</span>\n      <span class=\"na\">height</span><span class=\"o\">=</span><span class=\"s\">&quot;0&quot;</span>\n      <span class=\"na\">width</span><span class=\"o\">=</span><span class=\"s\">&quot;0&quot;</span>\n      <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">&quot;display:none;visibility:hidden&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">iframe</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">noscript</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">w</span><span class=\"p\">,</span><span class=\"nx\">d</span><span class=\"p\">,</span><span class=\"nx\">s</span><span class=\"p\">,</span><span class=\"nx\">l</span><span class=\"p\">,</span><span class=\"nx\">i</span><span class=\"p\">){</span>\n      <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"p\">]</span><span class=\"o\">||</span><span class=\"p\">[];</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"p\">].</span><span class=\"nx\">push</span><span class=\"p\">({</span>\n        <span class=\"s1\">&#39;gtm.start&#39;</span><span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getTime</span><span class=\"p\">(),</span><span class=\"nx\">event</span><span class=\"o\">:</span><span class=\"s1\">&#39;gtm.js&#39;</span>\n      <span class=\"p\">});</span>\n      <span class=\"kd\">var</span> <span class=\"nx\">f</span><span class=\"o\">=</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">getElementsByTagName</span><span class=\"p\">(</span><span class=\"nx\">s</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n          <span class=\"nx\">j</span><span class=\"o\">=</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">createElement</span><span class=\"p\">(</span><span class=\"nx\">s</span><span class=\"p\">),</span>\n          <span class=\"nx\">dl</span><span class=\"o\">=</span><span class=\"nx\">l</span><span class=\"o\">!=</span><span class=\"s1\">&#39;dataLayer&#39;</span><span class=\"o\">?</span><span class=\"s1\">&#39;&amp;l=&#39;</span><span class=\"o\">+</span><span class=\"nx\">l</span><span class=\"o\">:</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">;</span>\n      <span class=\"nx\">j</span><span class=\"p\">.</span><span class=\"nx\">async</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">;</span>\n      <span class=\"nx\">j</span><span class=\"p\">.</span><span class=\"nx\">src</span><span class=\"o\">=</span><span class=\"s1\">&#39;//www.googletagmanager.com/gtm.js?id=&#39;</span><span class=\"o\">+</span><span class=\"nx\">i</span><span class=\"o\">+</span><span class=\"nx\">dl</span><span class=\"p\">;</span><span class=\"nx\">f</span><span class=\"p\">.</span><span class=\"nx\">parentNode</span><span class=\"p\">.</span><span class=\"nx\">insertBefore</span><span class=\"p\">(</span><span class=\"nx\">j</span><span class=\"p\">,</span><span class=\"nx\">f</span><span class=\"p\">);</span>\n    <span class=\"p\">})</span>\n    <span class=\"p\">(</span><span class=\"nb\">window</span><span class=\"p\">,</span><span class=\"nb\">document</span><span class=\"p\">,</span><span class=\"s1\">&#39;script&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;dataLayer&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;xxx-xxxxxx&#39;</span><span class=\"p\">);</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n<span class=\"c\">&lt;!-- End Google Tag Manager --&gt;</span>\n<span class=\"err\">&lt;</span>?php }\n</pre></div>\n\n\n<h2 id=\"filtros-en-genesis-framework\">Filtros en Genesis Framework</h2>\n<p>Una de las caracter\u00edsticas m\u00e1s poderosas<sup id=\"fnref-4\"><a class=\"footnote-ref\" href=\"#fn-4\">4</a></sup> de <a href=\"https://goo.gl/rHtSjL\">Genesis Framework</a> son los filtros, que modifican muchas funciones. En este tema vamos a usar un filtro para cambiar el pie de p\u00e1gina.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">add_filter</span><span class=\"p\">(</span> <span class=\"s1\">&#39;genesis_footer_creds_text&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;toledano_creds_text&#39;</span> <span class=\"p\">);</span>\n<span class=\"kd\">function</span> <span class=\"nx\">toledano_creds_text() {</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39;&lt;div class=&quot;creds&quot;&gt;&lt;p&gt;&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39;&lt;a href=&quot;/blog/&quot;&gt;Blog&lt;/a&gt;&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39; &amp;middot; &lt;a href=&quot;/archivo/&quot; title=&quot;Mapa del Sitio&quot;&gt;Mapa del Sitio&lt;/a&gt; &#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39; &amp;middot; &lt;a href=&quot;/politica/&quot; title=&quot;Pol\u00edtica de Privacidad&quot;&gt;Aviso de Privacidad&lt;/a&gt;&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39; &amp;middot; &lt;a href=&quot;/contacto/&quot; title=&quot;Formulario de Contacto&quot;&gt;Contacto&lt;/a&gt;&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39;&lt;/p&gt;&lt;p&gt;&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39;Copyright &amp;copy; &#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">echo</span> <span class=\"nx\">date</span><span class=\"p\">(</span><span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39; &amp;middot; Tema &lt;a href=&quot;/ir/agency&quot;&gt;&lt;strong&gt;Agency Pro&lt;/strong&gt;&lt;/a&gt; &#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39; &amp;middot; Funciona con &lt;a href=&quot;/ir/genesis&quot; title=&quot;Genesis Framework&quot;&gt;Genesis Framework&lt;/a&gt;&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">echo</span> <span class=\"s1\">&#39;&lt;/p&gt;&lt;/div&gt;&#39;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Estas son todas las modificaciones que hice al archivo <code>functions.php</code>. Dec\u00eda al principio que lo ideal era colocar estos cambios en un plugin, porque cuando se actualice el tema, lo que haya cambiado en el archivo se perder\u00e1, y en cambio, en una extensi\u00f3n, no pasar\u00eda eso. Otra ventaja adicional es que no importa que cambie de tema, los cambios se aplican desde el plugin y seguir\u00edan funcionando.</p>\n<p>El d\u00eda de ma\u00f1ana veremos los cambios en los estilos, que tambi\u00e9n son muy interesantes.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>En ingl\u00e9s hay una palabra para eso: <em>deregister</em>, ser\u00eda algo as\u00ed como <em>desregistrar</em>.  &#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>En realidad, dado que la funci\u00f3n es <code>enqueue</code>, el verbo ser\u00eda <em>encolar</em>, pero, obvio, nunca voy a usar tal aberraci\u00f3n (aunque sea correcta).  &#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>El sistema de <strong>Google Tag Manager</strong> es buen\u00edsimo y creo que no se conoce ni se usa ampliamente. Tendr\u00e9 que escribir sobre \u00e9l para darlo a conocer.  &#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-4\">\n<p>Pero que casi nunca uso porque <em>\u00a1no les entiendo!</em>&#160;<a class=\"footnote-backref\" href=\"#fnref-4\" title=\"Jump back to footnote 4 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "personalizar-genesis", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 97, "fields": {"idx": "b632e6a7-8d4e-4852-ac58-4e75db1d3212", "creado": "2017-07-29T05:06:27.044Z", "modificado": "2017-07-29T05:06:27.044Z", "title": "PostgreSQL y Python en Mac OSX usando PsycoPG2", "summary": "C\u00f3mo utilizar PostgreSQL y Python en Mac OSX usando PsycoPG2", "body": "Title: PostgreSQL y Python en Mac OSX usando PsycoPG2  \r\nDate: 2015-02-23 10:57:09  \r\nCategory: Desarrollo  \r\nTags:  osx, postgresql, python  \r\nAuthor: Javier Sanchez Toledano\r\nSummary:  C\u00f3mo utilizar PostgreSQL y Python en Mac OSX usando PsycoPG2  \r\n\r\nSe me ocurri\u00f3 utilizar un conjunto de paquetes comunes en los entornos virtuales que utilizo en mis proyectos de trabajo y personales, como `iPython` y `PsycoPG2`, para no tener que instalarlos una y otra vez en cada entorno y tal vez ahorrar algo de espacio y tiempo.\r\n\r\nNo tuve ning\u00fan problema con la mayor\u00eda de los paquetes, pero compilar `psycopg` el driver para PostgreSQL result\u00f3 ser un problema al principio y afortunadamente muy f\u00e1cil de resolver.\r\n\r\nLa soluci\u00f3n consiste en usar la mejor versi\u00f3n que existe de este administrador de base de datos: [**Postgres.app**](http://postgresapp.com) que es un paquete que contiene todo lo necesario para trabajar, instalarlo es tan simple como arrastrar el paquete y para configurarlo, solo hace falta hacer clic en el icono del elefantito.\r\n\r\nAhora solo tenemos que ejecutar `pip` e indicar la ruta de los ejecutables de Postgres.app y esperar a que se instale el paquete.\r\n\r\n    sudo PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.4/bin pip install psycopg2", "extend": "", "pub_date": "2015-02-23T16:57:09Z", "summary_html": "<p>C\u00f3mo utilizar PostgreSQL y Python en Mac OSX usando PsycoPG2</p>", "body_html": "<p>Se me ocurri\u00f3 utilizar un conjunto de paquetes comunes en los entornos virtuales que utilizo en mis proyectos de trabajo y personales, como <code>iPython</code> y <code>PsycoPG2</code>, para no tener que instalarlos una y otra vez en cada entorno y tal vez ahorrar algo de espacio y tiempo.</p>\n<p>No tuve ning\u00fan problema con la mayor\u00eda de los paquetes, pero compilar <code>psycopg</code> el driver para PostgreSQL result\u00f3 ser un problema al principio y afortunadamente muy f\u00e1cil de resolver.</p>\n<p>La soluci\u00f3n consiste en usar la mejor versi\u00f3n que existe de este administrador de base de datos: <a href=\"http://postgresapp.com\"><strong>Postgres.app</strong></a> que es un paquete que contiene todo lo necesario para trabajar, instalarlo es tan simple como arrastrar el paquete y para configurarlo, solo hace falta hacer clic en el icono del elefantito.</p>\n<p>Ahora solo tenemos que ejecutar <code>pip</code> e indicar la ruta de los ejecutables de Postgres.app y esperar a que se instale el paquete.</p>\n<div class=\"codehilite\"><pre><span></span>sudo PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.4/bin pip install psycopg2\n</pre></div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "postgresql-y-python-en-mac-osx-usando-psycopg2", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 98, "fields": {"idx": "5b199aaa-894b-43c5-80ea-272d72dd9f48", "creado": "2017-07-29T05:07:56.830Z", "modificado": "2017-07-29T05:07:56.830Z", "title": "C\u00f3mo usar Sass en WordPress", "summary": "C\u00f3mo usar SASS para facilitar la personalizaci\u00f3n de temas de WordPress usando JetPack", "body": "Title: C\u00f3mo usar Sass en WordPress\r\nDate: 2014-08-24 11:33:22\r\nCategory: Desarrollo\r\nTags:  wordpress, sass, css\r\nAuthor: Javier Sanchez Toledano\r\nSummary: C\u00f3mo usar SASS para facilitar la personalizaci\u00f3n de temas de WordPress usando JetPack\r\n\r\n**Sass** es un pre-procesador de lenguaje CSS que permite escribir c\u00f3digo de forma sencilla ya que permite el uso de variables, reglas encadenadas, mezclas, importaciones en l\u00ednea y mucho m\u00e1s, con una sintaxis completamente compatible con CSS.", "extend": "Entre las caracter\u00edsticas de _Sass_ podemos mencionar las siguientes:\r\n\r\n+ Es compatible con CSS3\r\n+ Permite extender el lenguaje con variables, uniones y mezclas\r\n+ Tiene muchas funciones \u00fatiles para manipular colores y otros valores\r\n+ Tiene caracter\u00edsticas avanzadas, como el control de directivas para librer\u00edas\r\n+ Produce una salida bien formada\r\n+ Se puede integrar con _Firebug_\r\n\r\nSass[^1] permite mantener las hojas de estilo bien organizadas y podemos usarlo con WordPress gracias al superplugin **JetPack**.\r\n\r\nEsto quiere decir que para usar _Sass_ en WordPress debemos instalar el superplugin JetPack y activar el m\u00f3dulo de __CSS Personalizado__\r\n\r\n\r\nY configurarlo para usar la __Sass (SCSS Syntax)__,  que es la versi\u00f3n o el _sabor_ de **Sass** que vamos a utilizar.\r\n\r\n\r\nEn el editor de estilos podemos usar entonces _Sass_ para personalizar nuestro tema. Veamos algunos ejemplos:\r\n\r\n### Transparencia\r\n\r\nPara las transparencias que aparecen en este blog, uso un _mixin_ o sea una mezcla de c\u00f3digo CSS3, variables y funciones en un macro o funci\u00f3n que permite que este bloque de c\u00f3digo sea utilizado en diferentes partes de nuestra hoja de estilos asegurando resultados consistentes.\r\n\r\n```\r\n@mixin transparencia($color, $grado) {\r\n  background-color:rgba($color, $grado/100);\r\n}\r\n```\r\n\r\nEl _mixin_ o mezcla se llama `transparencia` y establece el color de fondo con una transparencia que puede ir del `0` al `1`, y para usarlo solo tenemos que incluir el mixin con los valores que queremos, de la siguiente manera:\r\n\r\n```\r\n.widget {\r\n  @include transparencia(black, 85);\r\n}\r\n```\r\n\r\nAl ser procesado por _Sass_ produce el siguiente resultado:\r\n\r\n```\r\n.widget {\r\n  background-color: rgba(0, 0, 0, 0.85);\r\n}\r\n```\r\n\r\n### Anidamiento de c\u00f3digo\r\n\r\nPermite asegurar la aplicaci\u00f3n de reglas de estilo a los elementos desados anidando las reglas de forma muy sencilla. Observa el siguiente c\u00f3digo _Sass_:\r\n\r\n```\r\n.sidebar {\r\n  a {\r\n    &:hover {\r\n      color: #d7c603;\r\n    }\r\n  }\r\n  .widget {\r\n    @include transparencia(black, 85);\r\n  }\r\n  .widget-title {\r\n    color: #BBB;\r\n  }\r\n}\r\n```\r\n\r\nComo puedes observar, al anidar las reglas ganamos legibilidad ya que cada l\u00ednea cobra sentido por si misa, porque ocupa un lugar preciso en los estilos. Y mira la salida que produce:\r\n\r\n```\r\n.sidebar a:hover {\r\n  color: #d7c603;\r\n}\r\n.sidebar .widget {\r\n  background-color: rgba(0, 0, 0, 0.85);\r\n}\r\n.sidebar .widget-title {\r\n  color: #BBB;\r\n}\r\n```\r\n\r\nComo puedes ver _Sass_ es realmente muy f\u00e1cil de usar. \r\n\r\nPara terminar, te dejo el c\u00f3digo completo de los estilos personalizados usados en este sitio. Si tienes alguna sugerencia, por favor, h\u00e1zmela saber.\r\n\r\n```\r\n@mixin transparencia($color, $grado) {\r\n  background-color:rgba($color, $grado/100);\r\n}\r\n \r\n@mixin box-shadow($top, $left, $blur, $size, $color, $inset: false) {\r\n  @if $inset {\r\n    -webkit-box-shadow:inset $top $left $blur $size $color;\r\n    -moz-box-shadow:inset $top $left $blur $size $color;\r\n    box-shadow:inset $top $left $blur $size $color;\r\n  } @else {\r\n    -webkit-box-shadow: $top $left $blur $size $color;\r\n    -moz-box-shadow: $top $left $blur $size $color;\r\n    box-shadow: $top $left $blur $size $color;\r\n  }\r\n}\r\n \r\n@mixin rounded($radius: 0.5em) {\r\n  -webkit-border-radius: $radius;\r\n  -moz-border-radius: $radius;\r\n  border-radius: $radius;\r\n}\r\n \r\n@mixin gradient($from, $to) {\r\n  background: -webkit-gradient(linear, left top, left bottom, from($from), to($to));\r\n  background: -moz-linear-gradient(top,  $from, $to);\r\n  filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');\r\n}\r\n \r\n@mixin prende(){\r\n  opacity: 0.2;\r\n  filter: alpha(opacity=100);\r\n  &:hover{\r\n    opacity: 1;\r\n    filter: alpha(opacity=100);\r\n  }\r\n}\r\n\r\nbody {\r\n  font-family: 'Lato', sans-serif;\r\n  font-size: 16px;\r\n}\r\n\r\n.single, .page, .archive {\r\n  color: #DDD;\r\n}\r\n\r\n\r\n.agency-pro-blue {  \r\n  .entry-title {\r\n    color: #CCC;\r\n    a {\r\n      color: #DDD;\r\n      &:hover {\r\n        color: #d7c603;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.featured-content {\r\n  article {\r\n    @include transparencia(white, 60);\r\n  }\r\n  .entry-title {\r\n    color: black;\r\n    a {\r\n      color: #333;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n.entry-content {\r\n  a {\r\n    &:hover {\r\n      color: #d7c603;\r\n    }\r\n  }\r\n  blockquote {\r\n    @include transparencia(white, 60);\r\n    @include rounded();\r\n    font-family: Georgia, serif;\r\n    font-size: 18px;\r\n    font-style: italic;\r\n    margin: 0.25em 0;\r\n    padding: 0.25em 10px 0 30px;\r\n    line-height: 1.45;\r\n    position: relative;\r\n    color: #383838;\r\n    margin-left: 60px;\r\n    border-left: 3px solid black;\r\n    &:before {\r\n      display: block;\r\n      content: \"\\201C\";\r\n      font-size: 80px;\r\n      position: absolute;\r\n      left: -43px;\r\n      top: -20px;\r\n      color: #ccc;\r\n    }\r\n  }\r\n  sup, sub {\r\n    font-size: 60%;\r\n  }\r\n  code {\r\n    @include transparencia(black, 75);\r\n    @include rounded(3px);\r\n    color: #DDD;\r\n    padding: 2px;\r\n    font-size: 0.85em;\r\n  }\r\n  pre {\r\n    white-space: pre;\r\n    font-family: Consolas,Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;\r\n    margin-bottom: 10px;\r\n    max-height: 600px;\r\n    overflow: auto;\r\n    padding: 5px;\r\n    width: auto;\r\n    @include transparencia(black, 60);\r\n    @include rounded();\r\n    padding: 10px 20px;\r\n    code {\r\n      @include transparencia(black, 0);\r\n      color: #DDD;\r\n      font-size: 0.85em;\r\n    }\r\n  }\r\n}\r\n\r\n.post, .page, .footer-widgets, #respond {\r\n  @include transparencia(black, 70);\r\n}\r\n\r\n.footnotes {\r\n  font-size: 0.8em;\r\n}\r\n\r\n.footer-widgets {\r\n  .widget-title {\r\n    color:#CCC;\r\n  }\r\n  a {\r\n    &:hover {\r\n      color: #d7c603;\r\n    }\r\n  }\r\n}\r\n\r\n.sidebar {\r\n  a {\r\n    &:hover {\r\n      color: #d7c603;\r\n    }\r\n  }\r\n  .widget {\r\n    @include transparencia(black, 85);\r\n  }\r\n  .widget-title {\r\n    color: #BBB;\r\n  }\r\n}\r\n```\r\n\r\n[^1]: Sass significa _Syntactically Awesome Style Sheets_ y puedes visitar su sitio en http://sass-lang.com", "pub_date": "2014-08-24T16:33:22Z", "summary_html": "<p>C\u00f3mo usar SASS para facilitar la personalizaci\u00f3n de temas de WordPress usando JetPack</p>", "body_html": "<p><strong>Sass</strong> es un pre-procesador de lenguaje CSS que permite escribir c\u00f3digo de forma sencilla ya que permite el uso de variables, reglas encadenadas, mezclas, importaciones en l\u00ednea y mucho m\u00e1s, con una sintaxis completamente compatible con CSS.</p>", "extend_html": "<p>Entre las caracter\u00edsticas de <em>Sass</em> podemos mencionar las siguientes:</p>\n<ul>\n<li>Es compatible con CSS3</li>\n<li>Permite extender el lenguaje con variables, uniones y mezclas</li>\n<li>Tiene muchas funciones \u00fatiles para manipular colores y otros valores</li>\n<li>Tiene caracter\u00edsticas avanzadas, como el control de directivas para librer\u00edas</li>\n<li>Produce una salida bien formada</li>\n<li>Se puede integrar con <em>Firebug</em></li>\n</ul>\n<p>Sass<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> permite mantener las hojas de estilo bien organizadas y podemos usarlo con WordPress gracias al superplugin <strong>JetPack</strong>.</p>\n<p>Esto quiere decir que para usar <em>Sass</em> en WordPress debemos instalar el superplugin JetPack y activar el m\u00f3dulo de <strong>CSS Personalizado</strong></p>\n<p>Y configurarlo para usar la <strong>Sass (SCSS Syntax)</strong>,  que es la versi\u00f3n o el <em>sabor</em> de <strong>Sass</strong> que vamos a utilizar.</p>\n<p>En el editor de estilos podemos usar entonces <em>Sass</em> para personalizar nuestro tema. Veamos algunos ejemplos:</p>\n<h3 id=\"transparencia\">Transparencia</h3>\n<p>Para las transparencias que aparecen en este blog, uso un <em>mixin</em> o sea una mezcla de c\u00f3digo CSS3, variables y funciones en un macro o funci\u00f3n que permite que este bloque de c\u00f3digo sea utilizado en diferentes partes de nuestra hoja de estilos asegurando resultados consistentes.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">@</span><span class=\"k\">mixin</span> <span class=\"nt\">transparencia</span><span class=\"o\">($</span><span class=\"nt\">color</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">grado</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n  <span class=\"nt\">background-color</span><span class=\"p\">:</span><span class=\"nd\">rgba</span><span class=\"o\">($</span><span class=\"nt\">color</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">grado</span><span class=\"o\">/</span><span class=\"nt\">100</span><span class=\"o\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>El <em>mixin</em> o mezcla se llama <code>transparencia</code> y establece el color de fondo con una transparencia que puede ir del <code>0</code> al <code>1</code>, y para usarlo solo tenemos que incluir el mixin con los valores que queremos, de la siguiente manera:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"na\">.widget</span> <span class=\"err\">{</span>\n  <span class=\"err\">@</span><span class=\"nf\">include</span> <span class=\"no\">transparencia</span><span class=\"p\">(</span><span class=\"no\">black</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">)</span><span class=\"c\">;</span>\n<span class=\"err\">}</span>\n</pre></div>\n\n\n<p>Al ser procesado por <em>Sass</em> produce el siguiente resultado:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"na\">.widget</span> <span class=\"err\">{</span>\n  <span class=\"nl\">background-color:</span> <span class=\"nf\">rgba</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"no\">.85</span><span class=\"p\">)</span><span class=\"c\">;</span>\n<span class=\"err\">}</span>\n</pre></div>\n\n\n<h3 id=\"anidamiento-de-codigo\">Anidamiento de c\u00f3digo</h3>\n<p>Permite asegurar la aplicaci\u00f3n de reglas de estilo a los elementos desados anidando las reglas de forma muy sencilla. Observa el siguiente c\u00f3digo <em>Sass</em>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"na\">.sidebar</span> <span class=\"err\">{</span>\n  <span class=\"nf\">a</span> <span class=\"err\">{</span>\n    <span class=\"err\">&amp;:</span><span class=\"nf\">hover</span> <span class=\"err\">{</span>\n      <span class=\"nl\">color:</span> <span class=\"c\">#d7c603;</span>\n    <span class=\"err\">}</span>\n  <span class=\"err\">}</span>\n  <span class=\"na\">.widget</span> <span class=\"err\">{</span>\n    <span class=\"err\">@</span><span class=\"nf\">include</span> <span class=\"no\">transparencia</span><span class=\"p\">(</span><span class=\"no\">black</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">)</span><span class=\"c\">;</span>\n  <span class=\"err\">}</span>\n  <span class=\"na\">.widget-title</span> <span class=\"err\">{</span>\n    <span class=\"nl\">color:</span> <span class=\"c\">#BBB;</span>\n  <span class=\"err\">}</span>\n<span class=\"err\">}</span>\n</pre></div>\n\n\n<p>Como puedes observar, al anidar las reglas ganamos legibilidad ya que cada l\u00ednea cobra sentido por si misa, porque ocupa un lugar preciso en los estilos. Y mira la salida que produce:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"na\">.sidebar</span> <span class=\"no\">a</span><span class=\"p\">:</span><span class=\"no\">hover</span> <span class=\"err\">{</span>\n  <span class=\"nl\">color:</span> <span class=\"c\">#d7c603;</span>\n<span class=\"err\">}</span>\n<span class=\"na\">.sidebar</span> <span class=\"no\">.widget</span> <span class=\"err\">{</span>\n  <span class=\"nl\">background-color:</span> <span class=\"nf\">rgba</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"no\">.85</span><span class=\"p\">)</span><span class=\"c\">;</span>\n<span class=\"err\">}</span>\n<span class=\"na\">.sidebar</span> <span class=\"no\">.widget-title</span> <span class=\"err\">{</span>\n  <span class=\"nl\">color:</span> <span class=\"c\">#BBB;</span>\n<span class=\"err\">}</span>\n</pre></div>\n\n\n<p>Como puedes ver <em>Sass</em> es realmente muy f\u00e1cil de usar. </p>\n<p>Para terminar, te dejo el c\u00f3digo completo de los estilos personalizados usados en este sitio. Si tienes alguna sugerencia, por favor, h\u00e1zmela saber.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">@</span><span class=\"k\">mixin</span> <span class=\"nt\">transparencia</span><span class=\"o\">($</span><span class=\"nt\">color</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">grado</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n  <span class=\"nt\">background-color</span><span class=\"p\">:</span><span class=\"nd\">rgba</span><span class=\"o\">($</span><span class=\"nt\">color</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">grado</span><span class=\"o\">/</span><span class=\"nt\">100</span><span class=\"o\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">@</span><span class=\"k\">mixin</span> <span class=\"nt\">box-shadow</span><span class=\"o\">($</span><span class=\"nt\">top</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">left</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">blur</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">size</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">color</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">inset</span><span class=\"o\">:</span> <span class=\"nt\">false</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n  <span class=\"p\">@</span><span class=\"k\">if</span> <span class=\"o\">$</span><span class=\"nt\">inset</span> <span class=\"p\">{</span>\n    <span class=\"nt\">-webkit-box-shadow</span><span class=\"p\">:</span><span class=\"nd\">inset</span> <span class=\"o\">$</span><span class=\"nt\">top</span> <span class=\"o\">$</span><span class=\"nt\">left</span> <span class=\"o\">$</span><span class=\"nt\">blur</span> <span class=\"o\">$</span><span class=\"nt\">size</span> <span class=\"o\">$</span><span class=\"nt\">color</span><span class=\"o\">;</span>\n    <span class=\"nt\">-moz-box-shadow</span><span class=\"p\">:</span><span class=\"nd\">inset</span> <span class=\"o\">$</span><span class=\"nt\">top</span> <span class=\"o\">$</span><span class=\"nt\">left</span> <span class=\"o\">$</span><span class=\"nt\">blur</span> <span class=\"o\">$</span><span class=\"nt\">size</span> <span class=\"o\">$</span><span class=\"nt\">color</span><span class=\"o\">;</span>\n    <span class=\"nt\">box-shadow</span><span class=\"p\">:</span><span class=\"nd\">inset</span> <span class=\"o\">$</span><span class=\"nt\">top</span> <span class=\"o\">$</span><span class=\"nt\">left</span> <span class=\"o\">$</span><span class=\"nt\">blur</span> <span class=\"o\">$</span><span class=\"nt\">size</span> <span class=\"o\">$</span><span class=\"nt\">color</span><span class=\"o\">;</span>\n  <span class=\"p\">}</span> <span class=\"p\">@</span><span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"nt\">-webkit-box-shadow</span><span class=\"o\">:</span> <span class=\"o\">$</span><span class=\"nt\">top</span> <span class=\"o\">$</span><span class=\"nt\">left</span> <span class=\"o\">$</span><span class=\"nt\">blur</span> <span class=\"o\">$</span><span class=\"nt\">size</span> <span class=\"o\">$</span><span class=\"nt\">color</span><span class=\"o\">;</span>\n    <span class=\"nt\">-moz-box-shadow</span><span class=\"o\">:</span> <span class=\"o\">$</span><span class=\"nt\">top</span> <span class=\"o\">$</span><span class=\"nt\">left</span> <span class=\"o\">$</span><span class=\"nt\">blur</span> <span class=\"o\">$</span><span class=\"nt\">size</span> <span class=\"o\">$</span><span class=\"nt\">color</span><span class=\"o\">;</span>\n    <span class=\"nt\">box-shadow</span><span class=\"o\">:</span> <span class=\"o\">$</span><span class=\"nt\">top</span> <span class=\"o\">$</span><span class=\"nt\">left</span> <span class=\"o\">$</span><span class=\"nt\">blur</span> <span class=\"o\">$</span><span class=\"nt\">size</span> <span class=\"o\">$</span><span class=\"nt\">color</span><span class=\"o\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">@</span><span class=\"k\">mixin</span> <span class=\"nt\">rounded</span><span class=\"o\">($</span><span class=\"nt\">radius</span><span class=\"o\">:</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">5em</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n  <span class=\"nt\">-webkit-border-radius</span><span class=\"o\">:</span> <span class=\"o\">$</span><span class=\"nt\">radius</span><span class=\"o\">;</span>\n  <span class=\"nt\">-moz-border-radius</span><span class=\"o\">:</span> <span class=\"o\">$</span><span class=\"nt\">radius</span><span class=\"o\">;</span>\n  <span class=\"nt\">border-radius</span><span class=\"o\">:</span> <span class=\"o\">$</span><span class=\"nt\">radius</span><span class=\"o\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">@</span><span class=\"k\">mixin</span> <span class=\"nt\">gradient</span><span class=\"o\">($</span><span class=\"nt\">from</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">to</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n  <span class=\"nt\">background</span><span class=\"o\">:</span> <span class=\"nt\">-webkit-gradient</span><span class=\"o\">(</span><span class=\"nt\">linear</span><span class=\"o\">,</span> <span class=\"nt\">left</span> <span class=\"nt\">top</span><span class=\"o\">,</span> <span class=\"nt\">left</span> <span class=\"nt\">bottom</span><span class=\"o\">,</span> <span class=\"nt\">from</span><span class=\"o\">($</span><span class=\"nt\">from</span><span class=\"o\">),</span> <span class=\"nt\">to</span><span class=\"o\">($</span><span class=\"nt\">to</span><span class=\"o\">));</span>\n  <span class=\"nt\">background</span><span class=\"o\">:</span> <span class=\"nt\">-moz-linear-gradient</span><span class=\"o\">(</span><span class=\"nt\">top</span><span class=\"o\">,</span>  <span class=\"o\">$</span><span class=\"nt\">from</span><span class=\"o\">,</span> <span class=\"o\">$</span><span class=\"nt\">to</span><span class=\"o\">);</span>\n  <span class=\"nt\">filter</span><span class=\"o\">:</span>  <span class=\"nt\">progid</span><span class=\"p\">:</span><span class=\"nd\">DXImageTransform</span><span class=\"p\">.</span><span class=\"nc\">Microsoft</span><span class=\"p\">.</span><span class=\"nc\">gradient</span><span class=\"o\">(</span><span class=\"nt\">startColorstr</span><span class=\"o\">=</span><span class=\"s1\">&#39;#{$from}&#39;</span><span class=\"o\">,</span> <span class=\"nt\">endColorstr</span><span class=\"o\">=</span><span class=\"s1\">&#39;#{$to}&#39;</span><span class=\"o\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">@</span><span class=\"k\">mixin</span> <span class=\"nt\">prende</span><span class=\"o\">()</span><span class=\"p\">{</span>\n  <span class=\"nt\">opacity</span><span class=\"o\">:</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">2</span><span class=\"o\">;</span>\n  <span class=\"nt\">filter</span><span class=\"o\">:</span> <span class=\"nt\">alpha</span><span class=\"o\">(</span><span class=\"nt\">opacity</span><span class=\"o\">=</span><span class=\"nt\">100</span><span class=\"o\">);</span>\n  <span class=\"o\">&amp;</span><span class=\"p\">:</span><span class=\"nd\">hover</span><span class=\"p\">{</span>\n    <span class=\"k\">opacity</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"k\">filter</span><span class=\"p\">:</span> <span class=\"nf\">alpha</span><span class=\"p\">(</span><span class=\"n\">opacity</span><span class=\"err\">=</span><span class=\"mi\">100</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nt\">body</span> <span class=\"p\">{</span>\n  <span class=\"k\">font-family</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Lato&#39;</span><span class=\"p\">,</span> <span class=\"kc\">sans-serif</span><span class=\"p\">;</span>\n  <span class=\"k\">font-size</span><span class=\"p\">:</span> <span class=\"mi\">16</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">.</span><span class=\"nc\">single</span><span class=\"o\">,</span> <span class=\"p\">.</span><span class=\"nc\">page</span><span class=\"o\">,</span> <span class=\"p\">.</span><span class=\"nc\">archive</span> <span class=\"p\">{</span>\n  <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#DDD</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"p\">.</span><span class=\"nc\">agency-pro-blue</span> <span class=\"p\">{</span>  \n  <span class=\"err\">.entry-title</span> <span class=\"err\">{</span>\n    <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#CCC</span><span class=\"p\">;</span>\n    <span class=\"err\">a</span> <span class=\"err\">{</span>\n      <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#DDD</span><span class=\"p\">;</span>\n      <span class=\"err\">&amp;:hover</span> <span class=\"err\">{</span>\n        <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#d7c603</span><span class=\"p\">;</span>\n      <span class=\"p\">}</span>\n    <span class=\"err\">}</span>\n  <span class=\"err\">}</span>\n<span class=\"err\">}</span>\n\n<span class=\"p\">.</span><span class=\"nc\">featured-content</span> <span class=\"p\">{</span>\n  <span class=\"err\">article</span> <span class=\"err\">{</span>\n    <span class=\"err\">@include</span> <span class=\"err\">transparencia(white,</span> <span class=\"err\">60)</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"p\">.</span><span class=\"nc\">entry-title</span> <span class=\"p\">{</span>\n    <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"kc\">black</span><span class=\"p\">;</span>\n    <span class=\"err\">a</span> <span class=\"err\">{</span>\n      <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#333</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"err\">}</span>\n<span class=\"err\">}</span>\n\n\n<span class=\"p\">.</span><span class=\"nc\">entry-content</span> <span class=\"p\">{</span>\n  <span class=\"err\">a</span> <span class=\"err\">{</span>\n    <span class=\"err\">&amp;:hover</span> <span class=\"err\">{</span>\n      <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#d7c603</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"err\">}</span>\n  <span class=\"nt\">blockquote</span> <span class=\"p\">{</span>\n    <span class=\"err\">@include</span> <span class=\"err\">transparencia(white,</span> <span class=\"err\">60)</span><span class=\"p\">;</span>\n    <span class=\"err\">@include</span> <span class=\"err\">rounded()</span><span class=\"p\">;</span>\n    <span class=\"k\">font-family</span><span class=\"p\">:</span> <span class=\"n\">Georgia</span><span class=\"p\">,</span> <span class=\"kc\">serif</span><span class=\"p\">;</span>\n    <span class=\"k\">font-size</span><span class=\"p\">:</span> <span class=\"mi\">18</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n    <span class=\"k\">font-style</span><span class=\"p\">:</span> <span class=\"kc\">italic</span><span class=\"p\">;</span>\n    <span class=\"k\">margin</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span><span class=\"kt\">em</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">padding</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span><span class=\"kt\">em</span> <span class=\"mi\">10</span><span class=\"kt\">px</span> <span class=\"mi\">0</span> <span class=\"mi\">30</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n    <span class=\"k\">line-height</span><span class=\"p\">:</span> <span class=\"mf\">1.45</span><span class=\"p\">;</span>\n    <span class=\"k\">position</span><span class=\"p\">:</span> <span class=\"kc\">relative</span><span class=\"p\">;</span>\n    <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#383838</span><span class=\"p\">;</span>\n    <span class=\"k\">margin-left</span><span class=\"p\">:</span> <span class=\"mi\">60</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n    <span class=\"k\">border-left</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"kt\">px</span> <span class=\"kc\">solid</span> <span class=\"kc\">black</span><span class=\"p\">;</span>\n    <span class=\"err\">&amp;:before</span> <span class=\"err\">{</span>\n      <span class=\"k\">display</span><span class=\"p\">:</span> <span class=\"kc\">block</span><span class=\"p\">;</span>\n      <span class=\"k\">content</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\\201C&quot;</span><span class=\"p\">;</span>\n      <span class=\"k\">font-size</span><span class=\"p\">:</span> <span class=\"mi\">80</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n      <span class=\"k\">position</span><span class=\"p\">:</span> <span class=\"kc\">absolute</span><span class=\"p\">;</span>\n      <span class=\"k\">left</span><span class=\"p\">:</span> <span class=\"mi\">-43</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n      <span class=\"k\">top</span><span class=\"p\">:</span> <span class=\"mi\">-20</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n      <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#ccc</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"err\">}</span>\n  <span class=\"nt\">sup</span><span class=\"o\">,</span> <span class=\"nt\">sub</span> <span class=\"p\">{</span>\n    <span class=\"k\">font-size</span><span class=\"p\">:</span> <span class=\"mi\">60</span><span class=\"kt\">%</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"nt\">code</span> <span class=\"p\">{</span>\n    <span class=\"err\">@include</span> <span class=\"err\">transparencia(black,</span> <span class=\"err\">75)</span><span class=\"p\">;</span>\n    <span class=\"err\">@include</span> <span class=\"err\">rounded(3px)</span><span class=\"p\">;</span>\n    <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#DDD</span><span class=\"p\">;</span>\n    <span class=\"k\">padding</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n    <span class=\"k\">font-size</span><span class=\"p\">:</span> <span class=\"mf\">0.85</span><span class=\"kt\">em</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"nt\">pre</span> <span class=\"p\">{</span>\n    <span class=\"k\">white-space</span><span class=\"p\">:</span> <span class=\"kc\">pre</span><span class=\"p\">;</span>\n    <span class=\"k\">font-family</span><span class=\"p\">:</span> <span class=\"n\">Consolas</span><span class=\"p\">,</span><span class=\"n\">Menlo</span><span class=\"p\">,</span><span class=\"n\">Monaco</span><span class=\"p\">,</span><span class=\"n\">Lucida</span> <span class=\"n\">Console</span><span class=\"p\">,</span><span class=\"n\">Liberation</span> <span class=\"n\">Mono</span><span class=\"p\">,</span><span class=\"n\">DejaVu</span> <span class=\"n\">Sans</span> <span class=\"n\">Mono</span><span class=\"p\">,</span><span class=\"n\">Bitstream</span> <span class=\"n\">Vera</span> <span class=\"n\">Sans</span> <span class=\"n\">Mono</span><span class=\"p\">,</span><span class=\"n\">Courier</span> <span class=\"n\">New</span><span class=\"p\">,</span><span class=\"kc\">monospace</span><span class=\"p\">,</span><span class=\"kc\">serif</span><span class=\"p\">;</span>\n    <span class=\"k\">margin-bottom</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n    <span class=\"k\">max-height</span><span class=\"p\">:</span> <span class=\"mi\">600</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n    <span class=\"k\">overflow</span><span class=\"p\">:</span> <span class=\"kc\">auto</span><span class=\"p\">;</span>\n    <span class=\"k\">padding</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n    <span class=\"k\">width</span><span class=\"p\">:</span> <span class=\"kc\">auto</span><span class=\"p\">;</span>\n    <span class=\"err\">@include</span> <span class=\"err\">transparencia(black,</span> <span class=\"err\">60)</span><span class=\"p\">;</span>\n    <span class=\"err\">@include</span> <span class=\"err\">rounded()</span><span class=\"p\">;</span>\n    <span class=\"k\">padding</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"kt\">px</span> <span class=\"mi\">20</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n    <span class=\"err\">code</span> <span class=\"err\">{</span>\n      <span class=\"err\">@include</span> <span class=\"err\">transparencia(black,</span> <span class=\"err\">0)</span><span class=\"p\">;</span>\n      <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#DDD</span><span class=\"p\">;</span>\n      <span class=\"k\">font-size</span><span class=\"p\">:</span> <span class=\"mf\">0.85</span><span class=\"kt\">em</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"err\">}</span>\n<span class=\"err\">}</span>\n\n<span class=\"p\">.</span><span class=\"nc\">post</span><span class=\"o\">,</span> <span class=\"p\">.</span><span class=\"nc\">page</span><span class=\"o\">,</span> <span class=\"p\">.</span><span class=\"nc\">footer-widgets</span><span class=\"o\">,</span> <span class=\"p\">#</span><span class=\"nn\">respond</span> <span class=\"p\">{</span>\n  <span class=\"err\">@include</span> <span class=\"err\">transparencia(black,</span> <span class=\"err\">70)</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">.</span><span class=\"nc\">footnotes</span> <span class=\"p\">{</span>\n  <span class=\"k\">font-size</span><span class=\"p\">:</span> <span class=\"mf\">0.8</span><span class=\"kt\">em</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">.</span><span class=\"nc\">footer-widgets</span> <span class=\"p\">{</span>\n  <span class=\"err\">.widget-title</span> <span class=\"err\">{</span>\n    <span class=\"k\">color</span><span class=\"p\">:</span><span class=\"mh\">#CCC</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"nt\">a</span> <span class=\"p\">{</span>\n    <span class=\"err\">&amp;:hover</span> <span class=\"err\">{</span>\n      <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#d7c603</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"err\">}</span>\n<span class=\"err\">}</span>\n\n<span class=\"p\">.</span><span class=\"nc\">sidebar</span> <span class=\"p\">{</span>\n  <span class=\"err\">a</span> <span class=\"err\">{</span>\n    <span class=\"err\">&amp;:hover</span> <span class=\"err\">{</span>\n      <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#d7c603</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"err\">}</span>\n  <span class=\"p\">.</span><span class=\"nc\">widget</span> <span class=\"p\">{</span>\n    <span class=\"err\">@include</span> <span class=\"err\">transparencia(black,</span> <span class=\"err\">85)</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"p\">.</span><span class=\"nc\">widget-title</span> <span class=\"p\">{</span>\n    <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"mh\">#BBB</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"err\">}</span>\n</pre></div>\n\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Sass significa <em>Syntactically Awesome Style Sheets</em> y puedes visitar su sitio en http://sass-lang.com&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "enable_comments": true, "cover": "", "slug": "como-usar-sass-en-wordpress", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 99, "fields": {"idx": "d3a6dc89-de0f-4dca-b561-2548ebc4202b", "creado": "2017-07-29T05:09:56.163Z", "modificado": "2017-07-29T05:09:56.163Z", "title": "Planes de Acci\u00f3n y Seguimiento", "summary": "C\u00f3mo desarrollar una aplicaci\u00f3n en Django para controlar los planes de acci\u00f3n y seguimiento seg\u00fan la norma ISO 9001:2015.", "body": "Title: Planes de Acci\u00f3n y Seguimiento\r\nDate: 2015-08-09 12:47:12 a.m.\r\nCategory: Calidad\r\nTags:  iso9001, requisitos\r\nAuthor: Javier Sanchez Toledano\r\nSummary: C\u00f3mo desarrollar una aplicaci\u00f3n en Django para controlar los planes de acci\u00f3n y seguimiento seg\u00fan la norma ISO 9001:2015.\r\n\r\n\r\nEl enfoque basado en procesos utilizado en los sistemas de gesti\u00f3n de la calidad,  la comprensi\u00f3n y el cumplimiento de los requisitos, la necesidad de considerar los procesos en t\u00e9rminos que aporten valor, la obtenci\u00f3n de resultados del desempe\u00f1o y eficacia del proceso, y la mejora continua de los procesos con base en mediciones objetivas, \r\n\r\nEl mismo sistema de gesti\u00f3n de la calidad o SGC tiene como prop\u00f3sito demostrar que nuestro producto/servicio cumple con los requisitos y que obtenemos los resultados planificados. \r\n\r\nEl control de planes de acci\u00f3n y seguimiento que propongo ahora, cumple con los requisitos de la normas ISO 2001:2015 principalmente y se mantendr\u00e1 la compatibilidad con la norma ISO 2001:2008 hasta donde sea posible (y alcancen los recursos).\r\n\r\nLa norma ISO 9001:2015 establece dentro de los requisitos generales que debemos determinar los procesos necesarios para el sistema de gesti\u00f3n de la calidad y su aplicaci\u00f3n a trav\u00e9s de la organizaci\u00f3n, y debemos determinar:\r\n\r\n1. los elementos de entrada requeridos y los elementos de salida esperados de estos procesos;\r\n1. la secuencia e interacci\u00f3n de estos procesos;\r\n1. los criterios, m\u00e9todos, incluyendo las mediciones y los indicadores del desempe\u00f1o relacionados, necesarios para asegurarse la operaci\u00f3n eficaz y el control de estos procesos;\r\n1. los recursos necesarios y asegurarse de su disponibilidad;\r\n1. la asignaci\u00f3n de las responsabilidades y autoridades para estos procesos;\r\n1. los riesgos y oportunidades de acuerdo con los requisitos del apartado 6.1, y planificar e implementar las acciones adecuadas para tratarlos;\r\n1. los m\u00e9todos para realizar el seguimiento, mediciones, cuando sea apropiado, y evaluaci\u00f3n de los procesos y, si es necesario, los cambios en los procesos para asegurarse de que se logran los resultados previstos;\r\n1. oportunidades de mejora de los procesos y del sistema de gesti\u00f3n de la calidad.\r\n\r\nEl control de los planes de acci\u00f3n y seguimiento que vamos a desarrollar est\u00e1 ligado a este \u00faltimo punto, **la mejora**, que en la norma 9001:2015 se referencia como el punto 10 y en la versi\u00f3n 2008 como el punto 8.\r\n\r\n## Los Planes de Acci\u00f3n\r\nDebemos determinar y planificar las oportunidades de mejora e implementar las acciones necesarias para llevar a cabo estas mejoras y lo hacemos con **planes de acci\u00f3n**.\r\n\r\nLos planes de acci\u00f3n pueden ser _reactivos_ cuando se trata de no conformidades; *incrementales* cuando se trata de mejora continua; *creativos* cuando se trata de innovaci\u00f3n o *por reorganizaci\u00f3n* si hablamos de transformaci\u00f3n.\r\n\r\nConsidero que todos los planes de acci\u00f3n cuentan con los mismos elementos, asi que usar\u00e9 mi experiencia en planes de acci\u00f3n reactivos para hacer esta propuesta.\r\n\r\n### No conformidades\r\n\r\nPara empezar, revisemos los requisitos de la norma con respecto a las no conformidades.\r\n\r\n#### 10.2.1 No conformidad\r\nCuando ocurra una no conformidad, incluidas aquellas originadas por quejas, la organizaci\u00f3n debe:\r\n\r\n1. reaccionar ante la no conformidad, y seg\u00fan sea aplicable\r\n    1. tomar acciones para controlarla y corregirla;\r\n    1. hacer frente a las consecuencias;\r\n1. evaluar la necesidad de acciones para eliminar las causas de la no conformidad, con el fin de que no vuelva a ocurrir ni ocurra en otra parte, mediante:\r\n    1. la revisi\u00f3n de la no conformidad;\r\n    1. la determinaci\u00f3n de las causas de la no conformidad;\r\n    1. la determinaci\u00f3n de si existen no conformidades similares, o que potencialmente podr\u00edan ocurrir;\r\n1. implementar cualquier acci\u00f3n necesaria;\r\n1. revisar la eficacia de las acciones correctivas tomadas;\r\n1. si es necesario, hacer cambios al sistema de gesti\u00f3n de la calidad.\r\n\r\nLas acciones correctivas deben ser adecuadas a los efectos de las no conformidades encontradas.\r\n\r\n>\r\n__NOTA 1__       En algunos casos, puede ser imposible eliminar la causa de una no conformidad.\r\n>\r\n**NOTA 2** La acci\u00f3n correctiva puede reducir la probabilidad de recurrencia a un nivel aceptable.\r\n\r\n\r\nTomo nota que \r\n\r\n* **primero**, una queja no es igual a una no conformidad, sino que las quejas pueden originar no conformidades y\r\n* **segundo**, las acciones correctivas no tienen porque necesariamente eliminar la recurrencia, pero debemos demostrar que se reduce la posibilidad de que vuelva a aparecer.\r\n\r\n#### 10.2.2 Documentaci\u00f3n de No Conformidades\r\n\r\nLa organizaci\u00f3n debe conservar informaci\u00f3n documentada, como evidencia de:\r\n\r\n1. la naturaleza de las no conformidades y cualquier acci\u00f3n posterior tomada;\r\n1. los resultados de cualquier acci\u00f3n correctiva.\r\n\r\nLas diferencias que existen con respecto a la versi\u00f3n 2008 se deben a que se agruparon los requisitos, pero b\u00e1sicamente es lo mismo.\r\n\r\n## Modelo de Plan de Acci\u00f3n en Django\r\nAhora veamos como ser\u00e1 el plan de acci\u00f3n en Django. Tenemos que cumplir con los requisitos del punto 10.2.1/8.5.2[^1], aunque no s\u00e9 como documentar eso de _\"hacer frente a las consecuencias\"_, pero bueno.\r\n\r\n[^1]: Para evitar la fatiga, cuando me refiera a un punto de la norma, utilizar\u00e9 la siguiente sintaxis: primero el punto en la norma ISO 9001:2015, una diagonal y por \u00faltimo, el punto de la norma que corresponda a la versi\u00f3n 9001:2008. Cuando no exista la correspondencia usar\u00e9 `N/A` en donde corresponda. \r\nop`", "extend": "", "pub_date": "2015-08-09T05:07:57Z", "summary_html": "<p>C\u00f3mo desarrollar una aplicaci\u00f3n en Django para controlar los planes de acci\u00f3n y seguimiento seg\u00fan la norma ISO 9001:2015.</p>", "body_html": "<p>El enfoque basado en procesos utilizado en los sistemas de gesti\u00f3n de la calidad,  la comprensi\u00f3n y el cumplimiento de los requisitos, la necesidad de considerar los procesos en t\u00e9rminos que aporten valor, la obtenci\u00f3n de resultados del desempe\u00f1o y eficacia del proceso, y la mejora continua de los procesos con base en mediciones objetivas, </p>\n<p>El mismo sistema de gesti\u00f3n de la calidad o SGC tiene como prop\u00f3sito demostrar que nuestro producto/servicio cumple con los requisitos y que obtenemos los resultados planificados. </p>\n<p>El control de planes de acci\u00f3n y seguimiento que propongo ahora, cumple con los requisitos de la normas ISO 2001:2015 principalmente y se mantendr\u00e1 la compatibilidad con la norma ISO 2001:2008 hasta donde sea posible (y alcancen los recursos).</p>\n<p>La norma ISO 9001:2015 establece dentro de los requisitos generales que debemos determinar los procesos necesarios para el sistema de gesti\u00f3n de la calidad y su aplicaci\u00f3n a trav\u00e9s de la organizaci\u00f3n, y debemos determinar:</p>\n<ol>\n<li>los elementos de entrada requeridos y los elementos de salida esperados de estos procesos;</li>\n<li>la secuencia e interacci\u00f3n de estos procesos;</li>\n<li>los criterios, m\u00e9todos, incluyendo las mediciones y los indicadores del desempe\u00f1o relacionados, necesarios para asegurarse la operaci\u00f3n eficaz y el control de estos procesos;</li>\n<li>los recursos necesarios y asegurarse de su disponibilidad;</li>\n<li>la asignaci\u00f3n de las responsabilidades y autoridades para estos procesos;</li>\n<li>los riesgos y oportunidades de acuerdo con los requisitos del apartado 6.1, y planificar e implementar las acciones adecuadas para tratarlos;</li>\n<li>los m\u00e9todos para realizar el seguimiento, mediciones, cuando sea apropiado, y evaluaci\u00f3n de los procesos y, si es necesario, los cambios en los procesos para asegurarse de que se logran los resultados previstos;</li>\n<li>oportunidades de mejora de los procesos y del sistema de gesti\u00f3n de la calidad.</li>\n</ol>\n<p>El control de los planes de acci\u00f3n y seguimiento que vamos a desarrollar est\u00e1 ligado a este \u00faltimo punto, <strong>la mejora</strong>, que en la norma 9001:2015 se referencia como el punto 10 y en la versi\u00f3n 2008 como el punto 8.</p>\n<h2 id=\"los-planes-de-accion\">Los Planes de Acci\u00f3n</h2>\n<p>Debemos determinar y planificar las oportunidades de mejora e implementar las acciones necesarias para llevar a cabo estas mejoras y lo hacemos con <strong>planes de acci\u00f3n</strong>.</p>\n<p>Los planes de acci\u00f3n pueden ser <em>reactivos</em> cuando se trata de no conformidades; <em>incrementales</em> cuando se trata de mejora continua; <em>creativos</em> cuando se trata de innovaci\u00f3n o <em>por reorganizaci\u00f3n</em> si hablamos de transformaci\u00f3n.</p>\n<p>Considero que todos los planes de acci\u00f3n cuentan con los mismos elementos, asi que usar\u00e9 mi experiencia en planes de acci\u00f3n reactivos para hacer esta propuesta.</p>\n<h3 id=\"no-conformidades\">No conformidades</h3>\n<p>Para empezar, revisemos los requisitos de la norma con respecto a las no conformidades.</p>\n<h4 id=\"1021-no-conformidad\">10.2.1 No conformidad</h4>\n<p>Cuando ocurra una no conformidad, incluidas aquellas originadas por quejas, la organizaci\u00f3n debe:</p>\n<ol>\n<li>reaccionar ante la no conformidad, y seg\u00fan sea aplicable<ol>\n<li>tomar acciones para controlarla y corregirla;</li>\n<li>hacer frente a las consecuencias;</li>\n</ol>\n</li>\n<li>evaluar la necesidad de acciones para eliminar las causas de la no conformidad, con el fin de que no vuelva a ocurrir ni ocurra en otra parte, mediante:<ol>\n<li>la revisi\u00f3n de la no conformidad;</li>\n<li>la determinaci\u00f3n de las causas de la no conformidad;</li>\n<li>la determinaci\u00f3n de si existen no conformidades similares, o que potencialmente podr\u00edan ocurrir;</li>\n</ol>\n</li>\n<li>implementar cualquier acci\u00f3n necesaria;</li>\n<li>revisar la eficacia de las acciones correctivas tomadas;</li>\n<li>si es necesario, hacer cambios al sistema de gesti\u00f3n de la calidad.</li>\n</ol>\n<p>Las acciones correctivas deben ser adecuadas a los efectos de las no conformidades encontradas.</p>\n<blockquote>\n<p><strong>NOTA 1</strong>       En algunos casos, puede ser imposible eliminar la causa de una no conformidad.</p>\n<p><strong>NOTA 2</strong> La acci\u00f3n correctiva puede reducir la probabilidad de recurrencia a un nivel aceptable.</p>\n</blockquote>\n<p>Tomo nota que </p>\n<ul>\n<li><strong>primero</strong>, una queja no es igual a una no conformidad, sino que las quejas pueden originar no conformidades y</li>\n<li><strong>segundo</strong>, las acciones correctivas no tienen porque necesariamente eliminar la recurrencia, pero debemos demostrar que se reduce la posibilidad de que vuelva a aparecer.</li>\n</ul>\n<h4 id=\"1022-documentacion-de-no-conformidades\">10.2.2 Documentaci\u00f3n de No Conformidades</h4>\n<p>La organizaci\u00f3n debe conservar informaci\u00f3n documentada, como evidencia de:</p>\n<ol>\n<li>la naturaleza de las no conformidades y cualquier acci\u00f3n posterior tomada;</li>\n<li>los resultados de cualquier acci\u00f3n correctiva.</li>\n</ol>\n<p>Las diferencias que existen con respecto a la versi\u00f3n 2008 se deben a que se agruparon los requisitos, pero b\u00e1sicamente es lo mismo.</p>\n<h2 id=\"modelo-de-plan-de-accion-en-django\">Modelo de Plan de Acci\u00f3n en Django</h2>\n<p>Ahora veamos como ser\u00e1 el plan de acci\u00f3n en Django. Tenemos que cumplir con los requisitos del punto 10.2.1/8.5.2<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>, aunque no s\u00e9 como documentar eso de <em>&ldquo;hacer frente a las consecuencias&rdquo;</em>, pero bueno.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Para evitar la fatiga, cuando me refiera a un punto de la norma, utilizar\u00e9 la siguiente sintaxis: primero el punto en la norma ISO 9001:2015, una diagonal y por \u00faltimo, el punto de la norma que corresponda a la versi\u00f3n 9001:2008. Cuando no exista la correspondencia usar\u00e9 <code>N/A</code> en donde corresponda. \nop`&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "planes-de-accion-y-seguimiento", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 100, "fields": {"idx": "f4cb8cba-b68b-4ddb-b0f5-a2e2c39c0ece", "creado": "2017-07-29T05:10:43.549Z", "modificado": "2017-07-29T05:11:50.351Z", "title": "El verdadero origen del mezcal", "summary": "", "body": "Title: El verdadero origen del mezcal\r\nDate: 2015-08-15 9:27:19 a.m.\r\nCategory: Opini\u00f3n\r\nTags:  tlaxcala, historias, \r\nFavorito: 1\r\nCover: https://media.toledano.org/images/20150815-mezcal-cover.jpg\r\nSummary:\r\n\r\nEl mezcal es uno de los 50 productos gastron\u00f3micos originarios de M\u00e9xico de uso universal &mdash;ma\u00edz, jitomate, chocolate, aguacate, chile, frijol, etc.&mdash; con una de las historias de especie m\u00e1s antiguas y complejas.\r\n\r\n## En la prehistoria\r\n\r\nEl agave, su planta b\u00e1sica, fue utilizada en tiempos prehist\u00f3ricos (10 mil a\u00f1os antes de Cristo) para hacer fibras de uso indumentario y dom\u00e9stico: agujas, alfileres, puntas de flecha, b\u00e1lsamos.\r\nEn el territorio mexicano existen 120 de las 300 variedades de agave que hay en el mundo, pero s\u00f3lo una d\u00e9cima parte de esas especies producen jugos \u00fatiles para consumo humano.\r\n\r\n## El alambique de Tlaxcala\r\n\r\nOcho de esos agaves son mezcaleros y los otros son pulqueros, la mayor\u00eda sometidos a cultivo humano desde hace miles de a\u00f1os.\r\nUna reciente investigaci\u00f3n arqueol\u00f3gica en la poblaci\u00f3n de Nativitas, Tlaxcala, pr\u00f3xima a la ciudad olmeca xicalanca de Cacaxtla, revel\u00f3 la presencia de utiler\u00eda presuntamente destinada al destilado de mezcal.\r\n\r\nLos arque\u00f3logos Mar\u00eda del Carmen Serra Puche, Jes\u00fas Carlos Lazcano Arce y Manuel de la Torre, de la Universidad Nacional Aut\u00f3noma de M\u00e9xico (UNAM), descubrieron en 2004 un horno para cocer agaves.\r\n\r\nEl horno _olmeca xicalanca_ conservaba restos de maguey sancochado, cer\u00e1mica y tubos de carrizo y quiote (el coraz\u00f3n seco del agave), presumiblemente utilizados en la destilaci\u00f3n del jugo vaporizado.\r\nLos especialistas **ubicaron en el a\u00f1o 400 a.C. la edad aproximada del alambique prehisp\u00e1nico**, aunque otras fuentes _presumen la consuma de mezcal en M\u00e9xico desde el a\u00f1o 1500 a.C._\r\n\r\n<div class=\"referencia\">\r\n    <img src=\"https://media.toledano.org/images/20150815-mezcal-reference.jpg\" alt=\"Mezcal\" />\r\n    <div class=\"reference\">\r\n        <strong>Tlaxcala</strong>\r\n        <p>\r\n            En el 2004 se descubri\u00f3 en Tlaxcala un alambique prehisp\u00e1nico de 2400 a\u00f1os de antig\u00fcedad.\r\n        </p>\r\n    </div>\r\n</div>\r\n\r\nEn tiempos prehisp\u00e1nicos el mezcal estuvo asociado a ritos de contenido religioso vinculados a la Luna (Mexi) y a la diosa Xochit\u00e9catl. Su nombre significa en n\u00e1huatl \u201cmaguey asado\u201d o \"agave (metl) cocido en horno\" (ixcalli).\r\n\r\n## La Colonia\r\n\r\nLa cultura mezcalera prehisp\u00e1nica de M\u00e9xico habr\u00eda de enriquecerse hasta el siglo XVII (1650) con el arribo e instalaci\u00f3n de alambiques hispano\u00e1rabes tra\u00eddos por los colonos espa\u00f1oles.\r\n\r\nEn el centro y occidente se significaron en la difusi\u00f3n del destilado europeo los misioneros carmelitas descalzos, quienes fueron determinantes en el trazo de la Ruta del Tequila, en Jalisco, en los siglos XVIII y XIX.\r\n\r\nEl fundador de la antropolog\u00eda hist\u00f3rica de M\u00e9xico, fray Bernardino de Sahag\u00fan, traduce la palabra mezcal como maguey asado.\r\n\r\nEn su libro Cerezo rojo, el investigador Raumiez P\u00e9rez Blanco afirma que en el siglo XIX todos los estados de la Rep\u00fablica Mexicana produc\u00edan mezcal de tipolog\u00eda regional con agaves propios de cada zona.\r\n\r\n## \u00c9poca actual\r\n\r\nDe esa enorme variedad s\u00f3lo quedan muestras espec\u00edficas con denominaciones propias: tequila (Jalisco), sotol (Chihuahua), Bacanora (Sonora), Raicilla (San Luis Potos\u00ed), comiteco (Comit\u00e1n, Chiapas) y mezcal.\r\n\r\nCon esta \u00faltima denominaci\u00f3n de origen, reconocida por el Estado mexicano en 1997, producen actualmente 32 empresas industriales con derechos de explotaci\u00f3n comercial sobre m\u00e1s de 50 marcas registradas en varios estados de la Rep\u00fablica.\r\n\r\nEstas empresas son supervisadas por un Consejo Mexicano Regulador del Mezcal que vigila y certifica que el contenido de los frascos comercializados contengan 100 por ciento mezcal de agave.\r\n\r\nUna regulaci\u00f3n similar existe desde finales de los a\u00f1os 80 para los fabricantes de tequila, sin duda el m\u00e1s famoso de los mezcales mexicanos, pero s\u00f3lo uno m\u00e1s de las varias decenas que hay en el pa\u00eds.\r\n\r\nEsto se debe a que gran parte de la producci\u00f3n mezcalera contin\u00faa siendo artesanal, como puede observarse en Oaxaca, Guerrero, Michoac\u00e1n, Estado de M\u00e9xico, Chiapas, Tamaulipas, Morelos, Yucat\u00e1n, Zacatecas y otros estados del pa\u00eds.\r\n\r\nSe estima que en la Rep\u00fablica Mexicana dependen del mezcal unas 300 mil familias.\r\n\r\n\r\n<small>Fuente: http://www.conaculta.gob.mx/detalle-nota/?id=1021</small>", "extend": "", "pub_date": "2015-08-15T14:27:19Z", "summary_html": "", "body_html": "<p>El mezcal es uno de los 50 productos gastron\u00f3micos originarios de M\u00e9xico de uso universal &mdash;ma\u00edz, jitomate, chocolate, aguacate, chile, frijol, etc.&mdash; con una de las historias de especie m\u00e1s antiguas y complejas.</p>\n<h2 id=\"en-la-prehistoria\">En la prehistoria</h2>\n<p>El agave, su planta b\u00e1sica, fue utilizada en tiempos prehist\u00f3ricos (10 mil a\u00f1os antes de Cristo) para hacer fibras de uso indumentario y dom\u00e9stico: agujas, alfileres, puntas de flecha, b\u00e1lsamos.\nEn el territorio mexicano existen 120 de las 300 variedades de agave que hay en el mundo, pero s\u00f3lo una d\u00e9cima parte de esas especies producen jugos \u00fatiles para consumo humano.</p>\n<h2 id=\"el-alambique-de-tlaxcala\">El alambique de Tlaxcala</h2>\n<p>Ocho de esos agaves son mezcaleros y los otros son pulqueros, la mayor\u00eda sometidos a cultivo humano desde hace miles de a\u00f1os.\nUna reciente investigaci\u00f3n arqueol\u00f3gica en la poblaci\u00f3n de Nativitas, Tlaxcala, pr\u00f3xima a la ciudad olmeca xicalanca de Cacaxtla, revel\u00f3 la presencia de utiler\u00eda presuntamente destinada al destilado de mezcal.</p>\n<p>Los arque\u00f3logos Mar\u00eda del Carmen Serra Puche, Jes\u00fas Carlos Lazcano Arce y Manuel de la Torre, de la Universidad Nacional Aut\u00f3noma de M\u00e9xico (UNAM), descubrieron en 2004 un horno para cocer agaves.</p>\n<p>El horno <em>olmeca xicalanca</em> conservaba restos de maguey sancochado, cer\u00e1mica y tubos de carrizo y quiote (el coraz\u00f3n seco del agave), presumiblemente utilizados en la destilaci\u00f3n del jugo vaporizado.\nLos especialistas <strong>ubicaron en el a\u00f1o 400 a.C. la edad aproximada del alambique prehisp\u00e1nico</strong>, aunque otras fuentes <em>presumen la consuma de mezcal en M\u00e9xico desde el a\u00f1o 1500 a.C.</em></p>\n<div class=\"referencia\">\n    <img src=\"https://media.toledano.org/images/20150815-mezcal-reference.jpg\" alt=\"Mezcal\" />\n    <div class=\"reference\">\n        <strong>Tlaxcala</strong>\n        <p>\n            En el 2004 se descubri\u00f3 en Tlaxcala un alambique prehisp\u00e1nico de 2400 a\u00f1os de antig\u00fcedad.\n        </p>\n    </div>\n</div>\n\n<p>En tiempos prehisp\u00e1nicos el mezcal estuvo asociado a ritos de contenido religioso vinculados a la Luna (Mexi) y a la diosa Xochit\u00e9catl. Su nombre significa en n\u00e1huatl \u201cmaguey asado\u201d o &ldquo;agave (metl) cocido en horno&rdquo; (ixcalli).</p>\n<h2 id=\"la-colonia\">La Colonia</h2>\n<p>La cultura mezcalera prehisp\u00e1nica de M\u00e9xico habr\u00eda de enriquecerse hasta el siglo XVII (1650) con el arribo e instalaci\u00f3n de alambiques hispano\u00e1rabes tra\u00eddos por los colonos espa\u00f1oles.</p>\n<p>En el centro y occidente se significaron en la difusi\u00f3n del destilado europeo los misioneros carmelitas descalzos, quienes fueron determinantes en el trazo de la Ruta del Tequila, en Jalisco, en los siglos XVIII y XIX.</p>\n<p>El fundador de la antropolog\u00eda hist\u00f3rica de M\u00e9xico, fray Bernardino de Sahag\u00fan, traduce la palabra mezcal como maguey asado.</p>\n<p>En su libro Cerezo rojo, el investigador Raumiez P\u00e9rez Blanco afirma que en el siglo XIX todos los estados de la Rep\u00fablica Mexicana produc\u00edan mezcal de tipolog\u00eda regional con agaves propios de cada zona.</p>\n<h2 id=\"epoca-actual\">\u00c9poca actual</h2>\n<p>De esa enorme variedad s\u00f3lo quedan muestras espec\u00edficas con denominaciones propias: tequila (Jalisco), sotol (Chihuahua), Bacanora (Sonora), Raicilla (San Luis Potos\u00ed), comiteco (Comit\u00e1n, Chiapas) y mezcal.</p>\n<p>Con esta \u00faltima denominaci\u00f3n de origen, reconocida por el Estado mexicano en 1997, producen actualmente 32 empresas industriales con derechos de explotaci\u00f3n comercial sobre m\u00e1s de 50 marcas registradas en varios estados de la Rep\u00fablica.</p>\n<p>Estas empresas son supervisadas por un Consejo Mexicano Regulador del Mezcal que vigila y certifica que el contenido de los frascos comercializados contengan 100 por ciento mezcal de agave.</p>\n<p>Una regulaci\u00f3n similar existe desde finales de los a\u00f1os 80 para los fabricantes de tequila, sin duda el m\u00e1s famoso de los mezcales mexicanos, pero s\u00f3lo uno m\u00e1s de las varias decenas que hay en el pa\u00eds.</p>\n<p>Esto se debe a que gran parte de la producci\u00f3n mezcalera contin\u00faa siendo artesanal, como puede observarse en Oaxaca, Guerrero, Michoac\u00e1n, Estado de M\u00e9xico, Chiapas, Tamaulipas, Morelos, Yucat\u00e1n, Zacatecas y otros estados del pa\u00eds.</p>\n<p>Se estima que en la Rep\u00fablica Mexicana dependen del mezcal unas 300 mil familias.</p>\n<p><small>Fuente: http://www.conaculta.gob.mx/detalle-nota/?id=1021</small></p>", "extend_html": "", "enable_comments": true, "cover": "https://media.toledano.org/images/20150815-mezcal-cover.jpg", "slug": "el-verdadero-origen-del-mezcal", "status": 1, "featured": true, "category": 5, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 101, "fields": {"idx": "934cd8d0-ee3c-4191-aa25-112d2f100212", "creado": "2017-07-29T05:14:23.830Z", "modificado": "2017-07-29T05:14:23.830Z", "title": "El caso de la rubia platino", "summary": "", "body": "Title: El caso de la rubia platino    \r\nDate: 2016-02-27 16:03:30\r\nCategory: audioteca\r\nTags: rock, lang:es,\r\nSummary:  \r\n\r\n\r\nDe la exclusiva Audioteca Toledana les presento en esta ocasi\u00f3n una canci\u00f3n de __Joaquin Sabina__, del disco _19 d\u00edas y 500 noches_, __*\"El Caso de la Rubia Platino\"*__, que puede ser una novela de dectives estilo _Sam Spade_ o una pel\u00edcula del cine negro. Sin duda Sabina es un genio.\r\n\r\n\r\n__T\u00edtulo__: _El caso de la rubia plantino_  \r\n__Int\u00e9rprete__: _Joau\u00edn Sabina_  \r\n__Autor__: Joaqu\u00edn Ram\u00f3n Mart\u00ednez Sabina, firma como _Joaqu\u00edn Sabina_  \r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\n  var songlist = new Array(1);\r\n  songlist[0] = new Object();\r\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/rubia-platino.mp3\";\r\n  songlist[0].ogg = \"//media.toledano.org/audioteca/rubia-platino.ogg\";\r\n  songlist[0].cover = \"//media.toledano.org/audioteca/rubia-platino.jpg\";\r\n  songlist[0].title = \"El caso de la rubia platino\";\r\n  songlist[0].artist = \"Joaqu\u00edn Sabina\";     \r\n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\r\n</script>\r\n\r\n> Me adelant\u00f3 un tal\u00f3n de setecientas,  \r\nm\u00e1s gastos, sin contar otras quinientas  \r\nen fichas del casino.  \r\nMi \u00faltimo tren llegaba con retraso,  \r\nas\u00ed que decid\u00ed aceptar el caso  \r\nde la rubia platino.  \r\n\r\n> Yo era un huele-braguetas sin licencia,  \r\nquemado en la secreta por tenencia,  \r\nextorsi\u00f3n y l\u00edos de faldas.  \r\nEstaba, como buen ex-polic\u00eda,  \r\na sueldo de un pez gordo, que sab\u00eda  \r\ncubrirse las espaldas.  \r\n\r\n> \" Ninguna zorra vale ese dinero,  \r\n-- pens\u00e9, mientras dejaba mi sombrero  \r\nnuevo en el guardarropa.  \r\nCantaba regular, pero mov\u00eda  \r\nel culo, con un swing, que derret\u00eda  \r\nel hielo de las copas.  \r\n\r\n> Cuando sali\u00f3, por fin, del reservado,  \r\nsent\u00ed que las campanas del pasado  \r\nrepicaban a duelo.  \r\nLa \u00faltima vez que o\u00ed esa melod\u00eda  \r\nme recetaron tres a\u00f1os y un d\u00eda,  \r\nm\u00e1s IVA, en la Modelo.\r\n\r\n> _Para jugar al Black Jack y ser un duro,  \r\nandar escaso de efectivo  \r\nes igual que pretender envidar,  \r\ncon un farol, al futuro.  \r\nNo por casualidad  \r\nme temen en los casinos,  \r\nme daban diez de los grandes por el caso  \r\nde la rubia platino._  \r\n\r\n> Los besos que te dan las chicas malas  \r\nsalen m\u00e1s caros cuando los regalan  \r\ny huelen a fracaso,  \r\npero el croupier me echaba cartas buenas  \r\ny la rubia platino era morena  \r\ny el caso era un gran caso.\r\n\r\n> En un bistr\u00f3, del puerto de Marsella  \r\nnos fuimos demorando, entre botella  \r\ny botella de Oporto:  \r\n\u201cLos que pusieron precio a tu cabeza  \r\n-- le dije exagerando su belleza --,  \r\nse hab\u00edan quedado cortos\u201d.\r\n\r\n> Puede que me estuviera enamorando,  \r\nporque, antes del caf\u00e9, cambi\u00e9 de bando,  \r\nde hotel y de sombrero.  \r\nMi viejo puso un cuarto, con dos camas,  \r\nfingiendo que la dama era una dama  \r\ny su hijo un caballero.\r\n\r\n> \" Ni siquiera, se\u00f1ores del jurado,  \r\npadezco, como alega mi abogado,  \r\nlocura transitoria.  \r\nDispar\u00e9 al coraz\u00f3n que yo quer\u00eda,  \r\ncon premeditaci\u00f3n, alevos\u00eda  \r\ny m\u00e1s pena que gloria.\r\n\r\n> _Para jugar al Black Jack y ser un duro,  \r\nandar escaso de efectivo  \r\nes igual que pretender envidar,  \r\ncon un farol, al futuro.  \r\nNo por casualidad  \r\nme temen en los casinos,  \r\ndiez de los grandes por seguirle los pasos,  \r\na la rubia platino._\r\n\r\n> _Para volver a ser alguien, en el ambiente,  \r\nnecesitaba un par de buenos clientes,  \r\nalgo para mis vicios y un despacho decente,  \r\nno dan para comer las putas del barrio chino,  \r\ntodos los lunes no me encargan el caso  \r\nde la rubia platino._\r\n\r\n> _Para no ser un cad\u00e1ver, en el tranv\u00eda,  \r\naparte de tener gram\u00e1tica parda  \r\nhay que saber, que las faldas, son una loter\u00eda;  \r\ncon luz de gas brill\u00f3 mi l\u00e1mpara de Aladino\u2026  \r\nme daban diez de los grandes  \r\npor el caso de la rubia platino_", "extend": "", "pub_date": "2016-02-27T22:03:30Z", "summary_html": "", "body_html": "<p>De la exclusiva Audioteca Toledana les presento en esta ocasi\u00f3n una canci\u00f3n de <strong>Joaquin Sabina</strong>, del disco <em>19 d\u00edas y 500 noches</em>, <strong><em>&ldquo;El Caso de la Rubia Platino&rdquo;</em></strong>, que puede ser una novela de dectives estilo <em>Sam Spade</em> o una pel\u00edcula del cine negro. Sin duda Sabina es un genio.</p>\n<p><strong>T\u00edtulo</strong>: <em>El caso de la rubia plantino</em><br>\n<strong>Int\u00e9rprete</strong>: <em>Joau\u00edn Sabina</em><br>\n<strong>Autor</strong>: Joaqu\u00edn Ram\u00f3n Mart\u00ednez Sabina, firma como <em>Joaqu\u00edn Sabina</em>  </p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\n  var songlist = new Array(1);\n  songlist[0] = new Object();\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/rubia-platino.mp3\";\n  songlist[0].ogg = \"//media.toledano.org/audioteca/rubia-platino.ogg\";\n  songlist[0].cover = \"//media.toledano.org/audioteca/rubia-platino.jpg\";\n  songlist[0].title = \"El caso de la rubia platino\";\n  songlist[0].artist = \"Joaqu\u00edn Sabina\";     \n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\n</script>\n\n<blockquote>\n<p>Me adelant\u00f3 un tal\u00f3n de setecientas,<br>\nm\u00e1s gastos, sin contar otras quinientas<br>\nen fichas del casino.<br>\nMi \u00faltimo tren llegaba con retraso,<br>\nas\u00ed que decid\u00ed aceptar el caso<br>\nde la rubia platino.  </p>\n<p>Yo era un huele-braguetas sin licencia,<br>\nquemado en la secreta por tenencia,<br>\nextorsi\u00f3n y l\u00edos de faldas.<br>\nEstaba, como buen ex-polic\u00eda,<br>\na sueldo de un pez gordo, que sab\u00eda<br>\ncubrirse las espaldas.  </p>\n<p>&rdquo; Ninguna zorra vale ese dinero,<br>\n&ndash; pens\u00e9, mientras dejaba mi sombrero<br>\nnuevo en el guardarropa.<br>\nCantaba regular, pero mov\u00eda<br>\nel culo, con un swing, que derret\u00eda<br>\nel hielo de las copas.  </p>\n<p>Cuando sali\u00f3, por fin, del reservado,<br>\nsent\u00ed que las campanas del pasado<br>\nrepicaban a duelo.<br>\nLa \u00faltima vez que o\u00ed esa melod\u00eda<br>\nme recetaron tres a\u00f1os y un d\u00eda,<br>\nm\u00e1s IVA, en la Modelo.</p>\n<p><em>Para jugar al Black Jack y ser un duro,<br>\nandar escaso de efectivo<br>\nes igual que pretender envidar,<br>\ncon un farol, al futuro.<br>\nNo por casualidad<br>\nme temen en los casinos,<br>\nme daban diez de los grandes por el caso<br>\nde la rubia platino.</em>  </p>\n<p>Los besos que te dan las chicas malas<br>\nsalen m\u00e1s caros cuando los regalan<br>\ny huelen a fracaso,<br>\npero el croupier me echaba cartas buenas<br>\ny la rubia platino era morena<br>\ny el caso era un gran caso.</p>\n<p>En un bistr\u00f3, del puerto de Marsella<br>\nnos fuimos demorando, entre botella<br>\ny botella de Oporto:<br>\n\u201cLos que pusieron precio a tu cabeza<br>\n&ndash; le dije exagerando su belleza &ndash;,<br>\nse hab\u00edan quedado cortos\u201d.</p>\n<p>Puede que me estuviera enamorando,<br>\nporque, antes del caf\u00e9, cambi\u00e9 de bando,<br>\nde hotel y de sombrero.<br>\nMi viejo puso un cuarto, con dos camas,<br>\nfingiendo que la dama era una dama<br>\ny su hijo un caballero.</p>\n<p>&rdquo; Ni siquiera, se\u00f1ores del jurado,<br>\npadezco, como alega mi abogado,<br>\nlocura transitoria.<br>\nDispar\u00e9 al coraz\u00f3n que yo quer\u00eda,<br>\ncon premeditaci\u00f3n, alevos\u00eda<br>\ny m\u00e1s pena que gloria.</p>\n<p><em>Para jugar al Black Jack y ser un duro,<br>\nandar escaso de efectivo<br>\nes igual que pretender envidar,<br>\ncon un farol, al futuro.<br>\nNo por casualidad<br>\nme temen en los casinos,<br>\ndiez de los grandes por seguirle los pasos,<br>\na la rubia platino.</em></p>\n<p><em>Para volver a ser alguien, en el ambiente,<br>\nnecesitaba un par de buenos clientes,<br>\nalgo para mis vicios y un despacho decente,<br>\nno dan para comer las putas del barrio chino,<br>\ntodos los lunes no me encargan el caso<br>\nde la rubia platino.</em></p>\n<p><em>Para no ser un cad\u00e1ver, en el tranv\u00eda,<br>\naparte de tener gram\u00e1tica parda<br>\nhay que saber, que las faldas, son una loter\u00eda;<br>\ncon luz de gas brill\u00f3 mi l\u00e1mpara de Aladino\u2026<br>\nme daban diez de los grandes<br>\npor el caso de la rubia platino</em></p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "el-caso-de-la-rubia-platino", "status": 1, "featured": false, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 102, "fields": {"idx": "b1e73c40-9032-4561-bd8f-f8cdf5115b52", "creado": "2017-07-29T05:16:12.990Z", "modificado": "2017-07-29T05:16:12.990Z", "title": "Besar\u00e9 el suelo otra vez", "summary": "", "body": "Title: Besar\u00e9 el suelo otra vez      \r\nDate: 2016-03-13 16:05:50\r\nCategory: audioteca\r\nTags: lang:es, pop,\r\nSummary: \r\n\r\nLa **Audioteca Toledana** inicia sus transmisiones en este a\u00f1o (que promete ser movido y variado) con una promesa tan inevitable como el <strong>Apocalipsis Zombie</strong>.\r\n\r\nDice Luz que <em>\"cuanto mas bella es la vida, m\u00e1s feroces sus zarpazos\"</em>. Pero tambi\u00e9n nos dice que incluso en el desamor hay esperanza.\r\n\r\nSigamos adelante y gritemos **que el amor es un misterio y que importa solo a dos**.\r\n\r\n<!--more-->\r\n\r\nDe Luz Casal, cantante gallega de una intensidad provocadora, la Audioteca Toledana orgullosamente presenta del disco <strong><em>Como la flor prometida</em></strong>:\r\n\r\n**T\u00edtulo:** Besar\u00e9 el suelo\r\n**Autor:** Mar\u00eda Luz Casal Paz, firma como Luz Casal\r\n**Int\u00e9rprete:** Luz Casal\r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\n  var songlist = new Array(1);\r\n  songlist[0] = new Object();\r\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/besare_el_suelo.mp3\";\r\n  songlist[0].ogg = \"//media.toledano.org/audioteca/besare_el_suelo.ogg\";\r\n  songlist[0].cover = \"//media.toledano.org/audioteca/besare_el_suelo.jpg\";\r\n  songlist[0].title = \"Besar\u00e9 el suelo\";\r\n  songlist[0].artist = \"Luz Casal\";\r\n</script>\r\n>\r\n>Cuanto m\u00e1s bella es la vida  \r\n>m\u00e1s feroces sus zarpazos,  \r\n>cuantos m\u00e1s frutos consigo  \r\n>m\u00e1s cerca estoy de perder.  \r\n>\r\n>Por una caricia tuya  \r\n>toco el cielo con las manos  \r\n>pero s\u00e9 que si te marchas,  \r\n>besar\u00e9 el suelo otra vez.  \r\n>\r\n>Grita al mundo, rompe el aire  \r\n>hasta que muera tu voz,  \r\n>que el amor es un misterio  \r\n>y que importa s\u00f3lo a dos,  \r\n>correremos por las calles,  \r\n>gritaremos tu y yo  \r\n>que el amor es un misterio  \r\n>y que importa s\u00f3lo a dos.  \r\n>\r\n>Yo no quiero cusar pena  \r\n>s\u00f3lo por mi condici\u00f3n  \r\n>de mujer rota en esencia  \r\n>y herida en el coraz\u00f3n:  \r\n>No habr\u00e1 un hombre en este mundo  \r\n>que me vuelva a hacer caer,  \r\n>porque s\u00e9 que si se marcha  \r\n>besar\u00e9 el suelo otra vez.  \r\n>\r\n>Cuando llegue el hurac\u00e1n,  \r\n>que seguro ha de venir,  \r\n>por marcharte de mis brazos,  \r\n>por escaparte de m\u00ed.  \r\n>Pensar\u00e9 que fuimos grandes,  \r\n>pensar\u00e9 que fuimos dos,  \r\n>t\u00fa en tu cuerpo, yo en el m\u00edo  \r\n>y un s\u00f3lo coraz\u00f3n.", "extend": "", "pub_date": "2016-03-13T22:05:50Z", "summary_html": "", "body_html": "<p>La <strong>Audioteca Toledana</strong> inicia sus transmisiones en este a\u00f1o (que promete ser movido y variado) con una promesa tan inevitable como el <strong>Apocalipsis Zombie</strong>.</p>\n<p>Dice Luz que <em>&ldquo;cuanto mas bella es la vida, m\u00e1s feroces sus zarpazos&rdquo;</em>. Pero tambi\u00e9n nos dice que incluso en el desamor hay esperanza.</p>\n<p>Sigamos adelante y gritemos <strong>que el amor es un misterio y que importa solo a dos</strong>.</p>\n<!--more-->\n\n<p>De Luz Casal, cantante gallega de una intensidad provocadora, la Audioteca Toledana orgullosamente presenta del disco <strong><em>Como la flor prometida</em></strong>:</p>\n<p><strong>T\u00edtulo:</strong> Besar\u00e9 el suelo\n<strong>Autor:</strong> Mar\u00eda Luz Casal Paz, firma como Luz Casal\n<strong>Int\u00e9rprete:</strong> Luz Casal</p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\n  var songlist = new Array(1);\n  songlist[0] = new Object();\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/besare_el_suelo.mp3\";\n  songlist[0].ogg = \"//media.toledano.org/audioteca/besare_el_suelo.ogg\";\n  songlist[0].cover = \"//media.toledano.org/audioteca/besare_el_suelo.jpg\";\n  songlist[0].title = \"Besar\u00e9 el suelo\";\n  songlist[0].artist = \"Luz Casal\";\n</script>\n\n<blockquote>\n<p>Cuanto m\u00e1s bella es la vida<br>\nm\u00e1s feroces sus zarpazos,<br>\ncuantos m\u00e1s frutos consigo<br>\nm\u00e1s cerca estoy de perder.  </p>\n<p>Por una caricia tuya<br>\ntoco el cielo con las manos<br>\npero s\u00e9 que si te marchas,<br>\nbesar\u00e9 el suelo otra vez.  </p>\n<p>Grita al mundo, rompe el aire<br>\nhasta que muera tu voz,<br>\nque el amor es un misterio<br>\ny que importa s\u00f3lo a dos,<br>\ncorreremos por las calles,<br>\ngritaremos tu y yo<br>\nque el amor es un misterio<br>\ny que importa s\u00f3lo a dos.  </p>\n<p>Yo no quiero cusar pena<br>\ns\u00f3lo por mi condici\u00f3n<br>\nde mujer rota en esencia<br>\ny herida en el coraz\u00f3n:<br>\nNo habr\u00e1 un hombre en este mundo<br>\nque me vuelva a hacer caer,<br>\nporque s\u00e9 que si se marcha<br>\nbesar\u00e9 el suelo otra vez.  </p>\n<p>Cuando llegue el hurac\u00e1n,<br>\nque seguro ha de venir,<br>\npor marcharte de mis brazos,<br>\npor escaparte de m\u00ed.<br>\nPensar\u00e9 que fuimos grandes,<br>\npensar\u00e9 que fuimos dos,<br>\nt\u00fa en tu cuerpo, yo en el m\u00edo<br>\ny un s\u00f3lo coraz\u00f3n.</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "besare-el-suelo-otra-vez", "status": 1, "featured": false, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 103, "fields": {"idx": "30522476-6742-4f1e-b871-f63ce6612d3e", "creado": "2017-07-29T05:16:45.363Z", "modificado": "2017-07-29T23:30:07.509Z", "title": "Di\u00e1logo entre el Papa y Jesucristo", "summary": "", "body": "Title:  Di\u00e1logo entre el Papa y Jesucristo   \r\nDate: 2016-02-22 17:16:38\r\nCategory: audioteca\r\nTags: salsa, lang:es, trova \r\nSummary: \r\n\r\nEn 1978 el reci\u00e9n electo papa Juan Pablo II visit\u00f3 M\u00e9xico, en lo que fue su primer viaje fuera de Italia. Espec\u00edficamente, visit\u00f3 la Ciudad de M\u00e9xico, Guadalajara, Puebla y Monterrey. Lo recibi\u00f3 con honores de Jefe de Estado, el entonces presidente Jos\u00e9 L\u00f3pez Portillo. __Jos\u00e9 de Molina__, _cantautor_ de protesta, realiz\u00f3 una severa cr\u00edtica a su visita y a los jerarcas de la Iglesia; y no solo eso, en su genialidad, la hizo a ritmo de salsa.\r\n\r\nLa __Audioteca Toledana__, en una super exclusiva trae hasta ustedes, del album __\"Salsa Roja\"__, el texto y la canci\u00f3n __\"Di\u00e1logo entre el Papa y Jesucristo\"__.\r\n\r\nNo digo mas.\r\n\r\n### Texto\r\n\r\nEl Papa en M\u00e9xico. El desbordamiento total. Los sentimientos seudo-religiosos a flor de piel. Durante tres d\u00edas la Ciudad de M\u00e9xico qued\u00f3 en manos de la fanaticada. Posteriormente, suceder\u00eda lo mismo en Guadalajara, Monterrey y Puebla. Dato curioso, estas tres ciudades visitadas, representan el cord\u00f3n umbilical y cadena que nos ahoga y nos ata econ\u00f3micamente al capital extranjero.\r\n\r\n&mdash; _\"\u00a1Espont\u00e1nea! \u00a1La reacci\u00f3n fue espont\u00e1nea!\"_ &mdash; Gritaban y _cacareaban_ las beatas, los _mochos_ y los voceros de la poderosamente rica Iglesia mexicana, aunando sus _aullidos_ a los de Televisa y la prensa reaccionaria; es decir, el 99% del periodismo nacional.\r\n\r\nTodos unidos manipularon a un pueblo ingenuo, hu\u00e9rfano y miserable, para que vieran en la figura de un hombre tan mortal y tan ef\u00edmero, pero tan poderosamente capitalista como lo es el Papa ni mas ni menos que al representante de Dios en la Tierra.\r\n\r\nY se tendieron todas las trampas, los grupos financieros tan recalcitrantemente reaccionarios, encabezados con el Grupo Alfa de Monterrey, Banamex, Bancomer, Televisa, etc., enajenaron y enga\u00f1aron a un pueblo tradicionalmente creyente, a\u00fan antes de la Colonia: al pueblo mexicano.\r\n\r\nMagn\u00edfico servicio les ha prestado el Papa a los mercaderes, precisamente a quienes Cristo despreciaba y algunas o varias veces los arrojara a fuetazos del tiempo de Dios.\r\n\r\n<div style=\"padding: 15px;\">\r\n  <cite>\r\n    <p>Y te hicieron creer pueblo m\u00edo<br>  \r\n    que el mismo Dios hab\u00eda bajado a bendecirte.<br>  \r\n    Y te durmieron mucho mas de lo que estabas,  <br>\r\n    y te enga\u00f1aron con falsas alabanzas,  <br>\r\n    te arrullaron con cantos de sirena,  <br>\r\n    te ofrecieron un Dios trasnacional televisado.<br>  \r\n    mientras el financiero tibur\u00f3n se relam\u00eda  <br>\r\n    y el avaro comerciante mil ch\u00e1charas papales de vend\u00eda.</p>  \r\n\r\n    <p>Y se fue Monse\u00f1or,  <br>\r\n    vol\u00f3 hac\u00eda Roma,  <br>\r\n    a contar lo millones de la gira  <br>\r\n    mientras un pueblo hambriento  <br> \r\n    de pan y de fe mira hacia el cielo  <br>\r\n    y en su enorme soledad,   <br>\r\n    solo suspira</p>\r\n  </cite>\r\n</div>\r\n\r\n### Di\u00e1logo entre el Papa y Jesucristo\r\n__Letra y M\u00fasica:__ Jos\u00e9 de Molina\r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\n  var songlist = new Array(1);\r\n  songlist[0] = new Object();\r\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/dialogo.mp3\";\r\n  songlist[0].ogg = \"//media.toledano.org/audioteca/dialogo.ogg\";\r\n  songlist[0].cover = \"//media.toledano.org/audioteca/dialogo.jpg\";\r\n  songlist[0].title = \"Di\u00e1logo entre el Papa y Jesucristo\";\r\n  songlist[0].artist = \"Jos\u00e9 de Molina\";     \r\n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\r\n</script>\r\n\r\n> Sucedi\u00f3 en el Vaticano  \r\nlo que nunca se hab\u00eda visto,  \r\nel Papa vi\u00f3 a Jesucristo   \r\ny estuvo hablando con \u00e9l __(2)__\r\n\r\n>Cristo le dijo enojado:  \r\n\u2014 \"No comprendo, no comprendo,  \r\nla forma en que est\u00e1s viviendo;  \r\ndices que me representas,  \r\ny con el lujo que ostentas,  \r\nno puedes representarme   \r\nsino mas bien denigrarme.  \r\n\r\n> \" Yo no tuve ni una choza  \r\ny tu hasta palacios tienes   \r\n\u00a1y con lujo desmedido!  \r\nEn nombre de Dios te pido  \r\nme digas por fin qui\u00e9n eres,  \r\n\u00bfpor qu\u00e9 usurpas mis deberes?  \r\n\r\n>\u201d A ver compara si puedes,  \r\nesa ropa extraordinaria   \r\ncon mi pobre indumentaria,   \r\ntan sencilla y proletaria,  \r\n\u00a1compara si te conviene!  \r\n\r\n>\u201d \u00a1Mira al frente no te agaches!  \r\nDi que semejanza notas  \r\nentre tus lujosas botas   \r\ny mis humildes huaraches;  \r\nentre tus medias de seda    \r\ny mis calcetas con parches.  \r\n\r\n>\u201d Yo con mi l\u00edmpido aliento  \r\ndi comida al pueblo hambriento,  \r\ntan solo con cinco panes   \r\ny una botella de vino  \r\ny una fe para el camino.  \r\n\r\n>\" T\u00fa, con mill\u00f3n de millones,  \r\nno veo que te dispones.    \r\n\u00bfArrojar desde tu silla   \r\nal hambriento una tortilla?  \r\n\u00bfY quieres alimentarlo  \r\ncon serm\u00f3n y fantas\u00eda?  \r\n\r\n>\u201d Y si acaparar pudieras  \r\ntodo el oro de la tierra  \r\ny desatar una guerra  \r\nescud\u00e1ndote en mi cruz,  \r\nestoy seguro \u00a1lo har\u00edas!  \r\n\r\n>\u201d Ahora dime honestamente  \r\n\u00bfa cu\u00e1ntos pobres arruinas  \r\npara llevar en tu frente  \r\nesas diademas tan finas?  \r\nY compara esa riqueza  \r\ncon mi corona de espinas.  \r\n\r\n>\u201d Ya sacude tu demencia  \r\ny deja esa residencia;  \r\nrecuerda que es capital  \r\nel pecado de avaricia;  \r\nest\u00e1s traicionando a Dios  \r\ncon tu enga\u00f1o y tu codicia.  \r\n\r\n>\u201d Dile a los miles de empleados  \r\nque tienes por todo el mundo  \r\nque Cristo no es mercanc\u00eda  \r\nque ya rompan su alcanc\u00eda,  \r\nporque los pobres del mundo  \r\nla romper\u00e1n alg\u00fan d\u00eda.\u201d  \r\n\r\n>Cuando el Papa despert\u00f3  \r\na todo pulm\u00f3n grit\u00f3:  \r\n\u2014 \u201c\u00a1Lo que nunca se hab\u00eda visto:  \r\nvi realmente a Jesucristo!  \r\nY estuve hablando con \u00e9l __(2)__  \r\n\r\n>\u201d Me dijo cosas preciosas  \r\nque no les puedo contar.  \r\nSolo les puedo decir  \r\nque al cielo me ha de llevar.  \r\nY entre Dios Padre y el Hijo,  \r\nen medio me ha de sentar.\u201d  \r\n\r\n>Y el doctor que lo atend\u00eda,  \r\nrespondi\u00f3: \u2014 \u201cSu Se\u00f1or\u00eda,   \r\nhoy tiene por desventura  \r\ncuarenta de calentura.  \r\n\r\n>\u201d Hoy tiene por desventura,  \r\ncuarenta de calentura   \r\ny se va \u00a1a la sepultura!\u201d", "extend": "", "pub_date": "2016-02-22T23:16:38Z", "summary_html": "", "body_html": "<p>En 1978 el reci\u00e9n electo papa Juan Pablo II visit\u00f3 M\u00e9xico, en lo que fue su primer viaje fuera de Italia. Espec\u00edficamente, visit\u00f3 la Ciudad de M\u00e9xico, Guadalajara, Puebla y Monterrey. Lo recibi\u00f3 con honores de Jefe de Estado, el entonces presidente Jos\u00e9 L\u00f3pez Portillo. <strong>Jos\u00e9 de Molina</strong>, <em>cantautor</em> de protesta, realiz\u00f3 una severa cr\u00edtica a su visita y a los jerarcas de la Iglesia; y no solo eso, en su genialidad, la hizo a ritmo de salsa.</p>\n<p>La <strong>Audioteca Toledana</strong>, en una super exclusiva trae hasta ustedes, del album <strong>&ldquo;Salsa Roja&rdquo;</strong>, el texto y la canci\u00f3n <strong>&ldquo;Di\u00e1logo entre el Papa y Jesucristo&rdquo;</strong>.</p>\n<p>No digo mas.</p>\n<h3 id=\"texto\">Texto</h3>\n<p>El Papa en M\u00e9xico. El desbordamiento total. Los sentimientos seudo-religiosos a flor de piel. Durante tres d\u00edas la Ciudad de M\u00e9xico qued\u00f3 en manos de la fanaticada. Posteriormente, suceder\u00eda lo mismo en Guadalajara, Monterrey y Puebla. Dato curioso, estas tres ciudades visitadas, representan el cord\u00f3n umbilical y cadena que nos ahoga y nos ata econ\u00f3micamente al capital extranjero.</p>\n<p>&mdash; <em>&ldquo;\u00a1Espont\u00e1nea! \u00a1La reacci\u00f3n fue espont\u00e1nea!&rdquo;</em> &mdash; Gritaban y <em>cacareaban</em> las beatas, los <em>mochos</em> y los voceros de la poderosamente rica Iglesia mexicana, aunando sus <em>aullidos</em> a los de Televisa y la prensa reaccionaria; es decir, el 99% del periodismo nacional.</p>\n<p>Todos unidos manipularon a un pueblo ingenuo, hu\u00e9rfano y miserable, para que vieran en la figura de un hombre tan mortal y tan ef\u00edmero, pero tan poderosamente capitalista como lo es el Papa ni mas ni menos que al representante de Dios en la Tierra.</p>\n<p>Y se tendieron todas las trampas, los grupos financieros tan recalcitrantemente reaccionarios, encabezados con el Grupo Alfa de Monterrey, Banamex, Bancomer, Televisa, etc., enajenaron y enga\u00f1aron a un pueblo tradicionalmente creyente, a\u00fan antes de la Colonia: al pueblo mexicano.</p>\n<p>Magn\u00edfico servicio les ha prestado el Papa a los mercaderes, precisamente a quienes Cristo despreciaba y algunas o varias veces los arrojara a fuetazos del tiempo de Dios.</p>\n<div style=\"padding: 15px;\">\n  <cite>\n    <p>Y te hicieron creer pueblo m\u00edo<br>  \n    que el mismo Dios hab\u00eda bajado a bendecirte.<br>  \n    Y te durmieron mucho mas de lo que estabas,  <br>\n    y te enga\u00f1aron con falsas alabanzas,  <br>\n    te arrullaron con cantos de sirena,  <br>\n    te ofrecieron un Dios trasnacional televisado.<br>  \n    mientras el financiero tibur\u00f3n se relam\u00eda  <br>\n    y el avaro comerciante mil ch\u00e1charas papales de vend\u00eda.</p>\n\n    <p>Y se fue Monse\u00f1or,  <br>\n    vol\u00f3 hac\u00eda Roma,  <br>\n    a contar lo millones de la gira  <br>\n    mientras un pueblo hambriento  <br> \n    de pan y de fe mira hacia el cielo  <br>\n    y en su enorme soledad,   <br>\n    solo suspira</p>\n  </cite>\n</div>\n\n<h3 id=\"dialogo-entre-el-papa-y-jesucristo\">Di\u00e1logo entre el Papa y Jesucristo</h3>\n<p><strong>Letra y M\u00fasica:</strong> Jos\u00e9 de Molina</p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\n  var songlist = new Array(1);\n  songlist[0] = new Object();\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/dialogo.mp3\";\n  songlist[0].ogg = \"//media.toledano.org/audioteca/dialogo.ogg\";\n  songlist[0].cover = \"//media.toledano.org/audioteca/dialogo.jpg\";\n  songlist[0].title = \"Di\u00e1logo entre el Papa y Jesucristo\";\n  songlist[0].artist = \"Jos\u00e9 de Molina\";     \n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\n</script>\n\n<blockquote>\n<p>Sucedi\u00f3 en el Vaticano<br>\nlo que nunca se hab\u00eda visto,<br>\nel Papa vi\u00f3 a Jesucristo <br>\ny estuvo hablando con \u00e9l <strong>(2)</strong></p>\n<p>Cristo le dijo enojado:<br>\n\u2014 &ldquo;No comprendo, no comprendo,<br>\nla forma en que est\u00e1s viviendo;<br>\ndices que me representas,<br>\ny con el lujo que ostentas,<br>\nno puedes representarme <br>\nsino mas bien denigrarme.  </p>\n<p>&rdquo; Yo no tuve ni una choza<br>\ny tu hasta palacios tienes <br>\n\u00a1y con lujo desmedido!<br>\nEn nombre de Dios te pido<br>\nme digas por fin qui\u00e9n eres,<br>\n\u00bfpor qu\u00e9 usurpas mis deberes?  </p>\n<p>\u201d A ver compara si puedes,<br>\nesa ropa extraordinaria <br>\ncon mi pobre indumentaria, <br>\ntan sencilla y proletaria,<br>\n\u00a1compara si te conviene!  </p>\n<p>\u201d \u00a1Mira al frente no te agaches!<br>\nDi que semejanza notas<br>\nentre tus lujosas botas <br>\ny mis humildes huaraches;<br>\nentre tus medias de seda  <br>\ny mis calcetas con parches.  </p>\n<p>\u201d Yo con mi l\u00edmpido aliento<br>\ndi comida al pueblo hambriento,<br>\ntan solo con cinco panes <br>\ny una botella de vino<br>\ny una fe para el camino.  </p>\n<p>&rdquo; T\u00fa, con mill\u00f3n de millones,<br>\nno veo que te dispones.  <br>\n\u00bfArrojar desde tu silla <br>\nal hambriento una tortilla?<br>\n\u00bfY quieres alimentarlo<br>\ncon serm\u00f3n y fantas\u00eda?  </p>\n<p>\u201d Y si acaparar pudieras<br>\ntodo el oro de la tierra<br>\ny desatar una guerra<br>\nescud\u00e1ndote en mi cruz,<br>\nestoy seguro \u00a1lo har\u00edas!  </p>\n<p>\u201d Ahora dime honestamente<br>\n\u00bfa cu\u00e1ntos pobres arruinas<br>\npara llevar en tu frente<br>\nesas diademas tan finas?<br>\nY compara esa riqueza<br>\ncon mi corona de espinas.  </p>\n<p>\u201d Ya sacude tu demencia<br>\ny deja esa residencia;<br>\nrecuerda que es capital<br>\nel pecado de avaricia;<br>\nest\u00e1s traicionando a Dios<br>\ncon tu enga\u00f1o y tu codicia.  </p>\n<p>\u201d Dile a los miles de empleados<br>\nque tienes por todo el mundo<br>\nque Cristo no es mercanc\u00eda<br>\nque ya rompan su alcanc\u00eda,<br>\nporque los pobres del mundo<br>\nla romper\u00e1n alg\u00fan d\u00eda.\u201d  </p>\n<p>Cuando el Papa despert\u00f3<br>\na todo pulm\u00f3n grit\u00f3:<br>\n\u2014 \u201c\u00a1Lo que nunca se hab\u00eda visto:<br>\nvi realmente a Jesucristo!<br>\nY estuve hablando con \u00e9l <strong>(2)</strong>  </p>\n<p>\u201d Me dijo cosas preciosas<br>\nque no les puedo contar.<br>\nSolo les puedo decir<br>\nque al cielo me ha de llevar.<br>\nY entre Dios Padre y el Hijo,<br>\nen medio me ha de sentar.\u201d  </p>\n<p>Y el doctor que lo atend\u00eda,<br>\nrespondi\u00f3: \u2014 \u201cSu Se\u00f1or\u00eda, <br>\nhoy tiene por desventura<br>\ncuarenta de calentura.  </p>\n<p>\u201d Hoy tiene por desventura,<br>\ncuarenta de calentura <br>\ny se va \u00a1a la sepultura!\u201d</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "dialogo-entre-el-papa-y-jesucristo", "status": 1, "featured": false, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 104, "fields": {"idx": "d72225a3-1959-4676-9730-68410fd0f830", "creado": "2017-07-29T05:18:15.922Z", "modificado": "2017-07-29T05:19:14.906Z", "title": "Cambios en la 9001:2015", "summary": "", "body": "Title: Cambios en la 9001:2015    \r\nDate: 2016-11-02 15:30\r\nCategory: calidad\r\nTags: iso9001, requisitos\r\nSeries: Transici\u00f3n 9001:2015\r\nSummary: \r\n\r\nEn septiembre de 2015, se aprob\u00f3 la versi\u00f3n final de la familia de normas ISO 9000 que son las relacionadas con los Sistemas de Gesti\u00f3n de la Calidad y sus requisitos. Los cambios con la nueva versi\u00f3n son muy importantes porque todas las organizaciones nos enfrentaremos a estos muy pronto. Por ejemplo, las acreditaciones con la versi\u00f3n ISO 9001:2008 terminar\u00e1n en marzo de 2017. \r\n\r\nEs mas, es posible que una organizaci\u00f3n sea auditada bajo la versi\u00f3n 2008, pero el certificado expedido tendr\u00e1 una duraci\u00f3n de un a\u00f1o y solo servir\u00e1 para que dicha organizaci\u00f3n tenga un plazo adicional para hacer la transici\u00f3n.\r\n\r\n## Los cambios\r\n\r\nEsto son algunos de los cambios que he identificado en la nueva versi\u00f3n de la norma.\r\n\r\n- Lo primero es que ahora son 7 principios de gesti\u00f3n y no 8. Adem\u00e1s cambian ligeramente los conceptos. El m\u00e1s notable es que ahora no aparece el principio _Enfoque de sistemas para la gesti\u00f3n_. Tambi\u00e9n cambia el que antes se llamaba _Participaci\u00f3n de las personas_ que ahora es __Compromisos y Competencias de las personas__. La _Mejora Continua_ para a ser simplemente __Mejora__. El _Enfoque basado en hechos para la toma de decisiones_ ahora es __Decisiones informadas__. Y el de _Relaciones m\u00fatuamente beneficiosas con el proveedor_ ahora es __Gesti\u00f3n de relacionaes__.  \r\n  \r\n| ISO 9001:2008             | ISO 9001:2015            |\r\n|---------------------------|--------------------------|\r\n| 1. Enfoque en el cliente  | 1. Enfoque en el cliente |\r\n| 2. Liderazgo              | 2. Lidereazgo            |\r\n| 3. Participaci\u00f3n de las personas  | 3. Compromiso y participaci\u00f3n de las personas   |\r\n| 4. Enfoque basado en procesos   | 4. Enfoque basado en procesos   |\r\n| 5. Enfoque de sistemas para la gesti\u00f3n |   |\r\n| 6. Mejora continua  | 5. Mejora  |\r\n| 7. Enfoque basado en hechos para la toma de decisiones | 6. Decisiones informadas |\r\n| 8. Relaciones mutuamente beneficiosas | 7. Gesti\u00f3n de las relaciones |", "extend": "", "pub_date": "2016-11-02T21:30:00Z", "summary_html": "", "body_html": "<p>En septiembre de 2015, se aprob\u00f3 la versi\u00f3n final de la familia de normas ISO 9000 que son las relacionadas con los Sistemas de Gesti\u00f3n de la Calidad y sus requisitos. Los cambios con la nueva versi\u00f3n son muy importantes porque todas las organizaciones nos enfrentaremos a estos muy pronto. Por ejemplo, las acreditaciones con la versi\u00f3n ISO 9001:2008 terminar\u00e1n en marzo de 2017. </p>\n<p>Es mas, es posible que una organizaci\u00f3n sea auditada bajo la versi\u00f3n 2008, pero el certificado expedido tendr\u00e1 una duraci\u00f3n de un a\u00f1o y solo servir\u00e1 para que dicha organizaci\u00f3n tenga un plazo adicional para hacer la transici\u00f3n.</p>\n<h2 id=\"los-cambios\">Los cambios</h2>\n<p>Esto son algunos de los cambios que he identificado en la nueva versi\u00f3n de la norma.</p>\n<ul>\n<li>Lo primero es que ahora son 7 principios de gesti\u00f3n y no 8. Adem\u00e1s cambian ligeramente los conceptos. El m\u00e1s notable es que ahora no aparece el principio <em>Enfoque de sistemas para la gesti\u00f3n</em>. Tambi\u00e9n cambia el que antes se llamaba <em>Participaci\u00f3n de las personas</em> que ahora es <strong>Compromisos y Competencias de las personas</strong>. La <em>Mejora Continua</em> para a ser simplemente <strong>Mejora</strong>. El <em>Enfoque basado en hechos para la toma de decisiones</em> ahora es <strong>Decisiones informadas</strong>. Y el de <em>Relaciones m\u00fatuamente beneficiosas con el proveedor</em> ahora es <strong>Gesti\u00f3n de relacionaes</strong>.  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>ISO 9001:2008</th>\n<th>ISO 9001:2015</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1. Enfoque en el cliente</td>\n<td>1. Enfoque en el cliente</td>\n</tr>\n<tr>\n<td>2. Liderazgo</td>\n<td>2. Lidereazgo</td>\n</tr>\n<tr>\n<td>3. Participaci\u00f3n de las personas</td>\n<td>3. Compromiso y participaci\u00f3n de las personas</td>\n</tr>\n<tr>\n<td>4. Enfoque basado en procesos</td>\n<td>4. Enfoque basado en procesos</td>\n</tr>\n<tr>\n<td>5. Enfoque de sistemas para la gesti\u00f3n</td>\n<td></td>\n</tr>\n<tr>\n<td>6. Mejora continua</td>\n<td>5. Mejora</td>\n</tr>\n<tr>\n<td>7. Enfoque basado en hechos para la toma de decisiones</td>\n<td>6. Decisiones informadas</td>\n</tr>\n<tr>\n<td>8. Relaciones mutuamente beneficiosas</td>\n<td>7. Gesti\u00f3n de las relaciones</td>\n</tr>\n</tbody>\n</table>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "cambios-en-la-90012015", "status": 1, "featured": false, "category": 4, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 105, "fields": {"idx": "af6a266b-08b4-4a44-a918-b1b780e3f3fb", "creado": "2017-07-29T05:20:38.413Z", "modificado": "2017-08-03T04:12:36.989Z", "title": "Acreditaci\u00f3n y Autorizaci\u00f3n", "summary": "", "body": "Title: Acreditaci\u00f3n y Autorizaci\u00f3n    \r\nDate: 2016-10-25 00:46:33\r\nCategory: desarrollo\r\nTags: django, restful, api\r\nSeries: Angular para Djangonautas\r\nSummary: \r\n\r\nAntes de entrar de lleno al desarrollo del __Cuadro de Mando Integral *reimaginado*__ usando AngularJS y Django, debemos comprender algunos conceptos _torales_ del paradigma usado.\r\n\r\nEn la definici\u00f3n del paradigma REST, uno de sus principios fundamentales es que las operaciones deben ser _sin estado_. \r\n\r\nEsto quiere decir que el servidor no debe guardar informaci\u00f3n del cliente. Sin embargo, este es el funcionamiento normal de Django y est\u00e1 activado [cuando creamos un proyecto](https://es.wikipedia.org/wiki/Representational_State_Transfer) por medio de las __sesiones__. Las sesiones son muy f\u00e1ciles de usar, porque podemos delegar a Django operaciones como el ingreso (_login_) y la salida (_logout_). El _middleware_ `django.contrib.sessions.middleware.SessionMiddleware` se encarga de almacenar en la base de datos[^1] la informaci\u00f3n sobre la sesi\u00f3n, de modo que siempre este disponible en el objeto `request`.\r\n\r\n[^1]: Generalmente, porque [hay varias formas de almacenar sesiones](https://docs.djangoproject.com/es/1.10/topics/http/sessions/#configuring-the-session-engine), como las _cookies_, cach\u00e9 de memoria y archivos.\r\n\r\n## Sin estado\r\nComo dec\u00eda al principio, un sistema REST[^2] no debe almacenar el estado de las sesiones. Esta es una _restricci\u00f3n_ y en ingl\u00e9s se llama _stateless_.\r\n\r\n[^2]: Cuando un sistema cumple con los principios del paradigma REST, se le conoce como __*RESTful*__.\r\n\r\nDe acuerdo al inventor de este paradigma de desarrollo, [Roy T. Fielding](https://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm) la restricci\u00f3n _stateless_ se define de la siguiente manera:\r\n\r\n> 5.1.3 sin estado  \r\n>   \r\n> [...] Cada solicitud desde el cliente al servidor debe contener toda la informaci\u00f3n necesaria para comprender dicha solicitud, y no puede tomar ventaja de cualquier contexto almacenado en el servidor. Por lo tanto, el estado de sesi\u00f3n se mantiene por completo en el cliente. [...]\r\nDe modo que, el servidor no tiene que almacenar cualquier estado de la sesi\u00f3n y, en consecuencia, no debe emitir identificadores de sesi\u00f3n.[^3]\r\n\r\n[^3]: [https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_3](https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_3)\r\n\r\n## Acreditaci\u00f3n y Autorizaci\u00f3n\r\n\r\nSi necesitamos acceder a los recursos protegidos de nuestra API que requieran __acreditaci\u00f3n__[^4], cada solicitud debe contener los datos necesarios para poder acreditar adecuadamente nuestra autorizaci\u00f3n para acceder a esos recursos. Y estos datos se env\u00edan en cada solicitud en el encabezado `Authorization`[^5] de HTTP.\r\n\r\n[^4]: Es muy frecuente que se use _autenticaci\u00f3n_ como la traducci\u00f3n de _Authentication_, pero la traducci\u00f3n correcta es _acreditaci\u00f3n_.\r\n[^5]: El protocolo HTTP se define en el RFC 7235: [https://tools.ietf.org/html/rfc7235#section-4.2](https://tools.ietf.org/html/rfc7235#section-4.2).\r\n\r\nSi tiene acceso a los recursos protegidos que requieren autenticaci\u00f3n, cada solicitud debe contener todos los datos necesarios para ser autenticados adecuadamente / autorizado. Y datos de autenticaci\u00f3n deben pertenecer al encabezado de autorizaci\u00f3n HTTP est\u00e1ndar. A partir de la RFC 7235:\r\n\r\nY ya que no podemos _acreditar_ nuestra _autorizaci\u00f3n_ para consultar los recursos protegidos usando sesiones como lo hacemos normalmente en Django, debemos usar otros m\u00e9todos. Para efectos did\u00e1cticos, usaremos __Tokens__, pero de eso hablaremos en el siguiente art\u00edculo de esta serie.", "extend": "", "pub_date": "2016-10-25T05:46:33Z", "summary_html": "", "body_html": "<p>Antes de entrar de lleno al desarrollo del <strong>Cuadro de Mando Integral <em>reimaginado</em></strong> usando AngularJS y Django, debemos comprender algunos conceptos <em>torales</em> del paradigma usado.</p>\n<p>En la definici\u00f3n del paradigma REST, uno de sus principios fundamentales es que las operaciones deben ser <em>sin estado</em>. </p>\n<p>Esto quiere decir que el servidor no debe guardar informaci\u00f3n del cliente. Sin embargo, este es el funcionamiento normal de Django y est\u00e1 activado <a href=\"https://es.wikipedia.org/wiki/Representational_State_Transfer\">cuando creamos un proyecto</a> por medio de las <strong>sesiones</strong>. Las sesiones son muy f\u00e1ciles de usar, porque podemos delegar a Django operaciones como el ingreso (<em>login</em>) y la salida (<em>logout</em>). El <em>middleware</em> <code>django.contrib.sessions.middleware.SessionMiddleware</code> se encarga de almacenar en la base de datos<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> la informaci\u00f3n sobre la sesi\u00f3n, de modo que siempre este disponible en el objeto <code>request</code>.</p>\n<h2 id=\"sin-estado\">Sin estado</h2>\n<p>Como dec\u00eda al principio, un sistema REST<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> no debe almacenar el estado de las sesiones. Esta es una <em>restricci\u00f3n</em> y en ingl\u00e9s se llama <em>stateless</em>.</p>\n<p>De acuerdo al inventor de este paradigma de desarrollo, <a href=\"https://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm\">Roy T. Fielding</a> la restricci\u00f3n <em>stateless</em> se define de la siguiente manera:</p>\n<blockquote>\n<p>5.1.3 sin estado  </p>\n<p>[&hellip;] Cada solicitud desde el cliente al servidor debe contener toda la informaci\u00f3n necesaria para comprender dicha solicitud, y no puede tomar ventaja de cualquier contexto almacenado en el servidor. Por lo tanto, el estado de sesi\u00f3n se mantiene por completo en el cliente. [&hellip;]\nDe modo que, el servidor no tiene que almacenar cualquier estado de la sesi\u00f3n y, en consecuencia, no debe emitir identificadores de sesi\u00f3n.<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup></p>\n</blockquote>\n<h2 id=\"acreditacion-y-autorizacion\">Acreditaci\u00f3n y Autorizaci\u00f3n</h2>\n<p>Si necesitamos acceder a los recursos protegidos de nuestra API que requieran <strong>acreditaci\u00f3n</strong><sup id=\"fnref-4\"><a class=\"footnote-ref\" href=\"#fn-4\">4</a></sup>, cada solicitud debe contener los datos necesarios para poder acreditar adecuadamente nuestra autorizaci\u00f3n para acceder a esos recursos. Y estos datos se env\u00edan en cada solicitud en el encabezado <code>Authorization</code><sup id=\"fnref-5\"><a class=\"footnote-ref\" href=\"#fn-5\">5</a></sup> de HTTP.</p>\n<p>Si tiene acceso a los recursos protegidos que requieren autenticaci\u00f3n, cada solicitud debe contener todos los datos necesarios para ser autenticados adecuadamente / autorizado. Y datos de autenticaci\u00f3n deben pertenecer al encabezado de autorizaci\u00f3n HTTP est\u00e1ndar. A partir de la RFC 7235:</p>\n<p>Y ya que no podemos <em>acreditar</em> nuestra <em>autorizaci\u00f3n</em> para consultar los recursos protegidos usando sesiones como lo hacemos normalmente en Django, debemos usar otros m\u00e9todos. Para efectos did\u00e1cticos, usaremos <strong>Tokens</strong>, pero de eso hablaremos en el siguiente art\u00edculo de esta serie.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Generalmente, porque <a href=\"https://docs.djangoproject.com/es/1.10/topics/http/sessions/#configuring-the-session-engine\">hay varias formas de almacenar sesiones</a>, como las <em>cookies</em>, cach\u00e9 de memoria y archivos.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Cuando un sistema cumple con los principios del paradigma REST, se le conoce como <strong><em>RESTful</em></strong>.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p><a href=\"https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_3\">https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_3</a>&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-4\">\n<p>Es muy frecuente que se use <em>autenticaci\u00f3n</em> como la traducci\u00f3n de <em>Authentication</em>, pero la traducci\u00f3n correcta es <em>acreditaci\u00f3n</em>.&#160;<a class=\"footnote-backref\" href=\"#fnref-4\" title=\"Jump back to footnote 4 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-5\">\n<p>El protocolo HTTP se define en el RFC 7235: <a href=\"https://tools.ietf.org/html/rfc7235#section-4.2\">https://tools.ietf.org/html/rfc7235#section-4.2</a>.&#160;<a class=\"footnote-backref\" href=\"#fnref-5\" title=\"Jump back to footnote 5 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "acreditacion-y-autorizacion", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 106, "fields": {"idx": "89ee6eb4-9d31-4d4f-9f0a-77442703f11b", "creado": "2017-07-29T05:21:13.371Z", "modificado": "2017-07-29T05:21:13.371Z", "title": "Angular para Djangonautas", "summary": "", "body": "Title: Angular para Djangonautas    \r\nDate: 2016-10-22 21:21:31\r\nCategory: desarrollo\r\nTags: frontend, angular, django \r\nSeries: Angular para Djangonautas\r\nSummary: \r\n\r\nLa verdad es que no encontr\u00e9 mucha informaci\u00f3n que me ayudar\u00e1 a comprender como funcionaba __AngularJS__. Tengo poca experiencia en JavaScript, as\u00ed que comet\u00ed el error de evitar usarlo.\r\n\r\n### Qu\u00e9 es AngularJS\r\nEs un marco de trabajo, como Django, pero para lo que se llama el _frontend_, es decir, para la parte que interact\u00faa con el cliente. Est\u00e1 escrito en JavaScript y permite modificar la p\u00e1gina web, el DOM para presentar y manipular informaci\u00f3n de forma muy eficiente.\r\n\r\nLa forma de usar las funciones de Angular es id\u00e9ntica a la de Django: `{{ }}` por lo tanto hacen cortocircuito. Mi primera opci\u00f3n fue cambiar estos delimitadores en AngularJS para poder usar las plantillas de Django, pero despu\u00e9s me di cuenta que **es innecesario**. AngularJS, desde el punto de vista de Django, se sirve como archivos est\u00e1ticos.\r\n\r\n### Un proyecto aparte\r\nEntender que AngularJS se debe tratar como est\u00e1ticos es toral para un mejor manejo del _framework_.\r\n\r\nDe hecho, es incluso mejor manejar los proyectos por separado: por un lado la aplicaci\u00f3n del lado de servidor con Django, es decir el __backend__ y por otro la aplicaci\u00f3n del lado del cliente, o sea, el __frontend__.\r\n\r\nUna de las razones mas importantes para separar el _backend_ de Django en un proyecto aparte es que este __debe ser agn\u00f3stico__, es decir, no debe estar programado para un _frontend_ espec\u00edfico, sino para cualquiera.\r\n\r\nEsto es as\u00ed: Django ofrece una API, una interface program\u00e1tica de la aplicaci\u00f3n para que cualquiera, literalmente __cualquier__   _frontend_ pueda interactuar con ella, _consumirla_. \r\n\r\nAcostumbrado  como estoy a usar siempre las plantillas de Django, este paradigma fue un cambio total.\r\n\r\n### La API de Django\r\nUna interface program\u00e1tica de aplicaciones o API por sus siglas en ingl\u00e9s es como el men\u00fa de los restaurantes, expone a los clientes los productos que se pueden consumir. No te explica como los hacen, solo te muestran el resultado final. \r\n\r\nCuando escribimos una API en Django, debemos saber __que estamos ofreciendo__ antes de poder servirlo. Generalmente son operaciones comunes (como en los restaurantes, la mayor\u00eda tienen un men\u00fa): las operaciones que llaman CRUD por sus siglas en ingl\u00e9s Create (_crear_), Read (_leer_), Update (_actualizar_) y Delete (_borrar_).\r\n\r\nPara generar API, el protocolo m\u00e1s com\u00fan es [REST](https://es.wikipedia.org/wiki/Representational_State_Transfer), un protocolo para realizar operaciones bien definidas sobre datos __sin estado__, donde cada mensaje tiene toda la informaci\u00f3n necesaria, incluyendo autenticaci\u00f3n y autorizaci\u00f3n.\r\n\r\nPara Django, el paquete mas com\u00fan para crear API REST es [Django REST Framework](http://www.django-rest-framework.org) que de forma realmente muy simple permite crear APIs con todos los verbos que usa una API: GET, POST, PUT, DELETE, etc.\r\n\r\nEsta API va en el servidor _backend_, por lo que en el _frontend_ va otro servidor. De ah\u00ed que tener dos proyectos independientes tenga mucho sentido.\r\n\r\n### AngularJS y Django\r\nAngularJS es un framework a toda regla, que funciona del lado del cliente. Junto a una aplicaci\u00f3n de AngularJS, las plantillas de Django son verdaderamente tontas, y as\u00ed deben de quedarse. Pero \u00bfpara que seguir hablando de las plantillas de Django si ya no las volveremos a usar?\r\n\r\nAngularJS permite traer los datos que sirve la API[^1] de Django y presentarlos de forma din\u00e1mica, con caracter\u00edsticas que son al mismo tiempo simples pero muy potentes.\r\n\r\nPero funcionan de forma independiente de Django. As\u00ed como Django puede crear una API sin importar qui\u00e9n la consuma, as\u00ed tambi\u00e9n AngularJS puede consumir APIs sin importar quien la sirva. Un argumento m\u00e1s para separar los proyectos.\r\n\r\nEn esta serie, intentar\u00e9 registrar mis intentos por crear una aplicaci\u00f3n con AngularJS y Django. Est\u00e9n pendientes.\r\n\r\n[^1]: En el argot se dice _\"consumir\"_.", "extend": "", "pub_date": "2016-10-23T02:21:31Z", "summary_html": "", "body_html": "<p>La verdad es que no encontr\u00e9 mucha informaci\u00f3n que me ayudar\u00e1 a comprender como funcionaba <strong>AngularJS</strong>. Tengo poca experiencia en JavaScript, as\u00ed que comet\u00ed el error de evitar usarlo.</p>\n<h3 id=\"que-es-angularjs\">Qu\u00e9 es AngularJS</h3>\n<p>Es un marco de trabajo, como Django, pero para lo que se llama el <em>frontend</em>, es decir, para la parte que interact\u00faa con el cliente. Est\u00e1 escrito en JavaScript y permite modificar la p\u00e1gina web, el DOM para presentar y manipular informaci\u00f3n de forma muy eficiente.</p>\n<p>La forma de usar las funciones de Angular es id\u00e9ntica a la de Django: <code>{{ }}</code> por lo tanto hacen cortocircuito. Mi primera opci\u00f3n fue cambiar estos delimitadores en AngularJS para poder usar las plantillas de Django, pero despu\u00e9s me di cuenta que <strong>es innecesario</strong>. AngularJS, desde el punto de vista de Django, se sirve como archivos est\u00e1ticos.</p>\n<h3 id=\"un-proyecto-aparte\">Un proyecto aparte</h3>\n<p>Entender que AngularJS se debe tratar como est\u00e1ticos es toral para un mejor manejo del <em>framework</em>.</p>\n<p>De hecho, es incluso mejor manejar los proyectos por separado: por un lado la aplicaci\u00f3n del lado de servidor con Django, es decir el <strong>backend</strong> y por otro la aplicaci\u00f3n del lado del cliente, o sea, el <strong>frontend</strong>.</p>\n<p>Una de las razones mas importantes para separar el <em>backend</em> de Django en un proyecto aparte es que este <strong>debe ser agn\u00f3stico</strong>, es decir, no debe estar programado para un <em>frontend</em> espec\u00edfico, sino para cualquiera.</p>\n<p>Esto es as\u00ed: Django ofrece una API, una interface program\u00e1tica de la aplicaci\u00f3n para que cualquiera, literalmente <strong>cualquier</strong>   <em>frontend</em> pueda interactuar con ella, <em>consumirla</em>. </p>\n<p>Acostumbrado  como estoy a usar siempre las plantillas de Django, este paradigma fue un cambio total.</p>\n<h3 id=\"la-api-de-django\">La API de Django</h3>\n<p>Una interface program\u00e1tica de aplicaciones o API por sus siglas en ingl\u00e9s es como el men\u00fa de los restaurantes, expone a los clientes los productos que se pueden consumir. No te explica como los hacen, solo te muestran el resultado final. </p>\n<p>Cuando escribimos una API en Django, debemos saber <strong>que estamos ofreciendo</strong> antes de poder servirlo. Generalmente son operaciones comunes (como en los restaurantes, la mayor\u00eda tienen un men\u00fa): las operaciones que llaman CRUD por sus siglas en ingl\u00e9s Create (<em>crear</em>), Read (<em>leer</em>), Update (<em>actualizar</em>) y Delete (<em>borrar</em>).</p>\n<p>Para generar API, el protocolo m\u00e1s com\u00fan es <a href=\"https://es.wikipedia.org/wiki/Representational_State_Transfer\">REST</a>, un protocolo para realizar operaciones bien definidas sobre datos <strong>sin estado</strong>, donde cada mensaje tiene toda la informaci\u00f3n necesaria, incluyendo autenticaci\u00f3n y autorizaci\u00f3n.</p>\n<p>Para Django, el paquete mas com\u00fan para crear API REST es <a href=\"http://www.django-rest-framework.org\">Django REST Framework</a> que de forma realmente muy simple permite crear APIs con todos los verbos que usa una API: GET, POST, PUT, DELETE, etc.</p>\n<p>Esta API va en el servidor <em>backend</em>, por lo que en el <em>frontend</em> va otro servidor. De ah\u00ed que tener dos proyectos independientes tenga mucho sentido.</p>\n<h3 id=\"angularjs-y-django\">AngularJS y Django</h3>\n<p>AngularJS es un framework a toda regla, que funciona del lado del cliente. Junto a una aplicaci\u00f3n de AngularJS, las plantillas de Django son verdaderamente tontas, y as\u00ed deben de quedarse. Pero \u00bfpara que seguir hablando de las plantillas de Django si ya no las volveremos a usar?</p>\n<p>AngularJS permite traer los datos que sirve la API<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> de Django y presentarlos de forma din\u00e1mica, con caracter\u00edsticas que son al mismo tiempo simples pero muy potentes.</p>\n<p>Pero funcionan de forma independiente de Django. As\u00ed como Django puede crear una API sin importar qui\u00e9n la consuma, as\u00ed tambi\u00e9n AngularJS puede consumir APIs sin importar quien la sirva. Un argumento m\u00e1s para separar los proyectos.</p>\n<p>En esta serie, intentar\u00e9 registrar mis intentos por crear una aplicaci\u00f3n con AngularJS y Django. Est\u00e9n pendientes.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>En el argot se dice <em>&ldquo;consumir&rdquo;</em>.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "angular-para-djangonautas", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 107, "fields": {"idx": "c2532c8a-25d3-416e-bfe7-cf3ef3a94f8b", "creado": "2017-07-29T05:22:29.048Z", "modificado": "2017-08-02T02:50:09.392Z", "title": "La Quinta Ola", "summary": "Una chica tiene que salvar al mundo, rescatar a su hermano y descubrir a su verdadero amor, mientras que combate contra extraterrestres que no son lo que parecen", "body": "Title: La Quinta Ola  \r\nDate: 2016-02-21 17:18:34  \r\nCategory: opinion    \r\nTags:  sci-fi, novela, critica \r\nSummary:  Una chica tiene que salvar al mundo, rescatar a su hermano y descubrir a su verdadero amor, mientras que combate contra extraterrestres que no son lo que parecen.\r\n\r\n<div class='malla'>\r\n  <div class='row'>\r\n    <div class='col-md-4 col-xs-12'>\r\n    <img alt=\"Portada de La Quinta Ola\" width=\"100%\" src=\"https://media.toledano.org/images/2016/02/la_quinta_ola.jpg\" />\r\n</div>\r\n<div class=\"col-md-8 col-xs-12\" >\r\n<cite>Despu\u00e9s de la primera ola\u2026 la tierra queda a oscuras.\r\n<br>\r\nDespu\u00e9s de la segunda ola\u2026 s\u00f3lo huyen los afortunados.\r\n<br>\r\nDespu\u00e9s de la tercera ola\u2026 s\u00f3lo sobreviven los desafortunados.\r\n<br>\r\nDespu\u00e9s de la cuarta ola\u2026 ya no puedes confiar en nadie.\r\n<br>\r\nEn el amanecer de la quinta ola, Cassie est\u00e1 huyendo por un tramo desolado de autov\u00eda. Huye de ellos. De esos seres que, aunque parezcan humanos, deambulan por el campo eliminando a cualquiera, dispersando y aislando a los escasos supervivientes.\r\n<br>\r\nCassie sabe que la \u00fanica opci\u00f3n para seguir con vida es seguir sola. Sin confiar en nadie. Hasta que se encuentra con Evan Walker, un enigm\u00e1tico joven que parece capaz de ayudarla a encontrar a su hermano. Ha llegado el momento de tomar una elecci\u00f3n definitiva: confiar o perder la esperanza, desafiar o rendirse\u2026 abandonar o luchar.</cite>\r\n</div>\r\n</div></div>\r\n\r\nCreo sinceramente que el g\u00e9nero ya deber\u00eda estar agotado. _En serio_. La muchchacha que adem\u00e1s de salvar a alguien de su familia (la hermana o el hermano, la mam\u00e1, etc.) en un mundo fant\u00e1stico o en el futuro post-apocal\u00edptico. Por si fuera poco, tiene que salvar al planeta de los opresores o malvados, ya sean vampiros, demonios, extraterrestres o simples mortales opresores.\r\n\r\nPues __La Quinta Ola__ no falla en ninguna de esas caracter\u00edsticas, lo que lo hace una novela bastante predecible. Se nota que el autor, __Rick Yancey__ escribi\u00f3 esta saga para que sea llevada al cine. Esperemos que despu\u00e9s del fiasco de la primera parte no se animen a la segunda o la tercera.\r\n\r\nLa segunda novela se llama __El mar infinito__, aunque no tengo idea del por qu\u00e9. La terce parte de la saga, se llama __The Last Star__ y no tiene t\u00edtulo en espa\u00f1ol, porque todav\u00eda est\u00e1 en preventa.\r\n\r\nMuy malita la novela, la verdad. Pero entretenida, para una tarde floja. Vale $86.40 la versi\u00f3n para Kindle en [Amazon M\u00e9xico](https://www.amazon.com.mx/dp/B00FFBV6NO/).", "extend": "", "pub_date": "2016-02-21T23:18:34Z", "summary_html": "<p>Una chica tiene que salvar al mundo, rescatar a su hermano y descubrir a su verdadero amor, mientras que combate contra extraterrestres que no son lo que parecen</p>", "body_html": "<div class='malla'>\n  <div class='row'>\n    <div class='col-md-4 col-xs-12'>\n    <img alt=\"Portada de La Quinta Ola\" width=\"100%\" src=\"https://media.toledano.org/images/2016/02/la_quinta_ola.jpg\" />\n</div>\n<div class=\"col-md-8 col-xs-12\" >\n<cite>Despu\u00e9s de la primera ola\u2026 la tierra queda a oscuras.\n<br>\nDespu\u00e9s de la segunda ola\u2026 s\u00f3lo huyen los afortunados.\n<br>\nDespu\u00e9s de la tercera ola\u2026 s\u00f3lo sobreviven los desafortunados.\n<br>\nDespu\u00e9s de la cuarta ola\u2026 ya no puedes confiar en nadie.\n<br>\nEn el amanecer de la quinta ola, Cassie est\u00e1 huyendo por un tramo desolado de autov\u00eda. Huye de ellos. De esos seres que, aunque parezcan humanos, deambulan por el campo eliminando a cualquiera, dispersando y aislando a los escasos supervivientes.\n<br>\nCassie sabe que la \u00fanica opci\u00f3n para seguir con vida es seguir sola. Sin confiar en nadie. Hasta que se encuentra con Evan Walker, un enigm\u00e1tico joven que parece capaz de ayudarla a encontrar a su hermano. Ha llegado el momento de tomar una elecci\u00f3n definitiva: confiar o perder la esperanza, desafiar o rendirse\u2026 abandonar o luchar.</cite>\n</div>\n</div></div>\n\n<p>Creo sinceramente que el g\u00e9nero ya deber\u00eda estar agotado. <em>En serio</em>. La muchchacha que adem\u00e1s de salvar a alguien de su familia (la hermana o el hermano, la mam\u00e1, etc.) en un mundo fant\u00e1stico o en el futuro post-apocal\u00edptico. Por si fuera poco, tiene que salvar al planeta de los opresores o malvados, ya sean vampiros, demonios, extraterrestres o simples mortales opresores.</p>\n<p>Pues <strong>La Quinta Ola</strong> no falla en ninguna de esas caracter\u00edsticas, lo que lo hace una novela bastante predecible. Se nota que el autor, <strong>Rick Yancey</strong> escribi\u00f3 esta saga para que sea llevada al cine. Esperemos que despu\u00e9s del fiasco de la primera parte no se animen a la segunda o la tercera.</p>\n<p>La segunda novela se llama <strong>El mar infinito</strong>, aunque no tengo idea del por qu\u00e9. La terce parte de la saga, se llama <strong>The Last Star</strong> y no tiene t\u00edtulo en espa\u00f1ol, porque todav\u00eda est\u00e1 en preventa.</p>\n<p>Muy malita la novela, la verdad. Pero entretenida, para una tarde floja. Vale $86.40 la versi\u00f3n para Kindle en <a href=\"https://www.amazon.com.mx/dp/B00FFBV6NO/\">Amazon M\u00e9xico</a>.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "la-quinta-ola", "status": 1, "featured": false, "category": 5, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 108, "fields": {"idx": "578e96ea-8005-4eea-a41b-5186b8eff8b4", "creado": "2017-07-29T05:29:28.193Z", "modificado": "2017-07-29T05:29:28.193Z", "title": "De la ausencia y de t\u00ed", "summary": "", "body": "Title: De la ausencia y de t\u00ed     \r\nDate: 2017-03-26 22:51\r\nCategory: audioteca\r\nTags: trova, lang:es  \r\nSummary: \r\n\r\nHace mucho que la Audioteca Toledana no publicaba nada, y aprovechando que cierra un ciclo en mi vida y, por supuesto, inicia otro, dedico este art\u00edculo (y es el \u00faltimo que le dedico) a mi pasado.\r\n\r\nDe **Silvio Rodr\u00edguez Dom\u00ednguez**, interpretada por \u00e9l mismo, la Audioteca Toledana se complace en presentar: _\"De la ausencia y de ti\"_. Una bella y melanc\u00f3lica canci\u00f3n compuesta en 1969, dedicada a una mexicana (de ah\u00ed el subt\u00edtulo).\r\n\r\nPara cuando todav\u00eda hay recuerdos compartidos, \"De la ausencia y de ti\":\r\n\r\n**Nombre:** De la Ausencia y de t\u00ed (a Velia)  \r\n**Autor:** Silvio Rodr\u00edguez Dom\u00ednguez  \r\n**Int\u00e9rprete:** Silvio Rodr\u00edguez\r\n\r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\n  var songlist = new Array(1);\r\n  songlist[0] = new Object();\r\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/20160618-ausencia.mp3\";\r\n  songlist[0].ogg = \"//media.toledano.org/audioteca/20160618-ausencia.ogg\";\r\n  songlist[0].cover = \"//media.toledano.org/audioteca/20160618-ausencia.jpg\";\r\n  songlist[0].title = \"De la ausencia y de ti (a Velia)\";\r\n  songlist[0].artist = \"Silvio Rodr\u00edguez Dom\u00ednguez\";     \r\n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\r\n</script>\r\n\r\n>\r\nAhora s\u00f3lo me queda buscarme de amante  \r\nla respiraci\u00f3n   \r\nNo mirar a los mapas,  \r\nseguir en mi mismo.  \r\nNo andar ciertas calles,  \r\nolvidar que fue m\u00edo una vez cierto libro,  \r\no hacer la canci\u00f3n\r\n\r\n>\r\nY decirte que todo esta igual  \r\nla ciudad, los amigos y el mar  \r\nesperando por ti,  \r\nesperando por ti.\r\n\r\n>\r\nSigo yendo a Tet\u00e9 semana por semana\r\n\u00bfte acuerdas de all\u00e1?  \r\nHoy habl\u00f3 de fusiles despidiendo muertos  \r\nYo se que ella me ama  \r\nEs por eso tal vez que te siento en su sala,  \r\naunque ahora no est\u00e1s.\r\n\r\n>\r\nY se siente en la conversaci\u00f3n,  \r\no ser\u00e1 que tengo la impresi\u00f3n,  \r\nde la ausencia y de ti,  \r\nde la ausencia y de ti.\r\n\r\n> \r\nNo quisiera un fracaso en el sabio delito  \r\nque es recordar.  \r\nNi en el inevitable defecto que es  \r\nla nostalgia de cosas peque\u00f1as y tontas   \r\ncomo en el tumulto pisarte los pies,  \r\ny re\u00edr y re\u00edr y re\u00edr,\r\n\r\n>\r\nMadrugadas sin ir a dormir.  \r\nSi, es distinto sin ti.  \r\nMuy distinto sin ti.\r\n\r\n>\r\nLas ideas son balas hoy d\u00eda y no puedo  \r\nusar flores por ti.   \r\nHoy quisiera ser viejo y muy sabio y poderte decir   \r\nlo que aqu\u00ed no he podido decirte,  \r\nhablar como un \u00e1rbol  \r\ncon mi sombra hacia ti.\r\n\r\n>\r\nComo un libro salvado en el mar,  \r\ncomo un muerto que aprende a besar,  \r\npara ti, para ti,  \r\npara ti, para ti.", "extend": "", "pub_date": "2017-03-27T04:51:00Z", "summary_html": "", "body_html": "<p>Hace mucho que la Audioteca Toledana no publicaba nada, y aprovechando que cierra un ciclo en mi vida y, por supuesto, inicia otro, dedico este art\u00edculo (y es el \u00faltimo que le dedico) a mi pasado.</p>\n<p>De <strong>Silvio Rodr\u00edguez Dom\u00ednguez</strong>, interpretada por \u00e9l mismo, la Audioteca Toledana se complace en presentar: <em>&ldquo;De la ausencia y de ti&rdquo;</em>. Una bella y melanc\u00f3lica canci\u00f3n compuesta en 1969, dedicada a una mexicana (de ah\u00ed el subt\u00edtulo).</p>\n<p>Para cuando todav\u00eda hay recuerdos compartidos, &ldquo;De la ausencia y de ti&rdquo;:</p>\n<p><strong>Nombre:</strong> De la Ausencia y de t\u00ed (a Velia)<br>\n<strong>Autor:</strong> Silvio Rodr\u00edguez Dom\u00ednguez<br>\n<strong>Int\u00e9rprete:</strong> Silvio Rodr\u00edguez</p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\n  var songlist = new Array(1);\n  songlist[0] = new Object();\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/20160618-ausencia.mp3\";\n  songlist[0].ogg = \"//media.toledano.org/audioteca/20160618-ausencia.ogg\";\n  songlist[0].cover = \"//media.toledano.org/audioteca/20160618-ausencia.jpg\";\n  songlist[0].title = \"De la ausencia y de ti (a Velia)\";\n  songlist[0].artist = \"Silvio Rodr\u00edguez Dom\u00ednguez\";     \n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\n</script>\n\n<blockquote>\n<p>Ahora s\u00f3lo me queda buscarme de amante<br>\nla respiraci\u00f3n <br>\nNo mirar a los mapas,<br>\nseguir en mi mismo.<br>\nNo andar ciertas calles,<br>\nolvidar que fue m\u00edo una vez cierto libro,<br>\no hacer la canci\u00f3n</p>\n<p>Y decirte que todo esta igual<br>\nla ciudad, los amigos y el mar<br>\nesperando por ti,<br>\nesperando por ti.</p>\n<p>Sigo yendo a Tet\u00e9 semana por semana\n\u00bfte acuerdas de all\u00e1?<br>\nHoy habl\u00f3 de fusiles despidiendo muertos<br>\nYo se que ella me ama<br>\nEs por eso tal vez que te siento en su sala,<br>\naunque ahora no est\u00e1s.</p>\n<p>Y se siente en la conversaci\u00f3n,<br>\no ser\u00e1 que tengo la impresi\u00f3n,<br>\nde la ausencia y de ti,<br>\nde la ausencia y de ti.</p>\n<p>No quisiera un fracaso en el sabio delito<br>\nque es recordar.<br>\nNi en el inevitable defecto que es<br>\nla nostalgia de cosas peque\u00f1as y tontas <br>\ncomo en el tumulto pisarte los pies,<br>\ny re\u00edr y re\u00edr y re\u00edr,</p>\n<p>Madrugadas sin ir a dormir.<br>\nSi, es distinto sin ti.<br>\nMuy distinto sin ti.</p>\n<p>Las ideas son balas hoy d\u00eda y no puedo<br>\nusar flores por ti. <br>\nHoy quisiera ser viejo y muy sabio y poderte decir <br>\nlo que aqu\u00ed no he podido decirte,<br>\nhablar como un \u00e1rbol<br>\ncon mi sombra hacia ti.</p>\n<p>Como un libro salvado en el mar,<br>\ncomo un muerto que aprende a besar,<br>\npara ti, para ti,<br>\npara ti, para ti.</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "de-la-ausencia-y-de-ti", "status": 1, "featured": false, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 109, "fields": {"idx": "e0308e60-f53a-4cb2-9b8c-21231afe0469", "creado": "2017-07-29T05:31:25.220Z", "modificado": "2017-07-29T05:32:16.389Z", "title": "La Aristocracia del Barrio", "summary": "", "body": "Title: La Aristocracia del Barrio    \r\nDate: 2017-05-15 23:00:00\r\nCategory: audioteca\r\nTags: trova, lang:es\r\nSummary: \r\n\r\nBuscando informaci\u00f3n sobre esta canci\u00f3n, encontr\u00e9 que algunas personas pensaban que esta \u201caristocracia\u201d era la nueva clase media del final del franquismo. Pero creo que en realidad es un poco anterior, entre los a\u00f1os 40 y los 50.\r\n\r\nYo siempre me imagin\u00e9 a la \u201caristocracia del barrio\u201d como a unos pachuchos. Baquetones sin trabajo, delincuentes menores, con aires de grandeza, mis\u00f3ginos, egoc\u00e9ntricos y con un sentido de territorialidad muy marcado. Como Tin-t\u00e1n en \u201cEl Rey del barrio\u201d. \r\n\r\nLa canci\u00f3n es una estampa de la vida urbana en la Espa\u00f1a de la post-guerra. Y de repente, el barrio puede ser el Barrio de la Merced, por ejemplo. Lo mismo da que sea el de Barcelona o la Ciudad de Mexico, ah\u00ed estaba la aristocracia del barrio.\r\n\r\nMejor me quedo con la estampa que imagino de esta canci\u00f3n que hoy presentamos en la _Audioteca Toledana_. Sin traducci\u00f3n, por supuesto.\r\n\r\nDel disco _\u201c\u2026Para piel de manzana\u201d_ editado en 1975, grabado en los estudios EMI-Ode\u0443n de Barcelona y Kirios de Madrid bajo la direcci\u00f3n musical de Ricard Miralles.\r\n\r\nT\u00edtulo: **La aristocracia del barrio**  \r\nLetra y M\u00fasica: **Joan Manuel Serrat**, nombre art\u00edstico de *Juan Manuel Serrat Teresa*.\r\n\r\n<div id=\"player\"></div>\r\n<script type=\"text/javascript\">\r\n  var songlist = new Array(1);\r\n  songlist[0] = new Object();\r\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/2017/aristocracia_barrio.mp3\";\r\n  songlist[0].cover = \"//media.toledano.org/audioteca/2017/aristocracia_barrio.jpg\";\r\n  songlist[0].title = \"La aristocracia del barrio\";\r\n  songlist[0].artist = \"Joan Manuel Serrat\";     \r\n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\r\n</script>\r\n\r\n> Entre el bar y la _bolera_  \r\n> rondan las aceras  \r\n> controlando el barrio desde una esquina.  \r\n> En el \u00edndice una alhaja.  \r\n> El pelo a navaja.  \r\n> Salpicando bet\u00fan y brillantina.  \r\n> \u00d3igales silbar...  \r\n> Parecen estar  \r\n> esper\u00e1ndole vecino  \r\n> para jugar  \r\n> un mano a mano a los chinos.  \r\n>   \r\n> Son la aristocracia del barrio.  \r\n> Lo mejor de cada casa  \r\n> tomando el sol en la plaza.  \r\n>   \r\n> Tienen a la madre anciana,  \r\n> virgen a la hermana  \r\n> y en las Ramblas, una que es del asunto.  \r\n> Un padre que muri\u00f3 un d\u00eda  \r\n> y la filosof\u00eda  \r\n> del tapete, el compa\u00f1ero y el punto.  \r\n> M\u00edrenlo burlar...  \r\n> Sin pesta\u00f1ear...  \r\n> Naci\u00f3 chulo y sin remedio.  \r\n> Pide con seis  \r\n> y se planta en dos y medio.  \r\n>   \r\n> Son la aristocracia del barrio.  \r\n> Tah\u00fares, supersticiosos,  \r\n> charlatanes y orgullosos.  \r\n>   \r\n> Traficando en transistores,  \r\n> en encendedores,  \r\n> en cosm\u00e9ticos y en bisuter\u00eda  \r\n> hasta que el cante de un socio  \r\n> les cierre el negocio  \r\n> como poco por seis meses y un d\u00eda.  \r\n> Igual que se van  \r\n> reaparecer\u00e1n  \r\n> hechos un figur\u00edn, pero  \r\n> con el color y el perfume del _talego_ .  \r\n>   \r\n> Son la aristocracia del barrio.  \r\n> Tr\u00e1nsfugas independientes  \r\n> mejorando a los presentes.  \r\n>   \r\n> Si les sigue usted los pasos  \r\n> ver\u00e1 m\u00e1s de un caso  \r\n> en la puerta de un Juzgado de Guardia,  \r\n> que por la hembra y el _retaco_  \r\n> deja hasta el tabaco  \r\n> y hurga en las demandas de La Vanguardia.  \r\n> Envejecer\u00e1n  \r\n> horneando pan.  \r\n> Cada cual muere a su modo.  \r\n> Qu\u00e9 se va a hacer  \r\n> si ha de haber gente pa' todo.  \r\n>   \r\n> Y la aristocracia del barrio  \r\n> sentimentales y buenos  \r\n> en el bar, le echan de menos.", "extend": "", "pub_date": "2017-05-16T04:00:00Z", "summary_html": "", "body_html": "<p>Buscando informaci\u00f3n sobre esta canci\u00f3n, encontr\u00e9 que algunas personas pensaban que esta \u201caristocracia\u201d era la nueva clase media del final del franquismo. Pero creo que en realidad es un poco anterior, entre los a\u00f1os 40 y los 50.</p>\n<p>Yo siempre me imagin\u00e9 a la \u201caristocracia del barrio\u201d como a unos pachuchos. Baquetones sin trabajo, delincuentes menores, con aires de grandeza, mis\u00f3ginos, egoc\u00e9ntricos y con un sentido de territorialidad muy marcado. Como Tin-t\u00e1n en \u201cEl Rey del barrio\u201d. </p>\n<p>La canci\u00f3n es una estampa de la vida urbana en la Espa\u00f1a de la post-guerra. Y de repente, el barrio puede ser el Barrio de la Merced, por ejemplo. Lo mismo da que sea el de Barcelona o la Ciudad de Mexico, ah\u00ed estaba la aristocracia del barrio.</p>\n<p>Mejor me quedo con la estampa que imagino de esta canci\u00f3n que hoy presentamos en la <em>Audioteca Toledana</em>. Sin traducci\u00f3n, por supuesto.</p>\n<p>Del disco <em>\u201c\u2026Para piel de manzana\u201d</em> editado en 1975, grabado en los estudios EMI-Ode\u0443n de Barcelona y Kirios de Madrid bajo la direcci\u00f3n musical de Ricard Miralles.</p>\n<p>T\u00edtulo: <strong>La aristocracia del barrio</strong><br>\nLetra y M\u00fasica: <strong>Joan Manuel Serrat</strong>, nombre art\u00edstico de <em>Juan Manuel Serrat Teresa</em>.</p>\n<div id=\"player\"></div>\n\n<script type=\"text/javascript\">\n  var songlist = new Array(1);\n  songlist[0] = new Object();\n  songlist[0].mp3 = \"//media.toledano.org/audioteca/2017/aristocracia_barrio.mp3\";\n  songlist[0].cover = \"//media.toledano.org/audioteca/2017/aristocracia_barrio.jpg\";\n  songlist[0].title = \"La aristocracia del barrio\";\n  songlist[0].artist = \"Joan Manuel Serrat\";     \n  $(\"#player\").xeMusicPlayer({songlist: songlist, theme: 3, mode: 1});\n</script>\n\n<blockquote>\n<p>Entre el bar y la <em>bolera</em><br>\nrondan las aceras<br>\ncontrolando el barrio desde una esquina.<br>\nEn el \u00edndice una alhaja.<br>\nEl pelo a navaja.<br>\nSalpicando bet\u00fan y brillantina.<br>\n\u00d3igales silbar&hellip;<br>\nParecen estar<br>\nesper\u00e1ndole vecino<br>\npara jugar<br>\nun mano a mano a los chinos.  </p>\n<p>Son la aristocracia del barrio.<br>\nLo mejor de cada casa<br>\ntomando el sol en la plaza.  </p>\n<p>Tienen a la madre anciana,<br>\nvirgen a la hermana<br>\ny en las Ramblas, una que es del asunto.<br>\nUn padre que muri\u00f3 un d\u00eda<br>\ny la filosof\u00eda<br>\ndel tapete, el compa\u00f1ero y el punto.<br>\nM\u00edrenlo burlar&hellip;<br>\nSin pesta\u00f1ear&hellip;<br>\nNaci\u00f3 chulo y sin remedio.<br>\nPide con seis<br>\ny se planta en dos y medio.  </p>\n<p>Son la aristocracia del barrio.<br>\nTah\u00fares, supersticiosos,<br>\ncharlatanes y orgullosos.  </p>\n<p>Traficando en transistores,<br>\nen encendedores,<br>\nen cosm\u00e9ticos y en bisuter\u00eda<br>\nhasta que el cante de un socio<br>\nles cierre el negocio<br>\ncomo poco por seis meses y un d\u00eda.<br>\nIgual que se van<br>\nreaparecer\u00e1n<br>\nhechos un figur\u00edn, pero<br>\ncon el color y el perfume del <em>talego</em> .  </p>\n<p>Son la aristocracia del barrio.<br>\nTr\u00e1nsfugas independientes<br>\nmejorando a los presentes.  </p>\n<p>Si les sigue usted los pasos<br>\nver\u00e1 m\u00e1s de un caso<br>\nen la puerta de un Juzgado de Guardia,<br>\nque por la hembra y el <em>retaco</em><br>\ndeja hasta el tabaco<br>\ny hurga en las demandas de La Vanguardia.<br>\nEnvejecer\u00e1n<br>\nhorneando pan.<br>\nCada cual muere a su modo.<br>\nQu\u00e9 se va a hacer<br>\nsi ha de haber gente pa&rsquo; todo.  </p>\n<p>Y la aristocracia del barrio<br>\nsentimentales y buenos<br>\nen el bar, le echan de menos.</p>\n</blockquote>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "la-aristocracia-del-barrio", "status": 1, "featured": false, "category": 2, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 110, "fields": {"idx": "43d9a555-32a7-4a46-81b1-004e7dae9bf1", "creado": "2017-07-29T05:32:57.577Z", "modificado": "2017-07-29T05:32:57.577Z", "title": "Configurando un proyecto en Node", "summary": "", "body": "Title: Configurando un proyecto en Node    \r\nDate: 2017-05-06 18:33:46\r\nCategory: desarrollo\r\nTags: node.js, es6, javasctipt \r\nSummary: \r\nSeries: Programaci\u00f3n Funcional\r\n\r\n\r\nAhora que estamos iniciando con **Node.js** es importante definir algunas cosas que afectaran el desarrollo del proyecto, por ejemplo, el uso de funciones de flecha (que se llaman _Fat Arrow_) de __ES6__ como base para el estilo de programaci\u00f3n funcional.\r\n\r\n### Configuraci\u00f3n inicial\r\nLa configuraci\u00f3n inicial es muy f\u00e1cil porque el programa `npm` nos lleva de la mano.\r\n\r\nLo primero que tenemos que hacer es crear el directorio en el que reside nuestro proyecto. Como se me acabaron las ideas y estoy usando otras combinaciones para el _Cuadro de Mando Integral_, en esta ocasi\u00f3n, el proyecto se llama `cerebro`.\r\n\r\n```bash\r\n$ md cerebro && cd cerebro\r\n```\r\n\r\nEn este directorio vamos a crear el archivo de configuraci\u00f3n, solo tenemos que ejecutar la siguiente orden:\r\n\r\n```bash\r\n$ npm init\r\n```\r\n\r\n\u2026y contestar el sencillo cuestionario que genera al final un archivo `package.json`. Para este proyecto, se ve as\u00ed:\r\n\r\n```json\r\n{\r\n  \"name\": \"cerebro\",\r\n  \"version\": \"0.1.0\",\r\n  \"description\": \"El nuevo servidor del SGC\",\r\n  \"main\": \"index.js\",\r\n  \"scripts\": {\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://github.com/SGC-Tlaxcala/cerebro.git\"\r\n  },\r\n  \"keywords\": [\r\n    \"node\",\r\n    \"javascript\",\r\n    \"express\",\r\n    \"mongodb\"\r\n  ],\r\n  \"author\": \"Javier Sanchez Toledano <js.toledano@me.com>\",\r\n  \"license\": \"MIT\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/SGC-Tlaxcala/cerebro/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/SGC-Tlaxcala/cerebro#readme\"\r\n}\r\n```\r\n\r\nEs un archivo `json`, que tiene una sintaxis muy estricta y es como un diccionario. Las claves son bastante expl\u00edcitas y describen el proyecto con claridad.\r\n\r\n### C\u00f3mo agregar m\u00f3dulos o librer\u00edas\r\nNode.js cuenta con un gestor de paquetes, llamado `npm`, que funciona de forma muy parecida a `apt` o `pip`[^1] que instala los m\u00f3dulos y librer\u00edas que necesita un proyecto _junto con todas sus dependencias_. Tambi\u00e9n hay un programa que le hace competencia llamado [__Yarn__](https://yarnpkg.com) que es muy r\u00e1pido y es el que vamos a usar en este proyecto.\r\n\r\nPara instalar `yarn` usaremos _Homebrew_ en mac OSX; `apt` en Ubuntu o Debian o el gestor de paquetes de tu sistema operativo.\r\n\r\n```bash\r\n$ brew install yarn\r\n```\r\n\r\nAhora bien, hay dos tipos de dependencias en un proyecto. Las dependencias del proyecto en si y las que se usan solo en desarrollo. Las dependencias que vamos a agregar a continuaci\u00f3n son de este segundo tipo, solo para desarrollo, por lo tanto, al instalarlas vamos a indicar su tipo con la marca `--dev`:\r\n\r\n```bash\r\n$ yarn add --dev babel-cli babel-preset-es2015\r\n```\r\n\r\nEl comando anterior descarga [__Babel__](https://babeljs.io), que es un compilador de JavaScript. Traduce el c\u00f3digo ECMAScript  6 que vamos a usar este proyecto a la versi\u00f3n ECMAScript 2015 que es la m\u00e1s com\u00fan. De esta manera usaremos la versi\u00f3n m\u00e1s moderna del lenguaje y nos aseguramos que funcionar\u00e1 correctamente en cualquier parte.\r\n\r\nEste comando __modifica__ nuestro archivo `packages.json` de modo que cuando llevemos el c\u00f3digo fuente a otra m\u00e1quina solo escribiremos `yarn` y tendremos el mismo entorno en todos lados. Nuestro archivo se ve as\u00ed.\r\n\r\n```json\r\n{\r\n  ...\r\n  ,\r\n  \"devDependencies\": {\r\n    \"babel-cli\": \"^6.24.1\",\r\n    \"babel-preset-es2015\": \"^6.24.1\"\r\n  }\r\n}\r\n```\r\n\r\n### Configuraci\u00f3n r\u00e1pida de Babel\r\n\r\n_Babel_ es un compilador compuest\u00edsimo y complejo. Lo mejor es consultar su documentaci\u00f3n. Pero para este proyecto queremos que de forma predeterminada produzca c\u00f3digo compatible con ES2015, por lo que vamos a crear un archivo llamado `.babelrc` que usar\u00e1 Babel para su configuraci\u00f3n autom\u00e1tica.\r\n\r\n```json\r\n{\r\n  \"presets\": [\"es2015\"]\r\n}\r\n```\r\n\r\nPara asegurar el funcionamiento de Babel, vamos a crear un peque\u00f1o gui\u00f3n en nuestro archivo `packages.json` que haga la _compilaci\u00f3n_ del c\u00f3digo.\r\n\r\nVamos a agregar en la clave `\"scripts\"` una entrada llamada `start`, que compile nuestro archivo principal.\r\n\r\n```json\r\n{\r\n  ...\r\n   \"scripts\": {\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\r\n    \"start\": \"babel-node src/index.js\"\r\n  },\r\n  ...\r\n}\r\n```\r\n\r\nAhora, vamos a probar el funcionamiento del compilador.\r\n\r\nPrimero, vamos a crear un directorio llamado `src/lib` donde crearemos un archivo `utilidades.js` en el que iremos colocando algunas funciones de ayuda. Por el momento, solo una:\r\n\r\n```js\r\nexport const consola = (mensaje) => console.log(mensaje)\r\n```\r\n\r\nEsta funci\u00f3n que usa la sintaxis de flecha, solo es un sin\u00f3nimo de `console.log()`. \r\n\r\nAhora crearemos en el directorio `src` el archivo `index.js`, en el que importamos nuestra funci\u00f3n y mostramos un mensaje.\r\n\r\n```js\r\nimport { consola } from './lib/utilidades.js'\r\n\r\nconsola('Hola mundo')\r\n```\r\n\r\nSi ejecutamos este archivo con `node` vamos a obtener un error:\r\n\r\n```sh\r\n$ node src/index.js                                                                      \r\n/Volumes/datos/Proyectos/cerebro/src/index.js:1\r\n(function (exports, require, module, __filename, __dirname) { import { consola } from 'lib/utilidades'\r\n                                                              ^^^^^^\r\nSyntaxError: Unexpected token import\r\n```\r\n\r\nPero si ejecutamos el script `run` que tenemos en `packages.json` nuestra salida es la correcta.\r\n\r\n```sh\r\n$ npm run start\r\n\r\n> cerebro@0.1.0 start /Volumes/datos/Proyectos/cerebro\r\n> babel-node src/index.js\r\n\r\nHola mundo\r\n```\r\n\r\n[^1]: La verdad, funciona mejor que `pip`.\r\n\r\nUna vez que hemos verificado el funcionamiento correcto de nuestro entorno, podemos seguir adelante.", "extend": "", "pub_date": "2017-05-06T23:33:46Z", "summary_html": "", "body_html": "<p>Ahora que estamos iniciando con <strong>Node.js</strong> es importante definir algunas cosas que afectaran el desarrollo del proyecto, por ejemplo, el uso de funciones de flecha (que se llaman <em>Fat Arrow</em>) de <strong>ES6</strong> como base para el estilo de programaci\u00f3n funcional.</p>\n<h3 id=\"configuracion-inicial\">Configuraci\u00f3n inicial</h3>\n<p>La configuraci\u00f3n inicial es muy f\u00e1cil porque el programa <code>npm</code> nos lleva de la mano.</p>\n<p>Lo primero que tenemos que hacer es crear el directorio en el que reside nuestro proyecto. Como se me acabaron las ideas y estoy usando otras combinaciones para el <em>Cuadro de Mando Integral</em>, en esta ocasi\u00f3n, el proyecto se llama <code>cerebro</code>.</p>\n<div class=\"codehilite\"><pre><span></span>$ md cerebro <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> cerebro\n</pre></div>\n\n\n<p>En este directorio vamos a crear el archivo de configuraci\u00f3n, solo tenemos que ejecutar la siguiente orden:</p>\n<div class=\"codehilite\"><pre><span></span>$ npm init\n</pre></div>\n\n\n<p>\u2026y contestar el sencillo cuestionario que genera al final un archivo <code>package.json</code>. Para este proyecto, se ve as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;cerebro&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.1.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;El nuevo servidor del SGC&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;main&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;index.js&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;scripts&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;test&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">&quot;repository&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;git&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;git+https://github.com/SGC-Tlaxcala/cerebro.git&quot;</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">&quot;keywords&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;node&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;javascript&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;express&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;mongodb&quot;</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">&quot;author&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Javier Sanchez Toledano &lt;js.toledano@me.com&gt;&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;license&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MIT&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;bugs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://github.com/SGC-Tlaxcala/cerebro/issues&quot;</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">&quot;homepage&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://github.com/SGC-Tlaxcala/cerebro#readme&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Es un archivo <code>json</code>, que tiene una sintaxis muy estricta y es como un diccionario. Las claves son bastante expl\u00edcitas y describen el proyecto con claridad.</p>\n<h3 id=\"como-agregar-modulos-o-librerias\">C\u00f3mo agregar m\u00f3dulos o librer\u00edas</h3>\n<p>Node.js cuenta con un gestor de paquetes, llamado <code>npm</code>, que funciona de forma muy parecida a <code>apt</code> o <code>pip</code><sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> que instala los m\u00f3dulos y librer\u00edas que necesita un proyecto <em>junto con todas sus dependencias</em>. Tambi\u00e9n hay un programa que le hace competencia llamado <a href=\"https://yarnpkg.com\"><strong>Yarn</strong></a> que es muy r\u00e1pido y es el que vamos a usar en este proyecto.</p>\n<p>Para instalar <code>yarn</code> usaremos <em>Homebrew</em> en mac OSX; <code>apt</code> en Ubuntu o Debian o el gestor de paquetes de tu sistema operativo.</p>\n<div class=\"codehilite\"><pre><span></span>$ brew install yarn\n</pre></div>\n\n\n<p>Ahora bien, hay dos tipos de dependencias en un proyecto. Las dependencias del proyecto en si y las que se usan solo en desarrollo. Las dependencias que vamos a agregar a continuaci\u00f3n son de este segundo tipo, solo para desarrollo, por lo tanto, al instalarlas vamos a indicar su tipo con la marca <code>--dev</code>:</p>\n<div class=\"codehilite\"><pre><span></span>$ yarn add --dev babel-cli babel-preset-es2015\n</pre></div>\n\n\n<p>El comando anterior descarga <a href=\"https://babeljs.io\"><strong>Babel</strong></a>, que es un compilador de JavaScript. Traduce el c\u00f3digo ECMAScript  6 que vamos a usar este proyecto a la versi\u00f3n ECMAScript 2015 que es la m\u00e1s com\u00fan. De esta manera usaremos la versi\u00f3n m\u00e1s moderna del lenguaje y nos aseguramos que funcionar\u00e1 correctamente en cualquier parte.</p>\n<p>Este comando <strong>modifica</strong> nuestro archivo <code>packages.json</code> de modo que cuando llevemos el c\u00f3digo fuente a otra m\u00e1quina solo escribiremos <code>yarn</code> y tendremos el mismo entorno en todos lados. Nuestro archivo se ve as\u00ed.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"err\">...</span>\n  <span class=\"err\">,</span>\n  <span class=\"nt\">&quot;devDependencies&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;babel-cli&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^6.24.1&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;babel-preset-es2015&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^6.24.1&quot;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<h3 id=\"configuracion-rapida-de-babel\">Configuraci\u00f3n r\u00e1pida de Babel</h3>\n<p><em>Babel</em> es un compilador compuest\u00edsimo y complejo. Lo mejor es consultar su documentaci\u00f3n. Pero para este proyecto queremos que de forma predeterminada produzca c\u00f3digo compatible con ES2015, por lo que vamos a crear un archivo llamado <code>.babelrc</code> que usar\u00e1 Babel para su configuraci\u00f3n autom\u00e1tica.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;presets&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;es2015&quot;</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Para asegurar el funcionamiento de Babel, vamos a crear un peque\u00f1o gui\u00f3n en nuestro archivo <code>packages.json</code> que haga la <em>compilaci\u00f3n</em> del c\u00f3digo.</p>\n<p>Vamos a agregar en la clave <code>\"scripts\"</code> una entrada llamada <code>start</code>, que compile nuestro archivo principal.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"err\">...</span>\n   <span class=\"nt\">&quot;scripts&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;test&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;start&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;babel-node src/index.js&quot;</span>\n  <span class=\"p\">},</span>\n  <span class=\"err\">...</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Ahora, vamos a probar el funcionamiento del compilador.</p>\n<p>Primero, vamos a crear un directorio llamado <code>src/lib</code> donde crearemos un archivo <code>utilidades.js</code> en el que iremos colocando algunas funciones de ayuda. Por el momento, solo una:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">export</span> <span class=\"kr\">const</span> <span class=\"nx\">consola</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">mensaje</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">mensaje</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Esta funci\u00f3n que usa la sintaxis de flecha, solo es un sin\u00f3nimo de <code>console.log()</code>. </p>\n<p>Ahora crearemos en el directorio <code>src</code> el archivo <code>index.js</code>, en el que importamos nuestra funci\u00f3n y mostramos un mensaje.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">consola</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;./lib/utilidades.js&#39;</span>\n\n<span class=\"nx\">consola</span><span class=\"p\">(</span><span class=\"s1\">&#39;Hola mundo&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Si ejecutamos este archivo con <code>node</code> vamos a obtener un error:</p>\n<div class=\"codehilite\"><pre><span></span>$ node src/index.js                                                                      \n/Volumes/datos/Proyectos/cerebro/src/index.js:1\n<span class=\"o\">(</span><span class=\"k\">function</span> <span class=\"o\">(</span>exports, require, module, __filename, __dirname<span class=\"o\">)</span> <span class=\"o\">{</span> import <span class=\"o\">{</span> consola <span class=\"o\">}</span> from <span class=\"s1\">&#39;lib/utilidades&#39;</span>\n                                                              ^^^^^^\nSyntaxError: Unexpected token import\n</pre></div>\n\n\n<p>Pero si ejecutamos el script <code>run</code> que tenemos en <code>packages.json</code> nuestra salida es la correcta.</p>\n<div class=\"codehilite\"><pre><span></span>$ npm run start\n\n&gt; cerebro@0.1.0 start /Volumes/datos/Proyectos/cerebro\n&gt; babel-node src/index.js\n\nHola mundo\n</pre></div>\n\n\n<p>Una vez que hemos verificado el funcionamiento correcto de nuestro entorno, podemos seguir adelante.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>La verdad, funciona mejor que <code>pip</code>.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "configurando-un-proyecto-en-node", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 111, "fields": {"idx": "09144451-72ff-49fd-9fb2-abee181bfe3a", "creado": "2017-07-29T05:33:29.083Z", "modificado": "2017-08-03T04:09:41.681Z", "title": "LoopBack - un servidor de API", "summary": "", "body": "Title: LoopBack - un servidor de API    \r\nDate: 2017-03-29 13:16:19\r\nCategory: desarrollo\r\nTags: restful, javascript, loopback \r\nSummary: \r\n\r\nAhora que empez\u00f3 el desarrollo del nuevo **Cuadro de Mando Integral**, buscando alternativas para crear el prototipo de las aplicaciones me encontr\u00e9 con [LoopBack](http://loopback.io/), un servidor basado en NodeJS que hace API de manera instant\u00e1nea. \r\n\r\nPara que tengan una idea, en **Django** primero se tienen que crear los modelos, luego el _serializador_, luego los ViewSet y al final agregarlos a la API\u2026 siempre y cuando uses los _endpoints_ de los modelos.  Mientras tanto en  **LoopBack** al definir los modelos se crean al mismo tiempo  la API y su respectivo _endpoint_. \r\n\r\n> Hay una nota muy rara en la p\u00e1gina inicial que dice que IBM est\u00e1 comprometido con el desarrollo _open source_ de este framework. Supongo que hay rumores de cerrar el c\u00f3digo o algo as\u00ed.  \r\n\r\nInstalarlo es f\u00e1cil, como cualquier otro paquete de Node:\r\n\r\n```\r\nrpm install --general loopback-cli\r\n```\r\n\r\no con el _rapid\u00edsimo_ gestor de paquetes `yarn`:\r\n\r\n```\r\nyarn global add loopback-cli\r\n```\r\n\r\nLa interface de consola permite crear el proyecto y los modelos contestando unas simples preguntas. Por ejemplo para crear un proyecto similar al #cmi usamos simplemente `lb`  y respondemos el cuestionario que crear\u00e1 el proyecto.\r\n\r\n```\r\n /Volumes/datos/projects $ lb\r\n\r\n     _-----_\r\n    |       |    \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n    |--(o)--|    \u2502  Let's create a LoopBack \u2502\r\n   `---------\u00b4   \u2502       application!       \u2502\r\n    ( _\u00b4U`_ )    \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n    /___A___\\   /\r\n     |  ~  |\r\n   __'.___.'__\r\n \u00b4   `  |\u00b0 \u00b4 Y `\r\n\r\n? What's the name of your application? lb-cmi\r\n? Enter name of the directory to contain the project: lb-cmi\r\n   create lb-cmi/\r\n     info change the working directory to lb-cmi\r\n\r\n? Which version of LoopBack would you like to use? 3.x (current)\r\n? What kind of application do you have in mind? api-server (A LoopBack API server with local User auth)\r\n```\r\n\r\nDespu\u00e9s de un rato (o de un gran rato si tienes una conexi\u00f3n lenta como la m\u00eda) estaremos en posibilidad de crear nuestro primer modelo.\r\n\r\n## Sitios\r\nNuestro primer modelo va a ser el m\u00e1s simple de todos: los sitios. Tenemos solo cuatro sitios, la delegaci\u00f3n y tres delegaciones. As\u00ed que solo necesitamos un campo `nombre` tipo `string`, un campo `lugar`  tambi\u00e9n tipo `string`  y un campo `tel\u00e9fonos` tipo `object`  para guardar\u2026 pues los tel\u00e9fonos.\r\n\r\n### C\u00f3mo crear modelos\r\nEsto es muy simple usando la _cli_, **dentro de nuestro directorio**:\r\n```\r\n$ lb model\r\n```\r\n\r\nY tenemos un cuestionario que nos gu\u00eda paso a paso para crear el modelo con los campos, que aqu\u00ed se llaman **propiedades**. Vamos a especificar las propiedades de nuestro modelo y cuando terminemos solo debemos dejar en blanco la pregunta.\r\n```\r\nlb model\r\n? Enter the model name: sitio\r\n? Select the data-source to attach sitio to: db (memory)\r\n? Select model's base class PersistedModel\r\n? Expose sitio via the REST API? Yes\r\n? Custom plural form (used to build REST URL): sitios\r\n? Common model or server only? common\r\nLet's add some sitio properties now.\r\n\r\nEnter an empty property name when done.\r\n? Property name: nombre\r\n   invoke   loopback:property\r\n? Property type: string\r\n? Required? Yes\r\n? Default value[leave blank for none]:\r\n\r\nLet's add another sitio property.\r\nEnter an empty property name when done.\r\n? Property name: lugar\r\n   invoke   loopback:property\r\n? Property type: string\r\n? Required? Yes\r\n? Default value[leave blank for none]:\r\n\r\nLet's add another sitio property.\r\nEnter an empty property name when done.\r\n? Property name: telefonos\r\n   invoke   loopback:property\r\n? Property type: object\r\n? Required? No\r\n? Default value[leave blank for none]:\r\n\r\nLet's add another sitio property.\r\nEnter an empty property name when done.\r\n? Property name:\r\n```\r\n\r\nBueno, eso es suficiente. No solo tenemos un modelo, tambi\u00e9n una API y un mont\u00f3n de _endpoints_. El servidor funciona simplemente escribiendo `node .`  lo que nos da dos URL, el servidor y un explorar de la API.\r\n\r\n```\r\n$ node .\r\nWeb server listening at: http://0.0.0.0:3000\r\nBrowse your REST API at http://0.0.0.0:3000/explorer\r\n```\r\n\r\nEl explorador nos muestra todos los _endpoint_ de forma muy completa\r\n\r\nTenemos los verbos comunes en una API RESTful, como GET, POST, PUT, PATCH, y cada uno de estos _endpoints_ tiene las funciones necesarias para funcionar de inmediato.\r\n\r\nVamos a escribir un dato, siguiendo el ejemplo proporcionado, a trav\u00e9s de esta interface para ver el resultado.\r\n\r\n```\r\n{\r\n  \"nombre\":  \"Junta Local\",\r\n  \"lugar\": \"Tlaxcala\",\r\n  \"id\": 0,\r\n  \"telefonos\":  {\r\n    \"Ejecutivo\": \"555 123 456\",\r\n    \"Secretario\": \"555 456 789\",\r\n    \"Registro\": \"246 123 456\"\r\n  }\r\n}\r\n```\r\n\r\nEl sitio genera una l\u00ednea de comando para usar con el programa `curl`:\r\n\r\n```\r\ncurl -X PATCH --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ \\ \r\n   \"nombre\":  \"Junta Local\", \\ \r\n   \"lugar\": \"Tlaxcala\", \\ \r\n   \"id\": 0, \\ \r\n   \"telefonos\":  { \\ \r\n     \"Ejecutivo\": \"555 123 456\", \\ \r\n     \"Secretario\": \"555 456 789\", \\ \r\n     \"Registro\": \"246 123 456\" \\ \r\n   } \\ \r\n }' 'http://localhost:3000/api/sitios'\r\n```\r\n\r\nPero tal como escrib\u00ed los par\u00e1metros obtengo un error, porque no debo proporcionar el valor del campo `id`, \r\n```\r\nUnhandled error for request PATCH /api/sitios: ValidationError: The `sitio` instance is not valid. Details: `id` can't be set (value: 0).\r\n```\r\n\r\nas\u00ed que hag\u00e1moslo de nuevo sin este valor.\r\n\r\n```\r\n{\r\n  \"nombre\":  \"Junta Local\",\r\n  \"lugar\": \"Tlaxcala\",\r\n  \"telefonos\":  {\r\n    \"Ejecutivo\": \"555 123 456\",\r\n    \"Secretario\": \"555 456 789\",\r\n    \"Registro\": \"246 123 456\"\r\n  }\r\n}\r\n```\r\nAhora si tenemos el c\u00f3digo `200`  que significa que la operaci\u00f3n fue exitosa. Esta es la respuesta:\r\n```\r\n{\r\n  \"nombre\": \"Junta Local\",\r\n  \"lugar\": \"Tlaxcala\",\r\n  \"telefonos\": {\r\n    \"Ejecutivo\": \"555 123 456\",\r\n    \"Secretario\": \"555 456 789\",\r\n    \"Registro\": \"246 123 456\"\r\n  },\r\n  \"id\": 1\r\n}\r\n```\r\n\r\nPodemos usar `http` o `curl`  para usar el verbo `GET`  y ver que devuelve lo siguiente:\r\n\r\n```\r\n$ http http://localhost:3000/api/sitios\r\nHTTP/1.1 200 OK\r\nAccess-Control-Allow-Credentials: true\r\nConnection: keep-alive\r\nContent-Length: 144\r\nContent-Type: application/json; charset=utf-8\r\nDate: Fri, 10 Feb 2017 03:05:54 GMT\r\nETag: W/\"90-RRBxD86BZQre00tk5+5KiQ\"\r\nVary: Origin, Accept-Encoding\r\nX-Content-Type-Options: nosniff\r\nX-Download-Options: noopen\r\nX-Frame-Options: DENY\r\nX-XSS-Protection: 1; mode=block\r\n\r\n[\r\n    {\r\n        \"id\": 1,\r\n        \"lugar\": \"Tlaxcala\",\r\n        \"nombre\": \"Junta Local\",\r\n        \"telefonos\": {\r\n            \"Ejecutivo\": \"555 123 456\",\r\n            \"Registro\": \"246 123 456\",\r\n            \"Secretario\": \"555 456 789\"\r\n        }\r\n    }\r\n]\r\n```\r\n\r\n\u00bfQu\u00e9 tal? Una API instant\u00e1nea, est\u00e1ndar y completa.\r\n\r\nPor el momento, eso es todo. En el pr\u00f3ximo art\u00edculo, veremos que opciones tenemos para guardar nuestros datos en alguna base de datos.", "extend": "", "pub_date": "2017-03-29T06:32:57Z", "summary_html": "", "body_html": "<p>Ahora que empez\u00f3 el desarrollo del nuevo <strong>Cuadro de Mando Integral</strong>, buscando alternativas para crear el prototipo de las aplicaciones me encontr\u00e9 con <a href=\"http://loopback.io/\">LoopBack</a>, un servidor basado en NodeJS que hace API de manera instant\u00e1nea. </p>\n<p>Para que tengan una idea, en <strong>Django</strong> primero se tienen que crear los modelos, luego el <em>serializador</em>, luego los ViewSet y al final agregarlos a la API\u2026 siempre y cuando uses los <em>endpoints</em> de los modelos.  Mientras tanto en  <strong>LoopBack</strong> al definir los modelos se crean al mismo tiempo  la API y su respectivo <em>endpoint</em>. </p>\n<blockquote>\n<p>Hay una nota muy rara en la p\u00e1gina inicial que dice que IBM est\u00e1 comprometido con el desarrollo <em>open source</em> de este framework. Supongo que hay rumores de cerrar el c\u00f3digo o algo as\u00ed.  </p>\n</blockquote>\n<p>Instalarlo es f\u00e1cil, como cualquier otro paquete de Node:</p>\n<div class=\"codehilite\"><pre><span></span>rpm install --general loopback-cli\n</pre></div>\n\n\n<p>o con el <em>rapid\u00edsimo</em> gestor de paquetes <code>yarn</code>:</p>\n<div class=\"codehilite\"><pre><span></span>yarn global add loopback-cli\n</pre></div>\n\n\n<p>La interface de consola permite crear el proyecto y los modelos contestando unas simples preguntas. Por ejemplo para crear un proyecto similar al #cmi usamos simplemente <code>lb</code>  y respondemos el cuestionario que crear\u00e1 el proyecto.</p>\n<div class=\"codehilite\"><pre><span></span> /Volumes/datos/projects $ lb\n\n     _-----_\n    |       |    \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n    |--(o)--|    \u2502  Let&#39;s create a LoopBack \u2502\n   `---------\u00b4   \u2502       application!       \u2502\n    ( _\u00b4U`_ )    \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n    /___A___\\   /\n     |  ~  |\n   __&#39;.___.&#39;__\n \u00b4   `  |\u00b0 \u00b4 Y `\n\n? What&#39;s the name of your application? lb-cmi\n? Enter name of the directory to contain the project: lb-cmi\n   create lb-cmi/\n     info change the working directory to lb-cmi\n\n? Which version of LoopBack would you like to use? 3.x (current)\n? What kind of application do you have in mind? api-server (A LoopBack API server with local User auth)\n</pre></div>\n\n\n<p>Despu\u00e9s de un rato (o de un gran rato si tienes una conexi\u00f3n lenta como la m\u00eda) estaremos en posibilidad de crear nuestro primer modelo.</p>\n<h2 id=\"sitios\">Sitios</h2>\n<p>Nuestro primer modelo va a ser el m\u00e1s simple de todos: los sitios. Tenemos solo cuatro sitios, la delegaci\u00f3n y tres delegaciones. As\u00ed que solo necesitamos un campo <code>nombre</code> tipo <code>string</code>, un campo <code>lugar</code>  tambi\u00e9n tipo <code>string</code>  y un campo <code>tel\u00e9fonos</code> tipo <code>object</code>  para guardar\u2026 pues los tel\u00e9fonos.</p>\n<h3 id=\"como-crear-modelos\">C\u00f3mo crear modelos</h3>\n<p>Esto es muy simple usando la <em>cli</em>, <strong>dentro de nuestro directorio</strong>:</p>\n<div class=\"codehilite\"><pre><span></span>$ lb model\n</pre></div>\n\n\n<p>Y tenemos un cuestionario que nos gu\u00eda paso a paso para crear el modelo con los campos, que aqu\u00ed se llaman <strong>propiedades</strong>. Vamos a especificar las propiedades de nuestro modelo y cuando terminemos solo debemos dejar en blanco la pregunta.</p>\n<div class=\"codehilite\"><pre><span></span>lb model\n? Enter the model name: sitio\n? Select the data-source to attach sitio to: db (memory)\n? Select model&#39;s base class PersistedModel\n? Expose sitio via the REST API? Yes\n? Custom plural form (used to build REST URL): sitios\n? Common model or server only? common\nLet&#39;s add some sitio properties now.\n\nEnter an empty property name when done.\n? Property name: nombre\n   invoke   loopback:property\n? Property type: string\n? Required? Yes\n? Default value[leave blank for none]:\n\nLet&#39;s add another sitio property.\nEnter an empty property name when done.\n? Property name: lugar\n   invoke   loopback:property\n? Property type: string\n? Required? Yes\n? Default value[leave blank for none]:\n\nLet&#39;s add another sitio property.\nEnter an empty property name when done.\n? Property name: telefonos\n   invoke   loopback:property\n? Property type: object\n? Required? No\n? Default value[leave blank for none]:\n\nLet&#39;s add another sitio property.\nEnter an empty property name when done.\n? Property name:\n</pre></div>\n\n\n<p>Bueno, eso es suficiente. No solo tenemos un modelo, tambi\u00e9n una API y un mont\u00f3n de <em>endpoints</em>. El servidor funciona simplemente escribiendo <code>node .</code>  lo que nos da dos URL, el servidor y un explorar de la API.</p>\n<div class=\"codehilite\"><pre><span></span>$ node .\nWeb server listening at: http://0.0.0.0:3000\nBrowse your REST API at http://0.0.0.0:3000/explorer\n</pre></div>\n\n\n<p>El explorador nos muestra todos los <em>endpoint</em> de forma muy completa</p>\n<p>Tenemos los verbos comunes en una API RESTful, como GET, POST, PUT, PATCH, y cada uno de estos <em>endpoints</em> tiene las funciones necesarias para funcionar de inmediato.</p>\n<p>Vamos a escribir un dato, siguiendo el ejemplo proporcionado, a trav\u00e9s de esta interface para ver el resultado.</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;nombre&quot;:  &quot;Junta Local&quot;,\n  &quot;lugar&quot;: &quot;Tlaxcala&quot;,\n  &quot;id&quot;: 0,\n  &quot;telefonos&quot;:  {\n    &quot;Ejecutivo&quot;: &quot;555 123 456&quot;,\n    &quot;Secretario&quot;: &quot;555 456 789&quot;,\n    &quot;Registro&quot;: &quot;246 123 456&quot;\n  }\n}\n</pre></div>\n\n\n<p>El sitio genera una l\u00ednea de comando para usar con el programa <code>curl</code>:</p>\n<div class=\"codehilite\"><pre><span></span>curl -X PATCH --header &#39;Content-Type: application/json&#39; --header &#39;Accept: application/json&#39; -d &#39;{ \\ \n   &quot;nombre&quot;:  &quot;Junta Local&quot;, \\ \n   &quot;lugar&quot;: &quot;Tlaxcala&quot;, \\ \n   &quot;id&quot;: 0, \\ \n   &quot;telefonos&quot;:  { \\ \n     &quot;Ejecutivo&quot;: &quot;555 123 456&quot;, \\ \n     &quot;Secretario&quot;: &quot;555 456 789&quot;, \\ \n     &quot;Registro&quot;: &quot;246 123 456&quot; \\ \n   } \\ \n }&#39; &#39;http://localhost:3000/api/sitios&#39;\n</pre></div>\n\n\n<p>Pero tal como escrib\u00ed los par\u00e1metros obtengo un error, porque no debo proporcionar el valor del campo <code>id</code>, </p>\n<div class=\"codehilite\"><pre><span></span>Unhandled error for request PATCH /api/sitios: ValidationError: The `sitio` instance is not valid. Details: `id` can&#39;t be set (value: 0).\n</pre></div>\n\n\n<p>as\u00ed que hag\u00e1moslo de nuevo sin este valor.</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;nombre&quot;:  &quot;Junta Local&quot;,\n  &quot;lugar&quot;: &quot;Tlaxcala&quot;,\n  &quot;telefonos&quot;:  {\n    &quot;Ejecutivo&quot;: &quot;555 123 456&quot;,\n    &quot;Secretario&quot;: &quot;555 456 789&quot;,\n    &quot;Registro&quot;: &quot;246 123 456&quot;\n  }\n}\n</pre></div>\n\n\n<p>Ahora si tenemos el c\u00f3digo <code>200</code>  que significa que la operaci\u00f3n fue exitosa. Esta es la respuesta:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;nombre&quot;: &quot;Junta Local&quot;,\n  &quot;lugar&quot;: &quot;Tlaxcala&quot;,\n  &quot;telefonos&quot;: {\n    &quot;Ejecutivo&quot;: &quot;555 123 456&quot;,\n    &quot;Secretario&quot;: &quot;555 456 789&quot;,\n    &quot;Registro&quot;: &quot;246 123 456&quot;\n  },\n  &quot;id&quot;: 1\n}\n</pre></div>\n\n\n<p>Podemos usar <code>http</code> o <code>curl</code>  para usar el verbo <code>GET</code>  y ver que devuelve lo siguiente:</p>\n<div class=\"codehilite\"><pre><span></span>$ http http://localhost:3000/api/sitios\nHTTP/1.1 <span class=\"m\">200</span> OK\nAccess-Control-Allow-Credentials: <span class=\"nb\">true</span>\nConnection: keep-alive\nContent-Length: <span class=\"m\">144</span>\nContent-Type: application/json<span class=\"p\">;</span> <span class=\"nv\">charset</span><span class=\"o\">=</span>utf-8\nDate: Fri, <span class=\"m\">10</span> Feb <span class=\"m\">2017</span> <span class=\"m\">03</span>:05:54 GMT\nETag: W/<span class=\"s2\">&quot;90-RRBxD86BZQre00tk5+5KiQ&quot;</span>\nVary: Origin, Accept-Encoding\nX-Content-Type-Options: nosniff\nX-Download-Options: noopen\nX-Frame-Options: DENY\nX-XSS-Protection: <span class=\"m\">1</span><span class=\"p\">;</span> <span class=\"nv\">mode</span><span class=\"o\">=</span>block\n\n<span class=\"o\">[</span>\n    <span class=\"o\">{</span>\n        <span class=\"s2\">&quot;id&quot;</span>: <span class=\"m\">1</span>,\n        <span class=\"s2\">&quot;lugar&quot;</span>: <span class=\"s2\">&quot;Tlaxcala&quot;</span>,\n        <span class=\"s2\">&quot;nombre&quot;</span>: <span class=\"s2\">&quot;Junta Local&quot;</span>,\n        <span class=\"s2\">&quot;telefonos&quot;</span>: <span class=\"o\">{</span>\n            <span class=\"s2\">&quot;Ejecutivo&quot;</span>: <span class=\"s2\">&quot;555 123 456&quot;</span>,\n            <span class=\"s2\">&quot;Registro&quot;</span>: <span class=\"s2\">&quot;246 123 456&quot;</span>,\n            <span class=\"s2\">&quot;Secretario&quot;</span>: <span class=\"s2\">&quot;555 456 789&quot;</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">]</span>\n</pre></div>\n\n\n<p>\u00bfQu\u00e9 tal? Una API instant\u00e1nea, est\u00e1ndar y completa.</p>\n<p>Por el momento, eso es todo. En el pr\u00f3ximo art\u00edculo, veremos que opciones tenemos para guardar nuestros datos en alguna base de datos.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "loopback-un-servidor-de-api", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 112, "fields": {"idx": "bd6622ee-43bc-46b0-bb3a-b9757b638292", "creado": "2017-07-29T05:34:07.539Z", "modificado": "2017-08-03T04:10:15.050Z", "title": "Definiendo relaciones entre modelos con LoopBack", "summary": "", "body": "Title: Definiendo relaciones entre modelos con LoopBack    \r\nDate: 2017-03-29 13:28:37\r\nCategory: desarrollo\r\nTags: loopback, restful, mongodb, javascript  \r\nSummary: \r\n\r\nYa tenemos los dos modelos b\u00e1sicos para nuestra aplicaci\u00f3n, `Sitio` y `Puesto`. Estos son necesarios para crear el modelo `Persona` que usa los modelos anterior como claves for\u00e1neas.\r\n\r\n![Modelo Persona](http://media.toledano.org/images/2017/20170225-persona-model.png)\r\n\r\n## La relaci\u00f3n belongsTo\r\nUna relaci\u00f3n `belongsTo` crea una conexi\u00f3n que puede ser de uno a muchos o de uno a uno con otro modelo. En una relaci\u00f3n de _uno a muchos_, cada instancia del modelo declarado **pertenece** a por lo menos una instancia de otro modelo, mientras que el modelo objetivo puede tener muchas instancias del modelo declarado.\r\n\r\nEsto es as\u00ed:\r\n\r\nHay solo tres sitios en el modelo `Sitio`, pero en cada _sitio_ puede haber _x_ cantidad de personas. Por otro lado, cada persona puede estar en uno y solo un sitio. Ah\u00ed vemos las dos caracter\u00edsticas de este modelo\r\n\r\n# El Modelo Persona\r\nPrimero tenemos que crear el modelo, con los campos necesarios usando `lb model` y este el archivo JSON resultante:\r\n\r\n```\r\n{\r\n  \"name\": \"Persona\",\r\n  \"plural\": \"personas\",\r\n  \"base\": \"PersistedModel\",\r\n  \"idInjection\": true,\r\n  \"options\": {\r\n    \"validateUpsert\": true\r\n  },\r\n  \"properties\": {\r\n    \"nombre\": {\r\n      \"type\": \"string\",\r\n      \"required\": true\r\n    },\r\n    \"paterno\": {\r\n      \"type\": \"string\",\r\n      \"required\": true\r\n    },\r\n    \"materno\": {\r\n      \"type\": \"string\",\r\n      \"required\": true\r\n    },\r\n    \"sitioId\": {\r\n      \"type\": \"string\",\r\n      \"required\": true\r\n    },\r\n    \"puestoId\": {\r\n      \"type\": \"string\",\r\n      \"required\": true\r\n    }\r\n  },\r\n  \"validations\": [],\r\n  \"relations\": {},\r\n  \"acls\": [],\r\n  \"methods\": {}\r\n}\r\n```\r\n\r\nLas claves for\u00e1neas son `sitioId` y `puestoId` y son tipo string porque la base es MongoDB que usa un tipo de objeto especial para el identificador, que al final es una cadena de texto.\r\n\r\n## Definiendo las relaciones\r\nAhora vamos a definir la relaci\u00f3n entre los modelos. Una vez m\u00e1s, vamos a usar el comando `lb` pero en esta ocasi\u00f3n, usaremos el subcomando `relation`.\r\n\r\n```\r\n> $ lb relation\r\n? Select the model to create the relationship from: Persona\r\n? Relation type: belongs to\r\n? Choose a model to create a relationship with: sitio\r\n? Enter the property name for the relation: sitio\r\n? Optionally enter a custom foreign key: sitioId\r\n```\r\n\r\nY para puesto, hago lo mismo.\r\n\r\n```\r\n> $ lb relation\r\n? Select the model to create the relationship from: Persona\r\n? Relation type: belongs to\r\n? Choose a model to create a relationship with: puesto\r\n? Enter the property name for the relation: puesto\r\n? Optionally enter a custom foreign key: puestoId\r\n```\r\n\r\nEspecificar la clave for\u00e1nea es opcional, espero haberlo hecho bien.\r\n\r\nEsto hace que la definici\u00f3n del modelo `Persona` se actualice, en la parte de `relations` que se ve as\u00ed:\r\n\r\n```\r\n\u2026\r\n  \"relations\": {\r\n    \"sitio\": {\r\n      \"type\": \"belongsTo\",\r\n      \"model\": \"sitio\",\r\n      \"foreignKey\": \"sitioId\"\r\n    },\r\n    \"puesto\": {\r\n      \"type\": \"belongsTo\",\r\n      \"model\": \"puesto\",\r\n      \"foreignKey\": \"puestoId\"\r\n    }\r\n  },\r\n\u2026\r\n```\r\n\r\nVamos a ver como funcionan estas relaciones, agregando documento a nuestro modelo `Persona`.\r\n\r\n```\r\n{\r\n  \"nombre\": \"Fulano\",\r\n  \"paterno\": \"de Tal\",\r\n  \"materno\": \"x\",\r\n  \"sitioId\": \"58a920b0bc35e1c8528e3747\",\r\n  \"puestoId\": \"58b1fcbad2eb667a368cf76f\",\r\n}\r\n```\r\n\r\nAh\u00ed podemos ver los identificadores de `sitioId` y de `puestoId` que corresponden a `Junta Local` y `Vocal del RFE`.\r\n\r\nEsta es la respuesta del servidor, donde ya tenemos el `id` para esta `Persona`:\r\n\r\n```\r\n{\r\n  \"nombre\": \"Fulano\",\r\n  \"paterno\": \"de Tal\",\r\n  \"materno\": \"x\",\r\n  \"sitioId\": \"58a920b0bc35e1c8528e3747\",\r\n  \"puestoId\": \"58b1fcbad2eb667a368cf76f\",\r\n  \"id\": \"58b1fd97d2eb667a368cf771\"\r\n}\r\n```\r\n\r\nAhora podemos consultar las relaciones usando una URI de este tipo:\r\n\r\n    http://localhost:3000/api/personas/58b1fd97d2eb667a368cf771/puesto\r\n\r\nY esta es la respuesta\r\n\r\n```\r\n> $ http :3000/api/personas/58b1fd97d2eb667a368cf771/puesto                                              \r\nHTTP/1.1 200 OK\r\nAccess-Control-Allow-Credentials: true\r\nConnection: keep-alive\r\nContent-Length: 97\r\nContent-Type: application/json; charset=utf-8\r\nDate: Sat, 25 Feb 2017 22:00:46 GMT\r\nETag: W/\"61-paFiafEU38WONZrzm6856g\"\r\nVary: Origin, Accept-Encoding\r\nX-Content-Type-Options: nosniff\r\nX-Download-Options: noopen\r\nX-Frame-Options: DENY\r\nX-XSS-Protection: 1; mode=block\r\n\r\n{\r\n    \"clave\": \"VRL\",\r\n    \"id\": \"58b1fcbad2eb667a368cf76f\",\r\n    \"orden\": 3,\r\n    \"puesto\": \"Vocal del RFE de Junta Local\"\r\n}\r\n```\r\n\r\nY ese es el comportamiento esperado.\r\n\r\nAhora si, tenemos todo lo necesario en el backend para tener funcionando una aplicaci\u00f3n completa. La aplicaci\u00f3n _\u201dBase capINE\u201d_ inicia con el cat\u00e1logo de sitios, de puestos y de funcionarios. \r\n\r\nVamos a crear la aplicaci\u00f3n ahora en el front end.\r\n\r\n\r\n[1]: https://strongloop.com/strongblog/defining-and-mapping-data-relations-with-loopback-connected-models/", "extend": "", "pub_date": "2017-03-29T06:33:29Z", "summary_html": "", "body_html": "<p>Ya tenemos los dos modelos b\u00e1sicos para nuestra aplicaci\u00f3n, <code>Sitio</code> y <code>Puesto</code>. Estos son necesarios para crear el modelo <code>Persona</code> que usa los modelos anterior como claves for\u00e1neas.</p>\n<p><img alt=\"Modelo Persona\" src=\"http://media.toledano.org/images/2017/20170225-persona-model.png\"></p>\n<h2 id=\"la-relacion-belongsto\">La relaci\u00f3n belongsTo</h2>\n<p>Una relaci\u00f3n <code>belongsTo</code> crea una conexi\u00f3n que puede ser de uno a muchos o de uno a uno con otro modelo. En una relaci\u00f3n de <em>uno a muchos</em>, cada instancia del modelo declarado <strong>pertenece</strong> a por lo menos una instancia de otro modelo, mientras que el modelo objetivo puede tener muchas instancias del modelo declarado.</p>\n<p>Esto es as\u00ed:</p>\n<p>Hay solo tres sitios en el modelo <code>Sitio</code>, pero en cada <em>sitio</em> puede haber <em>x</em> cantidad de personas. Por otro lado, cada persona puede estar en uno y solo un sitio. Ah\u00ed vemos las dos caracter\u00edsticas de este modelo</p>\n<h1 id=\"el-modelo-persona\">El Modelo Persona</h1>\n<p>Primero tenemos que crear el modelo, con los campos necesarios usando <code>lb model</code> y este el archivo JSON resultante:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;name&quot;: &quot;Persona&quot;,\n  &quot;plural&quot;: &quot;personas&quot;,\n  &quot;base&quot;: &quot;PersistedModel&quot;,\n  &quot;idInjection&quot;: true,\n  &quot;options&quot;: {\n    &quot;validateUpsert&quot;: true\n  },\n  &quot;properties&quot;: {\n    &quot;nombre&quot;: {\n      &quot;type&quot;: &quot;string&quot;,\n      &quot;required&quot;: true\n    },\n    &quot;paterno&quot;: {\n      &quot;type&quot;: &quot;string&quot;,\n      &quot;required&quot;: true\n    },\n    &quot;materno&quot;: {\n      &quot;type&quot;: &quot;string&quot;,\n      &quot;required&quot;: true\n    },\n    &quot;sitioId&quot;: {\n      &quot;type&quot;: &quot;string&quot;,\n      &quot;required&quot;: true\n    },\n    &quot;puestoId&quot;: {\n      &quot;type&quot;: &quot;string&quot;,\n      &quot;required&quot;: true\n    }\n  },\n  &quot;validations&quot;: [],\n  &quot;relations&quot;: {},\n  &quot;acls&quot;: [],\n  &quot;methods&quot;: {}\n}\n</pre></div>\n\n\n<p>Las claves for\u00e1neas son <code>sitioId</code> y <code>puestoId</code> y son tipo string porque la base es MongoDB que usa un tipo de objeto especial para el identificador, que al final es una cadena de texto.</p>\n<h2 id=\"definiendo-las-relaciones\">Definiendo las relaciones</h2>\n<p>Ahora vamos a definir la relaci\u00f3n entre los modelos. Una vez m\u00e1s, vamos a usar el comando <code>lb</code> pero en esta ocasi\u00f3n, usaremos el subcomando <code>relation</code>.</p>\n<div class=\"codehilite\"><pre><span></span>&gt; $ lb relation\n? Select the model to create the relationship from: Persona\n? Relation type: belongs to\n? Choose a model to create a relationship with: sitio\n? Enter the property name for the relation: sitio\n? Optionally enter a custom foreign key: sitioId\n</pre></div>\n\n\n<p>Y para puesto, hago lo mismo.</p>\n<div class=\"codehilite\"><pre><span></span>&gt; $ lb relation\n? Select the model to create the relationship from: Persona\n? Relation type: belongs to\n? Choose a model to create a relationship with: puesto\n? Enter the property name for the relation: puesto\n? Optionally enter a custom foreign key: puestoId\n</pre></div>\n\n\n<p>Especificar la clave for\u00e1nea es opcional, espero haberlo hecho bien.</p>\n<p>Esto hace que la definici\u00f3n del modelo <code>Persona</code> se actualice, en la parte de <code>relations</code> que se ve as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span>\u2026\n  &quot;relations&quot;: {\n    &quot;sitio&quot;: {\n      &quot;type&quot;: &quot;belongsTo&quot;,\n      &quot;model&quot;: &quot;sitio&quot;,\n      &quot;foreignKey&quot;: &quot;sitioId&quot;\n    },\n    &quot;puesto&quot;: {\n      &quot;type&quot;: &quot;belongsTo&quot;,\n      &quot;model&quot;: &quot;puesto&quot;,\n      &quot;foreignKey&quot;: &quot;puestoId&quot;\n    }\n  },\n\u2026\n</pre></div>\n\n\n<p>Vamos a ver como funcionan estas relaciones, agregando documento a nuestro modelo <code>Persona</code>.</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;nombre&quot;: &quot;Fulano&quot;,\n  &quot;paterno&quot;: &quot;de Tal&quot;,\n  &quot;materno&quot;: &quot;x&quot;,\n  &quot;sitioId&quot;: &quot;58a920b0bc35e1c8528e3747&quot;,\n  &quot;puestoId&quot;: &quot;58b1fcbad2eb667a368cf76f&quot;,\n}\n</pre></div>\n\n\n<p>Ah\u00ed podemos ver los identificadores de <code>sitioId</code> y de <code>puestoId</code> que corresponden a <code>Junta Local</code> y <code>Vocal del RFE</code>.</p>\n<p>Esta es la respuesta del servidor, donde ya tenemos el <code>id</code> para esta <code>Persona</code>:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;nombre&quot;: &quot;Fulano&quot;,\n  &quot;paterno&quot;: &quot;de Tal&quot;,\n  &quot;materno&quot;: &quot;x&quot;,\n  &quot;sitioId&quot;: &quot;58a920b0bc35e1c8528e3747&quot;,\n  &quot;puestoId&quot;: &quot;58b1fcbad2eb667a368cf76f&quot;,\n  &quot;id&quot;: &quot;58b1fd97d2eb667a368cf771&quot;\n}\n</pre></div>\n\n\n<p>Ahora podemos consultar las relaciones usando una URI de este tipo:</p>\n<div class=\"codehilite\"><pre><span></span>http://localhost:3000/api/personas/58b1fd97d2eb667a368cf771/puesto\n</pre></div>\n\n\n<p>Y esta es la respuesta</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;</span> <span class=\"o\">$</span> <span class=\"nt\">http</span> <span class=\"p\">:</span><span class=\"nd\">3000</span><span class=\"o\">/</span><span class=\"nt\">api</span><span class=\"o\">/</span><span class=\"nt\">personas</span><span class=\"o\">/</span><span class=\"nt\">58b1fd97d2eb667a368cf771</span><span class=\"o\">/</span><span class=\"nt\">puesto</span>                                              \n<span class=\"nt\">HTTP</span><span class=\"o\">/</span><span class=\"nt\">1</span><span class=\"p\">.</span><span class=\"nc\">1</span> <span class=\"nt\">200</span> <span class=\"nt\">OK</span>\n<span class=\"nt\">Access-Control-Allow-Credentials</span><span class=\"o\">:</span> <span class=\"nt\">true</span>\n<span class=\"nt\">Connection</span><span class=\"o\">:</span> <span class=\"nt\">keep-alive</span>\n<span class=\"nt\">Content-Length</span><span class=\"o\">:</span> <span class=\"nt\">97</span>\n<span class=\"nt\">Content-Type</span><span class=\"o\">:</span> <span class=\"nt\">application</span><span class=\"o\">/</span><span class=\"nt\">json</span><span class=\"o\">;</span> <span class=\"nt\">charset</span><span class=\"o\">=</span><span class=\"nt\">utf-8</span>\n<span class=\"nt\">Date</span><span class=\"o\">:</span> <span class=\"nt\">Sat</span><span class=\"o\">,</span> <span class=\"nt\">25</span> <span class=\"nt\">Feb</span> <span class=\"nt\">2017</span> <span class=\"nt\">22</span><span class=\"p\">:</span><span class=\"nd\">00</span><span class=\"p\">:</span><span class=\"nd\">46</span> <span class=\"nt\">GMT</span>\n<span class=\"nt\">ETag</span><span class=\"o\">:</span> <span class=\"nt\">W</span><span class=\"o\">/</span><span class=\"s2\">&quot;61-paFiafEU38WONZrzm6856g&quot;</span>\n<span class=\"nt\">Vary</span><span class=\"o\">:</span> <span class=\"nt\">Origin</span><span class=\"o\">,</span> <span class=\"nt\">Accept-Encoding</span>\n<span class=\"nt\">X-Content-Type-Options</span><span class=\"o\">:</span> <span class=\"nt\">nosniff</span>\n<span class=\"nt\">X-Download-Options</span><span class=\"o\">:</span> <span class=\"nt\">noopen</span>\n<span class=\"nt\">X-Frame-Options</span><span class=\"o\">:</span> <span class=\"nt\">DENY</span>\n<span class=\"nt\">X-XSS-Protection</span><span class=\"o\">:</span> <span class=\"nt\">1</span><span class=\"o\">;</span> <span class=\"nt\">mode</span><span class=\"o\">=</span><span class=\"nt\">block</span>\n\n<span class=\"p\">{</span>\n    <span class=\"err\">&quot;clave&quot;:</span> <span class=\"err\">&quot;VRL&quot;,</span>\n    <span class=\"err\">&quot;id&quot;:</span> <span class=\"err\">&quot;58b1fcbad2eb667a368cf76f&quot;,</span>\n    <span class=\"err\">&quot;orden&quot;:</span> <span class=\"err\">3,</span>\n    <span class=\"err\">&quot;puesto&quot;:</span> <span class=\"err\">&quot;Vocal</span> <span class=\"err\">del</span> <span class=\"err\">RFE</span> <span class=\"err\">de</span> <span class=\"err\">Junta</span> <span class=\"err\">Local&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Y ese es el comportamiento esperado.</p>\n<p>Ahora si, tenemos todo lo necesario en el backend para tener funcionando una aplicaci\u00f3n completa. La aplicaci\u00f3n <em>\u201dBase capINE\u201d</em> inicia con el cat\u00e1logo de sitios, de puestos y de funcionarios. </p>\n<p>Vamos a crear la aplicaci\u00f3n ahora en el front end.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "definiendo-relaciones-entre-modelos-con-loopback", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 113, "fields": {"idx": "0a2eae39-e8cf-4b9b-88a1-7a55e96f233c", "creado": "2017-07-29T05:34:52.237Z", "modificado": "2017-07-29T05:34:52.237Z", "title": "C\u00f3mo crear un plugin para VueJS", "summary": "Los plugins en VueJS son una forma simple pero efectiva de crear funciones globales y facilitar la reutilizaci\u00f3n de c\u00f3digo entre proyecto", "body": "Title: C\u00f3mo crear un plugin para VueJS   \r\nDate: 2017-03-25 13:37:46\r\nCategory: desarrollo \r\nTags: vuejs, javascript, es6  \r\nSummary: Los plugins en VueJS son una forma simple pero efectiva de crear funciones globales y facilitar la reutilizaci\u00f3n de c\u00f3digo entre proyecto.\r\n\r\nCrear un  _plugin_ para **VueJS** es una forma simple de aislar el c\u00f3digo de una aplicaci\u00f3n espec\u00edfica y hacerlo \u00fatil para cualquier otra de forma global. Lo importante es que no tenga en c\u00f3digo dependiente de una aplicaci\u00f3n en particular, sino que sea _agn\u00f3stica_.\r\n\r\nHonestamente, la [documentaci\u00f3n](https://vuejs.org/v2/guide/plugins.html) es muy parca, por no decir mala. Pero a\u00fan as\u00ed, me las arregl\u00e9 para hacer un peque\u00f1o plugin.\r\n\r\n## Objetivo\r\nEl objetivo es hacer f\u00e1cil el uso del espacio de almacenamiento de los navegadores, `localStorage` por ejemplo para poder almacenar informaci\u00f3n de manera persistente.\r\n\r\nEste es un objetivo espec\u00edfico de uno general, que se trata de un conjunto de rutinas que verifiquen si existe un token de acreditaci\u00f3n en el espacio de almacenamiento, y si existe, cargarlo en el almac\u00e9n de Vuex (el almacenamiento central de VueJS) para que est\u00e9 disponible para toda la aplicaci\u00f3n. Si no est\u00e1 disponible, entonces mandar al usuario al /login/ cuando solicite una p\u00e1gina protegida.\r\n\r\nEste _plugin_ est\u00e1 enteramente basado en [`vue-localforage`](https://www.npmjs.com/package/vue-localforage) de [shuduanxia](https://www.npmjs.com/~shidianxia) que solo funciona para la versi\u00f3n 1.x de VueJS. La funci\u00f3n que ofrece es la de ser un _wrapper_ una envoltura de otro plugin, [`localForage`](https://www.npmjs.com/package/localforage) que facilita la utilizaci\u00f3n del almacenamiento persistente, el cual fue creado por [tofumatt](https://www.npmjs.com/~tofumatt) .\r\n\r\nCabe destacar que no estoy desarrollando este plugin como un paquete de `npm`, pero lo har\u00e9 junto con el respectivo art\u00edculo.\r\n\r\nEntonces, empezamos en agregando al proyecto el paquete `localforage`.\r\n\r\n```\r\nyarn add localforage\r\n```\r\n\r\nYa en el archivo de nuestro _plugin_ creamos la clase (\u00bfo ser\u00e1 un objeto?) `almacen`.\r\n\r\n```\r\n  let almacen = require('localforage')\r\n```\r\n\r\nAhora creamos una variable que ser\u00e1 la envoltura de las funciones de `localForage`  en nuestra aplicaci\u00f3n de VueJS.\r\n\r\n```\r\n  let AlmacenCMI = {\r\n  }\r\n```\r\n\r\nEn esta envoltura vamos a agregar las funciones que ofrecer\u00e1 el plugin.\r\n\r\n```\r\n  let AlmacenCMI = {\r\n    getItem: (clave, llamada) => almacen.getItem(clave, llamada)\r\n  }\r\n```\r\n\r\nComo ven, estamos usando una funci\u00f3n _lambda_ por la sencillez de la funci\u00f3n. Solo estamos pasando los argumentos del plugin a `localForage` usando funciones *fat arrow* de ES6.\r\n\r\nEstas son las funciones y su utilidad.\r\n\r\n* `getItem` - regresa la `clave` dada si la encuentra en el almac\u00e9n o un error.\r\n* `setItem` - almacena un `valor` dado en la `clave` indicada.\r\n* `removeItem` - elimina la `clave` especificada del almac\u00e9n.\r\n* `clearStorage` - limpia el almac\u00e9n.\r\n* `lengthOfStorage` - devuelve el tama\u00f1o del almac\u00e9n, contando el n\u00famero de claves.\r\n* `keyInStorage` - devuelve `true` si la clave existe en el almac\u00e9n.\r\n* `iterateStorage` - recorre el almac\u00e9n para realizar operaciones con todas las claves.\r\n* `setStorageDriver` - establece el tipo de almacenamiento persistente que se utilizar\u00e1.\r\n* `storageConfig` - establece opciones de configuraci\u00f3n para el plugin.\r\n\r\nAhora creamos la funci\u00f3n prototipo de VueJS que identificar\u00e1 al plugin.\r\n\r\n```\r\n  let almacenCMIPlugin = {\r\n    install: function (Vue) {\r\n      Vue.prototype.almacen = AlmacenCMI\r\n    }\r\n  }\r\n```\r\n\r\nY por \u00faltimo lo hacemos dispoible.\r\n\r\n```\r\n  almacenCMIPlugin.version = '0.1.0'\r\n  module.exports = almacenCMIPlugin\r\n```\r\n\r\nEste es el c\u00f3digo completo del plugin.\r\n\r\n```\r\n/**\r\n * Created by javier on 23/03/17.\r\n */\r\n(function () {\r\n  'use strict'\r\n\r\n  let almacen = require('localforage')\r\n\r\n  almacen.config({\r\n    driver: [almacen.LOCALSTORAGE],\r\n    name: 'cmiSQL'\r\n  })\r\n\r\n  let AlmacenCMI = {\r\n    getItem: (clave, llamada) => almacen.getItem(clave, llamada),\r\n    setItem: (clave, valor, llamada) => almacen.setItem(clave, valor, llamada),\r\n    removeItem: (clave, llamada) => almacen.removeItem(clave, llamada),\r\n    clearStorage: () => almacen.clear(),\r\n    lengthOfStorage: (llamada) => almacen.length(llamada),\r\n    keyInStorage: (keyIndex, callback) => almacen.keyInStorage(keyIndex, callback),\r\n    iterateStorage: (iteratorCallback, callback) => almacen.iterateStorage(iteratorCallback, callback),\r\n    setStorageDriver: (driverName) => almacen.setDrive(driverName),\r\n    storageConfig: (options) => almacen.config(options),\r\n    _properties: {}\r\n  }\r\n\r\n  let almacenCMIPlugin = {\r\n    install: function (Vue) {\r\n      Vue.prototype.almacen = AlmacenCMI\r\n    }\r\n  }\r\n\r\n  almacenCMIPlugin.version = '0.1.0'\r\n  module.exports = almacenCMIPlugin\r\n})()\r\n```\r\n\r\nAhora, para poder usarlo en nuestra aplicaci\u00f3n, debemos importarlo primero, y despu\u00e9s activarlo.\r\n\r\n```\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\nimport App from './App'\r\nimport router from './router'\r\nimport { store } from './plugins/store'\r\nimport AlmacenCMI from './plugins/almacen'     // se importa\r\n\r\nVue.config.productionTip = false\r\nVue.use(VueAxios, axios)\r\nVue.use(AlmacenCMI)                           // se activa\r\n\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  router,\r\n  store,\r\n  template: '<App/>',\r\n  components: { App }\r\n})\r\n```\r\n\r\nUn ejemplo del uso en el componente principal es el siguiente:\r\n\r\n```\r\n<script>\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: 'app',\r\n  computed: mapState(['token']),\r\n  created () {\r\n    this.almacen.getItem('token')\r\n      .then((payload) => {\r\n        this.$store.state.token = payload\r\n        this.$store.state.acreditado = true\r\n      })\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nComo podemos apreciar, lo usamos como una **promesa**. Primero solicitamos la clave y lo que devuelve lo hacemos disponible en el almac\u00e9n, usando la funci\u00f3n `getItem`.\r\n\r\nEn este otro ejemplo, al recibir el token, usamos la funci\u00f3n `setItem` para enviarlo al almacenamiento persistente.\r\n\r\n```\r\n    methods: {\r\n      login () {\r\n        this.axios.post(this.loginURL, this.credenciales)\r\n          .then(response => {\r\n            this.almacen.setItem('token', response.data.auth_token)\r\n          })\r\n      }\r\n    }\r\n```\r\n\r\nPor supuesto, pude haber usado nombres de funciones en espa\u00f1ol para hacerlo m\u00e1s f\u00e1cil, pero como pienso convertirlo en un plugin y hacerlo p\u00fablico en realidad de pasarlo todo a ingl\u00e9s, documentarlo y agregarle algunas pruebas (_si supera como_).", "extend": "", "pub_date": "2017-03-25T06:34:07Z", "summary_html": "<p>Los plugins en VueJS son una forma simple pero efectiva de crear funciones globales y facilitar la reutilizaci\u00f3n de c\u00f3digo entre proyecto</p>", "body_html": "<p>Crear un  <em>plugin</em> para <strong>VueJS</strong> es una forma simple de aislar el c\u00f3digo de una aplicaci\u00f3n espec\u00edfica y hacerlo \u00fatil para cualquier otra de forma global. Lo importante es que no tenga en c\u00f3digo dependiente de una aplicaci\u00f3n en particular, sino que sea <em>agn\u00f3stica</em>.</p>\n<p>Honestamente, la <a href=\"https://vuejs.org/v2/guide/plugins.html\">documentaci\u00f3n</a> es muy parca, por no decir mala. Pero a\u00fan as\u00ed, me las arregl\u00e9 para hacer un peque\u00f1o plugin.</p>\n<h2 id=\"objetivo\">Objetivo</h2>\n<p>El objetivo es hacer f\u00e1cil el uso del espacio de almacenamiento de los navegadores, <code>localStorage</code> por ejemplo para poder almacenar informaci\u00f3n de manera persistente.</p>\n<p>Este es un objetivo espec\u00edfico de uno general, que se trata de un conjunto de rutinas que verifiquen si existe un token de acreditaci\u00f3n en el espacio de almacenamiento, y si existe, cargarlo en el almac\u00e9n de Vuex (el almacenamiento central de VueJS) para que est\u00e9 disponible para toda la aplicaci\u00f3n. Si no est\u00e1 disponible, entonces mandar al usuario al /login/ cuando solicite una p\u00e1gina protegida.</p>\n<p>Este <em>plugin</em> est\u00e1 enteramente basado en <a href=\"https://www.npmjs.com/package/vue-localforage\"><code>vue-localforage</code></a> de <a href=\"https://www.npmjs.com/~shidianxia\">shuduanxia</a> que solo funciona para la versi\u00f3n 1.x de VueJS. La funci\u00f3n que ofrece es la de ser un <em>wrapper</em> una envoltura de otro plugin, <a href=\"https://www.npmjs.com/package/localforage\"><code>localForage</code></a> que facilita la utilizaci\u00f3n del almacenamiento persistente, el cual fue creado por <a href=\"https://www.npmjs.com/~tofumatt\">tofumatt</a> .</p>\n<p>Cabe destacar que no estoy desarrollando este plugin como un paquete de <code>npm</code>, pero lo har\u00e9 junto con el respectivo art\u00edculo.</p>\n<p>Entonces, empezamos en agregando al proyecto el paquete <code>localforage</code>.</p>\n<div class=\"codehilite\"><pre><span></span>yarn add localforage\n</pre></div>\n\n\n<p>Ya en el archivo de nuestro <em>plugin</em> creamos la clase (\u00bfo ser\u00e1 un objeto?) <code>almacen</code>.</p>\n<div class=\"codehilite\"><pre><span></span>  let almacen = require(&#39;localforage&#39;)\n</pre></div>\n\n\n<p>Ahora creamos una variable que ser\u00e1 la envoltura de las funciones de <code>localForage</code>  en nuestra aplicaci\u00f3n de VueJS.</p>\n<div class=\"codehilite\"><pre><span></span>  let AlmacenCMI = {\n  }\n</pre></div>\n\n\n<p>En esta envoltura vamos a agregar las funciones que ofrecer\u00e1 el plugin.</p>\n<div class=\"codehilite\"><pre><span></span>  let AlmacenCMI = {\n    getItem: (clave, llamada) =&gt; almacen.getItem(clave, llamada)\n  }\n</pre></div>\n\n\n<p>Como ven, estamos usando una funci\u00f3n <em>lambda</em> por la sencillez de la funci\u00f3n. Solo estamos pasando los argumentos del plugin a <code>localForage</code> usando funciones <em>fat arrow</em> de ES6.</p>\n<p>Estas son las funciones y su utilidad.</p>\n<ul>\n<li><code>getItem</code> - regresa la <code>clave</code> dada si la encuentra en el almac\u00e9n o un error.</li>\n<li><code>setItem</code> - almacena un <code>valor</code> dado en la <code>clave</code> indicada.</li>\n<li><code>removeItem</code> - elimina la <code>clave</code> especificada del almac\u00e9n.</li>\n<li><code>clearStorage</code> - limpia el almac\u00e9n.</li>\n<li><code>lengthOfStorage</code> - devuelve el tama\u00f1o del almac\u00e9n, contando el n\u00famero de claves.</li>\n<li><code>keyInStorage</code> - devuelve <code>true</code> si la clave existe en el almac\u00e9n.</li>\n<li><code>iterateStorage</code> - recorre el almac\u00e9n para realizar operaciones con todas las claves.</li>\n<li><code>setStorageDriver</code> - establece el tipo de almacenamiento persistente que se utilizar\u00e1.</li>\n<li><code>storageConfig</code> - establece opciones de configuraci\u00f3n para el plugin.</li>\n</ul>\n<p>Ahora creamos la funci\u00f3n prototipo de VueJS que identificar\u00e1 al plugin.</p>\n<div class=\"codehilite\"><pre><span></span>  let almacenCMIPlugin = {\n    install: function (Vue) {\n      Vue.prototype.almacen = AlmacenCMI\n    }\n  }\n</pre></div>\n\n\n<p>Y por \u00faltimo lo hacemos dispoible.</p>\n<div class=\"codehilite\"><pre><span></span>  almacenCMIPlugin.version = &#39;0.1.0&#39;\n  module.exports = almacenCMIPlugin\n</pre></div>\n\n\n<p>Este es el c\u00f3digo completo del plugin.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/**</span>\n<span class=\"cm\"> * Created by javier on 23/03/17.</span>\n<span class=\"cm\"> */</span><span class=\"w\"></span>\n<span class=\"o\">(</span>function<span class=\"w\"> </span><span class=\"o\">()</span><span class=\"w\"> </span><span class=\"err\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"s\">&#39;use strict&#39;</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span>let<span class=\"w\"> </span>almacen<span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>require<span class=\"o\">(</span><span class=\"s\">&#39;localforage&#39;</span><span class=\"o\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span>almacen<span class=\"o\">.</span>config<span class=\"o\">(</span><span class=\"err\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">driver</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">[</span>almacen<span class=\"o\">.</span>LOCALSTORAGE<span class=\"err\">]</span><span class=\"o\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;cmiSQL&#39;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"err\">}</span><span class=\"o\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span>let<span class=\"w\"> </span>AlmacenCMI<span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">getItem</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span>clave<span class=\"o\">,</span><span class=\"w\"> </span>llamada<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span>almacen<span class=\"o\">.</span>getItem<span class=\"o\">(</span>clave<span class=\"o\">,</span><span class=\"w\"> </span>llamada<span class=\"o\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">setItem</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span>clave<span class=\"o\">,</span><span class=\"w\"> </span>valor<span class=\"o\">,</span><span class=\"w\"> </span>llamada<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span>almacen<span class=\"o\">.</span>setItem<span class=\"o\">(</span>clave<span class=\"o\">,</span><span class=\"w\"> </span>valor<span class=\"o\">,</span><span class=\"w\"> </span>llamada<span class=\"o\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">removeItem</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span>clave<span class=\"o\">,</span><span class=\"w\"> </span>llamada<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span>almacen<span class=\"o\">.</span>removeItem<span class=\"o\">(</span>clave<span class=\"o\">,</span><span class=\"w\"> </span>llamada<span class=\"o\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">clearStorage</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span>almacen<span class=\"o\">.</span>clear<span class=\"o\">(),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">lengthOfStorage</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span>llamada<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span>almacen<span class=\"o\">.</span><span class=\"nb\">length</span><span class=\"o\">(</span>llamada<span class=\"o\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">keyInStorage</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span>keyIndex<span class=\"o\">,</span><span class=\"w\"> </span>callback<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span>almacen<span class=\"o\">.</span>keyInStorage<span class=\"o\">(</span>keyIndex<span class=\"o\">,</span><span class=\"w\"> </span>callback<span class=\"o\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">iterateStorage</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span>iteratorCallback<span class=\"o\">,</span><span class=\"w\"> </span>callback<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span>almacen<span class=\"o\">.</span>iterateStorage<span class=\"o\">(</span>iteratorCallback<span class=\"o\">,</span><span class=\"w\"> </span>callback<span class=\"o\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">setStorageDriver</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span>driverName<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span>almacen<span class=\"o\">.</span>setDrive<span class=\"o\">(</span>driverName<span class=\"o\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">storageConfig</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kr\">options</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span>almacen<span class=\"o\">.</span>config<span class=\"o\">(</span><span class=\"kr\">options</span><span class=\"o\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">_properties</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">{}</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"err\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span>let<span class=\"w\"> </span>almacenCMIPlugin<span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nl\">install</span><span class=\"o\">:</span><span class=\"w\"> </span>function<span class=\"w\"> </span><span class=\"o\">(</span>Vue<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"err\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span>Vue<span class=\"o\">.</span>prototype<span class=\"o\">.</span>almacen<span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>AlmacenCMI<span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"err\">}</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"err\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span>almacenCMIPlugin<span class=\"o\">.</span>version<span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&#39;0.1.0&#39;</span><span class=\"w\"></span>\n<span class=\"w\">  </span>module<span class=\"o\">.</span>exports<span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>almacenCMIPlugin<span class=\"w\"></span>\n<span class=\"err\">}</span><span class=\"o\">)()</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>Ahora, para poder usarlo en nuestra aplicaci\u00f3n, debemos importarlo primero, y despu\u00e9s activarlo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">Vue</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;vue&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">axios</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;axios&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">VueAxios</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;vue-axios&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">App</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;./App&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">router</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;./router&#39;</span>\n<span class=\"kn\">import</span> <span class=\"p\">{</span> <span class=\"n\">store</span> <span class=\"p\">}</span> <span class=\"kn\">from</span> <span class=\"s1\">&#39;./plugins/store&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">AlmacenCMI</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;./plugins/almacen&#39;</span>     <span class=\"o\">//</span> <span class=\"n\">se</span> <span class=\"n\">importa</span>\n\n<span class=\"n\">Vue</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">productionTip</span> <span class=\"o\">=</span> <span class=\"n\">false</span>\n<span class=\"n\">Vue</span><span class=\"o\">.</span><span class=\"n\">use</span><span class=\"p\">(</span><span class=\"n\">VueAxios</span><span class=\"p\">,</span> <span class=\"n\">axios</span><span class=\"p\">)</span>\n<span class=\"n\">Vue</span><span class=\"o\">.</span><span class=\"n\">use</span><span class=\"p\">(</span><span class=\"n\">AlmacenCMI</span><span class=\"p\">)</span>                           <span class=\"o\">//</span> <span class=\"n\">se</span> <span class=\"n\">activa</span>\n\n<span class=\"o\">/*</span> <span class=\"n\">eslint</span><span class=\"o\">-</span><span class=\"n\">disable</span> <span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">new</span> <span class=\"o\">*/</span>\n<span class=\"n\">new</span> <span class=\"n\">Vue</span><span class=\"p\">({</span>\n  <span class=\"n\">el</span><span class=\"p\">:</span> <span class=\"s1\">&#39;#app&#39;</span><span class=\"p\">,</span>\n  <span class=\"n\">router</span><span class=\"p\">,</span>\n  <span class=\"n\">store</span><span class=\"p\">,</span>\n  <span class=\"n\">template</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&lt;App/&gt;&#39;</span><span class=\"p\">,</span>\n  <span class=\"n\">components</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"n\">App</span> <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Un ejemplo del uso en el componente principal es el siguiente:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&lt;</span><span class=\"n\">script</span><span class=\"o\">&gt;</span>\n<span class=\"kn\">import</span> <span class=\"p\">{</span> <span class=\"n\">mapState</span> <span class=\"p\">}</span> <span class=\"kn\">from</span> <span class=\"s1\">&#39;vuex&#39;</span>\n\n<span class=\"n\">export</span> <span class=\"n\">default</span> <span class=\"p\">{</span>\n  <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">&#39;app&#39;</span><span class=\"p\">,</span>\n  <span class=\"n\">computed</span><span class=\"p\">:</span> <span class=\"n\">mapState</span><span class=\"p\">([</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">]),</span>\n  <span class=\"n\">created</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">almacen</span><span class=\"o\">.</span><span class=\"n\">getItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">)</span>\n      <span class=\"o\">.</span><span class=\"n\">then</span><span class=\"p\">((</span><span class=\"n\">payload</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"err\">$</span><span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">payload</span>\n        <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"err\">$</span><span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">acreditado</span> <span class=\"o\">=</span> <span class=\"n\">true</span>\n      <span class=\"p\">})</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">script</span><span class=\"o\">&gt;</span>\n</pre></div>\n\n\n<p>Como podemos apreciar, lo usamos como una <strong>promesa</strong>. Primero solicitamos la clave y lo que devuelve lo hacemos disponible en el almac\u00e9n, usando la funci\u00f3n <code>getItem</code>.</p>\n<p>En este otro ejemplo, al recibir el token, usamos la funci\u00f3n <code>setItem</code> para enviarlo al almacenamiento persistente.</p>\n<div class=\"codehilite\"><pre><span></span>    methods: {\n      login () {\n        this.axios.post(this.loginURL, this.credenciales)\n          .then(response =&gt; {\n            this.almacen.setItem(&#39;token&#39;, response.data.auth_token)\n          })\n      }\n    }\n</pre></div>\n\n\n<p>Por supuesto, pude haber usado nombres de funciones en espa\u00f1ol para hacerlo m\u00e1s f\u00e1cil, pero como pienso convertirlo en un plugin y hacerlo p\u00fablico en realidad de pasarlo todo a ingl\u00e9s, documentarlo y agregarle algunas pruebas (<em>si supera como</em>).</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-crear-un-plugin-para-vuejs", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 114, "fields": {"idx": "6353e721-24ca-4f7c-a383-788141d901f6", "creado": "2017-07-29T05:35:54.123Z", "modificado": "2017-07-29T05:37:03.287Z", "title": "Promesas en VueJS", "summary": "", "body": "Title: Promesas en VueJS    \r\nDate: 2017-03-26 23:21:51\r\nCategory: desarrollo\r\nTags: vuejs, promises, es6  \r\nSummary: \r\n\r\nMe encuentro frente a un problema que no he podido resolver. Tratando de recrear un servicio de AngularJS en VueJS para gestionar la acreditaci\u00f3n[^1], no puedo poner el _token_ en una variable.\r\n\r\nHice una pregunta en [Stackoverflow en Espa\u00f1ol](http://es.stackoverflow.com/questions/58142/obtener-el-valor-de-una-promesa) y aprend\u00ed a usar estos _fiddles_.\r\n\r\n<script async src=\"//jsfiddle.net/jstoledano/hjawnnh2/1/embed/js,html,result/\"></script>\r\n\r\n\r\n[^1]: Este es el art\u00edculo: [https://yo.toledano.org/desarrollo/verificacion-de-token-en-vuejs.html](https://yo.toledano.org/desarrollo/verificacion-de-token-en-vuejs.html)", "extend": "", "pub_date": "2017-03-26T06:34:52Z", "summary_html": "", "body_html": "<p>Me encuentro frente a un problema que no he podido resolver. Tratando de recrear un servicio de AngularJS en VueJS para gestionar la acreditaci\u00f3n<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>, no puedo poner el <em>token</em> en una variable.</p>\n<p>Hice una pregunta en <a href=\"http://es.stackoverflow.com/questions/58142/obtener-el-valor-de-una-promesa\">Stackoverflow en Espa\u00f1ol</a> y aprend\u00ed a usar estos <em>fiddles</em>.</p>\n<script async src=\"//jsfiddle.net/jstoledano/hjawnnh2/1/embed/js,html,result/\"></script>\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Este es el art\u00edculo: <a href=\"https://yo.toledano.org/desarrollo/verificacion-de-token-en-vuejs.html\">https://yo.toledano.org/desarrollo/verificacion-de-token-en-vuejs.html</a>&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "promesas-en-vuejs", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 115, "fields": {"idx": "e75ae276-e6a7-4034-b610-3427f365e5d2", "creado": "2017-07-29T05:37:39.217Z", "modificado": "2017-08-03T04:13:03.705Z", "title": "Verificaci\u00f3n de Token en VueJS", "summary": "Una primera aproximaci\u00f3n a un servicio para verificar que existe un token de acreditaci\u00f3n con VueJS.", "body": "Title: Verificaci\u00f3n de Token en VueJS    \r\nDate: 2017-03-25 21:15:40\r\nCategory: desarrollo\r\nTags: vuejs, restful, patterns \r\nSummary: Una primera aproximaci\u00f3n a un servicio para verificar que existe un token de acreditaci\u00f3n con VueJS.\r\n\r\nHace unos meses intent\u00e9 hacer la aplicaci\u00f3n del Cuadro de Mando Integral, el CMI, usando AngularJS. Aunque hice algunos avances, realmente nunca logr\u00e9 entenderlo del todo[^1].\r\n\r\n[^1]: O tal vez lo abandon\u00e9 muy pronto.\r\n\r\nLogr\u00e9 hacer un servicio para la acreditaci\u00f3n de usuarios en AngularJS y ahora trato de replicarlo en VueJS. Y de hecho, ya lo logr\u00e9 de manera muy burda.\r\n\r\nEn el componente principal de mi aplicaci\u00f3n tengo el siguiente c\u00f3digo:\r\n\r\n```javascript\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: 'app',\r\n  computed: mapState(['token', 'fuera']),\r\n  created () {\r\n    this.almacen.getItem('token')\r\n      .then((payload) => {\r\n        this.token = payload\r\n        this.fuera = false\r\n      })\r\n  }\r\n}\r\n```\r\n\r\nUsa el plugin `almacen` que vimos en el [art\u00edculo anterior](https://yo.toledano.org/desarrollo/como-crear-un-plugin-para-vuejs.html) y lo primero que hace es _mapear_ los elementos del almac\u00e9n general al almacen de Vuex. Espec\u00edficamente las claves `token` y `fuera`. Esta \u00faltima es una variable _booleana_ que al inicio es `true`.\r\n\r\nEntonces buscamos el `token` en el almacen, con `this.almacen.getItem('token')` y una vez que tenemos la respuesta de la promesa hace dos cosas, primero almacena la clave en el almacen de Vuex con `this.token = payload` y cambia la variable `fuera` a `false`.\r\n\r\nEn la aplicaci\u00f3n de AngularJS, se hace de la siguiente manera.\r\n\r\n```javascript\r\n(function(angular){\r\n  'use strict';\r\n\r\n  angular\r\n    .module('cmi')\r\n    .service('session', sessionService);\r\n\r\n  sessionService.$inject = ['$log', 'localStorage'];\r\n\r\n  function sessionService($log, localStorage){\r\n    // jshint validthis: true\r\n    var self = this;\r\n\r\n    // API P\u00fablica\r\n    self.getUser = getUser;\r\n    self.setUser = setUser;\r\n    self.getAccessToken = getAccessToken;\r\n    self.setAccessToken = setAccessToken;\r\n    self.destroy = destroy;\r\n\r\n    var _user = JSON.parse(localStorage.getItem('session.username'));\r\n    var _accessToken = JSON.parse(localStorage.getItem('session.accessToken'));\r\n\r\n    function getUser(){\r\n      return _user;\r\n    }     // getUser()\r\n\r\n    function setUser(user){\r\n      _user = user;\r\n      localStorage.setItem('session.username', JSON.stringify(user));\r\n      return _user;\r\n    }     // setUser()\r\n\r\n    function getAccessToken(){\r\n      return _accessToken;\r\n    }     // getAccessToken()\r\n\r\n    function setAccessToken(token){\r\n      _accessToken = token;\r\n      localStorage.setItem('session.accessToken', JSON.stringify(token));\r\n      return _accessToken;\r\n    }     // setAccessToken()\r\n\r\n    function destroy(){\r\n      setUser(null);\r\n      setAccessToken(null);\r\n    }     // destroy()\r\n  }\r\n})(angular);\r\n```\r\n\r\nEste es un _servicio_, pero en VueJS no existen, as\u00ed que debemos encontrar una manera de replicarlo.\r\n\r\n## Mixins\r\n\r\nLos _mixins_ son una forma flexible de distribuir funcionalidades reutilizables en componentes de Vue. Un objeto _mixin_ puede contener cualquier opci\u00f3n de un componente. Cuando un componente usa un mixin, todas las opciones de este mixin se _\"mezclan\"_ con las del propio componente.\r\n\r\nEsta podr\u00eda ser la soluci\u00f3n para lo que buscamos.\r\n\r\nVamos a crear la carpeta de _mixins_ y vamos a convertir la funci\u00f3n que tenemos en `created()` en su equivalente `getAccessToken` de AngularJS.\r\n\r\n\r\nEl _mixin_ para que pueda ser exportado debe tener esta estructura.\r\n\r\n```javascript\r\nexport default {\r\n    // propiedades calculadas,\r\n    // m\u00e9todos,\r\n    // data,\r\n    // ganchos de montaje\r\n    // etc.\r\n}\r\n```\r\n\r\nY en el componente donde _importamos_ el mixin, se hace as\u00ed.\r\n\r\n```javascript\r\nimport unNombreParaMiMixin from '/la/ruta/del/mixin'\r\n```\r\n\r\nEs decir, que es posible llamar al mixin de diferentes maneras en cada componente. No tendr\u00eda mucho sentido hacer eso, pero es posible.\r\n\r\nAhora veamos el contenido del mixin.\r\n\r\nLo primero que hice fue agregar `mapState` como una dependencia.\r\n\r\n    import { mapState } from 'vuex'\r\n\r\nLuego, _mapeo_ dos variable, el `token` y `fuera`[^2].\r\n\r\n    computed: mapState(['token', 'fuera']),\r\n\r\n[^2]: Creo que no necesito esta variable, porque basta con comprobar que `token` tenga informaci\u00f3n.\r\n\r\nCuando se mezcle el mixin con los componentes, estas dos variables estar\u00e1n disponibles.\r\n\r\nAhora agrego un m\u00e9todo que lee el token de `localStorage` y si existe lo coloca en el almacen de Vuex (en `token`) y cambia la variable `fuera` a `false`. En caso que no exista el `token`, `fuera` queda en `true`. Asi se verifica si el usuario est\u00e1 acreditado en la aplicaci\u00f3n.\r\n\r\n```javascript\r\n  methods: {\r\n    getAccessToken: function () {\r\n      this.almacen.getItem('token')\r\n        .then((payload) => {\r\n          if (payload) {\r\n            this.$store.state.token = payload\r\n            this.$store.state.fuera = false\r\n          } else this.$store.state.fuera = true\r\n        }).catch((e) => console.log(`Error ${e}`))\r\n    }\r\n  },\r\n```\r\n\r\nPor \u00faltimo, agregu\u00e9 un gancho a `created()` y llama a esta funci\u00f3n `getAccessToken`.\r\n\r\n```javascript\r\n  created () {\r\n    this.getAccessToken()\r\n  }\r\n```\r\n\r\nAhora bien, creo que no deber\u00eda usar este gancho, porque entonces si uso este _mixin_ en m\u00e1s de un componente, la funci\u00f3n ser\u00eda llamada cada vez, aunque no sea necesario. \r\n\r\nLo m\u00e1s conveniente ser\u00e1 que la use el componente principal \u00fanicamente, y en el componente har\u00e9 esto mismo.\r\n\r\n```javascript\r\nimport sessionService from './mixins/session.mixin'\r\n\r\nexport default {\r\n  name: 'app',\r\n  mixins: [sessionService],\r\n  created () {\r\n    this.getAccessToken()\r\n  }\r\n}\r\n```\r\n\r\nPrimero se llama al mixin, y luego a los ganchos.\r\n\r\nEl c\u00f3digo completo se ve as\u00ed.\r\n\r\n```javascript\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  computed: mapState(['token', 'fuera']),\r\n  methods: {\r\n    getAccessToken: function () {\r\n      this.almacen.getItem('token')\r\n        .then((payload) => {\r\n          if (payload) {\r\n            this.$store.state.token = payload\r\n            this.$store.state.fuera = false\r\n          } else this.$store.state.fuera = true\r\n        }).catch((e) => console.log(`Error ${e}`))\r\n    }\r\n  }\r\n}\r\n```", "extend": "", "pub_date": "2017-03-26T03:15:40Z", "summary_html": "<p>Una primera aproximaci\u00f3n a un servicio para verificar que existe un token de acreditaci\u00f3n con VueJS.</p>", "body_html": "<p>Hace unos meses intent\u00e9 hacer la aplicaci\u00f3n del Cuadro de Mando Integral, el CMI, usando AngularJS. Aunque hice algunos avances, realmente nunca logr\u00e9 entenderlo del todo<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>.</p>\n<p>Logr\u00e9 hacer un servicio para la acreditaci\u00f3n de usuarios en AngularJS y ahora trato de replicarlo en VueJS. Y de hecho, ya lo logr\u00e9 de manera muy burda.</p>\n<p>En el componente principal de mi aplicaci\u00f3n tengo el siguiente c\u00f3digo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">mapState</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vuex&#39;</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>\n  <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;app&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">computed</span><span class=\"o\">:</span> <span class=\"nx\">mapState</span><span class=\"p\">([</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fuera&#39;</span><span class=\"p\">]),</span>\n  <span class=\"nx\">created</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">almacen</span><span class=\"p\">.</span><span class=\"nx\">getItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">)</span>\n      <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">payload</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"nx\">payload</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">fuera</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n      <span class=\"p\">})</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Usa el plugin <code>almacen</code> que vimos en el <a href=\"https://yo.toledano.org/desarrollo/como-crear-un-plugin-para-vuejs.html\">art\u00edculo anterior</a> y lo primero que hace es <em>mapear</em> los elementos del almac\u00e9n general al almacen de Vuex. Espec\u00edficamente las claves <code>token</code> y <code>fuera</code>. Esta \u00faltima es una variable <em>booleana</em> que al inicio es <code>true</code>.</p>\n<p>Entonces buscamos el <code>token</code> en el almacen, con <code>this.almacen.getItem('token')</code> y una vez que tenemos la respuesta de la promesa hace dos cosas, primero almacena la clave en el almacen de Vuex con <code>this.token = payload</code> y cambia la variable <code>fuera</code> a <code>false</code>.</p>\n<p>En la aplicaci\u00f3n de AngularJS, se hace de la siguiente manera.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">angular</span><span class=\"p\">){</span>\n  <span class=\"s1\">&#39;use strict&#39;</span><span class=\"p\">;</span>\n\n  <span class=\"nx\">angular</span>\n    <span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s1\">&#39;cmi&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">service</span><span class=\"p\">(</span><span class=\"s1\">&#39;session&#39;</span><span class=\"p\">,</span> <span class=\"nx\">sessionService</span><span class=\"p\">);</span>\n\n  <span class=\"nx\">sessionService</span><span class=\"p\">.</span><span class=\"nx\">$inject</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;$log&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;localStorage&#39;</span><span class=\"p\">];</span>\n\n  <span class=\"kd\">function</span> <span class=\"nx\">sessionService</span><span class=\"p\">(</span><span class=\"nx\">$log</span><span class=\"p\">,</span> <span class=\"nx\">localStorage</span><span class=\"p\">){</span>\n    <span class=\"c1\">// jshint validthis: true</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">self</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">;</span>\n\n    <span class=\"c1\">// API P\u00fablica</span>\n    <span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">getUser</span> <span class=\"o\">=</span> <span class=\"nx\">getUser</span><span class=\"p\">;</span>\n    <span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">setUser</span> <span class=\"o\">=</span> <span class=\"nx\">setUser</span><span class=\"p\">;</span>\n    <span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">getAccessToken</span> <span class=\"o\">=</span> <span class=\"nx\">getAccessToken</span><span class=\"p\">;</span>\n    <span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">setAccessToken</span> <span class=\"o\">=</span> <span class=\"nx\">setAccessToken</span><span class=\"p\">;</span>\n    <span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">destroy</span> <span class=\"o\">=</span> <span class=\"nx\">destroy</span><span class=\"p\">;</span>\n\n    <span class=\"kd\">var</span> <span class=\"nx\">_user</span> <span class=\"o\">=</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">parse</span><span class=\"p\">(</span><span class=\"nx\">localStorage</span><span class=\"p\">.</span><span class=\"nx\">getItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;session.username&#39;</span><span class=\"p\">));</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">_accessToken</span> <span class=\"o\">=</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">parse</span><span class=\"p\">(</span><span class=\"nx\">localStorage</span><span class=\"p\">.</span><span class=\"nx\">getItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;session.accessToken&#39;</span><span class=\"p\">));</span>\n\n    <span class=\"kd\">function</span> <span class=\"nx\">getUser</span><span class=\"p\">(){</span>\n      <span class=\"k\">return</span> <span class=\"nx\">_user</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>     <span class=\"c1\">// getUser()</span>\n\n    <span class=\"kd\">function</span> <span class=\"nx\">setUser</span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">){</span>\n      <span class=\"nx\">_user</span> <span class=\"o\">=</span> <span class=\"nx\">user</span><span class=\"p\">;</span>\n      <span class=\"nx\">localStorage</span><span class=\"p\">.</span><span class=\"nx\">setItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;session.username&#39;</span><span class=\"p\">,</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">));</span>\n      <span class=\"k\">return</span> <span class=\"nx\">_user</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>     <span class=\"c1\">// setUser()</span>\n\n    <span class=\"kd\">function</span> <span class=\"nx\">getAccessToken</span><span class=\"p\">(){</span>\n      <span class=\"k\">return</span> <span class=\"nx\">_accessToken</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>     <span class=\"c1\">// getAccessToken()</span>\n\n    <span class=\"kd\">function</span> <span class=\"nx\">setAccessToken</span><span class=\"p\">(</span><span class=\"nx\">token</span><span class=\"p\">){</span>\n      <span class=\"nx\">_accessToken</span> <span class=\"o\">=</span> <span class=\"nx\">token</span><span class=\"p\">;</span>\n      <span class=\"nx\">localStorage</span><span class=\"p\">.</span><span class=\"nx\">setItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;session.accessToken&#39;</span><span class=\"p\">,</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">token</span><span class=\"p\">));</span>\n      <span class=\"k\">return</span> <span class=\"nx\">_accessToken</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>     <span class=\"c1\">// setAccessToken()</span>\n\n    <span class=\"kd\">function</span> <span class=\"nx\">destroy</span><span class=\"p\">(){</span>\n      <span class=\"nx\">setUser</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">);</span>\n      <span class=\"nx\">setAccessToken</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>     <span class=\"c1\">// destroy()</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})(</span><span class=\"nx\">angular</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>Este es un <em>servicio</em>, pero en VueJS no existen, as\u00ed que debemos encontrar una manera de replicarlo.</p>\n<h2 id=\"mixins\">Mixins</h2>\n<p>Los <em>mixins</em> son una forma flexible de distribuir funcionalidades reutilizables en componentes de Vue. Un objeto <em>mixin</em> puede contener cualquier opci\u00f3n de un componente. Cuando un componente usa un mixin, todas las opciones de este mixin se <em>&ldquo;mezclan&rdquo;</em> con las del propio componente.</p>\n<p>Esta podr\u00eda ser la soluci\u00f3n para lo que buscamos.</p>\n<p>Vamos a crear la carpeta de <em>mixins</em> y vamos a convertir la funci\u00f3n que tenemos en <code>created()</code> en su equivalente <code>getAccessToken</code> de AngularJS.</p>\n<p>El <em>mixin</em> para que pueda ser exportado debe tener esta estructura.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// propiedades calculadas,</span>\n    <span class=\"c1\">// m\u00e9todos,</span>\n    <span class=\"c1\">// data,</span>\n    <span class=\"c1\">// ganchos de montaje</span>\n    <span class=\"c1\">// etc.</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Y en el componente donde <em>importamos</em> el mixin, se hace as\u00ed.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">unNombreParaMiMixin</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;/la/ruta/del/mixin&#39;</span>\n</pre></div>\n\n\n<p>Es decir, que es posible llamar al mixin de diferentes maneras en cada componente. No tendr\u00eda mucho sentido hacer eso, pero es posible.</p>\n<p>Ahora veamos el contenido del mixin.</p>\n<p>Lo primero que hice fue agregar <code>mapState</code> como una dependencia.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"p\">{</span> <span class=\"n\">mapState</span> <span class=\"p\">}</span> <span class=\"kn\">from</span> <span class=\"s1\">&#39;vuex&#39;</span>\n</pre></div>\n\n\n<p>Luego, <em>mapeo</em> dos variable, el <code>token</code> y <code>fuera</code><sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">computed</span><span class=\"o\">:</span> <span class=\"n\">mapState</span><span class=\"o\">([</span><span class=\"s1\">&#39;token&#39;</span><span class=\"o\">,</span> <span class=\"s1\">&#39;fuera&#39;</span><span class=\"o\">]),</span>\n</pre></div>\n\n\n<p>Cuando se mezcle el mixin con los componentes, estas dos variables estar\u00e1n disponibles.</p>\n<p>Ahora agrego un m\u00e9todo que lee el token de <code>localStorage</code> y si existe lo coloca en el almacen de Vuex (en <code>token</code>) y cambia la variable <code>fuera</code> a <code>false</code>. En caso que no exista el <code>token</code>, <code>fuera</code> queda en <code>true</code>. Asi se verifica si el usuario est\u00e1 acreditado en la aplicaci\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"nx\">methods</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"nx\">getAccessToken</span><span class=\"o\">:</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">almacen</span><span class=\"p\">.</span><span class=\"nx\">getItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">payload</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n          <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">payload</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"nx\">payload</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">fuera</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n          <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">fuera</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n        <span class=\"p\">}).</span><span class=\"k\">catch</span><span class=\"p\">((</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Error </span><span class=\"si\">${</span><span class=\"nx\">e</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">))</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n</pre></div>\n\n\n<p>Por \u00faltimo, agregu\u00e9 un gancho a <code>created()</code> y llama a esta funci\u00f3n <code>getAccessToken</code>.</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"nx\">created</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">getAccessToken</span><span class=\"p\">()</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Ahora bien, creo que no deber\u00eda usar este gancho, porque entonces si uso este <em>mixin</em> en m\u00e1s de un componente, la funci\u00f3n ser\u00eda llamada cada vez, aunque no sea necesario. </p>\n<p>Lo m\u00e1s conveniente ser\u00e1 que la use el componente principal \u00fanicamente, y en el componente har\u00e9 esto mismo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">sessionService</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;./mixins/session.mixin&#39;</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>\n  <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;app&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">mixins</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"nx\">sessionService</span><span class=\"p\">],</span>\n  <span class=\"nx\">created</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">getAccessToken</span><span class=\"p\">()</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Primero se llama al mixin, y luego a los ganchos.</p>\n<p>El c\u00f3digo completo se ve as\u00ed.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">mapState</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vuex&#39;</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>\n  <span class=\"nx\">computed</span><span class=\"o\">:</span> <span class=\"nx\">mapState</span><span class=\"p\">([</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fuera&#39;</span><span class=\"p\">]),</span>\n  <span class=\"nx\">methods</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"nx\">getAccessToken</span><span class=\"o\">:</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">almacen</span><span class=\"p\">.</span><span class=\"nx\">getItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">payload</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n          <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">payload</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"nx\">payload</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">fuera</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n          <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">fuera</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n        <span class=\"p\">}).</span><span class=\"k\">catch</span><span class=\"p\">((</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Error </span><span class=\"si\">${</span><span class=\"nx\">e</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">))</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>O tal vez lo abandon\u00e9 muy pronto.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Creo que no necesito esta variable, porque basta con comprobar que <code>token</code> tenga informaci\u00f3n.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "verificacion-de-token-en-vuejs", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 116, "fields": {"idx": "27a13902-d232-44aa-b895-09f9a58e7f57", "creado": "2017-07-29T05:38:24.498Z", "modificado": "2017-07-29T05:38:24.498Z", "title": "Mixins con VueJS", "summary": "Un plugin m\u00ednimo, completo, funcional y verificable que permite realizar actvidades de acreditaci\u00f3n en VueJS", "body": "Title: Mixin con Vue    \r\nDate: 2017-03-27 21:55:41\r\nCategory: desarrollo \r\nTags: vuejs, javascript \r\nSummary: Un plugin m\u00ednimo, completo, funcional y verificable que permite realizar actvidades de acreditaci\u00f3n en VueJS\r\n\r\nMientras me resuelven la pregunta en [Stackoverflow en Espa\u00f1ol](http://es.stackoverflow.com/questions/58142/obtener-el-valor-de-una-promesa) sigo avanzando con mi plugin de acreditaci\u00f3n.\r\n\r\nEl objetivo del mixin es ofrecer a la aplicaci\u00f3n las acciones:\r\n\r\n- _login_ para obtener el token, \r\n- _logout_ para eliminar cualquier dato de acreditaci\u00f3n del servidor, del local storage y del state, \r\n- que agregue los datos del usuario al _state_,\r\n- que agregue el _token_ al _local storage_ y al _state_,\r\n- que agregue el token al encabezado `Authorization` de todas las peticiones.\r\n\r\n## Dependencias del mixin\r\n\r\nEl mixin tiene varias dependencias, como [Vue](https://vuejs.org/), [Vuex](https://vuex.vuejs.org/en/), [Axios](https://github.com/mzabriskie/axios) y [localForage](https://localforage.github.io/localForage/) .\r\n\r\n    :::javascript\r\n    import Vue from 'vue'\r\n    import { mapState } from 'vuex'\r\n    import axios from 'axios'\r\n    import VueAxios from 'vue-axios'\r\n    import { store } from '../plugins/store'\r\n    import AlmacenCMI from '../plugins/almacen'\r\n\r\n\r\n## Login\r\nEl _login_ es un _m\u00e9todo_ que recibe las credenciales del usuario, es decir, el nombre del usuario y las contrase\u00f1as y las env\u00eda al _endpoint_ de la API para obtener un token. Una clave especial que sirve para demostrarle al servidor API que el usuario est\u00e1 acreditado para realizar operaciones u obtener informaci\u00f3n de la API.\r\n\r\nEsta funci\u00f3n la usa un formulario de de ingreso, que le manda un objeto con dos propiedades, `username` y `password`. \r\n\r\n    :::js\r\n    function _login () {\r\n      axios.post(_loginURL, this.credenciales)\r\n        .then(response => {\r\n          let _token = response.data.auth_token\r\n          this.almacen.setItem('token', _token)\r\n          store.state.token = _token\r\n        }).catch(e => console.log(`${e}`))\r\n    }\r\n\r\nEste objeto le pasa al m\u00e9todo `post` la URL de login y las credenciales de un usuario. Esta es una promesa que una vez que se resuelve de forma favorable, crea una variable local `_token` para almacenar los datos que devuelve el servidor y guarda los datos tanto en el almac\u00e9n local como en la variable de estado. Por el momento, el \u00fanico control de errores es mostrarlo en la consola.\r\n\r\n## Control de Acceso\r\nEste m\u00e9todo se ejecuta en el componente principal de la aplicaci\u00f3n en el momento de [*montar*](https://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram) la instancia Vue[^1]. \r\n\r\n[^1]: Tambi\u00e9n podr\u00eda ser al momento de crearla, pero no estoy seguro. En la pr\u00f3xima revisi\u00f3n lo veremos.\r\n\r\n```\r\nfunction _getAccessToken () {\r\n  this.almacen.getItem('token').then((_token) => {\r\n    store.state.token = _token\r\n    this.axios.defaults.headers.common['Authorization'] = 'Token ' + _token\r\n    _me()\r\n  })\r\n}\r\n```\r\n\r\nSe trata de convertir al _store_ de **Vuex** en la \u00fanica fuente de verdad, as\u00ed que toma el token del almac\u00e9n persistente y lo coloca en el _state_. Tambi\u00e9n cambia la configuraci\u00f3n de Axios para que incluya en todas las peticiones que haga el token. Para finalizar, llama al m\u00e9todo `me()`.\r\n\r\n## M\u00e9todo me()\r\nEste m\u00e9todo copia el usuario, el identificador y el corre electr\u00f3nico en un objeto en el state, para que sea usado como fuente principal de datos.\r\n\r\n```\r\nfunction _me () {\r\n  axios.get(_authURL + 'me/', {})\r\n    .then((_me) => { store.state.me = _me.data })\r\n}\r\n```\r\n\r\n## M\u00e9todo destroy()\r\nEste m\u00e9todo elimina los datos de acreditaci\u00f3n, tanto en el servidor, en el estado  y el almac\u00e9n persistente.\r\n```\r\nfunction _destroy () {\r\n  axios.post(_authURL + 'logout/')\r\n    .then(() => {\r\n      this.almacen.removeItem('token')\r\n      store.state.token = null\r\n      store.state.me = {}\r\n      store.state.fuera = true\r\n      this.axios.defaults.headers.common['Authorization'] = ''\r\n    })\r\n}\r\n```\r\n\r\nLlamo al /endpoint/ `logout` y cuando se resuelve la promesa se elimina el token del almacenamiento persistente, luego el token, la variable `me` y `fuera` del estado y se elimina la configuraci\u00f3n de Axios.\r\n\r\n## Conclusi\u00f3n\r\nEl _mixin_ expone tres variables y tres m\u00e9todos, para que est\u00e9n disponibles en los componentes donde usen.\r\n\r\n```\r\nexport default {\r\n  computed: {\r\n    ...mapState(['token', 'fuera', 'me'])\r\n  },\r\n  methods: {\r\n    getAccessToken: _getAccessToken,\r\n    login: _login,\r\n    destroy: _destroy\r\n  }\r\n}\r\n```\r\n\r\nEste es el c\u00f3digo completo del _mixin_.\r\n\r\n```\r\n/**\r\n * Created by javier on 25/03/17.\r\n */\r\n\r\nimport Vue from 'vue'\r\nimport { mapState } from 'vuex'\r\nimport axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\nimport { store } from '../plugins/store'\r\nimport AlmacenCMI from '../plugins/almacen'\r\n\r\nVue.use(VueAxios, axios)\r\nVue.use(AlmacenCMI)\r\n\r\nconst _baseURL = 'http://localhost:8000/'\r\nconst _authURL = _baseURL + 'auth/'\r\nconst _loginURL = _authURL + 'login/'\r\n\r\n/**\r\n * Dadas las credenciales, autentifica al usuario\r\n * @author Javier Sanchez Toledano <js.toledano@me.com>\r\n * @see Axios\r\n */\r\nfunction _login () {\r\n  axios.post(_loginURL, this.credenciales)\r\n    .then(response => {\r\n      let _token = response.data.auth_token\r\n      this.almacen.setItem('token', _token)\r\n      store.state.token = _token\r\n    }).catch(e => console.log(`${e}`))\r\n}\r\n\r\n/**\r\n * Coloca el token en el almacen de vuex, al montar un componente\r\n * @author Javier Sanchez Toledano <js.toledano@me.com>\r\n * @see localForage\r\n */\r\nfunction _getAccessToken () {\r\n  this.almacen.getItem('token').then((_token) => {\r\n    store.state.token = _token\r\n    this.axios.defaults.headers.common['Authorization'] = 'Token ' + _token\r\n    _me()\r\n  })\r\n}\r\n\r\n/**\r\n * Trae los datos del usuario, disponibles en el estate\r\n * @private\r\n * @return me\r\n * @see _getAccessToken\r\n */\r\nfunction _me () {\r\n  axios.get(_authURL + 'me/', {})\r\n    .then((_me) => { store.state.me = _me.data })\r\n}\r\n\r\n/**\r\n * Se elimina el token y los datos en local storage y el state.\r\n * O sea, sale de la aplicaci\u00f3n\r\n * @private\r\n */\r\nfunction _destroy () {\r\n  axios.post(_authURL + 'logout/')\r\n    .then(() => {\r\n      this.axios.defaults.headers.common['Authorization'] = 'Token ' + this.token\r\n      this.almacen.removeItem('token')\r\n      store.state.token = null\r\n      store.state.me = {}\r\n      store.state.fuera = true\r\n      this.axios.defaults.headers.common['Authorization'] = ''\r\n    })\r\n}\r\n\r\n// const _sessionVersion = '0.1.0'\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapState(['token', 'fuera', 'me'])\r\n  },\r\n  methods: {\r\n    getAccessToken: _getAccessToken,\r\n    login: _login,\r\n    destroy: _destroy\r\n  }\r\n}\r\n```", "extend": "", "pub_date": "2017-03-28T03:55:41Z", "summary_html": "<p>Un plugin m\u00ednimo, completo, funcional y verificable que permite realizar actvidades de acreditaci\u00f3n en VueJS</p>", "body_html": "<p>Mientras me resuelven la pregunta en <a href=\"http://es.stackoverflow.com/questions/58142/obtener-el-valor-de-una-promesa\">Stackoverflow en Espa\u00f1ol</a> sigo avanzando con mi plugin de acreditaci\u00f3n.</p>\n<p>El objetivo del mixin es ofrecer a la aplicaci\u00f3n las acciones:</p>\n<ul>\n<li><em>login</em> para obtener el token, </li>\n<li><em>logout</em> para eliminar cualquier dato de acreditaci\u00f3n del servidor, del local storage y del state, </li>\n<li>que agregue los datos del usuario al <em>state</em>,</li>\n<li>que agregue el <em>token</em> al <em>local storage</em> y al <em>state</em>,</li>\n<li>que agregue el token al encabezado <code>Authorization</code> de todas las peticiones.</li>\n</ul>\n<h2 id=\"dependencias-del-mixin\">Dependencias del mixin</h2>\n<p>El mixin tiene varias dependencias, como <a href=\"https://vuejs.org/\">Vue</a>, <a href=\"https://vuex.vuejs.org/en/\">Vuex</a>, <a href=\"https://github.com/mzabriskie/axios\">Axios</a> y <a href=\"https://localforage.github.io/localForage/\">localForage</a> .</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">Vue</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vue&#39;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">mapState</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vuex&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">axios</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;axios&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">VueAxios</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vue-axios&#39;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">store</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../plugins/store&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">AlmacenCMI</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../plugins/almacen&#39;</span>\n</pre></div>\n\n\n<h2 id=\"login\">Login</h2>\n<p>El <em>login</em> es un <em>m\u00e9todo</em> que recibe las credenciales del usuario, es decir, el nombre del usuario y las contrase\u00f1as y las env\u00eda al <em>endpoint</em> de la API para obtener un token. Una clave especial que sirve para demostrarle al servidor API que el usuario est\u00e1 acreditado para realizar operaciones u obtener informaci\u00f3n de la API.</p>\n<p>Esta funci\u00f3n la usa un formulario de de ingreso, que le manda un objeto con dos propiedades, <code>username</code> y <code>password</code>. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">function</span> <span class=\"nx\">_login</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"nx\">post</span><span class=\"p\">(</span><span class=\"nx\">_loginURL</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">credenciales</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"nx\">response</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"kd\">let</span> <span class=\"nx\">_token</span> <span class=\"o\">=</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">auth_token</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">almacen</span><span class=\"p\">.</span><span class=\"nx\">setItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">,</span> <span class=\"nx\">_token</span><span class=\"p\">)</span>\n      <span class=\"nx\">store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"nx\">_token</span>\n    <span class=\"p\">}).</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">e</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">e</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Este objeto le pasa al m\u00e9todo <code>post</code> la URL de login y las credenciales de un usuario. Esta es una promesa que una vez que se resuelve de forma favorable, crea una variable local <code>_token</code> para almacenar los datos que devuelve el servidor y guarda los datos tanto en el almac\u00e9n local como en la variable de estado. Por el momento, el \u00fanico control de errores es mostrarlo en la consola.</p>\n<h2 id=\"control-de-acceso\">Control de Acceso</h2>\n<p>Este m\u00e9todo se ejecuta en el componente principal de la aplicaci\u00f3n en el momento de <a href=\"https://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram\"><em>montar</em></a> la instancia Vue<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">function</span> <span class=\"nx\">_getAccessToken</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">almacen</span><span class=\"p\">.</span><span class=\"nx\">getItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">).</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">_token</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"nx\">_token</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"nx\">defaults</span><span class=\"p\">.</span><span class=\"nx\">headers</span><span class=\"p\">.</span><span class=\"nx\">common</span><span class=\"p\">[</span><span class=\"s1\">&#39;Authorization&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Token &#39;</span> <span class=\"o\">+</span> <span class=\"nx\">_token</span>\n    <span class=\"nx\">_me</span><span class=\"p\">()</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Se trata de convertir al <em>store</em> de <strong>Vuex</strong> en la \u00fanica fuente de verdad, as\u00ed que toma el token del almac\u00e9n persistente y lo coloca en el <em>state</em>. Tambi\u00e9n cambia la configuraci\u00f3n de Axios para que incluya en todas las peticiones que haga el token. Para finalizar, llama al m\u00e9todo <code>me()</code>.</p>\n<h2 id=\"metodo-me\">M\u00e9todo me()</h2>\n<p>Este m\u00e9todo copia el usuario, el identificador y el corre electr\u00f3nico en un objeto en el state, para que sea usado como fuente principal de datos.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">function</span> <span class=\"nx\">_me</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"nx\">_authURL</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;me/&#39;</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n    <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">_me</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span> <span class=\"nx\">store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">me</span> <span class=\"o\">=</span> <span class=\"nx\">_me</span><span class=\"p\">.</span><span class=\"nx\">data</span> <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<h2 id=\"metodo-destroy\">M\u00e9todo destroy()</h2>\n<p>Este m\u00e9todo elimina los datos de acreditaci\u00f3n, tanto en el servidor, en el estado  y el almac\u00e9n persistente.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">function</span> <span class=\"nx\">_destroy</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"nx\">post</span><span class=\"p\">(</span><span class=\"nx\">_authURL</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;logout/&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">almacen</span><span class=\"p\">.</span><span class=\"nx\">removeItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">)</span>\n      <span class=\"nx\">store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"kc\">null</span>\n      <span class=\"nx\">store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">me</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n      <span class=\"nx\">store</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">fuera</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"nx\">defaults</span><span class=\"p\">.</span><span class=\"nx\">headers</span><span class=\"p\">.</span><span class=\"nx\">common</span><span class=\"p\">[</span><span class=\"s1\">&#39;Authorization&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n    <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Llamo al /endpoint/ <code>logout</code> y cuando se resuelve la promesa se elimina el token del almacenamiento persistente, luego el token, la variable <code>me</code> y <code>fuera</code> del estado y se elimina la configuraci\u00f3n de Axios.</p>\n<h2 id=\"conclusion\">Conclusi\u00f3n</h2>\n<p>El <em>mixin</em> expone tres variables y tres m\u00e9todos, para que est\u00e9n disponibles en los componentes donde usen.</p>\n<div class=\"codehilite\"><pre><span></span>export default {\n  computed: {\n    ...mapState([&#39;token&#39;, &#39;fuera&#39;, &#39;me&#39;])\n  },\n  methods: {\n    getAccessToken: _getAccessToken,\n    login: _login,\n    destroy: _destroy\n  }\n}\n</pre></div>\n\n\n<p>Este es el c\u00f3digo completo del <em>mixin</em>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">/**</span>\n <span class=\"o\">*</span> <span class=\"n\">Created</span> <span class=\"n\">by</span> <span class=\"n\">javier</span> <span class=\"n\">on</span> <span class=\"mi\">25</span><span class=\"o\">/</span><span class=\"mo\">03</span><span class=\"o\">/</span><span class=\"mf\">17.</span>\n <span class=\"o\">*/</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">Vue</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;vue&#39;</span>\n<span class=\"kn\">import</span> <span class=\"p\">{</span> <span class=\"n\">mapState</span> <span class=\"p\">}</span> <span class=\"kn\">from</span> <span class=\"s1\">&#39;vuex&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">axios</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;axios&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">VueAxios</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;vue-axios&#39;</span>\n<span class=\"kn\">import</span> <span class=\"p\">{</span> <span class=\"n\">store</span> <span class=\"p\">}</span> <span class=\"kn\">from</span> <span class=\"s1\">&#39;../plugins/store&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">AlmacenCMI</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;../plugins/almacen&#39;</span>\n\n<span class=\"n\">Vue</span><span class=\"o\">.</span><span class=\"n\">use</span><span class=\"p\">(</span><span class=\"n\">VueAxios</span><span class=\"p\">,</span> <span class=\"n\">axios</span><span class=\"p\">)</span>\n<span class=\"n\">Vue</span><span class=\"o\">.</span><span class=\"n\">use</span><span class=\"p\">(</span><span class=\"n\">AlmacenCMI</span><span class=\"p\">)</span>\n\n<span class=\"n\">const</span> <span class=\"n\">_baseURL</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:8000/&#39;</span>\n<span class=\"n\">const</span> <span class=\"n\">_authURL</span> <span class=\"o\">=</span> <span class=\"n\">_baseURL</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;auth/&#39;</span>\n<span class=\"n\">const</span> <span class=\"n\">_loginURL</span> <span class=\"o\">=</span> <span class=\"n\">_authURL</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;login/&#39;</span>\n\n<span class=\"o\">/**</span>\n <span class=\"o\">*</span> <span class=\"n\">Dadas</span> <span class=\"n\">las</span> <span class=\"n\">credenciales</span><span class=\"p\">,</span> <span class=\"n\">autentifica</span> <span class=\"n\">al</span> <span class=\"n\">usuario</span>\n <span class=\"o\">*</span> <span class=\"nd\">@author</span> <span class=\"n\">Javier</span> <span class=\"n\">Sanchez</span> <span class=\"n\">Toledano</span> <span class=\"o\">&lt;</span><span class=\"n\">js</span><span class=\"o\">.</span><span class=\"n\">toledano</span><span class=\"nd\">@me.com</span><span class=\"o\">&gt;</span>\n <span class=\"o\">*</span> <span class=\"nd\">@see</span> <span class=\"n\">Axios</span>\n <span class=\"o\">*/</span>\n<span class=\"n\">function</span> <span class=\"n\">_login</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"n\">axios</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">_loginURL</span><span class=\"p\">,</span> <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">credenciales</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">then</span><span class=\"p\">(</span><span class=\"n\">response</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"n\">let</span> <span class=\"n\">_token</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">auth_token</span>\n      <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">almacen</span><span class=\"o\">.</span><span class=\"n\">setItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">,</span> <span class=\"n\">_token</span><span class=\"p\">)</span>\n      <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">_token</span>\n    <span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">catch</span><span class=\"p\">(</span><span class=\"n\">e</span> <span class=\"o\">=&gt;</span> <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"sb\">`${e}`</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n<span class=\"o\">/**</span>\n <span class=\"o\">*</span> <span class=\"n\">Coloca</span> <span class=\"n\">el</span> <span class=\"n\">token</span> <span class=\"n\">en</span> <span class=\"n\">el</span> <span class=\"n\">almacen</span> <span class=\"n\">de</span> <span class=\"n\">vuex</span><span class=\"p\">,</span> <span class=\"n\">al</span> <span class=\"n\">montar</span> <span class=\"n\">un</span> <span class=\"n\">componente</span>\n <span class=\"o\">*</span> <span class=\"nd\">@author</span> <span class=\"n\">Javier</span> <span class=\"n\">Sanchez</span> <span class=\"n\">Toledano</span> <span class=\"o\">&lt;</span><span class=\"n\">js</span><span class=\"o\">.</span><span class=\"n\">toledano</span><span class=\"nd\">@me.com</span><span class=\"o\">&gt;</span>\n <span class=\"o\">*</span> <span class=\"nd\">@see</span> <span class=\"n\">localForage</span>\n <span class=\"o\">*/</span>\n<span class=\"n\">function</span> <span class=\"n\">_getAccessToken</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">almacen</span><span class=\"o\">.</span><span class=\"n\">getItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">then</span><span class=\"p\">((</span><span class=\"n\">_token</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">_token</span>\n    <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">axios</span><span class=\"o\">.</span><span class=\"n\">defaults</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">common</span><span class=\"p\">[</span><span class=\"s1\">&#39;Authorization&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Token &#39;</span> <span class=\"o\">+</span> <span class=\"n\">_token</span>\n    <span class=\"n\">_me</span><span class=\"p\">()</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n\n<span class=\"o\">/**</span>\n <span class=\"o\">*</span> <span class=\"n\">Trae</span> <span class=\"n\">los</span> <span class=\"n\">datos</span> <span class=\"k\">del</span> <span class=\"n\">usuario</span><span class=\"p\">,</span> <span class=\"n\">disponibles</span> <span class=\"n\">en</span> <span class=\"n\">el</span> <span class=\"n\">estate</span>\n <span class=\"o\">*</span> <span class=\"nd\">@private</span>\n <span class=\"o\">*</span> <span class=\"nd\">@return</span> <span class=\"n\">me</span>\n <span class=\"o\">*</span> <span class=\"nd\">@see</span> <span class=\"n\">_getAccessToken</span>\n <span class=\"o\">*/</span>\n<span class=\"n\">function</span> <span class=\"n\">_me</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"n\">axios</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">_authURL</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;me/&#39;</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n    <span class=\"o\">.</span><span class=\"n\">then</span><span class=\"p\">((</span><span class=\"n\">_me</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">me</span> <span class=\"o\">=</span> <span class=\"n\">_me</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n\n<span class=\"o\">/**</span>\n <span class=\"o\">*</span> <span class=\"n\">Se</span> <span class=\"n\">elimina</span> <span class=\"n\">el</span> <span class=\"n\">token</span> <span class=\"n\">y</span> <span class=\"n\">los</span> <span class=\"n\">datos</span> <span class=\"n\">en</span> <span class=\"n\">local</span> <span class=\"n\">storage</span> <span class=\"n\">y</span> <span class=\"n\">el</span> <span class=\"n\">state</span><span class=\"o\">.</span>\n <span class=\"o\">*</span> <span class=\"n\">O</span> <span class=\"n\">sea</span><span class=\"p\">,</span> <span class=\"n\">sale</span> <span class=\"n\">de</span> <span class=\"n\">la</span> <span class=\"n\">aplicaci\u00f3n</span>\n <span class=\"o\">*</span> <span class=\"nd\">@private</span>\n <span class=\"o\">*/</span>\n<span class=\"n\">function</span> <span class=\"n\">_destroy</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"n\">axios</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">_authURL</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;logout/&#39;</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">axios</span><span class=\"o\">.</span><span class=\"n\">defaults</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">common</span><span class=\"p\">[</span><span class=\"s1\">&#39;Authorization&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Token &#39;</span> <span class=\"o\">+</span> <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">token</span>\n      <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">almacen</span><span class=\"o\">.</span><span class=\"n\">removeItem</span><span class=\"p\">(</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">)</span>\n      <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">null</span>\n      <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">me</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n      <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">fuera</span> <span class=\"o\">=</span> <span class=\"n\">true</span>\n      <span class=\"n\">this</span><span class=\"o\">.</span><span class=\"n\">axios</span><span class=\"o\">.</span><span class=\"n\">defaults</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">common</span><span class=\"p\">[</span><span class=\"s1\">&#39;Authorization&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n    <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n\n<span class=\"o\">//</span> <span class=\"n\">const</span> <span class=\"n\">_sessionVersion</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;0.1.0&#39;</span>\n\n<span class=\"n\">export</span> <span class=\"n\">default</span> <span class=\"p\">{</span>\n  <span class=\"n\">computed</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"o\">...</span><span class=\"n\">mapState</span><span class=\"p\">([</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fuera&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;me&#39;</span><span class=\"p\">])</span>\n  <span class=\"p\">},</span>\n  <span class=\"n\">methods</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"n\">getAccessToken</span><span class=\"p\">:</span> <span class=\"n\">_getAccessToken</span><span class=\"p\">,</span>\n    <span class=\"n\">login</span><span class=\"p\">:</span> <span class=\"n\">_login</span><span class=\"p\">,</span>\n    <span class=\"n\">destroy</span><span class=\"p\">:</span> <span class=\"n\">_destroy</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Tambi\u00e9n podr\u00eda ser al momento de crearla, pero no estoy seguro. En la pr\u00f3xima revisi\u00f3n lo veremos.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "mixins-con-vuejs", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 117, "fields": {"idx": "c689c761-666a-4908-b266-f8e799e141e2", "creado": "2017-07-29T05:40:49.745Z", "modificado": "2017-07-29T05:40:49.745Z", "title": "Control de salidas no conformes, parte I", "summary": "Iniciamos con el desarrollo de una aplicaci\u00f3n para controlar productos no conforme usando el framework VueJS", "body": "Title: Control de salidas no conformes, parte I\r\nDate: 2017-03-29 13:57:22\r\nCategory: desarrollo\r\nTags: cmi, vuejs, javascript, axios\r\nSummary: Iniciamos con el desarrollo de una aplicaci\u00f3n para controlar productos no conforme usando el framework VueJS\r\n\r\nSeg\u00fan la norma ISO 9001:2015, la organizaci\u00f3n _debe controlar las salidas que no sean conformes con sus requisitos_, y estos controles deben aplicarse tambi\u00e9n a los productos y servicios no conformes detectados despu\u00e9s de la entrega. \r\n\r\nAdem\u00e1s, existen cuatro posibles maneras de tratar a una salida no conforme y por supuesto debe existir informaci\u00f3n documentada sobre la no conformidad.\r\n\r\nLas Solicitudes de Actualizaci\u00f3n que no cumplen con los requisitos para su resguardo en el Centro de C\u00f3mputo y Resguardo Documental, CeCyRD, reciben un tratamiento de __salida no conforme__, por lo que existe una aplicaci\u00f3n y un indicador que nos ayuda en esta tarea.\r\n\r\nEn la re-ingenier\u00eda del cuadro de mando, esta aplicaci\u00f3n llamada `rechazos` est\u00e1 compuesta por peque\u00f1as piezas que realizan actividades muy concretas.\r\n\r\nVamos a empezar describiendo el control de rechazos.\r\n\r\n### El control de salida no conforme\r\nLa informaci\u00f3n documentada que se resguarda en CeCyRD est\u00e1 compuesta por hasta tres documentos f\u00edsicos, la solicitud individual que es obligatoria y hasta dos testimoniales, una para suplir el comprobante de domicilio y otra para cumplir con el requisito de identificaci\u00f3n con fotograf\u00eda.\r\n\r\nHay m\u00e1s de 30 requisitos en estos documentos, treinta riesgos de rechazos y se deben de controlar todos ellos. Pero adem\u00e1s, los riesgos aparecen en diferentes lugares, es decir:\r\n\r\n- en el \u00e1rea de tr\u00e1mite de la solicitud\r\n- en el \u00e1rea de recibo de la solicitud\r\n- en la testimonial de fotograf\u00eda \r\n- en la testimonial de domicilio\r\n- etc.\r\n\r\nEl tipo de control que solicita CeCyRD y la norma ISO 9001 requieren que se identifique la salida no conforme para poder tomas las acciones adecuadas para solucionarla.\r\n\r\nAhora bien, para mantener la compatibilidad con la informaci\u00f3n que ya existe, decid\u00ed dejar la misma estructura.\r\n\r\n### Modelo Conjunto\r\nEste modelo no es realmente necesario, solo contiene tres registros, pero se utiliza para _filtrar_ los requisitos por tipo de documento. En la primera versi\u00f3n, llam\u00e9 a esta tabla `Conjunto`.\r\n\r\nEn esta nueva aplicaci\u00f3n, ya use el _paradigma de conductas_[^1], el modelo `Conjunto` en Django se ve as\u00ed:\r\n\r\n```python\r\nclass Conjunto(Trackable, Authorable, Permalinkable, Timestampable):\r\n    \"\"\"\r\n    Este modelo es un apoyo para disminuir los errores de captura de rechazos.\r\n    Solo son tres conjuntos, que corresponden a los numerales romanos en el\r\n    cat\u00e1logo de causas de rechazo.\r\n    \"\"\"\r\n    nombre = models.CharField(max_length=50)\r\n\r\n    def __str__(self):\r\n        return self.nombre\r\n```\r\n\r\nDebido a los _mixins_, solo se requiere un campo en este modelo.\r\n\r\nEl serializador, pretende[^2] unir la clave for\u00e1nea `author` con el modelo `User`, adem\u00e1s, se devuelven todos los campos.\r\n\r\n```python\r\nclass ConjuntoSerializer(serializers.ModelSerializer):\r\n    author = serializers.PrimaryKeyRelatedField(read_only=True)\r\n\r\n    class Meta:\r\n        model = Conjunto\r\n        fields = '__all__'\r\n```\r\n\r\nEl _ViewSet_ tiene como permisos est\u00e1ndar, los permisos indicados en el modelo de Django o si es un acceso an\u00f3nimo, de solo lectura: `permissions.DjangoModelPermissionsOrAnonReadOnly`. El __\u00fanico__ tipo de acreditaci\u00f3n permitida para este _endpoint_ es `TokenAuthentication`.\r\n\r\n```python\r\nclass ConjuntoViewSet(viewsets.ModelViewSet):\r\n    \"\"\"\r\n    Lista el cat\u00e1logo de conjuntos\r\n    \"\"\"\r\n    queryset = Conjunto.objects.all()\r\n    serializer_class = ConjuntoSerializer\r\n    authentication_classes = (TokenAuthentication, )\r\n    permission_classes = (permissions.DjangoModelPermissionsOrAnonReadOnly, )\r\n```\r\n\r\nEn el lado del cliente, usando __VueJS__, traemos el contenido de este modelo con una promesa, usando __Axios__:\r\n\r\n    :::javascript\r\n        let _getConjuntos = function () {\r\n        this.axios.get('http://localhost:8000/rechazos/conjuntos').then((carga) => {\r\n          this.conjuntos = carga.data.map((conjunto) => {\r\n            return {\r\n              id: conjunto.id,\r\n              nombre: conjunto.nombre,\r\n              slug: conjunto.slug,\r\n              autor: conjunto.author\r\n            }\r\n          })\r\n        })\r\n    }\r\n\r\nEsta funci\u00f3n _mapea_ el contenido porque solo requerimos cuatro campos. Esta funci\u00f3n la colocamos en los m\u00e9todos:\r\n\r\n```javascript\r\n    methods: {\r\n      getConjuntos: _getConjuntos\r\n    },\r\n```\r\n\r\ny la activamos en el gancho `mounted()`:\r\n\r\n```javascript\r\n    mounted () {\r\n      this.getConjuntos()\r\n    }\r\n```\r\n\r\nDe este modo, la variable `conjuntos` queda poblada con el contenido de este modelo.\r\n\r\nEn el pr\u00f3ximo archivo, veremos como realizar operaciones CRUD con VueJS y Django.\r\n\r\n\r\n[^1]: De este paradigma, se tratar\u00e1 un pr\u00f3ximo art\u00edculo. \r\n[^2]: Digo _pretende_, porque no aparece ninguna relaci\u00f3n.", "extend": "", "pub_date": "2017-03-29T19:57:22Z", "summary_html": "<p>Iniciamos con el desarrollo de una aplicaci\u00f3n para controlar productos no conforme usando el framework VueJS</p>", "body_html": "<p>Seg\u00fan la norma ISO 9001:2015, la organizaci\u00f3n <em>debe controlar las salidas que no sean conformes con sus requisitos</em>, y estos controles deben aplicarse tambi\u00e9n a los productos y servicios no conformes detectados despu\u00e9s de la entrega. </p>\n<p>Adem\u00e1s, existen cuatro posibles maneras de tratar a una salida no conforme y por supuesto debe existir informaci\u00f3n documentada sobre la no conformidad.</p>\n<p>Las Solicitudes de Actualizaci\u00f3n que no cumplen con los requisitos para su resguardo en el Centro de C\u00f3mputo y Resguardo Documental, CeCyRD, reciben un tratamiento de <strong>salida no conforme</strong>, por lo que existe una aplicaci\u00f3n y un indicador que nos ayuda en esta tarea.</p>\n<p>En la re-ingenier\u00eda del cuadro de mando, esta aplicaci\u00f3n llamada <code>rechazos</code> est\u00e1 compuesta por peque\u00f1as piezas que realizan actividades muy concretas.</p>\n<p>Vamos a empezar describiendo el control de rechazos.</p>\n<h3 id=\"el-control-de-salida-no-conforme\">El control de salida no conforme</h3>\n<p>La informaci\u00f3n documentada que se resguarda en CeCyRD est\u00e1 compuesta por hasta tres documentos f\u00edsicos, la solicitud individual que es obligatoria y hasta dos testimoniales, una para suplir el comprobante de domicilio y otra para cumplir con el requisito de identificaci\u00f3n con fotograf\u00eda.</p>\n<p>Hay m\u00e1s de 30 requisitos en estos documentos, treinta riesgos de rechazos y se deben de controlar todos ellos. Pero adem\u00e1s, los riesgos aparecen en diferentes lugares, es decir:</p>\n<ul>\n<li>en el \u00e1rea de tr\u00e1mite de la solicitud</li>\n<li>en el \u00e1rea de recibo de la solicitud</li>\n<li>en la testimonial de fotograf\u00eda </li>\n<li>en la testimonial de domicilio</li>\n<li>etc.</li>\n</ul>\n<p>El tipo de control que solicita CeCyRD y la norma ISO 9001 requieren que se identifique la salida no conforme para poder tomas las acciones adecuadas para solucionarla.</p>\n<p>Ahora bien, para mantener la compatibilidad con la informaci\u00f3n que ya existe, decid\u00ed dejar la misma estructura.</p>\n<h3 id=\"modelo-conjunto\">Modelo Conjunto</h3>\n<p>Este modelo no es realmente necesario, solo contiene tres registros, pero se utiliza para <em>filtrar</em> los requisitos por tipo de documento. En la primera versi\u00f3n, llam\u00e9 a esta tabla <code>Conjunto</code>.</p>\n<p>En esta nueva aplicaci\u00f3n, ya use el <em>paradigma de conductas</em><sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>, el modelo <code>Conjunto</code> en Django se ve as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Conjunto</span><span class=\"p\">(</span><span class=\"n\">Trackable</span><span class=\"p\">,</span> <span class=\"n\">Authorable</span><span class=\"p\">,</span> <span class=\"n\">Permalinkable</span><span class=\"p\">,</span> <span class=\"n\">Timestampable</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Este modelo es un apoyo para disminuir los errores de captura de rechazos.</span>\n<span class=\"sd\">    Solo son tres conjuntos, que corresponden a los numerales romanos en el</span>\n<span class=\"sd\">    cat\u00e1logo de causas de rechazo.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">nombre</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nombre</span>\n</pre></div>\n\n\n<p>Debido a los <em>mixins</em>, solo se requiere un campo en este modelo.</p>\n<p>El serializador, pretende<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> unir la clave for\u00e1nea <code>author</code> con el modelo <code>User</code>, adem\u00e1s, se devuelven todos los campos.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">ConjuntoSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">PrimaryKeyRelatedField</span><span class=\"p\">(</span><span class=\"n\">read_only</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Conjunto</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;__all__&#39;</span>\n</pre></div>\n\n\n<p>El <em>ViewSet</em> tiene como permisos est\u00e1ndar, los permisos indicados en el modelo de Django o si es un acceso an\u00f3nimo, de solo lectura: <code>permissions.DjangoModelPermissionsOrAnonReadOnly</code>. El <strong>\u00fanico</strong> tipo de acreditaci\u00f3n permitida para este <em>endpoint</em> es <code>TokenAuthentication</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">ConjuntoViewSet</span><span class=\"p\">(</span><span class=\"n\">viewsets</span><span class=\"o\">.</span><span class=\"n\">ModelViewSet</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Lista el cat\u00e1logo de conjuntos</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">Conjunto</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n    <span class=\"n\">serializer_class</span> <span class=\"o\">=</span> <span class=\"n\">ConjuntoSerializer</span>\n    <span class=\"n\">authentication_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">TokenAuthentication</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n    <span class=\"n\">permission_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"n\">DjangoModelPermissionsOrAnonReadOnly</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n</pre></div>\n\n\n<p>En el lado del cliente, usando <strong>VueJS</strong>, traemos el contenido de este modelo con una promesa, usando <strong>Axios</strong>:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"kd\">let</span> <span class=\"nx\">_getConjuntos</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;http://localhost:8000/rechazos/conjuntos&#39;</span><span class=\"p\">).</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">carga</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">conjuntos</span> <span class=\"o\">=</span> <span class=\"nx\">carga</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">((</span><span class=\"nx\">conjunto</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n          <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"nx\">conjunto</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">,</span>\n          <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"nx\">conjunto</span><span class=\"p\">.</span><span class=\"nx\">nombre</span><span class=\"p\">,</span>\n          <span class=\"nx\">slug</span><span class=\"o\">:</span> <span class=\"nx\">conjunto</span><span class=\"p\">.</span><span class=\"nx\">slug</span><span class=\"p\">,</span>\n          <span class=\"nx\">autor</span><span class=\"o\">:</span> <span class=\"nx\">conjunto</span><span class=\"p\">.</span><span class=\"nx\">author</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">})</span>\n    <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Esta funci\u00f3n <em>mapea</em> el contenido porque solo requerimos cuatro campos. Esta funci\u00f3n la colocamos en los m\u00e9todos:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nx\">methods</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">getConjuntos</span><span class=\"o\">:</span> <span class=\"nx\">_getConjuntos</span>\n    <span class=\"p\">},</span>\n</pre></div>\n\n\n<p>y la activamos en el gancho <code>mounted()</code>:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nx\">mounted</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">getConjuntos</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>De este modo, la variable <code>conjuntos</code> queda poblada con el contenido de este modelo.</p>\n<p>En el pr\u00f3ximo archivo, veremos como realizar operaciones CRUD con VueJS y Django.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>De este paradigma, se tratar\u00e1 un pr\u00f3ximo art\u00edculo. &#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Digo <em>pretende</em>, porque no aparece ninguna relaci\u00f3n.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "control-de-salidas-no-conformes-parte-i", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 118, "fields": {"idx": "7d1a0eab-a919-4b89-b1b2-2d745411ab04", "creado": "2017-07-29T05:43:59.384Z", "modificado": "2017-07-29T05:45:10.490Z", "title": "Dividiendo las rutas en VueJS", "summary": "", "body": "Title: Dividiendo las rutas en VueJS    \r\nDate: 2017-04-02 00:17:06\r\nCategory: desarrollo \r\nTags: javascript, vuejs, es6, patterns\r\nSummary: \r\n\r\nPregunt\u00e9 en [Stackoverflow en Espa\u00f1ol][1] como dividir mis rutas, tal como lo hacen en Django y aunque hay una excelente respuesta, no se relaciona con mi pregunta de forma directa. \r\n\r\nAs\u00ed que pregunt\u00e9 en los foros de VueJS y resolvieron mi duda de la mejor manera posible.\r\n\r\nPreguntaba si pod\u00eda tener dos objetos `Router`, la respuesta es __no__, no se puede. \r\n\r\nSin embargo la alternativa es muy elegante.\r\n\r\nHace uso de un operador de [_destructuraci\u00f3n_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment) identificado por tres puntos `...` (que hab\u00eda usado sin entenderlo cabalmente).\r\n\r\nEste operador devuelve los elementos __*restantes*__ de un array, es decir, aquellos que no han sido asignados en una _destructuracion_.\r\n\r\n- Primero, hacemos un _array_ o arreglos de objetos que podamos pasarle al objeto _Router_. \r\n\r\n    Adem\u00e1s de la ruta y el componente, podemos indicar un nombre y propiedades. O mejor a\u00fan, como sugiere atinadamente [__@Gustavo Garc\u00eda__][2], usar vistas anidadas. Por el momento, usaremos estas rutas sencillas.\r\n\r\n        import rechazosIndex from './rechazos.index'\r\n        import conjuntoIndex from './conjuntos.index'\r\n        import conjuntoDetail from './conjuntos.detail'\r\n    \r\n        export default [\r\n          {path: '/rechazos', component: rechazosIndex},\r\n          {path: '/rechazos/conjuntos/', component: conjuntoIndex, name: 'conjuntoIndex'},\r\n          {path: '/rechazos/conjuntos/:id', component: conjuntoDetail, name: 'conjuntoDetail', props: true}\r\n        ]\r\n    El operador `...` hace que los elementos que no han sido asignados en una reestructuraci\u00f3n previa, es decir, el resto o __los elementos restantes__ (en este caso, _todos_) pasen al array padre, que en el ejemplo es `routes`.\r\n\r\n- Hacemos lo mismo para la ruta de la portada y para las rutas usadas en la acreditaci\u00f3n.\r\n\r\n    En `portada.routes.js` tenemos:\r\n\r\n        import portadaIndex from './portada.index'\r\n\r\n        export default [\r\n          {path: '/', name: 'portadaIndex', component: portadaIndex}\r\n        ]\r\n\r\n    Y en `index.routes.js` podemos ver: \r\n        import Login from './Login'\r\n\r\n        export default [\r\n          {path: '/login', name: 'Login', component: Login}\r\n        ]\r\n\r\nEstos archivos y los que resulten en el desarrollo del proyecto, los usaremos en el `Router` usando este operador de desestructuraci\u00f3n, que tomar\u00e1 estos arrays y los agregar\u00e1 al router.\r\n\r\nDe este modo, pas\u00e9 de tener esto:\r\n\r\n```javascript\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport portadaIndex from '../components/portada.index'\r\nimport Login from '../components/login/Login'\r\n// import rechazosRouter from '../components/rechazos/rechazos.router'\r\n\r\nimport rechazosIndex from '../components/rechazos/rechazos.index'\r\nimport conjuntoIndex from '../components/rechazos/conjuntos.index'\r\nimport conjuntoDetail from '../components/rechazos/conjuntos.detail'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    {path: '/', name: 'portadaIndex', component: portadaIndex},\r\n    // Rechazos\r\n    {path: '/rechazos/', name: 'rechazosIndex', component: rechazosIndex},\r\n    {path: '/rechazos/conjuntos/', component: conjuntoIndex, name: 'conjuntoIndex'},\r\n    {path: '/rechazos/conjuntos/:id', component: conjuntoDetail, name: 'conjuntoDetail', props: true},\r\n    // Login\r\n    {path: '/login', name: 'Login', component: Login}\r\n  ]\r\n})\r\n```\r\n\r\nA tener esto:\r\n\r\n```javascript\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\n\r\nimport portadaRoutes from '../components/portada.routes'\r\nimport rechazosRoutes from '../components/rechazos/rechazos.routes'\r\nimport authRoutes from '../components/login/auth.routes'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    ...portadaRoutes,\r\n    ...rechazosRoutes,\r\n    ...authRoutes\r\n  ]\r\n})\r\n```\r\n\r\nLa diferencia es verdaderamente notable.\r\n\r\nGracias a [lcdss][3] por la respuesta. \r\n\r\n[1]: https://goo.gl/YiePgT\r\n[2]: https://goo.gl/uR21r2\r\n[3]: https://goo.gl/JbTKyN", "extend": "", "pub_date": "2017-07-29T05:40:49Z", "summary_html": "", "body_html": "<p>Pregunt\u00e9 en <a href=\"https://goo.gl/YiePgT\">Stackoverflow en Espa\u00f1ol</a> como dividir mis rutas, tal como lo hacen en Django y aunque hay una excelente respuesta, no se relaciona con mi pregunta de forma directa. </p>\n<p>As\u00ed que pregunt\u00e9 en los foros de VueJS y resolvieron mi duda de la mejor manera posible.</p>\n<p>Preguntaba si pod\u00eda tener dos objetos <code>Router</code>, la respuesta es <strong>no</strong>, no se puede. </p>\n<p>Sin embargo la alternativa es muy elegante.</p>\n<p>Hace uso de un operador de <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\"><em>destructuraci\u00f3n</em></a> identificado por tres puntos <code>...</code> (que hab\u00eda usado sin entenderlo cabalmente).</p>\n<p>Este operador devuelve los elementos <strong><em>restantes</em></strong> de un array, es decir, aquellos que no han sido asignados en una <em>destructuracion</em>.</p>\n<ul>\n<li>\n<p>Primero, hacemos un <em>array</em> o arreglos de objetos que podamos pasarle al objeto <em>Router</em>. </p>\n<p>Adem\u00e1s de la ruta y el componente, podemos indicar un nombre y propiedades. O mejor a\u00fan, como sugiere atinadamente <a href=\"https://goo.gl/uR21r2\"><strong>@Gustavo Garc\u00eda</strong></a>, usar vistas anidadas. Por el momento, usaremos estas rutas sencillas.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">rechazosIndex</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;./rechazos.index&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">conjuntoIndex</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;./conjuntos.index&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">conjuntoDetail</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;./conjuntos.detail&#39;</span>\n\n<span class=\"n\">export</span> <span class=\"n\">default</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"s1\">&#39;/rechazos&#39;</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">:</span> <span class=\"n\">rechazosIndex</span><span class=\"p\">},</span>\n  <span class=\"p\">{</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"s1\">&#39;/rechazos/conjuntos/&#39;</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">:</span> <span class=\"n\">conjuntoIndex</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">&#39;conjuntoIndex&#39;</span><span class=\"p\">},</span>\n  <span class=\"p\">{</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"s1\">&#39;/rechazos/conjuntos/:id&#39;</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">:</span> <span class=\"n\">conjuntoDetail</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">&#39;conjuntoDetail&#39;</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">:</span> <span class=\"n\">true</span><span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre></div>\n\n\n<p>El operador <code>...</code> hace que los elementos que no han sido asignados en una reestructuraci\u00f3n previa, es decir, el resto o <strong>los elementos restantes</strong> (en este caso, <em>todos</em>) pasen al array padre, que en el ejemplo es <code>routes</code>.</p>\n</li>\n<li>\n<p>Hacemos lo mismo para la ruta de la portada y para las rutas usadas en la acreditaci\u00f3n.</p>\n<p>En <code>portada.routes.js</code> tenemos:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">portadaIndex</span> <span class=\"nn\">from</span> <span class=\"s1\">&#39;./portada.index&#39;</span>\n\n<span class=\"n\">export</span> <span class=\"n\">default</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"s1\">&#39;/&#39;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">&#39;portadaIndex&#39;</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">:</span> <span class=\"n\">portadaIndex</span><span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre></div>\n\n\n<p>Y en <code>index.routes.js</code> podemos ver: \n    import Login from &lsquo;./Login&rsquo;</p>\n<div class=\"codehilite\"><pre><span></span>export default [\n  {path: &#39;/login&#39;, name: &#39;Login&#39;, component: Login}\n]\n</pre></div>\n\n\n</li>\n</ul>\n<p>Estos archivos y los que resulten en el desarrollo del proyecto, los usaremos en el <code>Router</code> usando este operador de desestructuraci\u00f3n, que tomar\u00e1 estos arrays y los agregar\u00e1 al router.</p>\n<p>De este modo, pas\u00e9 de tener esto:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">Vue</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vue&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">Router</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vue-router&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">portadaIndex</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../components/portada.index&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">Login</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../components/login/Login&#39;</span>\n<span class=\"c1\">// import rechazosRouter from &#39;../components/rechazos/rechazos.router&#39;</span>\n\n<span class=\"kr\">import</span> <span class=\"nx\">rechazosIndex</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../components/rechazos/rechazos.index&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">conjuntoIndex</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../components/rechazos/conjuntos.index&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">conjuntoDetail</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../components/rechazos/conjuntos.detail&#39;</span>\n\n<span class=\"nx\">Vue</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">Router</span><span class=\"p\">)</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"k\">new</span> <span class=\"nx\">Router</span><span class=\"p\">({</span>\n  <span class=\"nx\">mode</span><span class=\"o\">:</span> <span class=\"s1\">&#39;history&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">routes</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/&#39;</span><span class=\"p\">,</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;portadaIndex&#39;</span><span class=\"p\">,</span> <span class=\"nx\">component</span><span class=\"o\">:</span> <span class=\"nx\">portadaIndex</span><span class=\"p\">},</span>\n    <span class=\"c1\">// Rechazos</span>\n    <span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/rechazos/&#39;</span><span class=\"p\">,</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;rechazosIndex&#39;</span><span class=\"p\">,</span> <span class=\"nx\">component</span><span class=\"o\">:</span> <span class=\"nx\">rechazosIndex</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/rechazos/conjuntos/&#39;</span><span class=\"p\">,</span> <span class=\"nx\">component</span><span class=\"o\">:</span> <span class=\"nx\">conjuntoIndex</span><span class=\"p\">,</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;conjuntoIndex&#39;</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/rechazos/conjuntos/:id&#39;</span><span class=\"p\">,</span> <span class=\"nx\">component</span><span class=\"o\">:</span> <span class=\"nx\">conjuntoDetail</span><span class=\"p\">,</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;conjuntoDetail&#39;</span><span class=\"p\">,</span> <span class=\"nx\">props</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">},</span>\n    <span class=\"c1\">// Login</span>\n    <span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/login&#39;</span><span class=\"p\">,</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;Login&#39;</span><span class=\"p\">,</span> <span class=\"nx\">component</span><span class=\"o\">:</span> <span class=\"nx\">Login</span><span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>A tener esto:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">Vue</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vue&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">Router</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vue-router&#39;</span>\n\n<span class=\"kr\">import</span> <span class=\"nx\">portadaRoutes</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../components/portada.routes&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">rechazosRoutes</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../components/rechazos/rechazos.routes&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">authRoutes</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../components/login/auth.routes&#39;</span>\n\n<span class=\"nx\">Vue</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">Router</span><span class=\"p\">)</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"k\">new</span> <span class=\"nx\">Router</span><span class=\"p\">({</span>\n  <span class=\"nx\">mode</span><span class=\"o\">:</span> <span class=\"s1\">&#39;history&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">routes</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">...</span><span class=\"nx\">portadaRoutes</span><span class=\"p\">,</span>\n    <span class=\"p\">...</span><span class=\"nx\">rechazosRoutes</span><span class=\"p\">,</span>\n    <span class=\"p\">...</span><span class=\"nx\">authRoutes</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>La diferencia es verdaderamente notable.</p>\n<p>Gracias a <a href=\"https://goo.gl/JbTKyN\">lcdss</a> por la respuesta. </p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "dividiendo-las-rutas-en-vuejs", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 119, "fields": {"idx": "bf39fea2-f22d-46c3-b602-96e827871972", "creado": "2017-07-29T05:45:46.021Z", "modificado": "2017-07-29T05:45:46.021Z", "title": "Acreditaci\u00f3n y Autorizaci\u00f3n en VueJS", "summary": "", "body": "Title: Acreditaci\u00f3n y Autorizaci\u00f3n en VueJS  \r\nDate: 2017-04-08 20:14:50\r\nCategory: desarrollo\r\nTags: vuejs, cmi, javascript  \r\nSummary: \r\n\r\nNo s\u00e9 exactamente que fue lo que pas\u00f3, pero los m\u00e9todos que hab\u00eda escrito para la autorizaci\u00f3n y la acreditaci\u00f3n dejaron de funcionar.\r\n\r\nEran muy simples y primitivos, pero funcionaban. Ped\u00edan el *token*, lo guardaban en el `localStorage` y luego de ah\u00ed lo pasaban al _state store_ para usarlo en toda la aplicaci\u00f3n. \r\n\r\nAs\u00ed que ahora vamos a probar hacer esto usando librer\u00edas. \r\n\r\n## Vue Authenticate\r\n[__vue-authenticate__](https://github.com/dgrubelic/vue-authenticate) se anuncia como una soluci\u00f3n f\u00e1cilmente configurable que proporciona m\u00e9todos de _login_ y _logout_ y proveedores de registro con redes sociales de Github, Facebook, Google y Twitter usando OAuth.\r\n\r\nLa mejor parte de esta librer\u00eda es que no tiene que acoplarse forzosamente con librer\u00edas de manejo de estado. O sea que podemos usar la librer\u00eda que mejor nos convenga.\r\n\r\nTiene dos formas de uso, la primera y por default es usando [vue-resource](https://github.com/pagekit/vue-resource) y la segunda es usando [axios](https://github.com/mzabriskie/axios) (por medio del plugin [vue-axios](https://github.com/imcvampire/vue-axios)).\r\n\r\n\r\n## Implementaci\u00f3n\r\nComo `vue-ressource` est\u00e1 algo as\u00ed como discontinuada y me gust\u00f3 mucho Axios, este es el que vamos a usar.\r\n\r\n    yarn add vue-authenticate axios vue-axios\r\n\r\nY los agregamos al archivo de la aplicaci\u00f3n `main.js`.\r\n\r\n```javascript\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\nimport VueAuthenticate from 'vue-authenticate'\r\n\r\nVue.use(VueResource)\r\n```\r\n\r\nAhora viene una parte muy importante que es la configuraci\u00f3n. \r\n\r\n```javascript\r\nVue.use(VueAuthenticate, {\r\n  baseUrl: 'http://sgc-server.dev',\r\n  loginUrl: '/auth/login/',\r\n  tokenName: 'auth_token',\r\n  requestDataKey: 'data',\r\n  responseDataKey: 'data',\r\n  tokenType: 'Token',\r\n\r\n  bindRequestInterceptor: function () {\r\n    this.$http.interceptors.request.use((config) => {\r\n      if (this.isAuthenticated()) {\r\n        config.headers['Authorization'] = [\r\n          this.options.tokenType, this.getToken()\r\n        ].join(' ')\r\n      } else {\r\n        delete config.headers['Authorization']\r\n      }\r\n      return config\r\n    })\r\n  },\r\n\r\n  bindResponseInterceptor: function () {\r\n    this.$http.interceptors.response.use((response) => {\r\n      this.setToken(response)\r\n      return response\r\n    })\r\n  }\r\n})\r\n```\r\n\r\nVeamos cada clave, porque todas son importantes\r\n\r\n- `baseUrl: 'http://sgc-server.dev'` - corresponde a la direcci\u00f3n del servidor. A partir de aqu\u00ed podemos ir sumando rutas.\r\n- `loginUrl: '/auth/login/'` - esta es la ruta del login. Como yo uso Djoser, as\u00ed se genera y esta opci\u00f3n se suma a `baseUrl`.\r\n- `tokenName: 'auth_token'` - esta es muy importante y depende de cada API, en Djoser as\u00ed se llama.\r\n- `requestDataKey: 'data'` - Axios manda los datos en `data`, al contrario de Vue-Resource que manda los datos en `body`. Si no colocamos bien esta opci\u00f3n, nunca nos registramos.\r\n- `responseDataKey: 'data'` - Igual que el anterior, la respuesta se coloca en `data`.\r\n- `tokenType: 'Token'` - Para la autorizaci\u00f3n, se env\u00eda el encabezado `Authorization` con el token. En algunas APIs se llama `Bearer`, pero en Djoser se llama `Token`. Si no se coloca bien, no funciona.\r\n\r\nDebido a que `vue-authentication` usa Fue Resource por omisi\u00f3n, hay que hacer dos adecuaciones para adaptarla a Axios, que se refieren a interceptar las solicitudes para agregarles el encabezado de autorizaci\u00f3n:\r\n\r\n```javascript\r\n  bindRequestInterceptor: function () {\r\n    this.$http.interceptors.request.use((config) => {\r\n      if (this.isAuthenticated()) {\r\n        config.headers['Authorization'] = [\r\n          this.options.tokenType, this.getToken()\r\n        ].join(' ')\r\n      } else {\r\n        delete config.headers['Authorization']\r\n      }\r\n      return config\r\n    })\r\n  }\r\n```\r\n\r\nY la segunda intercepta la respuesta[^1].\r\n\r\n```javascript\r\n  bindResponseInterceptor: function () {\r\n    this.$http.interceptors.response.use((response) => {\r\n      this.setToken(response)\r\n      return response\r\n    })\r\n  }\r\n```\r\n\r\nEn el componente donde est\u00e9 el formulario de ingreso, llamamos a las funciones que necesitemos, por ejemplo:\r\n\r\n```javascript\r\nmethods: {\r\n    login: function () {\r\n      this.$auth.login(this.credentials)\r\n        .then(_payload => {\r\n          alert(`Identificado correctamente`)\r\n        })\r\n        .catch(_error => {\r\n          console.log(_error.response)\r\n        })\r\n    }\r\n  }\r\n```\r\n\r\nQue simplemente lanza una alerta cuando se obtiene el token.\r\n\r\n## M\u00e9todos disponibles\r\nEstos son los m\u00e9todos proporcionados:\r\n\r\n- `isAuthenticated()` - devuelve `true` si encuentra un token en el almacenamiento local especificado. Puede manejar tokens tipo JWT[^2].\r\n- `getToken()` - devuelve el token desde el almac\u00e9n local especificado.\r\n- `setToken()` - guarda el token en el almac\u00e9n. Esta funci\u00f3n es interna y no hay ninguna raz\u00f3n para llamarla desde un m\u00e9todo.\r\n- `getPayload()` - yo creo que esta funci\u00f3n se usa para decodificar un token JWT.\r\n- `login()` - esta funci\u00f3n realiza la solicitud de Token. Usa un objeto con el usuario y la contrase\u00f1a. Si el ingreso es exitoso, ejecuta `setToken`. Devuelve el token.\r\n- `register()` - Registra al usuario. Se le env\u00eda un objeto con el usuario, la contrase\u00f1a y el correo electr\u00f3nico. Si es exitoso el registro se ejecuta `setToken`. Devuelve el token.\r\n- `logout()` - Env\u00eda la petici\u00f3n de salida a la API y elimina el token del almac\u00e9n local. No devuelve nada, creo.\r\n- `authenticate()` - Creo que esta funci\u00f3n es para llamar a los proveedores de OAuth: GitHub, Facebook, Twitter, Google, Instagram, Bitbucket[^3]. \r\n\r\nBueno, pues ya est\u00e1. En el repositorio hay un ejemplo de como usar Vuex para las funciones de registro\u2026 Me gusta la idea, pero ser\u00e1 en otra ocasi\u00f3n.\r\n\r\n[^1]: A esta no le entiendo.\r\n\r\n[^2]: Si no saben que es un token JWT, no me pregunten a mi porque yo tampoco s\u00e9.\r\n\r\n[^3]: A duras penas puedo usar un token simple, ya mero voy a poder usar estos de OAuth\u2026 pero alg\u00fan d\u00eda.", "extend": "", "pub_date": "2017-04-09T01:14:50Z", "summary_html": "", "body_html": "<p>No s\u00e9 exactamente que fue lo que pas\u00f3, pero los m\u00e9todos que hab\u00eda escrito para la autorizaci\u00f3n y la acreditaci\u00f3n dejaron de funcionar.</p>\n<p>Eran muy simples y primitivos, pero funcionaban. Ped\u00edan el <em>token</em>, lo guardaban en el <code>localStorage</code> y luego de ah\u00ed lo pasaban al <em>state store</em> para usarlo en toda la aplicaci\u00f3n. </p>\n<p>As\u00ed que ahora vamos a probar hacer esto usando librer\u00edas. </p>\n<h2 id=\"vue-authenticate\">Vue Authenticate</h2>\n<p><a href=\"https://github.com/dgrubelic/vue-authenticate\"><strong>vue-authenticate</strong></a> se anuncia como una soluci\u00f3n f\u00e1cilmente configurable que proporciona m\u00e9todos de <em>login</em> y <em>logout</em> y proveedores de registro con redes sociales de Github, Facebook, Google y Twitter usando OAuth.</p>\n<p>La mejor parte de esta librer\u00eda es que no tiene que acoplarse forzosamente con librer\u00edas de manejo de estado. O sea que podemos usar la librer\u00eda que mejor nos convenga.</p>\n<p>Tiene dos formas de uso, la primera y por default es usando <a href=\"https://github.com/pagekit/vue-resource\">vue-resource</a> y la segunda es usando <a href=\"https://github.com/mzabriskie/axios\">axios</a> (por medio del plugin <a href=\"https://github.com/imcvampire/vue-axios\">vue-axios</a>).</p>\n<h2 id=\"implementacion\">Implementaci\u00f3n</h2>\n<p>Como <code>vue-ressource</code> est\u00e1 algo as\u00ed como discontinuada y me gust\u00f3 mucho Axios, este es el que vamos a usar.</p>\n<div class=\"codehilite\"><pre><span></span>yarn add vue-authenticate axios vue-axios\n</pre></div>\n\n\n<p>Y los agregamos al archivo de la aplicaci\u00f3n <code>main.js</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">Vue</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vue&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">axios</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;axios&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">VueAxios</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vue-axios&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">VueAuthenticate</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;vue-authenticate&#39;</span>\n\n<span class=\"nx\">Vue</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">VueResource</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Ahora viene una parte muy importante que es la configuraci\u00f3n. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">Vue</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">VueAuthenticate</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n  <span class=\"nx\">baseUrl</span><span class=\"o\">:</span> <span class=\"s1\">&#39;http://sgc-server.dev&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">loginUrl</span><span class=\"o\">:</span> <span class=\"s1\">&#39;/auth/login/&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">tokenName</span><span class=\"o\">:</span> <span class=\"s1\">&#39;auth_token&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">requestDataKey</span><span class=\"o\">:</span> <span class=\"s1\">&#39;data&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">responseDataKey</span><span class=\"o\">:</span> <span class=\"s1\">&#39;data&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">tokenType</span><span class=\"o\">:</span> <span class=\"s1\">&#39;Token&#39;</span><span class=\"p\">,</span>\n\n  <span class=\"nx\">bindRequestInterceptor</span><span class=\"o\">:</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$http</span><span class=\"p\">.</span><span class=\"nx\">interceptors</span><span class=\"p\">.</span><span class=\"nx\">request</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">((</span><span class=\"nx\">config</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">isAuthenticated</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n        <span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">headers</span><span class=\"p\">[</span><span class=\"s1\">&#39;Authorization&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n          <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">tokenType</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">getToken</span><span class=\"p\">()</span>\n        <span class=\"p\">].</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"s1\">&#39; &#39;</span><span class=\"p\">)</span>\n      <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"k\">delete</span> <span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">headers</span><span class=\"p\">[</span><span class=\"s1\">&#39;Authorization&#39;</span><span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">return</span> <span class=\"nx\">config</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"nx\">bindResponseInterceptor</span><span class=\"o\">:</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$http</span><span class=\"p\">.</span><span class=\"nx\">interceptors</span><span class=\"p\">.</span><span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">((</span><span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setToken</span><span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">)</span>\n      <span class=\"k\">return</span> <span class=\"nx\">response</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Veamos cada clave, porque todas son importantes</p>\n<ul>\n<li><code>baseUrl: 'http://sgc-server.dev'</code> - corresponde a la direcci\u00f3n del servidor. A partir de aqu\u00ed podemos ir sumando rutas.</li>\n<li><code>loginUrl: '/auth/login/'</code> - esta es la ruta del login. Como yo uso Djoser, as\u00ed se genera y esta opci\u00f3n se suma a <code>baseUrl</code>.</li>\n<li><code>tokenName: 'auth_token'</code> - esta es muy importante y depende de cada API, en Djoser as\u00ed se llama.</li>\n<li><code>requestDataKey: 'data'</code> - Axios manda los datos en <code>data</code>, al contrario de Vue-Resource que manda los datos en <code>body</code>. Si no colocamos bien esta opci\u00f3n, nunca nos registramos.</li>\n<li><code>responseDataKey: 'data'</code> - Igual que el anterior, la respuesta se coloca en <code>data</code>.</li>\n<li><code>tokenType: 'Token'</code> - Para la autorizaci\u00f3n, se env\u00eda el encabezado <code>Authorization</code> con el token. En algunas APIs se llama <code>Bearer</code>, pero en Djoser se llama <code>Token</code>. Si no se coloca bien, no funciona.</li>\n</ul>\n<p>Debido a que <code>vue-authentication</code> usa Fue Resource por omisi\u00f3n, hay que hacer dos adecuaciones para adaptarla a Axios, que se refieren a interceptar las solicitudes para agregarles el encabezado de autorizaci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"nx\">bindRequestInterceptor</span><span class=\"o\">:</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$http</span><span class=\"p\">.</span><span class=\"nx\">interceptors</span><span class=\"p\">.</span><span class=\"nx\">request</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">((</span><span class=\"nx\">config</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">isAuthenticated</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n        <span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">headers</span><span class=\"p\">[</span><span class=\"s1\">&#39;Authorization&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n          <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">tokenType</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">getToken</span><span class=\"p\">()</span>\n        <span class=\"p\">].</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"s1\">&#39; &#39;</span><span class=\"p\">)</span>\n      <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"k\">delete</span> <span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">headers</span><span class=\"p\">[</span><span class=\"s1\">&#39;Authorization&#39;</span><span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">return</span> <span class=\"nx\">config</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Y la segunda intercepta la respuesta<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>.</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"nx\">bindResponseInterceptor</span><span class=\"o\">:</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$http</span><span class=\"p\">.</span><span class=\"nx\">interceptors</span><span class=\"p\">.</span><span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">((</span><span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setToken</span><span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">)</span>\n      <span class=\"k\">return</span> <span class=\"nx\">response</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>En el componente donde est\u00e9 el formulario de ingreso, llamamos a las funciones que necesitemos, por ejemplo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">methods</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"nx\">login</span><span class=\"o\">:</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$auth</span><span class=\"p\">.</span><span class=\"nx\">login</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">credentials</span><span class=\"p\">)</span>\n        <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"nx\">_payload</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n          <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"sb\">`Identificado correctamente`</span><span class=\"p\">)</span>\n        <span class=\"p\">})</span>\n        <span class=\"p\">.</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">_error</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n          <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">_error</span><span class=\"p\">.</span><span class=\"nx\">response</span><span class=\"p\">)</span>\n        <span class=\"p\">})</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Que simplemente lanza una alerta cuando se obtiene el token.</p>\n<h2 id=\"metodos-disponibles\">M\u00e9todos disponibles</h2>\n<p>Estos son los m\u00e9todos proporcionados:</p>\n<ul>\n<li><code>isAuthenticated()</code> - devuelve <code>true</code> si encuentra un token en el almacenamiento local especificado. Puede manejar tokens tipo JWT<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup>.</li>\n<li><code>getToken()</code> - devuelve el token desde el almac\u00e9n local especificado.</li>\n<li><code>setToken()</code> - guarda el token en el almac\u00e9n. Esta funci\u00f3n es interna y no hay ninguna raz\u00f3n para llamarla desde un m\u00e9todo.</li>\n<li><code>getPayload()</code> - yo creo que esta funci\u00f3n se usa para decodificar un token JWT.</li>\n<li><code>login()</code> - esta funci\u00f3n realiza la solicitud de Token. Usa un objeto con el usuario y la contrase\u00f1a. Si el ingreso es exitoso, ejecuta <code>setToken</code>. Devuelve el token.</li>\n<li><code>register()</code> - Registra al usuario. Se le env\u00eda un objeto con el usuario, la contrase\u00f1a y el correo electr\u00f3nico. Si es exitoso el registro se ejecuta <code>setToken</code>. Devuelve el token.</li>\n<li><code>logout()</code> - Env\u00eda la petici\u00f3n de salida a la API y elimina el token del almac\u00e9n local. No devuelve nada, creo.</li>\n<li><code>authenticate()</code> - Creo que esta funci\u00f3n es para llamar a los proveedores de OAuth: GitHub, Facebook, Twitter, Google, Instagram, Bitbucket<sup id=\"fnref-3\"><a class=\"footnote-ref\" href=\"#fn-3\">3</a></sup>. </li>\n</ul>\n<p>Bueno, pues ya est\u00e1. En el repositorio hay un ejemplo de como usar Vuex para las funciones de registro\u2026 Me gusta la idea, pero ser\u00e1 en otra ocasi\u00f3n.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>A esta no le entiendo.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>Si no saben que es un token JWT, no me pregunten a mi porque yo tampoco s\u00e9.&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-3\">\n<p>A duras penas puedo usar un token simple, ya mero voy a poder usar estos de OAuth\u2026 pero alg\u00fan d\u00eda.&#160;<a class=\"footnote-backref\" href=\"#fnref-3\" title=\"Jump back to footnote 3 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "acreditacion-y-autorizacion-en-vuejs", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 120, "fields": {"idx": "7ee13855-571a-4b13-acb9-6a6aa74425aa", "creado": "2017-07-29T05:46:23.099Z", "modificado": "2017-07-29T05:46:23.099Z", "title": "Transparencia Referencial", "summary": "", "body": "Title: Transparencia Referencial    \r\nDate: 2017-05-05 19:50:52\r\nCategory: desarrollo\r\nTags: javascript, patterns, es6 \r\nSeries: Programaci\u00f3n Funcional  \r\nSummary: \r\n\r\nAhora estoy aprendiendo algunos paradigmas de programaci\u00f3n (_programming patterns_) y hay algunos que aunque al principio pueden parecer muy obvios son muy interesantes, como este que se llama **transparencia referencial**. O bueno, as\u00ed le puse yo.\r\n\r\nDada la definici\u00f3n de funci\u00f3n que dice:\r\n\r\n> Una **funci\u00f3n** es una pieza de c\u00f3digo que puede llamarse por su nombre, tomar argumentos y regresar valores\u2026  \r\n\r\nla _transparencia referencial_ dice que **una funci\u00f3n siempre regresar\u00e1 el mismo valor para el mismo argumento**.\r\n\r\nVeamos esta simple funci\u00f3n:\r\n\r\n```js\r\nlet identidad = i => i\r\n```\r\n\r\nLo \u00fanico que hace esta funci\u00f3n es regresar el valor que le pasamos como argumento. Por ejemplo, si le pasamos un `5`, regresa un `5`. Solo opera con el argumento que le pasamos, sin referencias al alcance global. Y por supuesto cumple con el principio de integridad referencial.\r\n\r\nAhora imaginemos que usamos la funci\u00f3n `identidad` en otra funci\u00f3n, como esta:\r\n\r\n```javascript\r\nsuma(3, 4) + identidad(1)\r\n```\r\n\r\nDebido al principio de _integridad referencial_, podemos convertir la sentencia anterior en la siguiente:\r\n\r\n```js\r\nsuma(3, 4) + 1\r\n```\r\n\r\nEste proceso se llama **modelo de sustituci\u00f3n** porque podemos sustituir el resultado de la funci\u00f3n por su valor (b\u00e1sicamente porque no depende de otros valores). Esto nos lleva al c\u00f3digo **en paralelo** y al **cacheo**.\r\n\r\nNo es poca cosa. Podemos ejecutar el c\u00f3digo anterior en m\u00faltiples hilos que no necesitan estar sincronizados. O sea, la necesidad de la sincronizaci\u00f3n parte del hecho que los hilos no deben actual sobre datos globales cuando se ejecutan en paralelo. Las funciones que cumplen con el principio de Integridad Referencial solo dependen de los argumentos de entrada, por lo tanto, los hilos son libres de ejecutarse sin ning\u00fan mecanismo de bloqueo.\r\n\r\nLuego, ya que la funci\u00f3n va a devolver el mismo valor para el argumento dado podemos, de hecho, podemos guardarlo en una memoria cache. Por ejemplo, imaginemos que tenemos una funci\u00f3n llamada `factorial` que hace lo que indica su nombre en un n\u00famero dado. \u00bfQu\u00e9 pasa cuando un usuario llama a la funci\u00f3n con el argumento `5`? Sabemos que el factorial de `5` es `120`. \u00bfQu\u00e9 pasa cuando llamamos a  `factorial(5)`  por segunda vez? Si nuestra funci\u00f3n obedece al principio de **transparencia referencial**, sabemos que el resultado ser\u00e1 `120` como antes (ya que solo depende de los argumentos de entrada). Con esta caracter\u00edstica en mente, podemos almacenar en cache los valores de nuestra funci\u00f3n `factorial` y regresar `120`  cuando la funci\u00f3n se llame con el argumento `5` sin tener que hacer los mismos c\u00e1lculos otra vez.\r\n\r\nComo podemos apreciar, este sencillo principio tiene importantes implicaciones que iremos descubriendo en el aprendizaje con JavaScript.", "extend": "", "pub_date": "2017-05-06T00:50:52Z", "summary_html": "", "body_html": "<p>Ahora estoy aprendiendo algunos paradigmas de programaci\u00f3n (<em>programming patterns</em>) y hay algunos que aunque al principio pueden parecer muy obvios son muy interesantes, como este que se llama <strong>transparencia referencial</strong>. O bueno, as\u00ed le puse yo.</p>\n<p>Dada la definici\u00f3n de funci\u00f3n que dice:</p>\n<blockquote>\n<p>Una <strong>funci\u00f3n</strong> es una pieza de c\u00f3digo que puede llamarse por su nombre, tomar argumentos y regresar valores\u2026  </p>\n</blockquote>\n<p>la <em>transparencia referencial</em> dice que <strong>una funci\u00f3n siempre regresar\u00e1 el mismo valor para el mismo argumento</strong>.</p>\n<p>Veamos esta simple funci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">identidad</span> <span class=\"o\">=</span> <span class=\"nx\">i</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">i</span>\n</pre></div>\n\n\n<p>Lo \u00fanico que hace esta funci\u00f3n es regresar el valor que le pasamos como argumento. Por ejemplo, si le pasamos un <code>5</code>, regresa un <code>5</code>. Solo opera con el argumento que le pasamos, sin referencias al alcance global. Y por supuesto cumple con el principio de integridad referencial.</p>\n<p>Ahora imaginemos que usamos la funci\u00f3n <code>identidad</code> en otra funci\u00f3n, como esta:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">suma</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">identidad</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Debido al principio de <em>integridad referencial</em>, podemos convertir la sentencia anterior en la siguiente:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">suma</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n</pre></div>\n\n\n<p>Este proceso se llama <strong>modelo de sustituci\u00f3n</strong> porque podemos sustituir el resultado de la funci\u00f3n por su valor (b\u00e1sicamente porque no depende de otros valores). Esto nos lleva al c\u00f3digo <strong>en paralelo</strong> y al <strong>cacheo</strong>.</p>\n<p>No es poca cosa. Podemos ejecutar el c\u00f3digo anterior en m\u00faltiples hilos que no necesitan estar sincronizados. O sea, la necesidad de la sincronizaci\u00f3n parte del hecho que los hilos no deben actual sobre datos globales cuando se ejecutan en paralelo. Las funciones que cumplen con el principio de Integridad Referencial solo dependen de los argumentos de entrada, por lo tanto, los hilos son libres de ejecutarse sin ning\u00fan mecanismo de bloqueo.</p>\n<p>Luego, ya que la funci\u00f3n va a devolver el mismo valor para el argumento dado podemos, de hecho, podemos guardarlo en una memoria cache. Por ejemplo, imaginemos que tenemos una funci\u00f3n llamada <code>factorial</code> que hace lo que indica su nombre en un n\u00famero dado. \u00bfQu\u00e9 pasa cuando un usuario llama a la funci\u00f3n con el argumento <code>5</code>? Sabemos que el factorial de <code>5</code> es <code>120</code>. \u00bfQu\u00e9 pasa cuando llamamos a  <code>factorial(5)</code>  por segunda vez? Si nuestra funci\u00f3n obedece al principio de <strong>transparencia referencial</strong>, sabemos que el resultado ser\u00e1 <code>120</code> como antes (ya que solo depende de los argumentos de entrada). Con esta caracter\u00edstica en mente, podemos almacenar en cache los valores de nuestra funci\u00f3n <code>factorial</code> y regresar <code>120</code>  cuando la funci\u00f3n se llame con el argumento <code>5</code> sin tener que hacer los mismos c\u00e1lculos otra vez.</p>\n<p>Como podemos apreciar, este sencillo principio tiene importantes implicaciones que iremos descubriendo en el aprendizaje con JavaScript.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "transparencia-referencial", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 121, "fields": {"idx": "9c7121ad-e117-4661-8ee0-62d3d9da5af6", "creado": "2017-07-29T05:46:55.925Z", "modificado": "2017-07-29T05:46:55.925Z", "title": "Funciones de primer orden", "summary": "", "body": "Title: Funciones de primer orden    \r\nDate: 2017-05-07 14:53:30\r\nCategory: desarrollo\r\nTags: javascript, patterns, es6\r\nSummary: \r\nSeries: Programaci\u00f3n Funcional\r\n\r\nDe manera general, podemos decir que las __Funciones de Primer Orden__[^1] son _abstracciones_ de problemas comunes. \r\n\r\n### Abstracciones\r\n\r\nLa Wikipedia[^2] nos dice que la **abstracci\u00f3n** consiste en aislar un elemento de su contexto. Es decir, hablado ya de funciones, el t\u00e9rmino hace \u00e9nfasis en el _\u201dque hace\u201d_ y no en el \u201ccomo lo hace\u201d. La verdad, est\u00e1 mejor la definici\u00f3n en la versi\u00f3n en ingl\u00e9s:\r\n\r\n> La **abstracci\u00f3n** es una t\u00e9cnica para organizar la complejidad de los sistemas inform\u00e1ticos. Funciona estableciendo un nivel de complejidad en el cual, se eliminan los detalles m\u00e1s complejos cuando una persona interact\u00faa con el sistema. El programador trabaja con una interfaz idealizada (generalmente bien definida) y puede agregar niveles adicionales de funcionalidad que de otro modo ser\u00edan demasiado complejos de manejar.\r\n\r\ny pone como ejemplo lo siguiente:\r\n\r\n> supongamos que un programador escribe un programa que involucra operaciones num\u00e9ricas, pero puede que no est\u00e9 interesado en la forma en la que los n\u00fameros se muestran debido al hardware (por ejemplo si es de 16, 32 o 64 bits), y como no le interesa, no incluye detalles sobre su presentaci\u00f3n. Es decir, ha hecho una _abstracci\u00f3n_ dejando solo los n\u00fameros que es con lo que trabaja.\r\n\r\nLa abstracci\u00f3n nos permite trabajar en el objetivo sin preocuparnos con los conceptos subyacentes.\r\n\r\n### Abstracci\u00f3n y las funciones de primer orden\r\nY las funciones de primer orden nos ayudan a lograr el concepto de abstracci\u00f3n. Vean por ejemplo esta funci\u00f3n.\r\n\r\n```js\r\nconst _cadaUno = (arreglo, fn) => {\r\n  for (let i=0; i < arreglo.length; i++){\r\n    fn(arreglo[i])\r\n  }\r\n}\r\n```\r\n\r\n\r\nEsta funci\u00f3n es una forma de abstraer el concepto de _recorrer un arreglo_. El usuario de la API `cadaUno` no necesita comprender como est\u00e1 implementada en esta funci\u00f3n el problema de recorrer el arreglo, por lo tanto se ha abstra\u00eddo del problema.\r\n\r\n!!! notice \"C\u00f3mo funciona `cadaUno`\"\r\n    Dentro de la funci\u00f3n, se llama a la funci\u00f3n `fn` que le pasamos con un \u00fanico argumento, en cada una de las vueltas que da con los datos del `arreglo`. Por ejemplo si le pasamos la funci\u00f3n `consola`:\r\n    \r\n\r\n        cadaUno([1, 2, 3], consola)\r\n   \r\n    \r\n    Veremos los n\u00fameros, uno en cada l\u00ednea:\r\n\r\n         > cerebro@0.1.0 start /Volumes/datos/Proyectos/cerebro\r\n         > babel-node src/index.js\r\n\r\n         Hola mundo\r\n         1\r\n         2\r\n         3\r\n\r\n\r\nUna funci\u00f3n de primer orden para obtener las propiedades de un objeto se ver\u00eda as\u00ed:\r\n\r\n```js\r\nconst _cadaPropiedad = (objeto, funcion) => {\r\n  for (var propiedad in objeto) {\r\n    if (objeto.hasOwnProperty(propiedad)) {\r\n      // Llamamos a la funcion con la clave y valor\r\n      // como argumentos\r\n      funcion(propiedad, objeto[propiedad])\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n!!! notice \"Como funciona `cadaPropiedad`\"\r\n    `cadaPropiedad` toma como primer argumento un objeto de JavaScript y como segundo argumento una funci\u00f3n. Recorre el objeto usando el algoritmo anterior y llama a la `funcion` con la clave y el valor como argumentos.\r\n\r\n```js\r\nlet objeto = {a: 1, b: 2}\r\ncadaPropiedad(objeto, (k, v) => consola(`=> ${k}: ${v}`))\r\n```   \r\n\r\nY funciona de la siguiente manera:\r\n```bash\r\n> $ npm start\r\n\r\n> cerebro@0.1.0 start /Volumes/datos/Proyectos/cerebro\r\n> babel-node src/index.js\r\n\r\n=> a: 1\r\n=> b: 2\r\n```\r\n\r\nLas funciones `cadaUno` y `cadaPropiedad` son funciones de primer orden que nos permiten trabajar en la tarea que nos ocupa, sin preocuparnos por la parte de recorrer los objetos o arreglos. \r\n\r\nTambi\u00e9n es posible crear funciones de primer orden para controlar flujos de programa. Por ejemplo, vamos a crear una funci\u00f3n que se llame `soloSi`. Esta funci\u00f3n tomo como argumento un `predicado` (que debe ser `true` o `false`) y _solo si_ es `false` llama a la funci\u00f3n `fn` que le pasamos como segundo par\u00e1metro.\r\n\r\n```js\r\nconst _soloSi = (predicado, fn) => {\r\n  if (!predicado)\r\n    fn()\r\n}\r\n```\r\n\r\nCon esta funci\u00f3n vamos a crear un peque\u00f1o c\u00f3digo que busca n\u00fameros pares, por supuesto haciendo uso de las funciones de primer orden que hemos creado.\r\n```js\r\ncadaUno([1, 2, 3, 4, 5, 6, 7], (numero) => {\r\n  soloSi((numero % 2), () => {\r\n    consola(`${numero} es par`)\r\n  })\r\n})\r\n```\r\n\r\nY al ejecutar nuestra funci\u00f3n obtenemos el resultado esperado.\r\n```js\r\n> $ npm start\r\n\r\n> cerebro@0.1.0 start /Volumes/datos/Proyectos/cerebro\r\n> babel-node src/index.js\r\n\r\n2 es par\r\n4 es par\r\n6 es par\r\n```\r\n\r\nAhora, \u00bfqu\u00e9 pasar\u00eda si quisi\u00e9ramos obtener los n\u00fameros pares, digamos que del 1 al 100? Podr\u00edamos usar la funci\u00f3n `cadaUno` pero tendr\u00edamos que pasarle todo el arreglo con los 100 n\u00fameros. \r\n\r\nMejor vamos a escribir una funci\u00f3n de primer orden a la que vamos a llamar `tantasVeces`, a la llamaremos con dos argumento, un n\u00famero y una funci\u00f3n que se ejecutar\u00e1 _tantas veces_ como el n\u00famero que le pasemos. \r\n\r\n```js\r\nconst _tantasVeces = (veces, fn) => {\r\n  for (var i = 0; i < veces; i++) \r\n    fn(i)\r\n}\r\n```\r\n\r\nEsta funci\u00f3n es casi id\u00e9ntica a la de `cadaUno`, solo que usa n\u00fameros en lugar de arreglos. Ahora la vamos a usar para resolver el problema de los n\u00fameros pares.\r\n```js\r\ntantasVeces(100, (n) => {\r\n  soloSi(n % 2, () => consola(`${n} es par`))\r\n})\r\n```\r\n\r\nY la salida es la esperada\r\n```js\r\n> $ npm start\r\n\r\n> cerebro@0.1.0 start /Volumes/datos/Proyectos/cerebro\r\n> babel-node src/index.js\r\n\r\n0 es par\r\n2 es par\r\n4 es par\r\n6 es par\r\n8 es par\r\n10 es par\r\n...\r\n```\r\n\r\nEl c\u00f3digo anterior es un conjunto de abstracciones que da como resultado funciones de primer orden simples y concisas.\r\n\r\nAs\u00ed se ve el archivo de `utilidades.js` que contiene todas las funciones que hemos visto hasta ahora:\r\n\r\n```js\r\nconst _consola = (mensaje) => console.log(mensaje)\r\n\r\nconst _cadaUno = (arreglo, funcion) => {\r\n  for (let i = 0; i < arreglo.length; i++) {\r\n    funcion(arreglo[i])\r\n  }\r\n}\r\n\r\nconst _cadaPropiedad = (objeto, fn) => {\r\n  for (var propiedad in objeto) {\r\n    if (objeto.hasOwnProperty(propiedad)) {\r\n      fn(propiedad, objeto[propiedad])\r\n    }\r\n  }\r\n}\r\n\r\nconst _soloSi = (predicado, fn) => {\r\n  if (!predicado)\r\n    fn()\r\n}\r\n\r\nconst _tantasVeces = (veces, fn) => {\r\n  for (var i = 0; i < veces; i++)\r\n    fn(i)\r\n}\r\n\r\nmodule.exports = {\r\n  consola: _consola,\r\n  cadaUno: _cadaUno,\r\n  cadaPropiedad: _cadaPropiedad,\r\n  soloSi: _soloSi,\r\n  tantasVeces: _tantasVeces\r\n}\r\n```\r\n\r\nY as\u00ed se usa en el \u00faltimo ejemplo:\r\n\r\n```js\r\nimport {consola, soloSi, tantasVeces} from './lib/utilidades.js'\r\n\r\ntantasVeces(100, (n) => {\r\n  soloSi(n % 2, () => consola(`${n} es par`))\r\n})\r\n```\r\n\r\n\r\n[^1]: Tambi\u00e9n las llaman funciones de orden superior porque en ingl\u00e9s se llaman as\u00ed: _High-Order Function_.\r\n[^2]: https://es.wikipedia.org/wiki/Abstracci\u00f3n_(inform\u00e1tica)", "extend": "", "pub_date": "2017-05-07T19:53:30Z", "summary_html": "", "body_html": "<p>De manera general, podemos decir que las <strong>Funciones de Primer Orden</strong><sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup> son <em>abstracciones</em> de problemas comunes. </p>\n<h3 id=\"abstracciones\">Abstracciones</h3>\n<p>La Wikipedia<sup id=\"fnref-2\"><a class=\"footnote-ref\" href=\"#fn-2\">2</a></sup> nos dice que la <strong>abstracci\u00f3n</strong> consiste en aislar un elemento de su contexto. Es decir, hablado ya de funciones, el t\u00e9rmino hace \u00e9nfasis en el <em>\u201dque hace\u201d</em> y no en el \u201ccomo lo hace\u201d. La verdad, est\u00e1 mejor la definici\u00f3n en la versi\u00f3n en ingl\u00e9s:</p>\n<blockquote>\n<p>La <strong>abstracci\u00f3n</strong> es una t\u00e9cnica para organizar la complejidad de los sistemas inform\u00e1ticos. Funciona estableciendo un nivel de complejidad en el cual, se eliminan los detalles m\u00e1s complejos cuando una persona interact\u00faa con el sistema. El programador trabaja con una interfaz idealizada (generalmente bien definida) y puede agregar niveles adicionales de funcionalidad que de otro modo ser\u00edan demasiado complejos de manejar.</p>\n</blockquote>\n<p>y pone como ejemplo lo siguiente:</p>\n<blockquote>\n<p>supongamos que un programador escribe un programa que involucra operaciones num\u00e9ricas, pero puede que no est\u00e9 interesado en la forma en la que los n\u00fameros se muestran debido al hardware (por ejemplo si es de 16, 32 o 64 bits), y como no le interesa, no incluye detalles sobre su presentaci\u00f3n. Es decir, ha hecho una <em>abstracci\u00f3n</em> dejando solo los n\u00fameros que es con lo que trabaja.</p>\n</blockquote>\n<p>La abstracci\u00f3n nos permite trabajar en el objetivo sin preocuparnos con los conceptos subyacentes.</p>\n<h3 id=\"abstraccion-y-las-funciones-de-primer-orden\">Abstracci\u00f3n y las funciones de primer orden</h3>\n<p>Y las funciones de primer orden nos ayudan a lograr el concepto de abstracci\u00f3n. Vean por ejemplo esta funci\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_cadaUno</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">arreglo</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">arreglo</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">){</span>\n    <span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"nx\">arreglo</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">])</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Esta funci\u00f3n es una forma de abstraer el concepto de <em>recorrer un arreglo</em>. El usuario de la API <code>cadaUno</code> no necesita comprender como est\u00e1 implementada en esta funci\u00f3n el problema de recorrer el arreglo, por lo tanto se ha abstra\u00eddo del problema.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">C\u00f3mo funciona <code>cadaUno</code></p>\n<p>Dentro de la funci\u00f3n, se llama a la funci\u00f3n <code>fn</code> que le pasamos con un \u00fanico argumento, en cada una de las vueltas que da con los datos del <code>arreglo</code>. Por ejemplo si le pasamos la funci\u00f3n <code>consola</code>:</p>\n<div class=\"codehilite\"><pre><span></span>cadaUno([1, 2, 3], consola)\n</pre></div>\n\n\n<p>Veremos los n\u00fameros, uno en cada l\u00ednea:</p>\n<div class=\"codehilite\"><pre><span></span> <span class=\"o\">&gt;</span> <span class=\"n\">cerebro</span><span class=\"mf\">@0.1.0</span> <span class=\"n\">start</span> <span class=\"o\">/</span><span class=\"n\">Volumes</span><span class=\"o\">/</span><span class=\"n\">datos</span><span class=\"o\">/</span><span class=\"n\">Proyectos</span><span class=\"o\">/</span><span class=\"n\">cerebro</span>\n <span class=\"o\">&gt;</span> <span class=\"n\">babel</span><span class=\"o\">-</span><span class=\"n\">node</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">js</span>\n\n <span class=\"n\">Hola</span> <span class=\"n\">mundo</span>\n <span class=\"mi\">1</span>\n <span class=\"mi\">2</span>\n <span class=\"mi\">3</span>\n</pre></div>\n\n\n</div>\n<p>Una funci\u00f3n de primer orden para obtener las propiedades de un objeto se ver\u00eda as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_cadaPropiedad</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">objeto</span><span class=\"p\">,</span> <span class=\"nx\">funcion</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">propiedad</span> <span class=\"k\">in</span> <span class=\"nx\">objeto</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">objeto</span><span class=\"p\">.</span><span class=\"nx\">hasOwnProperty</span><span class=\"p\">(</span><span class=\"nx\">propiedad</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n      <span class=\"c1\">// Llamamos a la funcion con la clave y valor</span>\n      <span class=\"c1\">// como argumentos</span>\n      <span class=\"nx\">funcion</span><span class=\"p\">(</span><span class=\"nx\">propiedad</span><span class=\"p\">,</span> <span class=\"nx\">objeto</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">])</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Como funciona <code>cadaPropiedad</code></p>\n<p><code>cadaPropiedad</code> toma como primer argumento un objeto de JavaScript y como segundo argumento una funci\u00f3n. Recorre el objeto usando el algoritmo anterior y llama a la <code>funcion</code> con la clave y el valor como argumentos.</p>\n</div>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">objeto</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"nx\">a</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"p\">}</span>\n<span class=\"nx\">cadaPropiedad</span><span class=\"p\">(</span><span class=\"nx\">objeto</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">k</span><span class=\"p\">,</span> <span class=\"nx\">v</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">consola</span><span class=\"p\">(</span><span class=\"sb\">`=&gt; </span><span class=\"si\">${</span><span class=\"nx\">k</span><span class=\"si\">}</span><span class=\"sb\">: </span><span class=\"si\">${</span><span class=\"nx\">v</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>Y funciona de la siguiente manera:</p>\n<div class=\"codehilite\"><pre><span></span>&gt; $ npm start\n\n&gt; cerebro@0.1.0 start /Volumes/datos/Proyectos/cerebro\n&gt; babel-node src/index.js\n\n<span class=\"o\">=</span>&gt; a: <span class=\"nv\">1</span>\n<span class=\"o\">=</span>&gt; b: <span class=\"m\">2</span>\n</pre></div>\n\n\n<p>Las funciones <code>cadaUno</code> y <code>cadaPropiedad</code> son funciones de primer orden que nos permiten trabajar en la tarea que nos ocupa, sin preocuparnos por la parte de recorrer los objetos o arreglos. </p>\n<p>Tambi\u00e9n es posible crear funciones de primer orden para controlar flujos de programa. Por ejemplo, vamos a crear una funci\u00f3n que se llame <code>soloSi</code>. Esta funci\u00f3n tomo como argumento un <code>predicado</code> (que debe ser <code>true</code> o <code>false</code>) y <em>solo si</em> es <code>false</code> llama a la funci\u00f3n <code>fn</code> que le pasamos como segundo par\u00e1metro.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_soloSi</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">predicado</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">predicado</span><span class=\"p\">)</span>\n    <span class=\"nx\">fn</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Con esta funci\u00f3n vamos a crear un peque\u00f1o c\u00f3digo que busca n\u00fameros pares, por supuesto haciendo uso de las funciones de primer orden que hemos creado.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">cadaUno</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"nx\">numero</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">soloSi</span><span class=\"p\">((</span><span class=\"nx\">numero</span> <span class=\"o\">%</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">consola</span><span class=\"p\">(</span><span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">numero</span><span class=\"si\">}</span><span class=\"sb\"> es par`</span><span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Y al ejecutar nuestra funci\u00f3n obtenemos el resultado esperado.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;</span> <span class=\"nx\">$</span> <span class=\"nx\">npm</span> <span class=\"nx\">start</span>\n\n<span class=\"o\">&gt;</span> <span class=\"nx\">cerebro</span><span class=\"err\">@</span><span class=\"mf\">0.1.0</span> <span class=\"nx\">start</span> <span class=\"o\">/</span><span class=\"nx\">Volumes</span><span class=\"o\">/</span><span class=\"nx\">datos</span><span class=\"o\">/</span><span class=\"nx\">Proyectos</span><span class=\"o\">/</span><span class=\"nx\">cerebro</span>\n<span class=\"o\">&gt;</span> <span class=\"nx\">babel</span><span class=\"o\">-</span><span class=\"nx\">node</span> <span class=\"nx\">src</span><span class=\"o\">/</span><span class=\"nx\">index</span><span class=\"p\">.</span><span class=\"nx\">js</span>\n\n<span class=\"mi\">2</span> <span class=\"nx\">es</span> <span class=\"nx\">par</span>\n<span class=\"mi\">4</span> <span class=\"nx\">es</span> <span class=\"nx\">par</span>\n<span class=\"mi\">6</span> <span class=\"nx\">es</span> <span class=\"nx\">par</span>\n</pre></div>\n\n\n<p>Ahora, \u00bfqu\u00e9 pasar\u00eda si quisi\u00e9ramos obtener los n\u00fameros pares, digamos que del 1 al 100? Podr\u00edamos usar la funci\u00f3n <code>cadaUno</code> pero tendr\u00edamos que pasarle todo el arreglo con los 100 n\u00fameros. </p>\n<p>Mejor vamos a escribir una funci\u00f3n de primer orden a la que vamos a llamar <code>tantasVeces</code>, a la llamaremos con dos argumento, un n\u00famero y una funci\u00f3n que se ejecutar\u00e1 <em>tantas veces</em> como el n\u00famero que le pasemos. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_tantasVeces</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">veces</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">veces</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> \n    <span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Esta funci\u00f3n es casi id\u00e9ntica a la de <code>cadaUno</code>, solo que usa n\u00fameros en lugar de arreglos. Ahora la vamos a usar para resolver el problema de los n\u00fameros pares.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">tantasVeces</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">soloSi</span><span class=\"p\">(</span><span class=\"nx\">n</span> <span class=\"o\">%</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">consola</span><span class=\"p\">(</span><span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">n</span><span class=\"si\">}</span><span class=\"sb\"> es par`</span><span class=\"p\">))</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Y la salida es la esperada</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;</span> <span class=\"nx\">$</span> <span class=\"nx\">npm</span> <span class=\"nx\">start</span>\n\n<span class=\"o\">&gt;</span> <span class=\"nx\">cerebro</span><span class=\"err\">@</span><span class=\"mf\">0.1.0</span> <span class=\"nx\">start</span> <span class=\"o\">/</span><span class=\"nx\">Volumes</span><span class=\"o\">/</span><span class=\"nx\">datos</span><span class=\"o\">/</span><span class=\"nx\">Proyectos</span><span class=\"o\">/</span><span class=\"nx\">cerebro</span>\n<span class=\"o\">&gt;</span> <span class=\"nx\">babel</span><span class=\"o\">-</span><span class=\"nx\">node</span> <span class=\"nx\">src</span><span class=\"o\">/</span><span class=\"nx\">index</span><span class=\"p\">.</span><span class=\"nx\">js</span>\n\n<span class=\"mi\">0</span> <span class=\"nx\">es</span> <span class=\"nx\">par</span>\n<span class=\"mi\">2</span> <span class=\"nx\">es</span> <span class=\"nx\">par</span>\n<span class=\"mi\">4</span> <span class=\"nx\">es</span> <span class=\"nx\">par</span>\n<span class=\"mi\">6</span> <span class=\"nx\">es</span> <span class=\"nx\">par</span>\n<span class=\"mi\">8</span> <span class=\"nx\">es</span> <span class=\"nx\">par</span>\n<span class=\"mi\">10</span> <span class=\"nx\">es</span> <span class=\"nx\">par</span>\n<span class=\"p\">...</span>\n</pre></div>\n\n\n<p>El c\u00f3digo anterior es un conjunto de abstracciones que da como resultado funciones de primer orden simples y concisas.</p>\n<p>As\u00ed se ve el archivo de <code>utilidades.js</code> que contiene todas las funciones que hemos visto hasta ahora:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_consola</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">mensaje</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">mensaje</span><span class=\"p\">)</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">_cadaUno</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">arreglo</span><span class=\"p\">,</span> <span class=\"nx\">funcion</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">arreglo</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">funcion</span><span class=\"p\">(</span><span class=\"nx\">arreglo</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">])</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">_cadaPropiedad</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">objeto</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">propiedad</span> <span class=\"k\">in</span> <span class=\"nx\">objeto</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">objeto</span><span class=\"p\">.</span><span class=\"nx\">hasOwnProperty</span><span class=\"p\">(</span><span class=\"nx\">propiedad</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n      <span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"nx\">propiedad</span><span class=\"p\">,</span> <span class=\"nx\">objeto</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">])</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">_soloSi</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">predicado</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">predicado</span><span class=\"p\">)</span>\n    <span class=\"nx\">fn</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">_tantasVeces</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">veces</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">veces</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">consola</span><span class=\"o\">:</span> <span class=\"nx\">_consola</span><span class=\"p\">,</span>\n  <span class=\"nx\">cadaUno</span><span class=\"o\">:</span> <span class=\"nx\">_cadaUno</span><span class=\"p\">,</span>\n  <span class=\"nx\">cadaPropiedad</span><span class=\"o\">:</span> <span class=\"nx\">_cadaPropiedad</span><span class=\"p\">,</span>\n  <span class=\"nx\">soloSi</span><span class=\"o\">:</span> <span class=\"nx\">_soloSi</span><span class=\"p\">,</span>\n  <span class=\"nx\">tantasVeces</span><span class=\"o\">:</span> <span class=\"nx\">_tantasVeces</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Y as\u00ed se usa en el \u00faltimo ejemplo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span><span class=\"nx\">consola</span><span class=\"p\">,</span> <span class=\"nx\">soloSi</span><span class=\"p\">,</span> <span class=\"nx\">tantasVeces</span><span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;./lib/utilidades.js&#39;</span>\n\n<span class=\"nx\">tantasVeces</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">soloSi</span><span class=\"p\">(</span><span class=\"nx\">n</span> <span class=\"o\">%</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">consola</span><span class=\"p\">(</span><span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">n</span><span class=\"si\">}</span><span class=\"sb\"> es par`</span><span class=\"p\">))</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Tambi\u00e9n las llaman funciones de orden superior porque en ingl\u00e9s se llaman as\u00ed: <em>High-Order Function</em>.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn-2\">\n<p>https://es.wikipedia.org/wiki/Abstracci\u00f3n_(inform\u00e1tica)&#160;<a class=\"footnote-backref\" href=\"#fnref-2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "funciones-de-primer-orden", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 122, "fields": {"idx": "290766ac-5849-40d7-b094-057c97d510bc", "creado": "2017-07-29T05:51:17.170Z", "modificado": "2017-07-29T05:51:17.170Z", "title": "Funciones de primer orden II", "summary": "", "body": "Title: Funciones de primer orden II    \r\nDate: 2017-05-09 19:29:25\r\nCategory: desarrollo\r\nTags: javascript, patterns, es6\r\nSummary: \r\n\r\n\r\nCreo que es muy importante comprender correctamente qu\u00e9 son y el papel de las funciones de primer orden en la programaci\u00f3n funcional. Vamos a seguir revisando este paradigma de programaci\u00f3n con funciones cada vez m\u00e1s concretas y con aplicaci\u00f3n en el d\u00eda a d\u00eda.\r\n\r\n### La funci\u00f3n `todos`\r\n\r\nEs frecuente que, cuando programamos, tengamos que verificar si un arreglo contiene n\u00fameros, un objeto o alguna otra cosa (pensemos en los _requisitos_ de las metas). Lo que har\u00edamos ser\u00eda un ciclo `for` para resolver este problema. Pero tambi\u00e9n podemos hacer una abstracci\u00f3n usando nuestra funci\u00f3n `todos`. La funci\u00f3n `todos` recibe dos argumentos: una arreglo y una funci\u00f3n. Lo que hace es verificar si todos los elementos del arreglo se eval\u00faan como `true` por la funci\u00f3n que le pasamos como argumento. La implementaci\u00f3n se ve as\u00ed:\r\n\r\n    :::javascript\r\n    const _todos = (arr, fn) => {\r\n      let resultado = true\r\n      for (let i = 0; i < arr.length; i++)\r\n        resultado = resultado && (fn(arr[i]))\r\n    }\r\n\r\nSimplemente es un ciclo que recorre todo el arreglo y llama a la funci\u00f3n `fn` con cada valor. Ahora bien, la funci\u00f3n `fn` __debe__ regresar un valor _Booleano_, porque con este hacemos una prueba l\u00f3gica `&&` para asegurar que el contenido del arreglo obedece al criterio dado por `fn`.\r\n\r\nPara verificar el funcionamiento de nuestra funci\u00f3n, vamos a pasarle un arreglo de valores `NaN` y la funci\u00f3n `isNaN()` como argumento para que verifique si el n\u00famero dado es `NaN` o no.\r\n\r\n    :::bash\r\n    consola(todos([NaN, NaN, NaN], isNaN))\r\n    > true\r\n    consola(todos([NaN, NaN, NaN, 4], isNaN))\r\n    > false\r\n\r\nLa funci\u00f3n `todos` es una t\u00edpica funci\u00f3n de primer orden que ademas de ser f\u00e1cil de implementar es realmente \u00fatil. Antes de pasar a la siguiente, vamos a _refactorizar_ nuestra funci\u00f3n para aprovechar el nuevo ciclo `for..of` de la implementaci\u00f3n ES6 para recorrer los elementos del arreglo.\r\n\r\n    :::js\r\n    const _todos = (arr, fn) => {\r\n      let resultado = true\r\n      for(const valor of arr)\r\n        resultado = resultado && fn(valor)\r\n      return resultado\r\n    }\r\n\r\n\r\n### Funci\u00f3n `algunos`\r\nMuy similar a la funci\u00f3n `todos`, tenemos esta funci\u00f3n llamada `algunos`, aunque funciona de forma un poco diferente porque esta devuelve `true` solo si la funci\u00f3n regresa `true` para _algunos_ de los elementos del arreglo. Para poder implementar esta funci\u00f3n usaremos `||` en lugar de `&&`.\r\n\r\n    :::js\r\n    const _algunos = (arr, fn) => {\r\n      let resultado = false\r\n      for (const valor of arr)\r\n        resultado = resultado || fn(valor)\r\n      return resultado\r\n    }\r\n\r\n> Antes de continuar, ya s\u00e9 que estas implementaciones son muy ineficientes. `todos` debe recorrer el arreglo hasta el primer elemento que no cumpla con el criterio y `algunos` recorre el arreglo hasta la primera coincidencia. Para arreglos muy grandes ser\u00eda muy ineficiente. Pero como el objetivo es entender los conceptos de las funciones de primer orden, le daremos preferencia a la parte did\u00e1ctica.\r\n\r\nVamos a ver como funciona nuestra funci\u00f3n `algunos`.\r\n\r\n    > consola(algunos([NaN, NaN, 4], isNaN))\r\n    true\r\n    > consola(algunos([3, 4, 4], isNaN))\r\n    false\r\n\r\nTodav\u00eda nos falta un ejemplo m\u00e1s complejo que involucra el concepto de __abstracci\u00f3n__, pero seguiremos en el siguiente art\u00edculo.\r\n\r\n### La funci\u00f3n `ordenarPor`\r\nEn ECMAScript 6 existe una funci\u00f3n interna `sort()` en el prototipo de Array que se usa de la siguiente manera. Supongamos que necesitamos ordenar una lista de frutas.\r\n\r\n    :::js\r\n    let frutas = ['sandias', 'peras', 'manzanas'] \r\n\r\npodemos usar la funci\u00f3n `sort()` que contiene el prototipo, simplemente haciendo esto:\r\n\r\n    :::javascript\r\n    > frutas.sort()\r\n    [ 'manzanas', 'peras', 'sandias' ]\r\n\r\nEs as\u00ed de simple. `sort()` es una funci\u00f3n de primer orden que toma una funci\u00f3n como argumento y que usa como criterio de ordenaci\u00f3n. En t\u00e9rminos simples, podemos describir la funci\u00f3n `sort()` de la siguiente forma:\r\n\r\n    :::javascript\r\n    arreglo.sort([funci\u00f3nCriterioOrdenaci\u00f3n])\r\n\r\nAqu\u00ed la funci\u00f3n `funci\u00f3nCriterioOrdenaci\u00f3n`  es opcional. Si no se proporciona, los elementos para ser ordenados se convierten en cadenas que se comparan por medio de su c\u00f3digo Unicode. No tenemos que preocuparnos por la conversi\u00f3n a Unicode en este momento, as\u00ed que la dejamos de lado. Lo que importa es que para poder ordenar los elementos usando nuestro propio criterio, necesitamos pasar nuestra funci\u00f3n `funci\u00f3nCriterioOrdenaci\u00f3n()`. En este sentido, podemos ver la flexibilidad que tienen las funciones de primer orden.\r\n\r\nPara poder crear nuestra funci\u00f3n `criterioOrdenacion` debemos cumplir con las caracter\u00edsticas especificadas aqu\u00ed: https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Array/sort\r\n\r\n    funci\u00f3n criterioOrdenacion(x, y) {\r\n      si (x es menor que y de acuerdo al criterio) {\r\n        regresar -1\r\n      }\r\n      si (x es mayor que y de acuerdo al criterio) {\r\n        regresar 1\r\n      }\r\n      // si x es igual a y\r\n      regresar 0\r\n    }\r\n\r\n\r\nPara facilitar la comprensi\u00f3n, pensemos en el siguiente ejemplo:\r\n```javascript\r\nconst personas = [\r\n  {nombre: \"aaaNombre\", paterno: \"cccPaterno\"},\r\n  {nombre: \"cccNombre\", paterno: \"aaaPaterno\"},\r\n  {nombre: \"bbbNombre\", paterno: \"bbbPaterno\"},\r\n]\r\n```\r\n\r\nNecesitamos ordenar `personas` por la clave `nombre`, por lo que vamos a pasarle a la funci\u00f3n `sort()` nuestra funci\u00f3n que sirva como criterio de ordenaci\u00f3n:\r\n\r\n```javascript\r\n> personas.sort((x, y) => {\r\n...   return (x.nombre < y.nombre) ? -1: (x.nombre > y.nombre) ? 1 : 0\r\n... })\r\n```\r\nlo que da como resultado:\r\n```javascript\r\n[ { nombre: 'aaaNombre', paterno: 'cccPaterno' },\r\n  { nombre: 'bbbNombre', paterno: 'bbbPaterno' },\r\n  { nombre: 'cccNombre', paterno: 'aaaPaterno' } ]\r\n```\r\n\r\nAhora si queremos usar como criterio de ordenaci\u00f3n el apellido paterno, entonces debemos hacer lo siguiente:\r\n```javascript\r\npersonas.sort((x, y) => {\r\n  return (x.paterno < y.paterno) ? -1: (x.paterno > y.paterno) ? 1 : 0\r\n})\r\n```\r\n\r\nque nos regresa el resultado esperado:\r\n\r\n```javascript\r\n[ { nombre: 'cccNombre', paterno: 'aaaPaterno' },\r\n  { nombre: 'bbbNombre', paterno: 'bbbPaterno' },\r\n  { nombre: 'aaaNombre', paterno: 'cccPaterno' } ]\r\n```\r\n\r\nVamos a regresar un momento a nuestro algoritmo de ordenaci\u00f3n:\r\n\r\n    funci\u00f3n criterioOrdenacion(x, y) {\r\n      si (x es menor que y de acuerdo al criterio) {\r\n        regresar -1\r\n      }\r\n      si (x es mayor que y de acuerdo al criterio) {\r\n        regresar 1\r\n      }\r\n      // si x es igual a y\r\n      regresar 0\r\n    }\r\n\r\nAhora que ya vimos como funciona, \u00bfpodemos mejorarlo? El lugar de escribir la funci\u00f3n `criterioOrdenacion` cada vez, \u00bfpodr\u00edamos abstraer la l\u00f3gica en una funci\u00f3n de primer orden? Como pudimos observar el c\u00f3digo para comparar el nombre o el apellido paterno es id\u00e9ntico, solo cambiaba la clave o propiedad. \r\n\r\nNuestra funci\u00f3n de primer orden no va tomar como argumento una funci\u00f3n, sino que _va a devolver una funci\u00f3n_. Vamos a llamar a esta funci\u00f3n `ordenarPor`, que permite ordenar un arreglo de objetos usando como criterio de ordenaci\u00f3n la propiedad que le pasemos como argumento.\r\n\r\n```javascript\r\nconst _ordenarPor = (propiedad) => {\r\n  return (a, b) => {\r\n    let resultado = (a[propiedad] < b[propiedad]) ? -1 : (a[propiedad] > b[propiedad]) ? 1 : 0\r\n    return resultado\r\n  }\r\n}\r\n```\r\n\r\nLa funci\u00f3n `ordenarPor` toma como argumento a `propiedad` y regresa una funci\u00f3n que toma dos argumentos:\r\n\r\n```js\r\n...\r\n  return (a, b) => { }\r\n...\r\n```\r\n\r\nEsta funci\u00f3n lo que hace es usar la l\u00f3gica que vimos en el algoritmo de `criterioOrdenacion`:\r\n\r\n```js\r\n    let resultado = (a[propiedad] < b[propiedad]) ? -1 : (a[propiedad] > b[propiedad]) ? 1 : 0\r\n```\r\n\r\nImaginemos que llamamos a la funci\u00f3n `ordenarPor` usando la propiedad `nombre`. Lo que pasar\u00eda es que `propiedad` ser\u00e1 reemplazado por `nombre` y se convertir\u00eda en:\r\n\r\n```js\r\n    let resultado = (a[nombre] < b[nombre]) ? -1 : (a[nombre] > b[nombre]) ? 1 : 0\r\n```\r\n\r\nY eso es lo que hicimos cuando escribimos _manualmente_ la funci\u00f3n. Veamos como funciona:\r\n\r\n```javascript\r\n> consola(personas.sort(ordenarPor('nombre')))\r\n\r\n> cerebro@0.1.0 start /Volumes/datos/Proyectos/cerebro\r\n> babel-node src/index.js\r\n\r\n[ { nombre: 'aaaNombre', paterno: 'cccPaterno' },\r\n  { nombre: 'bbbNombre', paterno: 'bbbPaterno' },\r\n  { nombre: 'cccNombre', paterno: 'aaaPaterno' } ]\r\n\r\nProcess finished with exit code 0\r\n```\r\n\r\nY para ordenar por apellido `paterno`\r\n\r\n```js\r\n> consola(personas.sort(ordenarPor('paterno')))\r\n> cerebro@0.1.0 start /Volumes/datos/Proyectos/cerebro\r\n> babel-node src/index.js\r\n\r\n[ { nombre: 'cccNombre', paterno: 'aaaPaterno' },\r\n  { nombre: 'bbbNombre', paterno: 'bbbPaterno' },\r\n  { nombre: 'aaaNombre', paterno: 'cccPaterno' } ]\r\n\r\nProcess finished with exit code 0\r\n```\r\n\r\nEn este ejemplo usamos varias funciones de primer orden: `consola` para mostrar el resultado, `sort()` una funci\u00f3n interna para ordenar y `ordenarPor` para definir el criterio de ordenaci\u00f3n. Y de eso se tratan las funciones de alto nivel, de abstracci\u00f3n.\r\n\r\nAntes de terminar, debemos notar que la funci\u00f3n `ordenarPor` es una funci\u00f3n que se pasa como par\u00e1metro a la funci\u00f3n `sort()`, pero lleva el argumento `propiedad` que le pasamos. \u00bfC\u00f3mo es posible? Gracias a los _cierres_ o __*closures*__ que empezaremos a ver en el siguiente art\u00edculo.", "extend": "", "pub_date": "2017-05-10T00:29:25Z", "summary_html": "", "body_html": "<p>Creo que es muy importante comprender correctamente qu\u00e9 son y el papel de las funciones de primer orden en la programaci\u00f3n funcional. Vamos a seguir revisando este paradigma de programaci\u00f3n con funciones cada vez m\u00e1s concretas y con aplicaci\u00f3n en el d\u00eda a d\u00eda.</p>\n<h3 id=\"la-funcion-todos\">La funci\u00f3n <code>todos</code></h3>\n<p>Es frecuente que, cuando programamos, tengamos que verificar si un arreglo contiene n\u00fameros, un objeto o alguna otra cosa (pensemos en los <em>requisitos</em> de las metas). Lo que har\u00edamos ser\u00eda un ciclo <code>for</code> para resolver este problema. Pero tambi\u00e9n podemos hacer una abstracci\u00f3n usando nuestra funci\u00f3n <code>todos</code>. La funci\u00f3n <code>todos</code> recibe dos argumentos: una arreglo y una funci\u00f3n. Lo que hace es verificar si todos los elementos del arreglo se eval\u00faan como <code>true</code> por la funci\u00f3n que le pasamos como argumento. La implementaci\u00f3n se ve as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_todos</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">arr</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">resultado</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">arr</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"nx\">resultado</span> <span class=\"o\">=</span> <span class=\"nx\">resultado</span> <span class=\"o\">&amp;&amp;</span> <span class=\"p\">(</span><span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"nx\">arr</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]))</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Simplemente es un ciclo que recorre todo el arreglo y llama a la funci\u00f3n <code>fn</code> con cada valor. Ahora bien, la funci\u00f3n <code>fn</code> <strong>debe</strong> regresar un valor <em>Booleano</em>, porque con este hacemos una prueba l\u00f3gica <code>&amp;&amp;</code> para asegurar que el contenido del arreglo obedece al criterio dado por <code>fn</code>.</p>\n<p>Para verificar el funcionamiento de nuestra funci\u00f3n, vamos a pasarle un arreglo de valores <code>NaN</code> y la funci\u00f3n <code>isNaN()</code> como argumento para que verifique si el n\u00famero dado es <code>NaN</code> o no.</p>\n<div class=\"codehilite\"><pre><span></span>consola<span class=\"o\">(</span>todos<span class=\"o\">([</span>NaN, NaN, NaN<span class=\"o\">]</span>, isNaN<span class=\"o\">))</span>\n&gt; <span class=\"nb\">true</span>\nconsola<span class=\"o\">(</span>todos<span class=\"o\">([</span>NaN, NaN, NaN, <span class=\"m\">4</span><span class=\"o\">]</span>, isNaN<span class=\"o\">))</span>\n&gt; <span class=\"nb\">false</span>\n</pre></div>\n\n\n<p>La funci\u00f3n <code>todos</code> es una t\u00edpica funci\u00f3n de primer orden que ademas de ser f\u00e1cil de implementar es realmente \u00fatil. Antes de pasar a la siguiente, vamos a <em>refactorizar</em> nuestra funci\u00f3n para aprovechar el nuevo ciclo <code>for..of</code> de la implementaci\u00f3n ES6 para recorrer los elementos del arreglo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_todos</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">arr</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">resultado</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n  <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"nx\">valor</span> <span class=\"k\">of</span> <span class=\"nx\">arr</span><span class=\"p\">)</span>\n    <span class=\"nx\">resultado</span> <span class=\"o\">=</span> <span class=\"nx\">resultado</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"nx\">valor</span><span class=\"p\">)</span>\n  <span class=\"k\">return</span> <span class=\"nx\">resultado</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<h3 id=\"funcion-algunos\">Funci\u00f3n <code>algunos</code></h3>\n<p>Muy similar a la funci\u00f3n <code>todos</code>, tenemos esta funci\u00f3n llamada <code>algunos</code>, aunque funciona de forma un poco diferente porque esta devuelve <code>true</code> solo si la funci\u00f3n regresa <code>true</code> para <em>algunos</em> de los elementos del arreglo. Para poder implementar esta funci\u00f3n usaremos <code>||</code> en lugar de <code>&amp;&amp;</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_algunos</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">arr</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">resultado</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"nx\">valor</span> <span class=\"k\">of</span> <span class=\"nx\">arr</span><span class=\"p\">)</span>\n    <span class=\"nx\">resultado</span> <span class=\"o\">=</span> <span class=\"nx\">resultado</span> <span class=\"o\">||</span> <span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"nx\">valor</span><span class=\"p\">)</span>\n  <span class=\"k\">return</span> <span class=\"nx\">resultado</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<blockquote>\n<p>Antes de continuar, ya s\u00e9 que estas implementaciones son muy ineficientes. <code>todos</code> debe recorrer el arreglo hasta el primer elemento que no cumpla con el criterio y <code>algunos</code> recorre el arreglo hasta la primera coincidencia. Para arreglos muy grandes ser\u00eda muy ineficiente. Pero como el objetivo es entender los conceptos de las funciones de primer orden, le daremos preferencia a la parte did\u00e1ctica.</p>\n</blockquote>\n<p>Vamos a ver como funciona nuestra funci\u00f3n <code>algunos</code>.</p>\n<div class=\"codehilite\"><pre><span></span>&gt; consola(algunos([NaN, NaN, 4], isNaN))\ntrue\n&gt; consola(algunos([3, 4, 4], isNaN))\nfalse\n</pre></div>\n\n\n<p>Todav\u00eda nos falta un ejemplo m\u00e1s complejo que involucra el concepto de <strong>abstracci\u00f3n</strong>, pero seguiremos en el siguiente art\u00edculo.</p>\n<h3 id=\"la-funcion-ordenarpor\">La funci\u00f3n <code>ordenarPor</code></h3>\n<p>En ECMAScript 6 existe una funci\u00f3n interna <code>sort()</code> en el prototipo de Array que se usa de la siguiente manera. Supongamos que necesitamos ordenar una lista de frutas.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">frutas</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;sandias&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;peras&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;manzanas&#39;</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>podemos usar la funci\u00f3n <code>sort()</code> que contiene el prototipo, simplemente haciendo esto:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;</span> <span class=\"nx\">frutas</span><span class=\"p\">.</span><span class=\"nx\">sort</span><span class=\"p\">()</span>\n<span class=\"p\">[</span> <span class=\"s1\">&#39;manzanas&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;peras&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sandias&#39;</span> <span class=\"p\">]</span>\n</pre></div>\n\n\n<p>Es as\u00ed de simple. <code>sort()</code> es una funci\u00f3n de primer orden que toma una funci\u00f3n como argumento y que usa como criterio de ordenaci\u00f3n. En t\u00e9rminos simples, podemos describir la funci\u00f3n <code>sort()</code> de la siguiente forma:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">arreglo</span><span class=\"p\">.</span><span class=\"nx\">sort</span><span class=\"p\">([</span><span class=\"nx\">funci\u00f3nCriterioOrdenaci\u00f3n</span><span class=\"p\">])</span>\n</pre></div>\n\n\n<p>Aqu\u00ed la funci\u00f3n <code>funci\u00f3nCriterioOrdenaci\u00f3n</code>  es opcional. Si no se proporciona, los elementos para ser ordenados se convierten en cadenas que se comparan por medio de su c\u00f3digo Unicode. No tenemos que preocuparnos por la conversi\u00f3n a Unicode en este momento, as\u00ed que la dejamos de lado. Lo que importa es que para poder ordenar los elementos usando nuestro propio criterio, necesitamos pasar nuestra funci\u00f3n <code>funci\u00f3nCriterioOrdenaci\u00f3n()</code>. En este sentido, podemos ver la flexibilidad que tienen las funciones de primer orden.</p>\n<p>Para poder crear nuestra funci\u00f3n <code>criterioOrdenacion</code> debemos cumplir con las caracter\u00edsticas especificadas aqu\u00ed: https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Array/sort</p>\n<div class=\"codehilite\"><pre><span></span>funci\u00f3n criterioOrdenacion(x, y) {\n  si (x es menor que y de acuerdo al criterio) {\n    regresar -1\n  }\n  si (x es mayor que y de acuerdo al criterio) {\n    regresar 1\n  }\n  // si x es igual a y\n  regresar 0\n}\n</pre></div>\n\n\n<p>Para facilitar la comprensi\u00f3n, pensemos en el siguiente ejemplo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">personas</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span><span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s2\">&quot;aaaNombre&quot;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s2\">&quot;cccPaterno&quot;</span><span class=\"p\">},</span>\n  <span class=\"p\">{</span><span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s2\">&quot;cccNombre&quot;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s2\">&quot;aaaPaterno&quot;</span><span class=\"p\">},</span>\n  <span class=\"p\">{</span><span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s2\">&quot;bbbNombre&quot;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s2\">&quot;bbbPaterno&quot;</span><span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</pre></div>\n\n\n<p>Necesitamos ordenar <code>personas</code> por la clave <code>nombre</code>, por lo que vamos a pasarle a la funci\u00f3n <code>sort()</code> nuestra funci\u00f3n que sirva como criterio de ordenaci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;</span> <span class=\"nx\">personas</span><span class=\"p\">.</span><span class=\"nx\">sort</span><span class=\"p\">((</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"nx\">y</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n<span class=\"p\">...</span>   <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">.</span><span class=\"nx\">nombre</span> <span class=\"o\">&lt;</span> <span class=\"nx\">y</span><span class=\"p\">.</span><span class=\"nx\">nombre</span><span class=\"p\">)</span> <span class=\"o\">?</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">.</span><span class=\"nx\">nombre</span> <span class=\"o\">&gt;</span> <span class=\"nx\">y</span><span class=\"p\">.</span><span class=\"nx\">nombre</span><span class=\"p\">)</span> <span class=\"o\">?</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span>\n<span class=\"p\">...</span> <span class=\"p\">})</span>\n</pre></div>\n\n\n<p>lo que da como resultado:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">[</span> <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;aaaNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;cccPaterno&#39;</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;bbbNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;bbbPaterno&#39;</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;cccNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;aaaPaterno&#39;</span> <span class=\"p\">}</span> <span class=\"p\">]</span>\n</pre></div>\n\n\n<p>Ahora si queremos usar como criterio de ordenaci\u00f3n el apellido paterno, entonces debemos hacer lo siguiente:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">personas</span><span class=\"p\">.</span><span class=\"nx\">sort</span><span class=\"p\">((</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"nx\">y</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">.</span><span class=\"nx\">paterno</span> <span class=\"o\">&lt;</span> <span class=\"nx\">y</span><span class=\"p\">.</span><span class=\"nx\">paterno</span><span class=\"p\">)</span> <span class=\"o\">?</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">.</span><span class=\"nx\">paterno</span> <span class=\"o\">&gt;</span> <span class=\"nx\">y</span><span class=\"p\">.</span><span class=\"nx\">paterno</span><span class=\"p\">)</span> <span class=\"o\">?</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>que nos regresa el resultado esperado:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">[</span> <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;cccNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;aaaPaterno&#39;</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;bbbNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;bbbPaterno&#39;</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;aaaNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;cccPaterno&#39;</span> <span class=\"p\">}</span> <span class=\"p\">]</span>\n</pre></div>\n\n\n<p>Vamos a regresar un momento a nuestro algoritmo de ordenaci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span>funci\u00f3n criterioOrdenacion(x, y) {\n  si (x es menor que y de acuerdo al criterio) {\n    regresar -1\n  }\n  si (x es mayor que y de acuerdo al criterio) {\n    regresar 1\n  }\n  // si x es igual a y\n  regresar 0\n}\n</pre></div>\n\n\n<p>Ahora que ya vimos como funciona, \u00bfpodemos mejorarlo? El lugar de escribir la funci\u00f3n <code>criterioOrdenacion</code> cada vez, \u00bfpodr\u00edamos abstraer la l\u00f3gica en una funci\u00f3n de primer orden? Como pudimos observar el c\u00f3digo para comparar el nombre o el apellido paterno es id\u00e9ntico, solo cambiaba la clave o propiedad. </p>\n<p>Nuestra funci\u00f3n de primer orden no va tomar como argumento una funci\u00f3n, sino que <em>va a devolver una funci\u00f3n</em>. Vamos a llamar a esta funci\u00f3n <code>ordenarPor</code>, que permite ordenar un arreglo de objetos usando como criterio de ordenaci\u00f3n la propiedad que le pasemos como argumento.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_ordenarPor</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">propiedad</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">resultado</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">])</span> <span class=\"o\">?</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">])</span> <span class=\"o\">?</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span>\n    <span class=\"k\">return</span> <span class=\"nx\">resultado</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>La funci\u00f3n <code>ordenarPor</code> toma como argumento a <code>propiedad</code> y regresa una funci\u00f3n que toma dos argumentos:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">...</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span> <span class=\"p\">}</span>\n<span class=\"p\">...</span>\n</pre></div>\n\n\n<p>Esta funci\u00f3n lo que hace es usar la l\u00f3gica que vimos en el algoritmo de <code>criterioOrdenacion</code>:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"kd\">let</span> <span class=\"nx\">resultado</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">])</span> <span class=\"o\">?</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">])</span> <span class=\"o\">?</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span>\n</pre></div>\n\n\n<p>Imaginemos que llamamos a la funci\u00f3n <code>ordenarPor</code> usando la propiedad <code>nombre</code>. Lo que pasar\u00eda es que <code>propiedad</code> ser\u00e1 reemplazado por <code>nombre</code> y se convertir\u00eda en:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"kd\">let</span> <span class=\"nx\">resultado</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">[</span><span class=\"nx\">nombre</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">nombre</span><span class=\"p\">])</span> <span class=\"o\">?</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">[</span><span class=\"nx\">nombre</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">nombre</span><span class=\"p\">])</span> <span class=\"o\">?</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span>\n</pre></div>\n\n\n<p>Y eso es lo que hicimos cuando escribimos <em>manualmente</em> la funci\u00f3n. Veamos como funciona:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;</span> <span class=\"nx\">consola</span><span class=\"p\">(</span><span class=\"nx\">personas</span><span class=\"p\">.</span><span class=\"nx\">sort</span><span class=\"p\">(</span><span class=\"nx\">ordenarPor</span><span class=\"p\">(</span><span class=\"s1\">&#39;nombre&#39;</span><span class=\"p\">)))</span>\n\n<span class=\"o\">&gt;</span> <span class=\"nx\">cerebro</span><span class=\"err\">@</span><span class=\"mf\">0.1.0</span> <span class=\"nx\">start</span> <span class=\"o\">/</span><span class=\"nx\">Volumes</span><span class=\"o\">/</span><span class=\"nx\">datos</span><span class=\"o\">/</span><span class=\"nx\">Proyectos</span><span class=\"o\">/</span><span class=\"nx\">cerebro</span>\n<span class=\"o\">&gt;</span> <span class=\"nx\">babel</span><span class=\"o\">-</span><span class=\"nx\">node</span> <span class=\"nx\">src</span><span class=\"o\">/</span><span class=\"nx\">index</span><span class=\"p\">.</span><span class=\"nx\">js</span>\n\n<span class=\"p\">[</span> <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;aaaNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;cccPaterno&#39;</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;bbbNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;bbbPaterno&#39;</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;cccNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;aaaPaterno&#39;</span> <span class=\"p\">}</span> <span class=\"p\">]</span>\n\n<span class=\"nx\">Process</span> <span class=\"nx\">finished</span> <span class=\"kd\">with</span> <span class=\"nx\">exit</span> <span class=\"nx\">code</span> <span class=\"mi\">0</span>\n</pre></div>\n\n\n<p>Y para ordenar por apellido <code>paterno</code></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;</span> <span class=\"nx\">consola</span><span class=\"p\">(</span><span class=\"nx\">personas</span><span class=\"p\">.</span><span class=\"nx\">sort</span><span class=\"p\">(</span><span class=\"nx\">ordenarPor</span><span class=\"p\">(</span><span class=\"s1\">&#39;paterno&#39;</span><span class=\"p\">)))</span>\n<span class=\"o\">&gt;</span> <span class=\"nx\">cerebro</span><span class=\"err\">@</span><span class=\"mf\">0.1.0</span> <span class=\"nx\">start</span> <span class=\"o\">/</span><span class=\"nx\">Volumes</span><span class=\"o\">/</span><span class=\"nx\">datos</span><span class=\"o\">/</span><span class=\"nx\">Proyectos</span><span class=\"o\">/</span><span class=\"nx\">cerebro</span>\n<span class=\"o\">&gt;</span> <span class=\"nx\">babel</span><span class=\"o\">-</span><span class=\"nx\">node</span> <span class=\"nx\">src</span><span class=\"o\">/</span><span class=\"nx\">index</span><span class=\"p\">.</span><span class=\"nx\">js</span>\n\n<span class=\"p\">[</span> <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;cccNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;aaaPaterno&#39;</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;bbbNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;bbbPaterno&#39;</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"nx\">nombre</span><span class=\"o\">:</span> <span class=\"s1\">&#39;aaaNombre&#39;</span><span class=\"p\">,</span> <span class=\"nx\">paterno</span><span class=\"o\">:</span> <span class=\"s1\">&#39;cccPaterno&#39;</span> <span class=\"p\">}</span> <span class=\"p\">]</span>\n\n<span class=\"nx\">Process</span> <span class=\"nx\">finished</span> <span class=\"kd\">with</span> <span class=\"nx\">exit</span> <span class=\"nx\">code</span> <span class=\"mi\">0</span>\n</pre></div>\n\n\n<p>En este ejemplo usamos varias funciones de primer orden: <code>consola</code> para mostrar el resultado, <code>sort()</code> una funci\u00f3n interna para ordenar y <code>ordenarPor</code> para definir el criterio de ordenaci\u00f3n. Y de eso se tratan las funciones de alto nivel, de abstracci\u00f3n.</p>\n<p>Antes de terminar, debemos notar que la funci\u00f3n <code>ordenarPor</code> es una funci\u00f3n que se pasa como par\u00e1metro a la funci\u00f3n <code>sort()</code>, pero lleva el argumento <code>propiedad</code> que le pasamos. \u00bfC\u00f3mo es posible? Gracias a los <em>cierres</em> o <strong><em>closures</em></strong> que empezaremos a ver en el siguiente art\u00edculo.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "funciones-de-primer-orden-ii", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 123, "fields": {"idx": "39fe5625-e0fd-4e22-b392-0d95e51aa988", "creado": "2017-07-29T05:51:52.299Z", "modificado": "2017-07-29T05:51:52.299Z", "title": "Que son las closures", "summary": "", "body": "Title: Que son las closures    \r\nDate: 2017-05-17 19:37:22\r\nCategory: desarrollo\r\nTags: javascript, patterns, es6\r\nSummary:\r\n\r\nLa verdad no encontr\u00e9 una buena traducci\u00f3n de __*closure*__. Literalmente, significa _\"cierre\"_, pero no tiene mucho sentido en el contexto de la programaci\u00f3n funcional. Es uno de esos conceptos que para comprenderlo hay que verlo o hacerlo.\r\n\r\nPara explicarlo de forma simple, una _closure_ es una funci\u00f3n interna, es decir, __una funci\u00f3n *dentro* de otra funci\u00f3n__. Algo asi:\r\n\r\n    :::js\r\n    function externa() {\r\n      function interna() {\r\n      }  \r\n    }\r\n\r\nLa funci\u00f3n `interna()` es una **closure**. Y la raz\u00f3n por la que las *closures* son tan importantes es porque tiene acceso al alcance **en cadena** (o al alcance en niveles). Me explico:\r\n\r\nT\u00e9cnicamente, una _closure_ tiene tres alcances:\r\n\r\n1. El alcance de las variables declaradas __dentro__ de la definici\u00f3n de la funci\u00f3n\r\n1. El alcance de las variables **globales**\r\n3. El alcance de las variables en __la funci\u00f3n externa__\r\n\r\nVamos a revisar estos tres aspectos de forma independiente usando un ejemplo. Para empezar, tenemos el siguiente ejemplo:\r\n\r\n    :::javascript\r\n    function externa(){\r\n      function interna(){\r\n        let a = 5\r\n        console.log(a)\r\n      }\r\n      interna()    // llamamos a la funci\u00f3n interna\r\n    }\r\n\r\n\r\nque imprime en la consola el valor de `a` cuando se llama a `interna()`. Esto se debe al punto uno: una funci\u00f3n _closure_ puede acceder a las variables declaradas en su propia definici\u00f3n.\r\n\r\nAhora vamos a modificar un poco el c\u00f3digo anterior...\r\n\r\n    :::javascript\r\n    let global = \"global\"\r\n    function externa(){\r\n      function interna(){\r\n        let a = 5\r\n        console.log(global)\r\n      }\r\n      interna()    // llamamos a la funci\u00f3n interna\r\n    }\r\n\r\n\r\nAhora, cuando se ejecute la funci\u00f3n `interna()` se imprimir\u00e1 el valor de `global` (que tambi\u00e9n es `global`). Esto es porque las _closures_ pueden acceder a las variables globales (punto 2).\r\n\r\nEl punto 3, es muy interesante y lo vamos a ejemplificar con el siguiente fragmento.\r\n\r\n    :::javascript\r\n    let global = \"global\"\r\n    function externa(){\r\n      let externa = \"externa\"\r\n      function interna(){\r\n        let a = 5\r\n        console.log(externa)\r\n      }\r\n      interna()    // llamamos a la funci\u00f3n interna\r\n    }\r\n\r\nahora la variable que se imprime es `externa`, como corresponde. Puede parecer muy simple, pero esta es una de las caracter\u00edsticas m\u00e1s importantes de las `closures`.\r\n\r\n!!! notice \"Nota\"\r\n    Las _closures_ tienen acceso a las variables que se pasan como par\u00e1metros a la funci\u00f3n externa. En el ejemplo desde la funci\u00f3n `interna()` se tiene acceso a las variables que recibe `externa()` como par\u00e1metros.\r\n\r\n### El contexto y las closures\r\nLas _closures_ tienen otra caracter\u00edstica importante: _recuerdan su contexto_. Veamos este ejemplo:\r\n\r\n    :::js\r\n    let fn = (arg) => {\r\n      let externa = \"Visible\"\r\n      let fnInterna = () => {\r\n        console.log(externa)\r\n        console.log(arg)\r\n      }\r\n      return fnInterna\r\n    }\r\n\r\nEl c\u00f3digo es, relativamente, simple. La funci\u00f3n `fnInterna()` es una funci\u00f3n _closure_ de `fn()` y `fn` regresa a `fnInterna` cuando se llama. Hasta aqu\u00ed, nada nuevo. Pero veamos como funciona.\r\n\r\n    :::js\r\n    > let closureFn = fn(5)\r\n    > closureFn()\r\n    Visible\r\n    5\r\n\r\nPara entender mejor como es que al llamar a `closureFn()` se imprime `Visible` y `5` en la pantalla vamos ver que sucede tras bambalinas:\r\n\r\n1. Cuando llamamos el c\u00f3digo siguiente:\r\n\r\n        :::javascript\r\n        let closureFn = fn(5)\r\n\r\n    llamamos a la funci\u00f3n `fn` con el argumento `5`. Tal como est\u00e1 definida nuestra funci\u00f3n, regresar\u00e1 `fnInterna()`.\r\n\r\n1. En este momento ocurre lo interesante. Cuando se regresa la funci\u00f3n `fnInterna`, la m\u00e1quina virtual de JavaScript ve una _closure_ y establece su __alcance__ de forma adecuada. Y comovimos anteriormente, las _closures_ tienen acceso a los tres niveles de alcance. Estos tres niveles se __*encadenan*__ (los valores de `arg` y `externa` se establecer\u00e1n en el alcance del nivel de `fnInterna`) cuando se regresa `fnInterna`. La funci\u00f3n regresa se almacena en `closureFn`que recuerda a `arg` y `externa` porque est\u00e1n en el alcance encadenado.\r\n\r\n1. Cuando finalmente llamamos a `closureFn` con\r\n\r\n        :::javascript\r\n        closureFn()\r\n\r\n    imprime\r\n\r\n        :::javascript\r\n        Visible\r\n        5\r\n\r\n Como podemos observar por la salida, `closureFn` recuerda su contexto (es decir el encadenamiento de los alcances, por ejemplo `externa` y `arg`) cuando es creada en el paso dos, por lo que el `console.log` funciona apropiadamente.\r\n\r\n Si se preguntan cu\u00e1ndo usar este tipo de funciones, la verdad es que ya lo hicimos en nuestra funci\u00f3n `ordenarPor`.\r\n\r\n\r\n### Revisando la funci\u00f3n `ordenarPor`\r\n\r\nVamos a revisar r\u00e1pidamente la funci\u00f3n `ordenarPor` que definimos en un [art\u00edculo anterior](/desarrollo/funciones-de-primer-orden-ii.html#la-funcion-ordenarpor).\r\n\r\n\r\n    :::javascript\r\n    const _ordenarPor = (propiedad) => {\r\n      return (a, b) => {\r\n        let resultado = (a[propiedad] < b[propiedad]) ? -1 : (a[propiedad] > b[propiedad]) ? 1 : 0\r\n        return resultado\r\n      }\r\n    }\r\n\r\nCuando llamamos a la funci\u00f3n de esta forma:\r\n\r\n    :::javascript\r\n    ordenarPor(\"nombre\")\r\n\r\nesto es lo que pasa\r\n\r\n1. `ordenarPor` regresa una nueva funci\u00f3n que toma dos argumentos como estos:\r\n\r\n        :::javascript\r\n        (a, b) => { /* implementaci\u00f3n */ }\r\n\r\n1. Ahora que sabemos un poco mas acerca de las _closures_, estamos conscientes que la funci\u00f3n devuelta tiene acceso a `propiedad` de la funci\u00f3n `ordenarPor`. Ya que la funci\u00f3n solo se devuelve cuando se llama a `ordenarPor`, el argumento `propiedad` se resuelve con un valor, por lo tanto, la funci\u00f3n devuelta traer\u00e1 el _contexto_ junto con ella.\r\n\r\n        :::javascript\r\n        // el alcance se anexa a las closure\r\n        propiedad = \"valorDevuelto\"\r\n        (a, b) => { /* implementaci\u00f3n */ }\r\n\r\n\r\n1. Ahora que la funci\u00f3n devuelta lleva el valor de propiedad en su contexto, usar\u00e1 el valor regresado donde sea apropiado y cuando sea necesario.\r\n\r\nLas _closures_ son una caracter\u00edstica muy usada en JavaScript y conforme avancemos en el estudio del lenguaje y la programaci\u00f3n funcional veremos m\u00e1s ejemplos que nos ayuden a dominar este concepto.", "extend": "", "pub_date": "2017-05-18T00:37:22Z", "summary_html": "", "body_html": "<p>La verdad no encontr\u00e9 una buena traducci\u00f3n de <strong><em>closure</em></strong>. Literalmente, significa <em>&ldquo;cierre&rdquo;</em>, pero no tiene mucho sentido en el contexto de la programaci\u00f3n funcional. Es uno de esos conceptos que para comprenderlo hay que verlo o hacerlo.</p>\n<p>Para explicarlo de forma simple, una <em>closure</em> es una funci\u00f3n interna, es decir, <strong>una funci\u00f3n <em>dentro</em> de otra funci\u00f3n</strong>. Algo asi:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">function</span> <span class=\"nx\">externa</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">function</span> <span class=\"nx\">interna</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"p\">}</span>  \n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>La funci\u00f3n <code>interna()</code> es una <strong>closure</strong>. Y la raz\u00f3n por la que las <em>closures</em> son tan importantes es porque tiene acceso al alcance <strong>en cadena</strong> (o al alcance en niveles). Me explico:</p>\n<p>T\u00e9cnicamente, una <em>closure</em> tiene tres alcances:</p>\n<ol>\n<li>El alcance de las variables declaradas <strong>dentro</strong> de la definici\u00f3n de la funci\u00f3n</li>\n<li>El alcance de las variables <strong>globales</strong></li>\n<li>El alcance de las variables en <strong>la funci\u00f3n externa</strong></li>\n</ol>\n<p>Vamos a revisar estos tres aspectos de forma independiente usando un ejemplo. Para empezar, tenemos el siguiente ejemplo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">function</span> <span class=\"nx\">externa</span><span class=\"p\">(){</span>\n  <span class=\"kd\">function</span> <span class=\"nx\">interna</span><span class=\"p\">(){</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">a</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n  <span class=\"nx\">interna</span><span class=\"p\">()</span>    <span class=\"c1\">// llamamos a la funci\u00f3n interna</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>que imprime en la consola el valor de <code>a</code> cuando se llama a <code>interna()</code>. Esto se debe al punto uno: una funci\u00f3n <em>closure</em> puede acceder a las variables declaradas en su propia definici\u00f3n.</p>\n<p>Ahora vamos a modificar un poco el c\u00f3digo anterior&hellip;</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">global</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;global&quot;</span>\n<span class=\"kd\">function</span> <span class=\"nx\">externa</span><span class=\"p\">(){</span>\n  <span class=\"kd\">function</span> <span class=\"nx\">interna</span><span class=\"p\">(){</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">a</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">global</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n  <span class=\"nx\">interna</span><span class=\"p\">()</span>    <span class=\"c1\">// llamamos a la funci\u00f3n interna</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Ahora, cuando se ejecute la funci\u00f3n <code>interna()</code> se imprimir\u00e1 el valor de <code>global</code> (que tambi\u00e9n es <code>global</code>). Esto es porque las <em>closures</em> pueden acceder a las variables globales (punto 2).</p>\n<p>El punto 3, es muy interesante y lo vamos a ejemplificar con el siguiente fragmento.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">global</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;global&quot;</span>\n<span class=\"kd\">function</span> <span class=\"nx\">externa</span><span class=\"p\">(){</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">externa</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;externa&quot;</span>\n  <span class=\"kd\">function</span> <span class=\"nx\">interna</span><span class=\"p\">(){</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">a</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">externa</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n  <span class=\"nx\">interna</span><span class=\"p\">()</span>    <span class=\"c1\">// llamamos a la funci\u00f3n interna</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>ahora la variable que se imprime es <code>externa</code>, como corresponde. Puede parecer muy simple, pero esta es una de las caracter\u00edsticas m\u00e1s importantes de las <code>closures</code>.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Nota</p>\n<p>Las <em>closures</em> tienen acceso a las variables que se pasan como par\u00e1metros a la funci\u00f3n externa. En el ejemplo desde la funci\u00f3n <code>interna()</code> se tiene acceso a las variables que recibe <code>externa()</code> como par\u00e1metros.</p>\n</div>\n<h3 id=\"el-contexto-y-las-closures\">El contexto y las closures</h3>\n<p>Las <em>closures</em> tienen otra caracter\u00edstica importante: <em>recuerdan su contexto</em>. Veamos este ejemplo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">fn</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">arg</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">externa</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Visible&quot;</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">fnInterna</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">externa</span><span class=\"p\">)</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">arg</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"nx\">fnInterna</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>El c\u00f3digo es, relativamente, simple. La funci\u00f3n <code>fnInterna()</code> es una funci\u00f3n <em>closure</em> de <code>fn()</code> y <code>fn</code> regresa a <code>fnInterna</code> cuando se llama. Hasta aqu\u00ed, nada nuevo. Pero veamos como funciona.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;</span> <span class=\"kd\">let</span> <span class=\"nx\">closureFn</span> <span class=\"o\">=</span> <span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"nx\">closureFn</span><span class=\"p\">()</span>\n<span class=\"nx\">Visible</span>\n<span class=\"mi\">5</span>\n</pre></div>\n\n\n<p>Para entender mejor como es que al llamar a <code>closureFn()</code> se imprime <code>Visible</code> y <code>5</code> en la pantalla vamos ver que sucede tras bambalinas:</p>\n<ol>\n<li>\n<p>Cuando llamamos el c\u00f3digo siguiente:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">closureFn</span> <span class=\"o\">=</span> <span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>llamamos a la funci\u00f3n <code>fn</code> con el argumento <code>5</code>. Tal como est\u00e1 definida nuestra funci\u00f3n, regresar\u00e1 <code>fnInterna()</code>.</p>\n</li>\n<li>\n<p>En este momento ocurre lo interesante. Cuando se regresa la funci\u00f3n <code>fnInterna</code>, la m\u00e1quina virtual de JavaScript ve una <em>closure</em> y establece su <strong>alcance</strong> de forma adecuada. Y comovimos anteriormente, las <em>closures</em> tienen acceso a los tres niveles de alcance. Estos tres niveles se <strong><em>encadenan</em></strong> (los valores de <code>arg</code> y <code>externa</code> se establecer\u00e1n en el alcance del nivel de <code>fnInterna</code>) cuando se regresa <code>fnInterna</code>. La funci\u00f3n regresa se almacena en <code>closureFn</code>que recuerda a <code>arg</code> y <code>externa</code> porque est\u00e1n en el alcance encadenado.</p>\n</li>\n<li>\n<p>Cuando finalmente llamamos a <code>closureFn</code> con</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">closureFn</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>imprime</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">Visible</span>\n<span class=\"mi\">5</span>\n</pre></div>\n\n\n</li>\n</ol>\n<p>Como podemos observar por la salida, <code>closureFn</code> recuerda su contexto (es decir el encadenamiento de los alcances, por ejemplo <code>externa</code> y <code>arg</code>) cuando es creada en el paso dos, por lo que el <code>console.log</code> funciona apropiadamente.</p>\n<p>Si se preguntan cu\u00e1ndo usar este tipo de funciones, la verdad es que ya lo hicimos en nuestra funci\u00f3n <code>ordenarPor</code>.</p>\n<h3 id=\"revisando-la-funcion-ordenarpor\">Revisando la funci\u00f3n <code>ordenarPor</code></h3>\n<p>Vamos a revisar r\u00e1pidamente la funci\u00f3n <code>ordenarPor</code> que definimos en un <a href=\"/desarrollo/funciones-de-primer-orden-ii.html#la-funcion-ordenarpor\">art\u00edculo anterior</a>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_ordenarPor</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">propiedad</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">resultado</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">])</span> <span class=\"o\">?</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">propiedad</span><span class=\"p\">])</span> <span class=\"o\">?</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span>\n    <span class=\"k\">return</span> <span class=\"nx\">resultado</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Cuando llamamos a la funci\u00f3n de esta forma:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">ordenarPor</span><span class=\"p\">(</span><span class=\"s2\">&quot;nombre&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>esto es lo que pasa</p>\n<ol>\n<li>\n<p><code>ordenarPor</code> regresa una nueva funci\u00f3n que toma dos argumentos como estos:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span> <span class=\"cm\">/* implementaci\u00f3n */</span> <span class=\"p\">}</span>\n</pre></div>\n\n\n</li>\n<li>\n<p>Ahora que sabemos un poco mas acerca de las <em>closures</em>, estamos conscientes que la funci\u00f3n devuelta tiene acceso a <code>propiedad</code> de la funci\u00f3n <code>ordenarPor</code>. Ya que la funci\u00f3n solo se devuelve cuando se llama a <code>ordenarPor</code>, el argumento <code>propiedad</code> se resuelve con un valor, por lo tanto, la funci\u00f3n devuelta traer\u00e1 el <em>contexto</em> junto con ella.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// el alcance se anexa a las closure</span>\n<span class=\"nx\">propiedad</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;valorDevuelto&quot;</span>\n<span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span> <span class=\"cm\">/* implementaci\u00f3n */</span> <span class=\"p\">}</span>\n</pre></div>\n\n\n</li>\n<li>\n<p>Ahora que la funci\u00f3n devuelta lleva el valor de propiedad en su contexto, usar\u00e1 el valor regresado donde sea apropiado y cuando sea necesario.</p>\n</li>\n</ol>\n<p>Las <em>closures</em> son una caracter\u00edstica muy usada en JavaScript y conforme avancemos en el estudio del lenguaje y la programaci\u00f3n funcional veremos m\u00e1s ejemplos que nos ayuden a dominar este concepto.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "que-son-las-closures", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 124, "fields": {"idx": "e55dfdb7-a16d-4c7a-a230-4959429c9afc", "creado": "2017-07-29T05:53:06.830Z", "modificado": "2017-07-29T05:57:46.336Z", "title": "Tutorial de Express.js", "summary": "En este art\u00edculo encontrar\u00e1s un completo tutorial para aprender a usar Express.js el framework para aplicaciones web de JavaScript m\u00e1s popular que existe. Y por supuesto, las mejores pr\u00e1cticas para construir aplicaciones web robustas y seguras.", "body": "Title: Tutorial de Express.js    \r\nDate: 2017-05-21 10:16:28\r\nCategory: desarrollo\r\nTags: express, es6, node \r\nSummary: En este art\u00edculo encontrar\u00e1s un completo tutorial para aprender a usar Express.js el framework para aplicaciones web de JavaScript m\u00e1s popular que existe. Y por supuesto, las mejores pr\u00e1cticas para construir aplicaciones web robustas y seguras.\r\n\r\n!!! error \"Motivaci\u00f3n\"\r\n    Despu\u00e9s de interntar con varias soluciones replicar el cuadro de mando integral usando Node.js, me di cuneta que carec\u00eda de una parte muy importante: no sab\u00eda qu\u00e9 era y como se usaba __Express.js__ que es la base de todos estos _frameworks_. En esta serie de art\u00edculos, voy a eliminar esa carencia.\r\n\r\n## Qu\u00e9 es Express.js\r\n**Express.js** es un marco de trabajo para desarrollo web que se basa en el m\u00f3dulo `http` del n\u00facleo de Node.js y componentes de Connect. Esos componentes se llaman **_intermediarios_** o _middlewares_ y son la piedra angular de la filosof\u00eda del framework, es decir, la _confirguraci\u00f3n sobre convenci\u00f3n_. En otras palabras, los desarrolladores son libres de elegir las librer\u00edas que necesiten para un proyecto particular lo que proporciona una gran libertad y personalizaci\u00f3n.\r\n\r\nSi de verdad intent\u00e1ramos crear una aplicaci\u00f3n como el CMI usando solo los m\u00f3dulos del n\u00facleo de Node.js, estar\u00edamos tratando de inventar el hilo negro, escribiendo uno y otra vez el mismo c\u00f3digo para realizar tares similares, como:\r\n\r\n* Evaluar el contenido de las solicitudes HTTP\r\n* Evaluaci\u00f3n de _cookies_\r\n* Gesti\u00f3n de sesiones\r\n* Organizar las rutas como una cadena de condiciones `if`, bas\u00e1ndonos en la URL y el m\u00e9todo de la solicitud\r\n* Determinar los encabezados de respuesta adecuado al tipo de datos.\r\n\r\n**Express.js** resuelve estos y muchos otros problemas. Tambi\u00e9n proporciona una estructura tipo MVC para nuestras aplicaciones web. Estas aplicaciones pueden ir desde una API REST hasta una aplicaci\u00f3n completa y escalable _full stack_ con comunicaci\u00f3n en tiempo real.\r\n\r\n## C\u00f3mo funciona Express.js\r\nLas aplicaciones **Express.js** tienen por lo general un punto de entrada o archivo principal. En dicho archivo realizamos lo siguiente:\r\n\r\n1. Se incluyen las dependencias de terceros, as\u00ed como los m\u00f3dulos propios, como controladores, utiler\u00edas, ayudas y modelos.\r\n2. Se configura **Express.js**, por ejemplo, el motor de plantillas y las extensiones de archivo.\r\n3. Se definen los intermediarios o _middleware_, como los gestores de errores, de archivos est\u00e1ticos, _cookies_ y evalueadores o _parsers_.\r\n4. Se definen las rutas.\r\n5. Se conecta las bases de datos, como MongoDB, Redes o PostgreSQL.\r\n6. Inicia la aplicaci\u00f3n.\r\n\r\nCuando una aplicaci\u00f3n __Express.js__ se est\u00e1 ejecutando, escucha las solicitudes. Cada solicitud entrante es procesada de acuerdo a una cadena definida de _intermediarios_ y rutas empezando de arriba a abajo. Este concepto es muy importante porque nos permite tener un control sobre el flujo de ejecuci\u00f3n. Por ejemplo, podemos tener m\u00faltiples funciones para manejar coada solicitud, alg\u00fanas de ellas se ejecutar\u00e1n en medio del procesamiento[^1]:\r\n\r\n[^1]: Por eso se llaman intermediarios.\r\n\r\n1. Analizan la informaci\u00f3n de las _cookies_ y al terminan, contin\u00faan al siguiente paso.\r\n2. Analizan los par\u00e1metros de la URL, y al termina continu\u00e1n con el siguiente paso.\r\n3. Obtienen informaci\u00f3n de la base de datos, usando el valor de los par\u00e1metros si el usuario est\u00e1 autorizado (por _cookie_ o por sesi\u00f3n) y continua al siguiente paso.\r\n4. Muestra el siguiente paso y termina la respuesta.\r\n\r\n## Instalaci\u00f3n\r\n\r\n__Express.js__ viene en dos versiones, una que podemos llamar __CLI__ que es en realidad un generador de Yeoman y con un simple comando cra una estructura completa; la otra es un m\u00f3dulo de Node.js, es decir una dependencia.\r\n\r\nDado que nuestro objetivo es aprender desde la ra\u00edz, vamos a usar la segunda opci\u00f3n. \r\n\r\n### Creaci\u00f3n del proyecto\r\n\r\nVamos a crear un nuevo directorio `nspaces` y dentro vamos a iniciar nuestro proyecto.\r\n\r\n```terminal256\r\n$ yarn init                                                     \r\nyarn init v0.24.5\r\nquestion name (nspaces): \r\nquestion version (1.0.0): 0.1.0\r\nquestion description: El nuevo cuadro de mando en clave de ECMAScript\r\nquestion entry point (index.js): \r\nquestion repository url: \r\nquestion author: Javier Sanchez Toledano\r\nquestion license (MIT): \r\nsuccess Saved package.json\r\nDone in 63.74s.\r\n```\r\n\r\nEsto produce un archivo `packages.json` con el siguiente contenido.\r\n    \r\n    :::terminal\r\n    $ cat package.json                                                         \r\n    {\r\n      \"name\": \"nspaces\",\r\n      \"version\": \"0.1.0\",\r\n      \"description\": \"El nuevo cuadro de mando en clave de ECMAScript\",\r\n      \"main\": \"index.js\",\r\n      \"author\": \"Javier Sanchez Toledano\",\r\n      \"license\": \"MIT\"\r\n    }\r\n\r\nAhora vamos a agregar el m\u00f3dulo `express` a nuestras dependencias, con la siguiente orden:\r\n\r\n```terminal\r\n$ yarn add express\r\n```\r\nEste comando instala todas las dependencias que necesita `express`\r\n\r\n```terminal256\r\nyarn add v0.24.5\r\ninfo No lockfile found.  \r\n[1/4] Resolving packages...  \r\n[2/4] Fetching packages...  \r\n[3/4] Linking dependencies...  \r\n[4/4] Building fresh packages...  \r\nsuccess Saved lockfile.\r\nsuccess Saved 42 new dependencies.\r\n\u251c\u2500 accepts@1.3.3\r\n\u251c\u2500 array-flatten@1.1.1\r\n\u251c\u2500 content-disposition@0.5.2\r\n\u251c\u2500 content-type@1.0.2\r\n\u251c\u2500 cookie-signature@1.0.6\r\n\u251c\u2500 cookie@0.3.1\r\n\u251c\u2500 debug@2.6.7\r\n\u251c\u2500 depd@1.1.0\r\n\u251c\u2500 destroy@1.0.4\r\n\u251c\u2500 ee-first@1.1.1\r\n\u251c\u2500 encodeurl@1.0.1\r\n\u251c\u2500 escape-html@1.0.3\r\n\u251c\u2500 etag@1.8.0\r\n\u251c\u2500 express@4.15.3\r\n\u251c\u2500 finalhandler@1.0.3\r\n\u251c\u2500 forwarded@0.1.0\r\n\u251c\u2500 fresh@0.5.0\r\n\u251c\u2500 http-errors@1.6.1\r\n\u251c\u2500 inherits@2.0.3\r\n\u251c\u2500 ipaddr.js@1.3.0\r\n\u251c\u2500 media-typer@0.3.0\r\n\u251c\u2500 merge-descriptors@1.0.1\r\n\u251c\u2500 methods@1.1.2\r\n\u251c\u2500 mime-db@1.27.0\r\n\u251c\u2500 mime-types@2.1.15\r\n\u251c\u2500 mime@1.3.4\r\n\u251c\u2500 ms@2.0.0\r\n\u251c\u2500 negotiator@0.6.1\r\n\u251c\u2500 on-finished@2.3.0\r\n\u251c\u2500 parseurl@1.3.1\r\n\u251c\u2500 path-to-regexp@0.1.7\r\n\u251c\u2500 proxy-addr@1.1.4\r\n\u251c\u2500 qs@6.4.0\r\n\u251c\u2500 range-parser@1.2.0\r\n\u251c\u2500 send@0.15.3\r\n\u251c\u2500 serve-static@1.12.3\r\n\u251c\u2500 setprototypeof@1.0.3\r\n\u251c\u2500 statuses@1.3.1\r\n\u251c\u2500 type-is@1.6.15\r\n\u251c\u2500 unpipe@1.0.0\r\n\u251c\u2500 utils-merge@1.0.0\r\n\u2514\u2500 vary@1.1.1\r\nDone in 30.42s.\r\n```\r\n\r\nEl archivo `packages.json` se ha actualizado con `express` como dependencia instalando la versi\u00f3n `4.15.3`.\r\n\r\n```json\r\n{\r\n  \"name\": \"nspaces\",\r\n  \"version\": \"0.1.0\",\r\n  \"description\": \"El nuevo cuadro de mando en clave de ECMAScript\",\r\n  \"main\": \"index.js\",\r\n  \"author\": \"Javier Sanchez Toledano\",\r\n  \"license\": \"MIT\",\r\n  \"dependencies\": {\r\n    \"express\": \"^4.15.3\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n## Babel\r\nEl siguiente paso, un requisito indispensable para usar la versi\u00f3n 2015 de ECMAScript o ES6 es instalar el compilador **Babel**. \r\n\r\n**Babel** convierte nuestro c\u00f3digo en ES6 a una versi\u00f3n  compatible con Node.js, pero es una dependencia *de desarrollo*. Una vez que est\u00e9 lista una versi\u00f3n de producci\u00f3n, ah\u00ed no necesitamos Babel. Adem\u00e1s del m\u00f3dulo `babel` vamos a emplear las especificaciones ES2015, que se encuentran en el paquete `babel-preste-es2015`. Ambos m\u00f3dulos se instalan con el indicador `--dev`,\r\n\r\n    :::terminal256\r\n    $ yarn add --dev babel babel-preset-es2015\r\n\r\nAhora hay una nueva secci\u00f3n en nuestro archivo `packages.json` llamada `devDependencies`:\r\n\r\n    :::json\r\n    \"devDependencies\": {\r\n      \"babel-cli\": \"^6.24.1\",\r\n      \"babel-preset-es2015\": \"^6.24.1\"\r\n    }\r\n\r\nAhora vamos a crear un peque\u00f1o *script* para ejecutar nuestro archivo. En lugar de usar `node`, usaremos `babel`. Vamos a agregar la secci\u00f3n `scripts` a nuestro archivo con el siguiente contenido:\r\n\r\n```json\r\n  \"main\": \"src/index.js\",\r\n  \"scripts\": {\r\n    \"start\": \"babel-node src/index.js\"\r\n  },\r\n```\r\n\r\nEste *script* nos permite ejecutar `yarn run start` y ejecutar el gui\u00f3n indicado.\r\n\r\nPor \u00faltimo, vamos a agregar una nueva secci\u00f3n para configurar el m\u00f3dulo **Babel**, quedando como sigue:\r\n\r\n```json\r\n  \"babel\": {\r\n    \"presets\": [\"es2015\"]\r\n  }\r\n```\r\n\r\nCon estas configuraciones, estamos listos para continuar.\r\n\r\n## El ejemplo \"Hola Mundo\"\r\nAhora, como si fuera obligado, vamos a crear el ejemplo por excelencia en el mundo de la programaci\u00f3n: el *\"Hola Mundo*. \r\n\r\nVamos a crear un directorio `src` y dentro el archivo `index.js`. Este archivo ser\u00e1 nuestro servidor **Express** y tendr\u00e1 una sintaxis ES6, as\u00ed que empezaremos importando el m\u00f3dulo `express`.\r\n\r\n    :::javascript\r\n    import express from 'express'\r\n\r\nA continuaci\u00f3n, creamos la aplicaci\u00f3n:\r\n\r\n    :::js\r\n    let app = express()\r\n\r\nEsta aplicaci\u00f3n es un servidor web que se ejecuta localmente en el puerto `3000`, as\u00ed que vamos a indicarlo en una constante.\r\n\r\n    :::js\r\n    const PORT = 3000\r\n\r\nPara este primer ejemplo usaremos una ruta *comod\u00edn*, indicada por el asterisco (`*`) y la funci\u00f3n `app.get()`, es decir, cuando el verbo de la solicitud sea `GET`.\r\n\r\n    :::js\r\n    app.get('*', (req, res) => res.end('Hola Mundo'))\r\n\r\n`app.get()` recibe dos par\u00e1metros, el primero es la ruta, en este caso es un comod\u00edn, lo que significa que todas las solicitudes `GET` ser\u00e1n atendidas por el seg\u00fan par\u00e1metro.\r\n\r\nEste segundo par\u00e1metro es una funci\u00f3n que recibe por su parte otros dos par\u00e1metros, el primero es una *callback* que contiene la solicitud, llamada `req`, del ingl\u00e9s *request* y el segundo par\u00e1metro, tambi\u00e9n es una *callback* llamada `res` de *respuesta*.\r\n\r\nAhora bien, lo que pasa dentro de esta funci\u00f3n, es lo que se conoce como un **_flujo_** o *stream* que puede canalizarse de forma encadenada para controlarlo. Por ejemplo, se podr\u00eda crear un flujo como este:\r\n\r\n    :::js\r\n    app.get('/ruta', (req, res) => {\r\n      req.algo()\r\n         .otraFuncion()\r\n         .otraMas()\r\n         .end()\r\n    }\r\n\r\nM\u00e1s adelante veremos esto a detalle. Por el momento, nuestra funci\u00f3n es tan simple, que se resuelve en una l\u00ednea.\r\n\r\nPor \u00faltimo, activamos el servidor, escuchando el puerto indicado y con una peque\u00f1a funci\u00f3n para informar que el servidor est\u00e1 funcionando.\r\n\r\n    :::js\r\n    app.listen(PORT, () => {\r\n      console.log(`El servidor se est\u00e1 ejecuntando. Abre tu navegador en http://localhost:${PORT}/`)\r\n    })\r\n\r\nAhora, si ejecutamos el script con\r\n\r\n    :::terminal256\r\n    $ yarn start\r\n\r\nVeremos esta salida:\r\n\r\n    :::terminal256\r\n    yarn start v0.24.5\r\n    $ babel-node src/index.js \r\n    El servidor se est\u00e1 ejecuntando. Abre tu navegador en http://localhost:3000/\r\n\r\nY en el navegador, veremos la salida esperada:\r\n\r\n    :::terminal256\r\n    $ http :3000\r\n    HTTP/1.1 200 OK\r\n    Connection: keep-alive\r\n    Content-Length: 10\r\n    Date: Mon, 22 May 2017 00:39:49 GMT\r\n    X-Powered-By: Express\r\n    \r\n    Hola Mundo\r\n\r\nAs\u00ed se ve el archivo completo del servidor:\r\n\r\n```javascript\r\n'use strict'\r\nimport express from 'express'\r\nlet app = express()\r\nconst PORT = 3000\r\n\r\napp.get('*', (req, res) =>  res.end('Hola Mundo'))\r\napp.listen(PORT, () => {\r\n  console.log(`El servidor se est\u00e1 ejecuntando. Abre tu navegador\\\r\n en http://localhost:${PORT}/`)\r\n})\r\n```\r\n\r\nPodemos hacer el ejemplo un poco m\u00e1s complejo, repitiendo el nombre que pasemos en la URL. \r\n\r\nVamos a crear una nueva ruta que ser\u00e1 ubicada antes de la ruta comod\u00edn. Esta nueva ruta espera un nombre que dibujar\u00e1 en la respuesta. Veamos.\r\n\r\n```javascript\r\napp.get('/name/:user', (req, res) => {\r\n  res.status(200)\r\n  res.set('Content-type', 'text/html')\r\n  res.end(`\r\n<html>\r\n  <body>\r\n    <h1>Hola ${req.params.user}</h1>\r\n  </body>\r\n</html>\r\n  `)\r\n})\r\n```\r\n\r\nAhora, en la ruta `/name/` debemos agregar un nombre, que se asignar\u00e1 a la variable `usuario` del objeto `params` en la solicitud `req`.\r\n\r\nVemos que el control de flujo es m\u00e1s complejo. Empezamos respondiendo que la respuesta es correcta, el estatus `200` es `Ok`.  A continuaci\u00f3n estallemos el tipo de datos que enviaremos con la respuesta, en este caso `text/html`.\r\n\r\nPor \u00faltimo, con lo que cerramos el flujo, enviamos una peque\u00f1a p\u00e1gina web, con el contenido de la variable `req.params.user`. \r\n\r\nVeamos que pasa cuando llamamos esta nueva ruta.\r\n\r\n```terminal256\r\n$ http :3000/name/javier                                                                                                               \r\nHTTP/1.1 200 OK\r\nConnection: keep-alive\r\nContent-Length: 62\r\nContent-type: text/html; charset=utf-8\r\nDate: Mon, 22 May 2017 00:52:58 GMT\r\nX-Powered-By: Express\r\n\r\n<html>\r\n  <body>\r\n    <h1>Hola javier</h1>\r\n  </body>\r\n</html>\r\n```\r\n\r\nEn el pr\u00f3ximo art\u00edculo de la serie sobre **Express**, veremos como arrancar nuestro proyecto usando el generador `express`.", "extend": "", "pub_date": "2017-05-21T15:16:28Z", "summary_html": "<p>En este art\u00edculo encontrar\u00e1s un completo tutorial para aprender a usar Express.js el framework para aplicaciones web de JavaScript m\u00e1s popular que existe. Y por supuesto, las mejores pr\u00e1cticas para construir aplicaciones web robustas y seguras.</p>", "body_html": "<div class=\"admonition error\">\n<p class=\"admonition-title\">Motivaci\u00f3n</p>\n<p>Despu\u00e9s de interntar con varias soluciones replicar el cuadro de mando integral usando Node.js, me di cuneta que carec\u00eda de una parte muy importante: no sab\u00eda qu\u00e9 era y como se usaba <strong>Express.js</strong> que es la base de todos estos <em>frameworks</em>. En esta serie de art\u00edculos, voy a eliminar esa carencia.</p>\n</div>\n<h2 id=\"que-es-expressjs\">Qu\u00e9 es Express.js</h2>\n<p><strong>Express.js</strong> es un marco de trabajo para desarrollo web que se basa en el m\u00f3dulo <code>http</code> del n\u00facleo de Node.js y componentes de Connect. Esos componentes se llaman <strong><em>intermediarios</em></strong> o <em>middlewares</em> y son la piedra angular de la filosof\u00eda del framework, es decir, la <em>confirguraci\u00f3n sobre convenci\u00f3n</em>. En otras palabras, los desarrolladores son libres de elegir las librer\u00edas que necesiten para un proyecto particular lo que proporciona una gran libertad y personalizaci\u00f3n.</p>\n<p>Si de verdad intent\u00e1ramos crear una aplicaci\u00f3n como el CMI usando solo los m\u00f3dulos del n\u00facleo de Node.js, estar\u00edamos tratando de inventar el hilo negro, escribiendo uno y otra vez el mismo c\u00f3digo para realizar tares similares, como:</p>\n<ul>\n<li>Evaluar el contenido de las solicitudes HTTP</li>\n<li>Evaluaci\u00f3n de <em>cookies</em></li>\n<li>Gesti\u00f3n de sesiones</li>\n<li>Organizar las rutas como una cadena de condiciones <code>if</code>, bas\u00e1ndonos en la URL y el m\u00e9todo de la solicitud</li>\n<li>Determinar los encabezados de respuesta adecuado al tipo de datos.</li>\n</ul>\n<p><strong>Express.js</strong> resuelve estos y muchos otros problemas. Tambi\u00e9n proporciona una estructura tipo MVC para nuestras aplicaciones web. Estas aplicaciones pueden ir desde una API REST hasta una aplicaci\u00f3n completa y escalable <em>full stack</em> con comunicaci\u00f3n en tiempo real.</p>\n<h2 id=\"como-funciona-expressjs\">C\u00f3mo funciona Express.js</h2>\n<p>Las aplicaciones <strong>Express.js</strong> tienen por lo general un punto de entrada o archivo principal. En dicho archivo realizamos lo siguiente:</p>\n<ol>\n<li>Se incluyen las dependencias de terceros, as\u00ed como los m\u00f3dulos propios, como controladores, utiler\u00edas, ayudas y modelos.</li>\n<li>Se configura <strong>Express.js</strong>, por ejemplo, el motor de plantillas y las extensiones de archivo.</li>\n<li>Se definen los intermediarios o <em>middleware</em>, como los gestores de errores, de archivos est\u00e1ticos, <em>cookies</em> y evalueadores o <em>parsers</em>.</li>\n<li>Se definen las rutas.</li>\n<li>Se conecta las bases de datos, como MongoDB, Redes o PostgreSQL.</li>\n<li>Inicia la aplicaci\u00f3n.</li>\n</ol>\n<p>Cuando una aplicaci\u00f3n <strong>Express.js</strong> se est\u00e1 ejecutando, escucha las solicitudes. Cada solicitud entrante es procesada de acuerdo a una cadena definida de <em>intermediarios</em> y rutas empezando de arriba a abajo. Este concepto es muy importante porque nos permite tener un control sobre el flujo de ejecuci\u00f3n. Por ejemplo, podemos tener m\u00faltiples funciones para manejar coada solicitud, alg\u00fanas de ellas se ejecutar\u00e1n en medio del procesamiento<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>:</p>\n<ol>\n<li>Analizan la informaci\u00f3n de las <em>cookies</em> y al terminan, contin\u00faan al siguiente paso.</li>\n<li>Analizan los par\u00e1metros de la URL, y al termina continu\u00e1n con el siguiente paso.</li>\n<li>Obtienen informaci\u00f3n de la base de datos, usando el valor de los par\u00e1metros si el usuario est\u00e1 autorizado (por <em>cookie</em> o por sesi\u00f3n) y continua al siguiente paso.</li>\n<li>Muestra el siguiente paso y termina la respuesta.</li>\n</ol>\n<h2 id=\"instalacion\">Instalaci\u00f3n</h2>\n<p><strong>Express.js</strong> viene en dos versiones, una que podemos llamar <strong>CLI</strong> que es en realidad un generador de Yeoman y con un simple comando cra una estructura completa; la otra es un m\u00f3dulo de Node.js, es decir una dependencia.</p>\n<p>Dado que nuestro objetivo es aprender desde la ra\u00edz, vamos a usar la segunda opci\u00f3n. </p>\n<h3 id=\"creacion-del-proyecto\">Creaci\u00f3n del proyecto</h3>\n<p>Vamos a crear un nuevo directorio <code>nspaces</code> y dentro vamos a iniciar nuestro proyecto.</p>\n<div class=\"codehilite\"><pre><span></span>$ yarn init                                                     \nyarn init v0.24.5\nquestion name <span class=\"o\">(</span>nspaces<span class=\"o\">)</span>: \nquestion version <span class=\"o\">(</span><span class=\"m\">1</span>.0.0<span class=\"o\">)</span>: <span class=\"m\">0</span>.1.0\nquestion description: El nuevo cuadro de mando en clave de ECMAScript\nquestion entry point <span class=\"o\">(</span>index.js<span class=\"o\">)</span>: \nquestion repository url: \nquestion author: Javier Sanchez Toledano\nquestion license <span class=\"o\">(</span>MIT<span class=\"o\">)</span>: \nsuccess Saved package.json\nDone in <span class=\"m\">63</span>.74s.\n</pre></div>\n\n\n<p>Esto produce un archivo <code>packages.json</code> con el siguiente contenido.</p>\n<div class=\"codehilite\"><pre><span></span>$ cat package.json                                                         \n<span class=\"o\">{</span>\n  <span class=\"s2\">&quot;name&quot;</span>: <span class=\"s2\">&quot;nspaces&quot;</span>,\n  <span class=\"s2\">&quot;version&quot;</span>: <span class=\"s2\">&quot;0.1.0&quot;</span>,\n  <span class=\"s2\">&quot;description&quot;</span>: <span class=\"s2\">&quot;El nuevo cuadro de mando en clave de ECMAScript&quot;</span>,\n  <span class=\"s2\">&quot;main&quot;</span>: <span class=\"s2\">&quot;index.js&quot;</span>,\n  <span class=\"s2\">&quot;author&quot;</span>: <span class=\"s2\">&quot;Javier Sanchez Toledano&quot;</span>,\n  <span class=\"s2\">&quot;license&quot;</span>: <span class=\"s2\">&quot;MIT&quot;</span>\n<span class=\"o\">}</span>\n</pre></div>\n\n\n<p>Ahora vamos a agregar el m\u00f3dulo <code>express</code> a nuestras dependencias, con la siguiente orden:</p>\n<div class=\"codehilite\"><pre><span></span>$ yarn add express\n</pre></div>\n\n\n<p>Este comando instala todas las dependencias que necesita <code>express</code></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">yarn</span> <span class=\"n\">add</span> <span class=\"n\">v0</span><span class=\"mf\">.24.5</span>\n<span class=\"n\">info</span> <span class=\"n\">No</span> <span class=\"n\">lockfile</span> <span class=\"n\">found</span><span class=\"p\">.</span>  \n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"n\">Resolving</span> <span class=\"n\">packages</span><span class=\"p\">...</span>  \n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"n\">Fetching</span> <span class=\"n\">packages</span><span class=\"p\">...</span>  \n<span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">dependencies</span><span class=\"p\">...</span>  \n<span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"n\">Building</span> <span class=\"n\">fresh</span> <span class=\"n\">packages</span><span class=\"p\">...</span>  \n<span class=\"n\">success</span> <span class=\"n\">Saved</span> <span class=\"n\">lockfile</span><span class=\"p\">.</span>\n<span class=\"n\">success</span> <span class=\"n\">Saved</span> <span class=\"mi\">42</span> <span class=\"n\">new</span> <span class=\"n\">dependencies</span><span class=\"p\">.</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">accepts</span><span class=\"mf\">@1.3.3</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">array</span><span class=\"o\">-</span><span class=\"n\">flatten</span><span class=\"mf\">@1.1.1</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">content</span><span class=\"o\">-</span><span class=\"n\">disposition</span><span class=\"mf\">@0.5.2</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">content</span><span class=\"o\">-</span><span class=\"n\">type</span><span class=\"mf\">@1.0.2</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">cookie</span><span class=\"o\">-</span><span class=\"n\">signature</span><span class=\"mf\">@1.0.6</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">cookie</span><span class=\"mf\">@0.3.1</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">debug</span><span class=\"mf\">@2.6.7</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">depd</span><span class=\"mf\">@1.1.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">destroy</span><span class=\"mf\">@1.0.4</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">ee</span><span class=\"o\">-</span><span class=\"n\">first</span><span class=\"mf\">@1.1.1</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">encodeurl</span><span class=\"mf\">@1.0.1</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">escape</span><span class=\"o\">-</span><span class=\"n\">html</span><span class=\"mf\">@1.0.3</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">etag</span><span class=\"mf\">@1.8.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">express</span><span class=\"mf\">@4.15.3</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">finalhandler</span><span class=\"mf\">@1.0.3</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">forwarded</span><span class=\"mf\">@0.1.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">fresh</span><span class=\"mf\">@0.5.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">errors</span><span class=\"mf\">@1.6.1</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">inherits</span><span class=\"mf\">@2.0.3</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">ipaddr</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"mf\">@1.3.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">media</span><span class=\"o\">-</span><span class=\"n\">typer</span><span class=\"mf\">@0.3.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">merge</span><span class=\"o\">-</span><span class=\"n\">descriptors</span><span class=\"mf\">@1.0.1</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">methods</span><span class=\"mf\">@1.1.2</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">mime</span><span class=\"o\">-</span><span class=\"n\">db</span><span class=\"mf\">@1.27.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">mime</span><span class=\"o\">-</span><span class=\"n\">types</span><span class=\"mf\">@2.1.15</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">mime</span><span class=\"mf\">@1.3.4</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">ms</span><span class=\"mf\">@2.0.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">negotiator</span><span class=\"mf\">@0.6.1</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">on</span><span class=\"o\">-</span><span class=\"n\">finished</span><span class=\"mf\">@2.3.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">parseurl</span><span class=\"mf\">@1.3.1</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">path</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">regexp</span><span class=\"mf\">@0.1.7</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">proxy</span><span class=\"o\">-</span><span class=\"n\">addr</span><span class=\"mf\">@1.1.4</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">qs</span><span class=\"mf\">@6.4.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">range</span><span class=\"o\">-</span><span class=\"n\">parser</span><span class=\"mf\">@1.2.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">send</span><span class=\"mf\">@0.15.3</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">serve</span><span class=\"o\">-</span><span class=\"k\">static</span><span class=\"mf\">@1.12.3</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">setprototypeof</span><span class=\"mf\">@1.0.3</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">statuses</span><span class=\"mf\">@1.3.1</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">type</span><span class=\"o\">-</span><span class=\"n\">is</span><span class=\"mf\">@1.6.15</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">unpipe</span><span class=\"mf\">@1.0.0</span>\n<span class=\"err\">\u251c\u2500</span> <span class=\"n\">utils</span><span class=\"o\">-</span><span class=\"n\">merge</span><span class=\"mf\">@1.0.0</span>\n<span class=\"err\">\u2514\u2500</span> <span class=\"n\">vary</span><span class=\"mf\">@1.1.1</span>\n<span class=\"n\">Done</span> <span class=\"k\">in</span> <span class=\"mf\">30.42</span><span class=\"n\">s</span><span class=\"p\">.</span>\n</pre></div>\n\n\n<p>El archivo <code>packages.json</code> se ha actualizado con <code>express</code> como dependencia instalando la versi\u00f3n <code>4.15.3</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;nspaces&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.1.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;El nuevo cuadro de mando en clave de ECMAScript&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;main&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;index.js&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;author&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Javier Sanchez Toledano&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;license&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MIT&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;dependencies&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;express&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^4.15.3&quot;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<h2 id=\"babel\">Babel</h2>\n<p>El siguiente paso, un requisito indispensable para usar la versi\u00f3n 2015 de ECMAScript o ES6 es instalar el compilador <strong>Babel</strong>. </p>\n<p><strong>Babel</strong> convierte nuestro c\u00f3digo en ES6 a una versi\u00f3n  compatible con Node.js, pero es una dependencia <em>de desarrollo</em>. Una vez que est\u00e9 lista una versi\u00f3n de producci\u00f3n, ah\u00ed no necesitamos Babel. Adem\u00e1s del m\u00f3dulo <code>babel</code> vamos a emplear las especificaciones ES2015, que se encuentran en el paquete <code>babel-preste-es2015</code>. Ambos m\u00f3dulos se instalan con el indicador <code>--dev</code>,</p>\n<div class=\"codehilite\"><pre><span></span>$ yarn add --dev babel babel-preset-es2015\n</pre></div>\n\n\n<p>Ahora hay una nueva secci\u00f3n en nuestro archivo <code>packages.json</code> llamada <code>devDependencies</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"s2\">&quot;devDependencies&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n  <span class=\"nt\">&quot;babel-cli&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^6.24.1&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;babel-preset-es2015&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^6.24.1&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Ahora vamos a crear un peque\u00f1o <em>script</em> para ejecutar nuestro archivo. En lugar de usar <code>node</code>, usaremos <code>babel</code>. Vamos a agregar la secci\u00f3n <code>scripts</code> a nuestro archivo con el siguiente contenido:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"s2\">&quot;main&quot;</span><span class=\"err\">:</span> <span class=\"s2\">&quot;src/index.js&quot;</span><span class=\"err\">,</span>\n  <span class=\"s2\">&quot;scripts&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;start&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;babel-node src/index.js&quot;</span>\n  <span class=\"p\">}</span><span class=\"err\">,</span>\n</pre></div>\n\n\n<p>Este <em>script</em> nos permite ejecutar <code>yarn run start</code> y ejecutar el gui\u00f3n indicado.</p>\n<p>Por \u00faltimo, vamos a agregar una nueva secci\u00f3n para configurar el m\u00f3dulo <strong>Babel</strong>, quedando como sigue:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"s2\">&quot;babel&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;presets&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;es2015&quot;</span><span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Con estas configuraciones, estamos listos para continuar.</p>\n<h2 id=\"el-ejemplo-hola-mundo\">El ejemplo &ldquo;Hola Mundo&rdquo;</h2>\n<p>Ahora, como si fuera obligado, vamos a crear el ejemplo por excelencia en el mundo de la programaci\u00f3n: el <em>&ldquo;Hola Mundo</em>. </p>\n<p>Vamos a crear un directorio <code>src</code> y dentro el archivo <code>index.js</code>. Este archivo ser\u00e1 nuestro servidor <strong>Express</strong> y tendr\u00e1 una sintaxis ES6, as\u00ed que empezaremos importando el m\u00f3dulo <code>express</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">express</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;express&#39;</span>\n</pre></div>\n\n\n<p>A continuaci\u00f3n, creamos la aplicaci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>Esta aplicaci\u00f3n es un servidor web que se ejecuta localmente en el puerto <code>3000</code>, as\u00ed que vamos a indicarlo en una constante.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">3000</span>\n</pre></div>\n\n\n<p>Para este primer ejemplo usaremos una ruta <em>comod\u00edn</em>, indicada por el asterisco (<code>*</code>) y la funci\u00f3n <code>app.get()</code>, es decir, cuando el verbo de la solicitud sea <code>GET</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;*&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"s1\">&#39;Hola Mundo&#39;</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p><code>app.get()</code> recibe dos par\u00e1metros, el primero es la ruta, en este caso es un comod\u00edn, lo que significa que todas las solicitudes <code>GET</code> ser\u00e1n atendidas por el seg\u00fan par\u00e1metro.</p>\n<p>Este segundo par\u00e1metro es una funci\u00f3n que recibe por su parte otros dos par\u00e1metros, el primero es una <em>callback</em> que contiene la solicitud, llamada <code>req</code>, del ingl\u00e9s <em>request</em> y el segundo par\u00e1metro, tambi\u00e9n es una <em>callback</em> llamada <code>res</code> de <em>respuesta</em>.</p>\n<p>Ahora bien, lo que pasa dentro de esta funci\u00f3n, es lo que se conoce como un <strong><em>flujo</em></strong> o <em>stream</em> que puede canalizarse de forma encadenada para controlarlo. Por ejemplo, se podr\u00eda crear un flujo como este:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;/ruta&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">algo</span><span class=\"p\">()</span>\n     <span class=\"p\">.</span><span class=\"nx\">otraFuncion</span><span class=\"p\">()</span>\n     <span class=\"p\">.</span><span class=\"nx\">otraMas</span><span class=\"p\">()</span>\n     <span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>M\u00e1s adelante veremos esto a detalle. Por el momento, nuestra funci\u00f3n es tan simple, que se resuelve en una l\u00ednea.</p>\n<p>Por \u00faltimo, activamos el servidor, escuchando el puerto indicado y con una peque\u00f1a funci\u00f3n para informar que el servidor est\u00e1 funcionando.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">PORT</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`El servidor se est\u00e1 ejecuntando. Abre tu navegador en http://localhost:</span><span class=\"si\">${</span><span class=\"nx\">PORT</span><span class=\"si\">}</span><span class=\"sb\">/`</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Ahora, si ejecutamos el script con</p>\n<div class=\"codehilite\"><pre><span></span>$ yarn start\n</pre></div>\n\n\n<p>Veremos esta salida:</p>\n<div class=\"codehilite\"><pre><span></span>yarn start v0.24.5\n$ babel-node src/index.js \nEl servidor se est\u00e1 ejecuntando. Abre tu navegador en http://localhost:3000/\n</pre></div>\n\n\n<p>Y en el navegador, veremos la salida esperada:</p>\n<div class=\"codehilite\"><pre><span></span>$ http :3000\nHTTP/1.1 <span class=\"m\">200</span> OK\nConnection: keep-alive\nContent-Length: <span class=\"m\">10</span>\nDate: Mon, <span class=\"m\">22</span> May <span class=\"m\">2017</span> <span class=\"m\">00</span>:39:49 GMT\nX-Powered-By: Express\n\nHola Mundo\n</pre></div>\n\n\n<p>As\u00ed se ve el archivo completo del servidor:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"s1\">&#39;use strict&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">express</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;express&#39;</span>\n<span class=\"kd\">let</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">()</span>\n<span class=\"kr\">const</span> <span class=\"nx\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">3000</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;*&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span>  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"s1\">&#39;Hola Mundo&#39;</span><span class=\"p\">))</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">PORT</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`El servidor se est\u00e1 ejecuntando. Abre tu navegador</span><span class=\"err\">\\</span><span class=\"sb\"></span>\n<span class=\"sb\"> en http://localhost:</span><span class=\"si\">${</span><span class=\"nx\">PORT</span><span class=\"si\">}</span><span class=\"sb\">/`</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Podemos hacer el ejemplo un poco m\u00e1s complejo, repitiendo el nombre que pasemos en la URL. </p>\n<p>Vamos a crear una nueva ruta que ser\u00e1 ubicada antes de la ruta comod\u00edn. Esta nueva ruta espera un nombre que dibujar\u00e1 en la respuesta. Veamos.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;/name/:user&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">status</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;Content-type&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;text/html&#39;</span><span class=\"p\">)</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"sb\">`</span>\n<span class=\"sb\">&lt;html&gt;</span>\n<span class=\"sb\">  &lt;body&gt;</span>\n<span class=\"sb\">    &lt;h1&gt;Hola </span><span class=\"si\">${</span><span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">params</span><span class=\"p\">.</span><span class=\"nx\">user</span><span class=\"si\">}</span><span class=\"sb\">&lt;/h1&gt;</span>\n<span class=\"sb\">  &lt;/body&gt;</span>\n<span class=\"sb\">&lt;/html&gt;</span>\n<span class=\"sb\">  `</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Ahora, en la ruta <code>/name/</code> debemos agregar un nombre, que se asignar\u00e1 a la variable <code>usuario</code> del objeto <code>params</code> en la solicitud <code>req</code>.</p>\n<p>Vemos que el control de flujo es m\u00e1s complejo. Empezamos respondiendo que la respuesta es correcta, el estatus <code>200</code> es <code>Ok</code>.  A continuaci\u00f3n estallemos el tipo de datos que enviaremos con la respuesta, en este caso <code>text/html</code>.</p>\n<p>Por \u00faltimo, con lo que cerramos el flujo, enviamos una peque\u00f1a p\u00e1gina web, con el contenido de la variable <code>req.params.user</code>. </p>\n<p>Veamos que pasa cuando llamamos esta nueva ruta.</p>\n<div class=\"codehilite\"><pre><span></span>$ http :3000/name/javier                                                                                                               \nHTTP/1.1 200 OK\nConnection: keep-alive\nContent-Length: 62\nContent-type: text/html; charset=utf-8\nDate: Mon, 22 May 2017 00:52:58 GMT\nX-Powered-By: Express\n\n<span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;h1&gt;</span>Hola javier<span class=\"nt\">&lt;/h1&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</pre></div>\n\n\n<p>En el pr\u00f3ximo art\u00edculo de la serie sobre <strong>Express</strong>, veremos como arrancar nuestro proyecto usando el generador <code>express</code>.</p>\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Por eso se llaman intermediarios.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "tutorial-de-expressjs", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 125, "fields": {"idx": "4b24634d-a6f9-49c9-aa77-787cc20f7097", "creado": "2017-07-29T05:56:00.377Z", "modificado": "2017-07-29T05:56:00.377Z", "title": "Refactorizando una aplicaci\u00f3n Express", "summary": "Convertir una aplicaci\u00f3n a la versi\u00f3n ECMAScript 6, es un ejercicio simple pero que nos ayuda a mejorar la comprensi\u00f3n de este lenguaje.", "body": "Title: Refactorizando una aplicaci\u00f3n Express    \r\nDate: 2017-05-22 18:57:47\r\nCategory: desarrollo\r\nTags: express, es6, \r\nSummary: Convertir una aplicaci\u00f3n a la versi\u00f3n ECMAScript 6, es un ejercicio simple pero que nos ayuda a mejorar la comprensi\u00f3n de este lenguaje.\r\n\r\nYa sabemos que **Express.js** tiene una CLI que genera un proyecto, pero ahora vamos a convertir, en la medida de mis limitadas capacidades, en la sintaxis de ECMAScript 2016. Veamos si el resultado es exitoso.\r\n\r\n## Instalaci\u00f3n de la CLI de Express\r\n\r\nPrimero, vamos a instalar el generador, instalando `express` como paquete global.\r\n\r\n```terminal256\r\nyarn global add express\r\n```\r\n\r\nCon esto, estamos en posibilidad de usar la CLI. Estas son las opciones de generaci\u00f3n.\r\n\r\n```terminal256\r\n$ express -h                                                                                                                           \r\n\r\n  Usage: express [options] [dir]\r\n\r\n  Options:\r\n\r\n    -h, --help           output usage information\r\n        --version        output the version number\r\n    -e, --ejs            add ejs engine support\r\n        --pug            add pug engine support\r\n        --hbs            add handlebars engine support\r\n    -H, --hogan          add hogan.js engine support\r\n    -v, --view <engine>  add view <engine> support (dust|ejs|hbs|hjs|jade|pug|twig|vash) (defaults to jade)\r\n    -c, --css <engine>   add stylesheet <engine> support (less|stylus|compass|sass) (defaults to plain css)\r\n        --git            add .gitignore\r\n    -f, --force          force on non-empty directory\r\n```\r\n\r\n## Generaci\u00f3n del proyecto\r\n\r\nBien, vamos usar como motor de plantillas Handlebars, con la opci\u00f3n  `--view hbs`, el preprocesador de estilos ser\u00e1 Sass, ` --css saas` y queremos que genere un archivo `.gitignore`. As\u00ed que esta es la l\u00ednea que usaremos,\r\n\r\n```terminal256\r\n$ express --view hbs --css sass --git nspaces \r\n```\r\n\r\nY este es el resultado:\r\n\r\n```terminal256\r\n   create : nspaces\r\n   create : nspaces/package.json\r\n   create : nspaces/app.js\r\n   create : nspaces/.gitignore\r\n   create : nspaces/public\r\n   create : nspaces/routes\r\n   create : nspaces/routes/index.js\r\n   create : nspaces/routes/users.js\r\n   create : nspaces/views\r\n   create : nspaces/views/index.hbs\r\n   create : nspaces/views/layout.hbs\r\n   create : nspaces/views/error.hbs\r\n   create : nspaces/bin\r\n   create : nspaces/bin/www\r\n   create : nspaces/public/javascripts\r\n   create : nspaces/public/images\r\n   create : nspaces/public/stylesheets\r\n   create : nspaces/public/stylesheets/style.sass\r\n\r\n   install dependencies:\r\n     $ cd nspaces && npm install\r\n\r\n   run the app:\r\n     $ DEBUG=nspaces:* npm start\r\n```\r\n\r\nComo podemos ver, creo cuatro directorios:\r\n\r\n* `bin` \u2014 que contiene solo un archivo, llamado `www` y es el que ejecuta el proyecto.\r\n* `public` \u2014 contiene los archivos de plantillas, los scripts del _front-end_ y los estilos. \r\n*  `routes` \u2014 Contiene dos archivos, uno llamado `\u00edndex.js` y otro llamado `users.js`.\r\n* `views` \u2014 Contiene plantillas de _Handlebars_, la base, una para errores y el \u00edndice.\r\n\r\nHay tambi\u00e9n un archivo `app.js`, uno `.gitignore` y un `package.json`.\r\n\r\n\r\n### Archivo `.gitignore`\r\n\r\nIgnora los archivos comunes del desarrollo con **Node.js**. No hay ninguna sorpresa, as\u00ed que lo dejamos como esta.\r\n\r\n### Archivo `packages.json`\r\nEste es el contenido:\r\n\r\n```json\r\n{\r\n  \"name\": \"nspaces\",\r\n  \"version\": \"0.0.0\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"start\": \"node ./bin/www\"\r\n  },\r\n  \"dependencies\": {\r\n    \"body-parser\": \"~1.17.1\",\r\n    \"cookie-parser\": \"~1.4.3\",\r\n    \"debug\": \"~2.6.3\",\r\n    \"express\": \"~4.15.2\",\r\n    \"hbs\": \"~4.0.1\",\r\n    \"morgan\": \"~1.8.1\",\r\n    \"node-sass-middleware\": \"0.9.8\",\r\n    \"serve-favicon\": \"~2.4.2\"\r\n  }\r\n}\r\n```\r\n\r\nLa principal modificaci\u00f3n que vamos a hacer es que vamos a agregar las dependencias de **Babel** y modificaremos el _script_ de arranque.\r\n\r\n```16m\r\nyarn add --dev babel-cli babel-preset-es2015\r\n```\r\n\r\nEsto agrega una nueva secci\u00f3n a nuestro archivo, que junto con la configuraci\u00f3n de Babel, se ve as\u00ed:\r\n\r\n```json\r\n  \"devDependencies\": {\r\n    \"babel-cli\": \"^6.24.1\",\r\n    \"babel-preset-es2015\": \"^6.24.1\"\r\n  },\r\n  \"babel\": {\r\n    \"presets\": [\"es2015\"]\r\n  }\r\n```\r\n\r\nVamos a cambiar el comando del script `start`, de `node` a `babel-node` y estamos listos para instalar el resto de las dependencias y probar si funciona Babel tal como est\u00e1 el proyecto actualmente.\r\n\r\n```16m\r\n$ yarn start\r\nyarn start v0.24.5\r\n$ babel-node ./bin/www\r\nGET / 200 186.270 ms - 204\r\n```\r\n\r\nNo hay nada que indique que el servidor ya arranc\u00f3 o el puerto en el que est\u00e1 funcionando, pero si visitamos la p\u00e1gina `http://localhost:3000` podemos ver el resultado esperado. Ya podemos empezar a refactorizar.\r\n\r\n## Refactorizabdo `app.js`\r\nEmpezaremos con este archivo, cambiando las l\u00edneas como esta\r\n\r\n```js\r\nvar express = require('express');\r\n```\r\n\r\na esto\r\n\r\n```js\r\nimport express from 'express'\r\n```\r\n\r\nNuestros `import` se ven as\u00ed:\r\n\r\n```js\r\nimport express from 'express'\r\nimport path from 'path'\r\nimport favicon from 'serve-favicon'\r\nimport logger from 'morgan'\r\nimport cookieParser from 'cookie-parser'\r\nimport bodyParser from 'body-parser'\r\nimport sassMiddleware from 'node-sass-middleware'\r\n```\r\n\r\ny no hemos roto nada.  Pero ahora siguen las rutas, donde se importan archivos locales, veamos si podemos usar la misma estructura.\r\n\r\nLos cambiamos por esto:\r\n\r\n```js\r\nimport index from './routes/index'\r\nimport users from './routes/users'\r\n```\r\n\r\ny todo sigue funcionando.\r\n\r\nLa l\u00ednea \r\n\r\n```js\r\nvar app = express();\r\n```\r\n\r\ncambia a \r\n```js\r\nlet app = express()\r\n```\r\n\r\nLa configuraci\u00f3n del motor de plantillas no requiere nada (solo quit\u00e9 el punto y coma) y se ve igual\r\n\r\n```js\r\n// configuracion del motor de plantillas\r\napp.set('views', path.join(__dirname, 'views'))\r\napp.set('view engine', 'hbs')\r\n```\r\n\r\nLa configuraci\u00f3n del _favicon_, la bit\u00e1cora, el analizador de contenido `bodyParser` y de _cookies_, `cookieParser` tampoco cambia.\r\n\r\n### Cambiando a SCSS\r\nAqu\u00ed damos un peque\u00f1o brinco, porque pasamos de Sass a SCSS. El cambio es solo cuesti\u00f3n de gustos. La plantilla cambia a esto:\r\n\r\n```scss\r\nbody {\r\n  padding: 50px;\r\n  font: 14px \"Noto Sans\", Helvetica, Arial, sans-serif;\r\n}\r\n\r\na {\r\n  color: indianred;\r\n}\r\n```\r\n\r\nDado el cambio en el procesador, de regreso en `app.js` hacemos los ajustes necesarios.\r\n\r\n```js\r\napp.use(sassMiddleware({\r\n  src: path.join(__dirname, 'public'),\r\n  dest: path.join(__dirname, 'public'),\r\n  indentedSyntax: false, // true = .sass and false = .scss\r\n  sourceMap: true\r\n}));\r\n```\r\n\r\nLas rutas no cambian\u2026\r\n\r\n```js\r\napp.use('/', index)\r\napp.use('/users', users)\r\n```\r\n\r\nNi el generador de errores 404\u2026\r\n\r\n```js\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found')\r\n  err.status = 404\r\n  next(err)\r\n})\r\n```\r\n\r\nEl siguiente manejado de errores, tampoco lo tocamos\u2026\r\n\r\n```js\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {}\r\n\r\n  // render the error page\r\n  res.status(err.status || 500)\r\n  res.render('error')\r\n})\r\n```\r\n\r\nPor \u00faltimo, exportamos la app. Sin cambios.\r\n\r\n```js\r\nmodule.exports = app\r\n```\r\n\r\n## Refactorizando `bin`, primera parte\r\nNo me atrevo con este archivo, pero haremos el primer intento.\r\n\r\nPrimero cambiamos la l\u00ednea que importa `app`, para dejarla as\u00ed:\r\n\r\n```js\r\nimport app from '../app'    // var app = require('../app');\r\n```\r\n\r\nLa siguiente l\u00ednea es esta:\r\n\r\n```js\r\nvar debug = require('debug')('nspaces:server');\r\n```\r\n\r\nY la cambiar\u00e9 en dos l\u00edneas, creo\u2026\r\n\r\n```js\r\nimport Debug from 'debug'\r\nlet debug = Debug('nspaces:server')\r\n```\r\n\r\nUfff,  que suerte. Funcion\u00f3.\r\n\r\nHay una funci\u00f3n llamada `normalizarPuerto`, que al cambiarla a `let` debe colocarse **antes** de su primer uso, quedando as\u00ed:\r\n\r\n```js\r\n/**\r\n * Normalizamos un puerto a n\u00famero, cadena o false\r\n */\r\nlet normalizarPuerto = (val) => {\r\n  let port = parseInt(val, 10)\r\n  if (isNaN(port)) return val\r\n  if (port >= 0) return port\r\n  return false\r\n}\r\n\r\n/**\r\n * El puerto lo obtenemos del entorno...\r\n */\r\nlet port = normalizarPuerto(process.env.PORT || '3000')\r\napp.set('port', port)\r\n```\r\n\r\nY lo mismo va a pasar con la funci\u00f3n `siHayError`\u2026\r\n\r\n```js\r\n/**\r\n * Event listener for HTTP server \"error\" event.\r\n */\r\nlet siHayError = (error) => {\r\n  if (error.syscall !== 'listen') throw error\r\n  let bind = typeof port == 'string' ? `Pipe ${port}` : `Puerto ${port}`\r\n  // manejamos los errores con mensajes amigables\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      console.error(`${bind} requiere de mayores privilefios`)\r\n      process.exit(1)\r\n      break\r\n    case 'EADDRINUSE':\r\n      console.error(`El ${bind} ya est\u00e1 en uso`)\r\n      process.exit(1)\r\n      break;\r\n    default:\r\n      throw error\r\n  }\r\n}\r\n```\r\n\r\n\u2026 y con `alEscuchar`\u2026\r\n\r\n```js\r\n/**\r\n * alEscuchar es un evento de \"escucha\" del servidor HTTP.\r\n */\r\nlet alEscuchar = () => {\r\n  let direccion = server.address()\r\n  let bind = typeof direccion === 'string' ? `el pipe ${direccion}` : `el puerto ${direccion.puerto}`\r\n  debug(`Escuchando en ${bind}`)\r\n}\r\n```\r\n\r\nAl final el archivo se ve de esta manera:\r\n\r\n```js\r\n/**\r\n * Module dependencies.\r\n */\r\nimport app from '../app'\r\nimport http from 'http'\r\nimport Debug from 'debug'\r\n\r\nlet debug = Debug('nspaces:server')\r\n\r\n/**\r\n * Normalizamos un puerto a n\u00famero, cadena o false\r\n */\r\nlet normalizarPuerto = (val) => {\r\n  let puerto = parseInt(val, 10)\r\n  if (isNaN(puerto)) return val\r\n  if (puerto >= 0) return puerto\r\n  return false\r\n}\r\n\r\n/**\r\n * Event listener for HTTP server \"error\" event.\r\n */\r\nlet siHayError = (error) => {\r\n  if (error.syscall !== 'listen') throw error\r\n  let bind = typeof port == 'string' ? `Pipe ${port}` : `Puerto ${port}`\r\n  // manejamos los errores con mensajes amigables\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      console.error(`${bind} requiere de mayores privilefios`)\r\n      process.exit(1)\r\n      break\r\n    case 'EADDRINUSE':\r\n      console.error(`El ${bind} ya est\u00e1 en uso`)\r\n      process.exit(1)\r\n      break;\r\n    default:\r\n      throw error\r\n  }\r\n}\r\n\r\n/**\r\n * alEscuchar es un evento de \"escucha\" del servidor HTTP.\r\n */\r\nlet alEscuchar = () => {\r\n  let direccion = server.address()\r\n  let bind = typeof direccion === 'string' ? `el pipe ${direccion}` : `el puerto ${direccion.port}`\r\n  debug(`Escuchando en ${bind}`)\r\n}\r\n\r\n/**\r\n * El puerto lo obtenemos del entorno...\r\n */\r\nconst puerto = normalizarPuerto(process.env.PORT || '3000')\r\napp.set('port', puerto)\r\n\r\n/**\r\n * Creamos el servidor HTTP...\r\n */\r\nconst server = http.createServer(app);\r\n\r\n/**\r\n * Escuchamos el puerto determinado y todas las interfaces de red...\r\n */\r\nserver.listen(puerto)\r\nserver.on('error', siHayError)\r\nserver.on('listening', alEscuchar)\r\n```\r\n\r\n## Refactorizando las rutas\r\nEstos archivos son peque\u00f1os, as\u00ed que es f\u00e1cil refactorizarlos.\r\n\r\nEste el archivo `routes/index.js` refactorizado:\r\n\r\n```js\r\nimport express from 'express'\r\nlet _rutaIndex = express.Router()\r\n\r\n/* GET de la portada */\r\n_rutaIndex.get('/', (req, res, next) => res.render('index', { title: 'nSpaces' }))\r\n\r\nmodule.exports = _rutaIndex\r\n```\r\n\r\nY este es el archivo `routes/users.js`\r\n\r\n```js\r\nimport express from 'express'\r\nlet _rutaUsers = express.Router()\r\n\r\n/* De usuarios, creo. */\r\n_rutaUsers.get('/', (req, res, next) => res.send(`respondiendo con un recurso`))\r\n\r\nmodule.exports = _rutaUsers\r\n```\r\n\r\n## Refactorizando las plantillas\r\nRealmente la \u00fanica que requiere cambios es `index.hbs` y solo implica cambiar el `Welcome to` a `Bienvenido a`\u2026 \r\n\r\n```jinja\r\n<h1>{{title}}</h1>\r\n<p>Bienvenido a {{title}}</p>\r\n```\r\n\r\n## Liberando la versi\u00f3n refactorizada\r\nComo ya est\u00e1 listo el proyecto con la sintaxis de **ES6**, vamos a liberar una versi\u00f3n para que podamos usarla en futuros desarrollos.\r\n\r\nEsta es la p\u00e1gina del proyecto [nSpaces en GitHub](https://github.com/jstoledano/nspaces/releases/tag/v0.1.0) versi\u00f3n **v0.1.0** firmada con GnuPG para mayor seguridad.", "extend": "", "pub_date": "2017-05-22T23:57:47Z", "summary_html": "<p>Convertir una aplicaci\u00f3n a la versi\u00f3n ECMAScript 6, es un ejercicio simple pero que nos ayuda a mejorar la comprensi\u00f3n de este lenguaje.</p>", "body_html": "<p>Ya sabemos que <strong>Express.js</strong> tiene una CLI que genera un proyecto, pero ahora vamos a convertir, en la medida de mis limitadas capacidades, en la sintaxis de ECMAScript 2016. Veamos si el resultado es exitoso.</p>\n<h2 id=\"instalacion-de-la-cli-de-express\">Instalaci\u00f3n de la CLI de Express</h2>\n<p>Primero, vamos a instalar el generador, instalando <code>express</code> como paquete global.</p>\n<div class=\"codehilite\"><pre><span></span>yarn global add express\n</pre></div>\n\n\n<p>Con esto, estamos en posibilidad de usar la CLI. Estas son las opciones de generaci\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span>$ express -h                                                                                                                           \n\n  Usage: express <span class=\"o\">[</span>options<span class=\"o\">]</span> <span class=\"o\">[</span>dir<span class=\"o\">]</span>\n\n  Options:\n\n    -h, --help           output usage information\n        --version        output the version number\n    -e, --ejs            add ejs engine support\n        --pug            add pug engine support\n        --hbs            add handlebars engine support\n    -H, --hogan          add hogan.js engine support\n    -v, --view &lt;engine&gt;  add view &lt;engine&gt; support <span class=\"o\">(</span>dust<span class=\"p\">|</span>ejs<span class=\"p\">|</span>hbs<span class=\"p\">|</span>hjs<span class=\"p\">|</span>jade<span class=\"p\">|</span>pug<span class=\"p\">|</span>twig<span class=\"p\">|</span>vash<span class=\"o\">)</span> <span class=\"o\">(</span>defaults to jade<span class=\"o\">)</span>\n    -c, --css &lt;engine&gt;   add stylesheet &lt;engine&gt; support <span class=\"o\">(</span>less<span class=\"p\">|</span>stylus<span class=\"p\">|</span>compass<span class=\"p\">|</span>sass<span class=\"o\">)</span> <span class=\"o\">(</span>defaults to plain css<span class=\"o\">)</span>\n        --git            add .gitignore\n    -f, --force          force on non-empty directory\n</pre></div>\n\n\n<h2 id=\"generacion-del-proyecto\">Generaci\u00f3n del proyecto</h2>\n<p>Bien, vamos usar como motor de plantillas Handlebars, con la opci\u00f3n  <code>--view hbs</code>, el preprocesador de estilos ser\u00e1 Sass, <code>--css saas</code> y queremos que genere un archivo <code>.gitignore</code>. As\u00ed que esta es la l\u00ednea que usaremos,</p>\n<div class=\"codehilite\"><pre><span></span>$ express --view hbs --css sass --git nspaces \n</pre></div>\n\n\n<p>Y este es el resultado:</p>\n<div class=\"codehilite\"><pre><span></span>   create : nspaces\n   create : nspaces/package.json\n   create : nspaces/app.js\n   create : nspaces/.gitignore\n   create : nspaces/public\n   create : nspaces/routes\n   create : nspaces/routes/index.js\n   create : nspaces/routes/users.js\n   create : nspaces/views\n   create : nspaces/views/index.hbs\n   create : nspaces/views/layout.hbs\n   create : nspaces/views/error.hbs\n   create : nspaces/bin\n   create : nspaces/bin/www\n   create : nspaces/public/javascripts\n   create : nspaces/public/images\n   create : nspaces/public/stylesheets\n   create : nspaces/public/stylesheets/style.sass\n\n   install dependencies:\n     $ cd nspaces &amp;&amp; npm install\n\n   run the app:\n     $ DEBUG=nspaces:* npm start\n</pre></div>\n\n\n<p>Como podemos ver, creo cuatro directorios:</p>\n<ul>\n<li><code>bin</code> \u2014 que contiene solo un archivo, llamado <code>www</code> y es el que ejecuta el proyecto.</li>\n<li><code>public</code> \u2014 contiene los archivos de plantillas, los scripts del <em>front-end</em> y los estilos. </li>\n<li><code>routes</code> \u2014 Contiene dos archivos, uno llamado <code>\u00edndex.js</code> y otro llamado <code>users.js</code>.</li>\n<li><code>views</code> \u2014 Contiene plantillas de <em>Handlebars</em>, la base, una para errores y el \u00edndice.</li>\n</ul>\n<p>Hay tambi\u00e9n un archivo <code>app.js</code>, uno <code>.gitignore</code> y un <code>package.json</code>.</p>\n<h3 id=\"archivo-gitignore\">Archivo <code>.gitignore</code></h3>\n<p>Ignora los archivos comunes del desarrollo con <strong>Node.js</strong>. No hay ninguna sorpresa, as\u00ed que lo dejamos como esta.</p>\n<h3 id=\"archivo-packagesjson\">Archivo <code>packages.json</code></h3>\n<p>Este es el contenido:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;nspaces&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.0.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;private&quot;</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;scripts&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;start&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;node ./bin/www&quot;</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">&quot;dependencies&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;body-parser&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;~1.17.1&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;cookie-parser&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;~1.4.3&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;debug&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;~2.6.3&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;express&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;~4.15.2&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;hbs&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;~4.0.1&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;morgan&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;~1.8.1&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;node-sass-middleware&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.9.8&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;serve-favicon&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;~2.4.2&quot;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>La principal modificaci\u00f3n que vamos a hacer es que vamos a agregar las dependencias de <strong>Babel</strong> y modificaremos el <em>script</em> de arranque.</p>\n<div class=\"codehilite\"><pre><span></span>yarn add --dev babel-cli babel-preset-es2015\n</pre></div>\n\n\n<p>Esto agrega una nueva secci\u00f3n a nuestro archivo, que junto con la configuraci\u00f3n de Babel, se ve as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"s2\">&quot;devDependencies&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;babel-cli&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^6.24.1&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;babel-preset-es2015&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^6.24.1&quot;</span>\n  <span class=\"p\">}</span><span class=\"err\">,</span>\n  <span class=\"s2\">&quot;babel&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;presets&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;es2015&quot;</span><span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Vamos a cambiar el comando del script <code>start</code>, de <code>node</code> a <code>babel-node</code> y estamos listos para instalar el resto de las dependencias y probar si funciona Babel tal como est\u00e1 el proyecto actualmente.</p>\n<div class=\"codehilite\"><pre><span></span>$ yarn start\nyarn start v0.24.5\n$ babel-node ./bin/www\nGET / <span class=\"m\">200</span> <span class=\"m\">186</span>.270 ms - <span class=\"m\">204</span>\n</pre></div>\n\n\n<p>No hay nada que indique que el servidor ya arranc\u00f3 o el puerto en el que est\u00e1 funcionando, pero si visitamos la p\u00e1gina <code>http://localhost:3000</code> podemos ver el resultado esperado. Ya podemos empezar a refactorizar.</p>\n<h2 id=\"refactorizabdo-appjs\">Refactorizabdo <code>app.js</code></h2>\n<p>Empezaremos con este archivo, cambiando las l\u00edneas como esta</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nx\">express</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;express&#39;</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>a esto</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">express</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;express&#39;</span>\n</pre></div>\n\n\n<p>Nuestros <code>import</code> se ven as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">express</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;express&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">path</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;path&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">favicon</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;serve-favicon&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">logger</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;morgan&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">cookieParser</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;cookie-parser&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">bodyParser</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;body-parser&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">sassMiddleware</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;node-sass-middleware&#39;</span>\n</pre></div>\n\n\n<p>y no hemos roto nada.  Pero ahora siguen las rutas, donde se importan archivos locales, veamos si podemos usar la misma estructura.</p>\n<p>Los cambiamos por esto:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">index</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;./routes/index&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">users</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;./routes/users&#39;</span>\n</pre></div>\n\n\n<p>y todo sigue funcionando.</p>\n<p>La l\u00ednea </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">();</span>\n</pre></div>\n\n\n<p>cambia a </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>La configuraci\u00f3n del motor de plantillas no requiere nada (solo quit\u00e9 el punto y coma) y se ve igual</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// configuracion del motor de plantillas</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;views&#39;</span><span class=\"p\">,</span> <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"s1\">&#39;views&#39;</span><span class=\"p\">))</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;view engine&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hbs&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>La configuraci\u00f3n del <em>favicon</em>, la bit\u00e1cora, el analizador de contenido <code>bodyParser</code> y de <em>cookies</em>, <code>cookieParser</code> tampoco cambia.</p>\n<h3 id=\"cambiando-a-scss\">Cambiando a SCSS</h3>\n<p>Aqu\u00ed damos un peque\u00f1o brinco, porque pasamos de Sass a SCSS. El cambio es solo cuesti\u00f3n de gustos. La plantilla cambia a esto:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">body</span> <span class=\"p\">{</span>\n  <span class=\"nt\">padding</span><span class=\"nd\">:</span> <span class=\"nt\">50px</span><span class=\"o\">;</span>\n  <span class=\"nt\">font</span><span class=\"nd\">:</span> <span class=\"nt\">14px</span> <span class=\"s2\">&quot;Noto Sans&quot;</span><span class=\"o\">,</span> <span class=\"nt\">Helvetica</span><span class=\"o\">,</span> <span class=\"nt\">Arial</span><span class=\"o\">,</span> <span class=\"nt\">sans-serif</span><span class=\"o\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"nt\">a</span> <span class=\"p\">{</span>\n  <span class=\"nt\">color</span><span class=\"nd\">:</span> <span class=\"nt\">indianred</span><span class=\"o\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Dado el cambio en el procesador, de regreso en <code>app.js</code> hacemos los ajustes necesarios.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">sassMiddleware</span><span class=\"p\">({</span>\n  <span class=\"nx\">src</span><span class=\"o\">:</span> <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"s1\">&#39;public&#39;</span><span class=\"p\">),</span>\n  <span class=\"nx\">dest</span><span class=\"o\">:</span> <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"s1\">&#39;public&#39;</span><span class=\"p\">),</span>\n  <span class=\"nx\">indentedSyntax</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"c1\">// true = .sass and false = .scss</span>\n  <span class=\"nx\">sourceMap</span><span class=\"o\">:</span> <span class=\"kc\">true</span>\n<span class=\"p\">}));</span>\n</pre></div>\n\n\n<p>Las rutas no cambian\u2026</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"s1\">&#39;/&#39;</span><span class=\"p\">,</span> <span class=\"nx\">index</span><span class=\"p\">)</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"s1\">&#39;/users&#39;</span><span class=\"p\">,</span> <span class=\"nx\">users</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Ni el generador de errores 404\u2026</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// catch 404 and forward to error handler</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">,</span> <span class=\"nx\">next</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">err</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"s1\">&#39;Not Found&#39;</span><span class=\"p\">)</span>\n  <span class=\"nx\">err</span><span class=\"p\">.</span><span class=\"nx\">status</span> <span class=\"o\">=</span> <span class=\"mi\">404</span>\n  <span class=\"nx\">next</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>El siguiente manejado de errores, tampoco lo tocamos\u2026</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// error handler</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">,</span> <span class=\"nx\">next</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// set locals, only providing error in development</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">locals</span><span class=\"p\">.</span><span class=\"nx\">message</span> <span class=\"o\">=</span> <span class=\"nx\">err</span><span class=\"p\">.</span><span class=\"nx\">message</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">locals</span><span class=\"p\">.</span><span class=\"nx\">error</span> <span class=\"o\">=</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">)</span> <span class=\"o\">===</span> <span class=\"s1\">&#39;development&#39;</span> <span class=\"o\">?</span> <span class=\"nx\">err</span> <span class=\"o\">:</span> <span class=\"p\">{}</span>\n\n  <span class=\"c1\">// render the error page</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">status</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">.</span><span class=\"nx\">status</span> <span class=\"o\">||</span> <span class=\"mi\">500</span><span class=\"p\">)</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Por \u00faltimo, exportamos la app. Sin cambios.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"nx\">app</span>\n</pre></div>\n\n\n<h2 id=\"refactorizando-bin-primera-parte\">Refactorizando <code>bin</code>, primera parte</h2>\n<p>No me atrevo con este archivo, pero haremos el primer intento.</p>\n<p>Primero cambiamos la l\u00ednea que importa <code>app</code>, para dejarla as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">app</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../app&#39;</span>    <span class=\"c1\">// var app = require(&#39;../app&#39;);</span>\n</pre></div>\n\n\n<p>La siguiente l\u00ednea es esta:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nx\">debug</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;debug&#39;</span><span class=\"p\">)(</span><span class=\"s1\">&#39;nspaces:server&#39;</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>Y la cambiar\u00e9 en dos l\u00edneas, creo\u2026</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">Debug</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;debug&#39;</span>\n<span class=\"kd\">let</span> <span class=\"nx\">debug</span> <span class=\"o\">=</span> <span class=\"nx\">Debug</span><span class=\"p\">(</span><span class=\"s1\">&#39;nspaces:server&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Ufff,  que suerte. Funcion\u00f3.</p>\n<p>Hay una funci\u00f3n llamada <code>normalizarPuerto</code>, que al cambiarla a <code>let</code> debe colocarse <strong>antes</strong> de su primer uso, quedando as\u00ed:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/**</span>\n<span class=\"cm\"> * Normalizamos un puerto a n\u00famero, cadena o false</span>\n<span class=\"cm\"> */</span>\n<span class=\"kd\">let</span> <span class=\"nx\">normalizarPuerto</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">val</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">port</span> <span class=\"o\">=</span> <span class=\"nb\">parseInt</span><span class=\"p\">(</span><span class=\"nx\">val</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">isNaN</span><span class=\"p\">(</span><span class=\"nx\">port</span><span class=\"p\">))</span> <span class=\"k\">return</span> <span class=\"nx\">val</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">port</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">port</span>\n  <span class=\"k\">return</span> <span class=\"kc\">false</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * El puerto lo obtenemos del entorno...</span>\n<span class=\"cm\"> */</span>\n<span class=\"kd\">let</span> <span class=\"nx\">port</span> <span class=\"o\">=</span> <span class=\"nx\">normalizarPuerto</span><span class=\"p\">(</span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">PORT</span> <span class=\"o\">||</span> <span class=\"s1\">&#39;3000&#39;</span><span class=\"p\">)</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;port&#39;</span><span class=\"p\">,</span> <span class=\"nx\">port</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Y lo mismo va a pasar con la funci\u00f3n <code>siHayError</code>\u2026</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/**</span>\n<span class=\"cm\"> * Event listener for HTTP server &quot;error&quot; event.</span>\n<span class=\"cm\"> */</span>\n<span class=\"kd\">let</span> <span class=\"nx\">siHayError</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">syscall</span> <span class=\"o\">!==</span> <span class=\"s1\">&#39;listen&#39;</span><span class=\"p\">)</span> <span class=\"k\">throw</span> <span class=\"nx\">error</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">bind</span> <span class=\"o\">=</span> <span class=\"k\">typeof</span> <span class=\"nx\">port</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;string&#39;</span> <span class=\"o\">?</span> <span class=\"sb\">`Pipe </span><span class=\"si\">${</span><span class=\"nx\">port</span><span class=\"si\">}</span><span class=\"sb\">`</span> <span class=\"o\">:</span> <span class=\"sb\">`Puerto </span><span class=\"si\">${</span><span class=\"nx\">port</span><span class=\"si\">}</span><span class=\"sb\">`</span>\n  <span class=\"c1\">// manejamos los errores con mensajes amigables</span>\n  <span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">code</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"s1\">&#39;EACCES&#39;</span><span class=\"o\">:</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">bind</span><span class=\"si\">}</span><span class=\"sb\"> requiere de mayores privilefios`</span><span class=\"p\">)</span>\n      <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"k\">break</span>\n    <span class=\"k\">case</span> <span class=\"s1\">&#39;EADDRINUSE&#39;</span><span class=\"o\">:</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"sb\">`El </span><span class=\"si\">${</span><span class=\"nx\">bind</span><span class=\"si\">}</span><span class=\"sb\"> ya est\u00e1 en uso`</span><span class=\"p\">)</span>\n      <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"k\">default</span><span class=\"o\">:</span>\n      <span class=\"k\">throw</span> <span class=\"nx\">error</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>\u2026 y con <code>alEscuchar</code>\u2026</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/**</span>\n<span class=\"cm\"> * alEscuchar es un evento de &quot;escucha&quot; del servidor HTTP.</span>\n<span class=\"cm\"> */</span>\n<span class=\"kd\">let</span> <span class=\"nx\">alEscuchar</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">direccion</span> <span class=\"o\">=</span> <span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">address</span><span class=\"p\">()</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">bind</span> <span class=\"o\">=</span> <span class=\"k\">typeof</span> <span class=\"nx\">direccion</span> <span class=\"o\">===</span> <span class=\"s1\">&#39;string&#39;</span> <span class=\"o\">?</span> <span class=\"sb\">`el pipe </span><span class=\"si\">${</span><span class=\"nx\">direccion</span><span class=\"si\">}</span><span class=\"sb\">`</span> <span class=\"o\">:</span> <span class=\"sb\">`el puerto </span><span class=\"si\">${</span><span class=\"nx\">direccion</span><span class=\"p\">.</span><span class=\"nx\">puerto</span><span class=\"si\">}</span><span class=\"sb\">`</span>\n  <span class=\"nx\">debug</span><span class=\"p\">(</span><span class=\"sb\">`Escuchando en </span><span class=\"si\">${</span><span class=\"nx\">bind</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Al final el archivo se ve de esta manera:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/**</span>\n<span class=\"cm\"> * Module dependencies.</span>\n<span class=\"cm\"> */</span>\n<span class=\"kr\">import</span> <span class=\"nx\">app</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;../app&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">http</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;http&#39;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">Debug</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;debug&#39;</span>\n\n<span class=\"kd\">let</span> <span class=\"nx\">debug</span> <span class=\"o\">=</span> <span class=\"nx\">Debug</span><span class=\"p\">(</span><span class=\"s1\">&#39;nspaces:server&#39;</span><span class=\"p\">)</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * Normalizamos un puerto a n\u00famero, cadena o false</span>\n<span class=\"cm\"> */</span>\n<span class=\"kd\">let</span> <span class=\"nx\">normalizarPuerto</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">val</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">puerto</span> <span class=\"o\">=</span> <span class=\"nb\">parseInt</span><span class=\"p\">(</span><span class=\"nx\">val</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">isNaN</span><span class=\"p\">(</span><span class=\"nx\">puerto</span><span class=\"p\">))</span> <span class=\"k\">return</span> <span class=\"nx\">val</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">puerto</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">puerto</span>\n  <span class=\"k\">return</span> <span class=\"kc\">false</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * Event listener for HTTP server &quot;error&quot; event.</span>\n<span class=\"cm\"> */</span>\n<span class=\"kd\">let</span> <span class=\"nx\">siHayError</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">syscall</span> <span class=\"o\">!==</span> <span class=\"s1\">&#39;listen&#39;</span><span class=\"p\">)</span> <span class=\"k\">throw</span> <span class=\"nx\">error</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">bind</span> <span class=\"o\">=</span> <span class=\"k\">typeof</span> <span class=\"nx\">port</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;string&#39;</span> <span class=\"o\">?</span> <span class=\"sb\">`Pipe </span><span class=\"si\">${</span><span class=\"nx\">port</span><span class=\"si\">}</span><span class=\"sb\">`</span> <span class=\"o\">:</span> <span class=\"sb\">`Puerto </span><span class=\"si\">${</span><span class=\"nx\">port</span><span class=\"si\">}</span><span class=\"sb\">`</span>\n  <span class=\"c1\">// manejamos los errores con mensajes amigables</span>\n  <span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">code</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"s1\">&#39;EACCES&#39;</span><span class=\"o\">:</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">bind</span><span class=\"si\">}</span><span class=\"sb\"> requiere de mayores privilefios`</span><span class=\"p\">)</span>\n      <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"k\">break</span>\n    <span class=\"k\">case</span> <span class=\"s1\">&#39;EADDRINUSE&#39;</span><span class=\"o\">:</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"sb\">`El </span><span class=\"si\">${</span><span class=\"nx\">bind</span><span class=\"si\">}</span><span class=\"sb\"> ya est\u00e1 en uso`</span><span class=\"p\">)</span>\n      <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"k\">default</span><span class=\"o\">:</span>\n      <span class=\"k\">throw</span> <span class=\"nx\">error</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * alEscuchar es un evento de &quot;escucha&quot; del servidor HTTP.</span>\n<span class=\"cm\"> */</span>\n<span class=\"kd\">let</span> <span class=\"nx\">alEscuchar</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">direccion</span> <span class=\"o\">=</span> <span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">address</span><span class=\"p\">()</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">bind</span> <span class=\"o\">=</span> <span class=\"k\">typeof</span> <span class=\"nx\">direccion</span> <span class=\"o\">===</span> <span class=\"s1\">&#39;string&#39;</span> <span class=\"o\">?</span> <span class=\"sb\">`el pipe </span><span class=\"si\">${</span><span class=\"nx\">direccion</span><span class=\"si\">}</span><span class=\"sb\">`</span> <span class=\"o\">:</span> <span class=\"sb\">`el puerto </span><span class=\"si\">${</span><span class=\"nx\">direccion</span><span class=\"p\">.</span><span class=\"nx\">port</span><span class=\"si\">}</span><span class=\"sb\">`</span>\n  <span class=\"nx\">debug</span><span class=\"p\">(</span><span class=\"sb\">`Escuchando en </span><span class=\"si\">${</span><span class=\"nx\">bind</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * El puerto lo obtenemos del entorno...</span>\n<span class=\"cm\"> */</span>\n<span class=\"kr\">const</span> <span class=\"nx\">puerto</span> <span class=\"o\">=</span> <span class=\"nx\">normalizarPuerto</span><span class=\"p\">(</span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">PORT</span> <span class=\"o\">||</span> <span class=\"s1\">&#39;3000&#39;</span><span class=\"p\">)</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;port&#39;</span><span class=\"p\">,</span> <span class=\"nx\">puerto</span><span class=\"p\">)</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * Creamos el servidor HTTP...</span>\n<span class=\"cm\"> */</span>\n<span class=\"kr\">const</span> <span class=\"nx\">server</span> <span class=\"o\">=</span> <span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">createServer</span><span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">);</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * Escuchamos el puerto determinado y todas las interfaces de red...</span>\n<span class=\"cm\"> */</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">puerto</span><span class=\"p\">)</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">,</span> <span class=\"nx\">siHayError</span><span class=\"p\">)</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;listening&#39;</span><span class=\"p\">,</span> <span class=\"nx\">alEscuchar</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<h2 id=\"refactorizando-las-rutas\">Refactorizando las rutas</h2>\n<p>Estos archivos son peque\u00f1os, as\u00ed que es f\u00e1cil refactorizarlos.</p>\n<p>Este el archivo <code>routes/index.js</code> refactorizado:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">express</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;express&#39;</span>\n<span class=\"kd\">let</span> <span class=\"nx\">_rutaIndex</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"p\">()</span>\n\n<span class=\"cm\">/* GET de la portada */</span>\n<span class=\"nx\">_rutaIndex</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;/&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">,</span> <span class=\"nx\">next</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span><span class=\"s1\">&#39;index&#39;</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">title</span><span class=\"o\">:</span> <span class=\"s1\">&#39;nSpaces&#39;</span> <span class=\"p\">}))</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"nx\">_rutaIndex</span>\n</pre></div>\n\n\n<p>Y este es el archivo <code>routes/users.js</code></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">express</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;express&#39;</span>\n<span class=\"kd\">let</span> <span class=\"nx\">_rutaUsers</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"p\">()</span>\n\n<span class=\"cm\">/* De usuarios, creo. */</span>\n<span class=\"nx\">_rutaUsers</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;/&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">,</span> <span class=\"nx\">next</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"sb\">`respondiendo con un recurso`</span><span class=\"p\">))</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"nx\">_rutaUsers</span>\n</pre></div>\n\n\n<h2 id=\"refactorizando-las-plantillas\">Refactorizando las plantillas</h2>\n<p>Realmente la \u00fanica que requiere cambios es <code>index.hbs</code> y solo implica cambiar el <code>Welcome to</code> a <code>Bienvenido a</code>\u2026 </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">&lt;h1&gt;</span><span class=\"cp\">{{</span><span class=\"nv\">title</span><span class=\"cp\">}}</span><span class=\"x\">&lt;/h1&gt;</span>\n<span class=\"x\">&lt;p&gt;Bienvenido a </span><span class=\"cp\">{{</span><span class=\"nv\">title</span><span class=\"cp\">}}</span><span class=\"x\">&lt;/p&gt;</span>\n</pre></div>\n\n\n<h2 id=\"liberando-la-version-refactorizada\">Liberando la versi\u00f3n refactorizada</h2>\n<p>Como ya est\u00e1 listo el proyecto con la sintaxis de <strong>ES6</strong>, vamos a liberar una versi\u00f3n para que podamos usarla en futuros desarrollos.</p>\n<p>Esta es la p\u00e1gina del proyecto <a href=\"https://github.com/jstoledano/nspaces/releases/tag/v0.1.0\">nSpaces en GitHub</a> versi\u00f3n <strong>v0.1.0</strong> firmada con GnuPG para mayor seguridad.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "refactorizando-una-aplicacion-express", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 126, "fields": {"idx": "8bce756c-0535-48b1-8926-d65c83472177", "creado": "2017-07-29T05:57:20.350Z", "modificado": "2017-07-29T05:57:54.860Z", "title": "Radiograf\u00eda del proyecto Express", "summary": "Es muy importante conocer como funciona Express.js en su expresi\u00f3n m\u00e1s simple. En este art\u00edculo analizamos l\u00ednea por l\u00ednea cada archivo del proyecto generado por Express.", "body": "Title: Radiograf\u00eda del proyecto Express\r\nDate: 2017-05-22 19:11:01\r\nCategory: desarrollo\r\nTags: express, es6, node\r\nSummary: Es muy importante conocer como funciona Express.js en su expresi\u00f3n m\u00e1s simple. En este art\u00edculo analizamos l\u00ednea por l\u00ednea cada archivo del proyecto generado por Express.\r\n\r\n\r\nDespu\u00e9s de haber generado el proyecto y la refactorizaci\u00f3n\r\npara usar la sintaxis de ES6 y Babel, vamos a revisar los\r\narchivos que componen el proyecto y tratar de comprender el\r\npapel que cada uno de ellos juega en el proyecto.\r\n\r\n## El archivo `bin/server.js`\r\n\r\nEste es el archivo que arranca el servidor cuando lo\r\nllamamos desde el script de arranque. Debido a las funciones\r\nde apoyo que utiliza, el arranque del servidor aparece al\r\nfinal.\r\n\r\n    :::javascript\r\n    const port = normalizarPuerto(process.env.PORT || '3000')\r\n    app.set('port', port)\r\n    const server = http.createServer(app)\r\n    server.listen(port)\r\n    server.on('error', siHayError)\r\n    server.on('listening', alEscuchar)\r\n\r\n`const port = normalizarPuerto(process.env.PORT || '3000')`\r\nLa primera l\u00ednea crea la constante `port`. El valor lo toma\r\nde la variable de entorno `PORT` si existe, o lo establece\r\ncomo el 3000 por omisi\u00f3n.\r\n\r\n`app.set('port', port)`\r\nLa segunda l\u00ednea usa el m\u00e9todo [`.set()`][1] para almacenar\r\nel valor del puerto en la tabla de propiedades de `app`, el\r\nproblema es que no veo que se use este valor en ning\u00fan lado.\r\nNo hay ning\u00fan `app.get('port')`. Pero bueno, despu\u00e9s puedo\r\neliminar la constante y usar solo el _getter_.\r\n\r\n`const server = http.createServer(app)`\r\nLuego creamos un servidor, usando el m\u00e9todo\r\n`http.createServer(app)`. Este m\u00e9todo pertenece al n\u00facleo de\r\n__Node.js__ y recibe como par\u00e1metro opcional un _escuchador\r\nde solicitudes_ (`requestListener`) que autom\u00e1ticamente se\r\nagrega al _request_ o solicitud.\r\n\r\nEste m\u00e9todo devuelve una nueva instancia de\r\n[`http.Server`][2] que colocamos en la constante `server`.\r\n\r\n`server.listen(port)`\r\nEl m\u00e9todo `listen()` pertenece a `http`, pero lleva en la\r\nsolicitud la aplicaci\u00f3n de __Express.js__. No me queda claro\r\npor qu\u00e9 damos este rodeo, si seg\u00fan la documentaci\u00f3n del\r\nm\u00e9todo [`app.listen()`][3] podemos usar como un atajo.\r\nSospecho que tiene que ver con el m\u00f3dulo `Debug`, pero m\u00e1s\r\nadelante veremos como usar solo `app`.\r\n\r\n> Ya investigu\u00e9 y resulta que `http` proporciona algunos m\u00e9todos que\r\nno proporciona `express`. Y dado que __Express.js__ es mucho m\u00e1s que\r\nun servidor HTTP, delega estas funciones al vulgar y corriente\r\nm\u00f3dulo `http`. El creador del servido, explica en un\r\n[caso en GitHub][5] porque no es necesario.\r\n\r\nEn este momento, es cuando arranca el servidor e inicia el\r\n_Node Event Loop_ o ciclo de eventos de __Node.js__ que es\r\nlo que permite a nuestro proyecto que maneje m\u00faltiples\r\noperaciones tras bambalinas. El [_event loop_][4] es un\r\nconcepto muy importante que revisaremos a fondo\r\npr\u00f3ximamente.\r\n\r\nUna vez que ha arrancado el servidor, activamos dos monitores, uno de ellos para el manejo de errores y otro para monitorear el arranque:\r\n\r\n    :::javascript\r\n    server.on('error', siHayError)\r\n    server.on('listening', alEscuchar)\r\n\r\nEl primer monitor, escucha el evento `'error'` y cuando sucede lanza la funci\u00f3n `siHayError` que veremos a continuaci\u00f3n:\r\n\r\n    :::javascript\r\n    let siHayError = (error) => {\r\n      if (error.syscall !== 'listen') throw error\r\n      let bind = typeof port === 'string' ? `Pipe ${port}` : `Puerto ${port}`\r\n      // manejamos los errores con mensajes amigables\r\n      switch (error.code) {\r\n        case 'EACCES':\r\n          console.error(`${bind} requiere de mayores privilegios`)\r\n          process.exit(1)\r\n          break\r\n        case 'EADDRINUSE':\r\n          console.error(`El ${bind} ya est\u00e1 en uso`)\r\n          process.exit(1)\r\n          break\r\n        default:\r\n          throw error\r\n      }\r\n    }\r\n\r\nVeamos como funciona.\r\n\r\n    if (error.syscall !== 'listen') throw error \r\nEn la primera l\u00ednea verifica si el error _no es_ de escucha en cuyo caso, lanza el error al sistema.\r\n\r\n    `let bind = typeof port === 'string' ? `Pipe ${port}` : `Puerto ${port}` \r\nEsta l\u00ednea verifica si estamos mandado un n\u00famero de puerto o un control de flujo o _pipe_. Si es un texto, es un _pipe_, sino, es un puerto.\r\n\r\nLo siguiente es un bloque de elecci\u00f3n. Si el error es tipo `EACCES` significa que no tenemos permisos para usar ese puerto, por ejemplo el `80`. Si la direcci\u00f3n ya est\u00e1 en uso, el error ser\u00eda `EADDRINUSE`. De nuevo, este monitor solo busca errores al iniciar el servidor.\r\n\r\nSi el error no es alguno de esto, lo lanza sin procesar.\r\n\r\nEl siguiente monitor nos indica si el servidor est\u00e1 escuchando el puerto indicado.\r\n\r\n    :::js\r\n    let alEscuchar = () => {\r\n      let address = server.address()\r\n      let bind = typeof add === 'string' ? `el pipe ${address}` : `el puerto ${address.port}`\r\n      debug(`Escuchando en ${bind}`)\r\n    }\r\n\r\nVerifica la direcci\u00f3n y el puerto del objeto que pasa el servidor, igual que la funci\u00f3n `bind` del monitor anterior, determina si estamos usando un puerto o un control de flujo.\r\n\r\nEstos dos monitores usan la funci\u00f3n `debug` que busca que est\u00e9 presente en las variables de entorno la clave `DEBUG` con el valor `aspases:server`.\r\n\r\n## El archivo `app.js`\r\n\r\nEste es el archivo del servidor __Express.js__ propiamente dicho. Las primeras l\u00edneas sirven para importar los m\u00f3dulos que ocuparemos en el proyecto.\r\n\r\nLuego cargamos las rutas y preparamos la aplicaci\u00f3n `app`. Configuramos el motor de plantillas. Primero el directorio y luego el tipo espec\u00edfico.\r\n\r\nA continuaci\u00f3n, cargamos los m\u00f3dulos en la aplicaci\u00f3n. El que carga el _favicon_, la bit\u00e1cora, el analizador de contenido y de _cookies_, el preprocesador de estilos y por \u00faltimo, las rutas.\r\n\r\nUna peque\u00f1a funciono para capturar las solicitudes de p\u00e1ginas no encontradas. Y otra para los errores 500, que solo se muestra si estamos ejecutando el servidor con la bandera de `development`.\r\n\r\n## Los archivos de rutas\r\nLos archivos de rutas no son la gran cosa. El \u00edndice llama a la plantilla `index` y le pasa en el contexto la variable `title`.\r\n\r\nLa ruta `/users` solo imprime un mensaje _dummy_.\r\n\r\n## Las plantillas\r\n\r\nLa plantilla base o `layout.hbs` es una p\u00e1gina web m\u00ednima, con una variable `{{ title }}` y un bloque `{{{ body }}}`.\r\n\r\nLa plantilla `index` se dibuja sobre el bloque `body` y solo imprime la variable `title`. La plantilla error hace lo mismo, pero con el mensaje de error.\r\n\r\n---\r\nEsto es todo lo que hace el proyecto generado por la CLI de __Express.js__ y refactorizado para convertirlo con Babel en ES6.\r\n\r\nAhora si estamos listos para empezar con algo m\u00e1s serio.\r\n\r\n[1]: https://goo.gl/bruiI9\r\n[2]: https://goo.gl/pAC8ub\r\n[3]: https://goo.gl/2emoUq\r\n[4]: https://goo.gl/sznDdk\r\n[5]: https://goo.gl/geB79A", "extend": "", "pub_date": "2017-07-29T05:56:00Z", "summary_html": "<p>Es muy importante conocer como funciona Express.js en su expresi\u00f3n m\u00e1s simple. En este art\u00edculo analizamos l\u00ednea por l\u00ednea cada archivo del proyecto generado por Express.</p>", "body_html": "<p>Despu\u00e9s de haber generado el proyecto y la refactorizaci\u00f3n\npara usar la sintaxis de ES6 y Babel, vamos a revisar los\narchivos que componen el proyecto y tratar de comprender el\npapel que cada uno de ellos juega en el proyecto.</p>\n<h2 id=\"el-archivo-binserverjs\">El archivo <code>bin/server.js</code></h2>\n<p>Este es el archivo que arranca el servidor cuando lo\nllamamos desde el script de arranque. Debido a las funciones\nde apoyo que utiliza, el arranque del servidor aparece al\nfinal.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">port</span> <span class=\"o\">=</span> <span class=\"nx\">normalizarPuerto</span><span class=\"p\">(</span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">PORT</span> <span class=\"o\">||</span> <span class=\"s1\">&#39;3000&#39;</span><span class=\"p\">)</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;port&#39;</span><span class=\"p\">,</span> <span class=\"nx\">port</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">server</span> <span class=\"o\">=</span> <span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">createServer</span><span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">)</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">port</span><span class=\"p\">)</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">,</span> <span class=\"nx\">siHayError</span><span class=\"p\">)</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;listening&#39;</span><span class=\"p\">,</span> <span class=\"nx\">alEscuchar</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p><code>const port = normalizarPuerto(process.env.PORT || '3000')</code>\nLa primera l\u00ednea crea la constante <code>port</code>. El valor lo toma\nde la variable de entorno <code>PORT</code> si existe, o lo establece\ncomo el 3000 por omisi\u00f3n.</p>\n<p><code>app.set('port', port)</code>\nLa segunda l\u00ednea usa el m\u00e9todo <a href=\"https://goo.gl/bruiI9\"><code>.set()</code></a> para almacenar\nel valor del puerto en la tabla de propiedades de <code>app</code>, el\nproblema es que no veo que se use este valor en ning\u00fan lado.\nNo hay ning\u00fan <code>app.get('port')</code>. Pero bueno, despu\u00e9s puedo\neliminar la constante y usar solo el <em>getter</em>.</p>\n<p><code>const server = http.createServer(app)</code>\nLuego creamos un servidor, usando el m\u00e9todo\n<code>http.createServer(app)</code>. Este m\u00e9todo pertenece al n\u00facleo de\n<strong>Node.js</strong> y recibe como par\u00e1metro opcional un <em>escuchador\nde solicitudes</em> (<code>requestListener</code>) que autom\u00e1ticamente se\nagrega al <em>request</em> o solicitud.</p>\n<p>Este m\u00e9todo devuelve una nueva instancia de\n<a href=\"https://goo.gl/pAC8ub\"><code>http.Server</code></a> que colocamos en la constante <code>server</code>.</p>\n<p><code>server.listen(port)</code>\nEl m\u00e9todo <code>listen()</code> pertenece a <code>http</code>, pero lleva en la\nsolicitud la aplicaci\u00f3n de <strong>Express.js</strong>. No me queda claro\npor qu\u00e9 damos este rodeo, si seg\u00fan la documentaci\u00f3n del\nm\u00e9todo <a href=\"https://goo.gl/2emoUq\"><code>app.listen()</code></a> podemos usar como un atajo.\nSospecho que tiene que ver con el m\u00f3dulo <code>Debug</code>, pero m\u00e1s\nadelante veremos como usar solo <code>app</code>.</p>\n<blockquote>\n<p>Ya investigu\u00e9 y resulta que <code>http</code> proporciona algunos m\u00e9todos que\nno proporciona <code>express</code>. Y dado que <strong>Express.js</strong> es mucho m\u00e1s que\nun servidor HTTP, delega estas funciones al vulgar y corriente\nm\u00f3dulo <code>http</code>. El creador del servido, explica en un\n<a href=\"https://goo.gl/geB79A\">caso en GitHub</a> porque no es necesario.</p>\n</blockquote>\n<p>En este momento, es cuando arranca el servidor e inicia el\n<em>Node Event Loop</em> o ciclo de eventos de <strong>Node.js</strong> que es\nlo que permite a nuestro proyecto que maneje m\u00faltiples\noperaciones tras bambalinas. El <a href=\"https://goo.gl/sznDdk\"><em>event loop</em></a> es un\nconcepto muy importante que revisaremos a fondo\npr\u00f3ximamente.</p>\n<p>Una vez que ha arrancado el servidor, activamos dos monitores, uno de ellos para el manejo de errores y otro para monitorear el arranque:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">,</span> <span class=\"nx\">siHayError</span><span class=\"p\">)</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;listening&#39;</span><span class=\"p\">,</span> <span class=\"nx\">alEscuchar</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>El primer monitor, escucha el evento <code>'error'</code> y cuando sucede lanza la funci\u00f3n <code>siHayError</code> que veremos a continuaci\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">siHayError</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">syscall</span> <span class=\"o\">!==</span> <span class=\"s1\">&#39;listen&#39;</span><span class=\"p\">)</span> <span class=\"k\">throw</span> <span class=\"nx\">error</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">bind</span> <span class=\"o\">=</span> <span class=\"k\">typeof</span> <span class=\"nx\">port</span> <span class=\"o\">===</span> <span class=\"s1\">&#39;string&#39;</span> <span class=\"o\">?</span> <span class=\"sb\">`Pipe </span><span class=\"si\">${</span><span class=\"nx\">port</span><span class=\"si\">}</span><span class=\"sb\">`</span> <span class=\"o\">:</span> <span class=\"sb\">`Puerto </span><span class=\"si\">${</span><span class=\"nx\">port</span><span class=\"si\">}</span><span class=\"sb\">`</span>\n  <span class=\"c1\">// manejamos los errores con mensajes amigables</span>\n  <span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">code</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"s1\">&#39;EACCES&#39;</span><span class=\"o\">:</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">bind</span><span class=\"si\">}</span><span class=\"sb\"> requiere de mayores privilegios`</span><span class=\"p\">)</span>\n      <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"k\">break</span>\n    <span class=\"k\">case</span> <span class=\"s1\">&#39;EADDRINUSE&#39;</span><span class=\"o\">:</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"sb\">`El </span><span class=\"si\">${</span><span class=\"nx\">bind</span><span class=\"si\">}</span><span class=\"sb\"> ya est\u00e1 en uso`</span><span class=\"p\">)</span>\n      <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"k\">break</span>\n    <span class=\"k\">default</span><span class=\"o\">:</span>\n      <span class=\"k\">throw</span> <span class=\"nx\">error</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Veamos como funciona.</p>\n<div class=\"codehilite\"><pre><span></span>if (error.syscall !== &#39;listen&#39;) throw error\n</pre></div>\n\n\n<p>En la primera l\u00ednea verifica si el error <em>no es</em> de escucha en cuyo caso, lanza el error al sistema.</p>\n<div class=\"codehilite\"><pre><span></span>`let bind = typeof port === &#39;string&#39; ? `Pipe <span class=\"cp\">${</span><span class=\"n\">port</span><span class=\"cp\">}</span>` : `Puerto <span class=\"cp\">${</span><span class=\"n\">port</span><span class=\"cp\">}</span>`\n</pre></div>\n\n\n<p>Esta l\u00ednea verifica si estamos mandado un n\u00famero de puerto o un control de flujo o <em>pipe</em>. Si es un texto, es un <em>pipe</em>, sino, es un puerto.</p>\n<p>Lo siguiente es un bloque de elecci\u00f3n. Si el error es tipo <code>EACCES</code> significa que no tenemos permisos para usar ese puerto, por ejemplo el <code>80</code>. Si la direcci\u00f3n ya est\u00e1 en uso, el error ser\u00eda <code>EADDRINUSE</code>. De nuevo, este monitor solo busca errores al iniciar el servidor.</p>\n<p>Si el error no es alguno de esto, lo lanza sin procesar.</p>\n<p>El siguiente monitor nos indica si el servidor est\u00e1 escuchando el puerto indicado.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nx\">alEscuchar</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">address</span> <span class=\"o\">=</span> <span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">address</span><span class=\"p\">()</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">bind</span> <span class=\"o\">=</span> <span class=\"k\">typeof</span> <span class=\"nx\">add</span> <span class=\"o\">===</span> <span class=\"s1\">&#39;string&#39;</span> <span class=\"o\">?</span> <span class=\"sb\">`el pipe </span><span class=\"si\">${</span><span class=\"nx\">address</span><span class=\"si\">}</span><span class=\"sb\">`</span> <span class=\"o\">:</span> <span class=\"sb\">`el puerto </span><span class=\"si\">${</span><span class=\"nx\">address</span><span class=\"p\">.</span><span class=\"nx\">port</span><span class=\"si\">}</span><span class=\"sb\">`</span>\n  <span class=\"nx\">debug</span><span class=\"p\">(</span><span class=\"sb\">`Escuchando en </span><span class=\"si\">${</span><span class=\"nx\">bind</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Verifica la direcci\u00f3n y el puerto del objeto que pasa el servidor, igual que la funci\u00f3n <code>bind</code> del monitor anterior, determina si estamos usando un puerto o un control de flujo.</p>\n<p>Estos dos monitores usan la funci\u00f3n <code>debug</code> que busca que est\u00e9 presente en las variables de entorno la clave <code>DEBUG</code> con el valor <code>aspases:server</code>.</p>\n<h2 id=\"el-archivo-appjs\">El archivo <code>app.js</code></h2>\n<p>Este es el archivo del servidor <strong>Express.js</strong> propiamente dicho. Las primeras l\u00edneas sirven para importar los m\u00f3dulos que ocuparemos en el proyecto.</p>\n<p>Luego cargamos las rutas y preparamos la aplicaci\u00f3n <code>app</code>. Configuramos el motor de plantillas. Primero el directorio y luego el tipo espec\u00edfico.</p>\n<p>A continuaci\u00f3n, cargamos los m\u00f3dulos en la aplicaci\u00f3n. El que carga el <em>favicon</em>, la bit\u00e1cora, el analizador de contenido y de <em>cookies</em>, el preprocesador de estilos y por \u00faltimo, las rutas.</p>\n<p>Una peque\u00f1a funciono para capturar las solicitudes de p\u00e1ginas no encontradas. Y otra para los errores 500, que solo se muestra si estamos ejecutando el servidor con la bandera de <code>development</code>.</p>\n<h2 id=\"los-archivos-de-rutas\">Los archivos de rutas</h2>\n<p>Los archivos de rutas no son la gran cosa. El \u00edndice llama a la plantilla <code>index</code> y le pasa en el contexto la variable <code>title</code>.</p>\n<p>La ruta <code>/users</code> solo imprime un mensaje <em>dummy</em>.</p>\n<h2 id=\"las-plantillas\">Las plantillas</h2>\n<p>La plantilla base o <code>layout.hbs</code> es una p\u00e1gina web m\u00ednima, con una variable <code>{{ title }}</code> y un bloque <code>{{{ body }}}</code>.</p>\n<p>La plantilla <code>index</code> se dibuja sobre el bloque <code>body</code> y solo imprime la variable <code>title</code>. La plantilla error hace lo mismo, pero con el mensaje de error.</p>\n<hr>\n<p>Esto es todo lo que hace el proyecto generado por la CLI de <strong>Express.js</strong> y refactorizado para convertirlo con Babel en ES6.</p>\n<p>Ahora si estamos listos para empezar con algo m\u00e1s serio.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "radiografia-del-proyecto-express", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 127, "fields": {"idx": "2aab0b1c-bb8e-428c-a328-7a78c8b8472f", "creado": "2017-07-29T05:59:40.416Z", "modificado": "2017-07-29T05:59:40.416Z", "title": "C\u00f3mo funciona Express.js", "summary": "En este art\u00edculo conoceremos los principales componentes de Express.js: aplicaci\u00f3n, petici\u00f3n, respuesta y los middlewares.", "body": "Title: C\u00f3mo funciona Express.js\r\nDate: 2017-05-24 12:22:01\r\nCategory: desarrollo\r\nTags: express, es6, node, middleware\r\nSummary: En este art\u00edculo conoceremos los principales componentes de Express.js: aplicaci\u00f3n, petici\u00f3n, respuesta y los middlewares.\r\n\r\nEn t\u00e9rminos reales, __Express.js__ solo tiene tres componentes en su n\u00facleo, por lo que es relativamente f\u00e1cil aprenderlo. Estos componentes son: `app`, `req` y `res`. Pero un concepto b\u00e1sico son los *middlewares* y tambi\u00e9n los revisaremos.\r\n\r\n!!! notice \"Contenido\"\r\n    [TOC]\r\n\r\n## El objeto aplicaci\u00f3n\r\nEl objeto **aplicaci\u00f3n**, com\u00fanmente llamado `app` es una instancia de **Express.js**. Es el objeto principal de nuestra aplicaci\u00f3n y la gran mayor\u00eda de las funcionalidad del framework est\u00e1n construidas en \u00e9l.\r\n\r\nUna instancia de **Express.js** se crea de la siguiente manera:\r\n\r\n    :::javascript\r\n    import express from 'express'\r\n    let app = new express()\r\n\r\nEsta es una lista de las propiedades y m\u00e9todos disponibles en el objeto `aplicaci\u00f3n`:\r\n\r\n| Propiedad/M\u00e9todo | Descripci\u00f3n |\r\n|:--|:--|\r\n|`app.set(nombre, valor)`|Establece propiedades espec\u00edficas de la aplicaci\u00f3n|\r\n|`app.get(nombre)`|Recupera un valor establecido por `app.set()`|\r\n|`app.enable(nombre)`|Activa una configuraci\u00f3n en la app|\r\n|`app.disable(nombre)`|Desactiva una configuraci\u00f3n en la app|\r\n|`app.enabled(nombre)`|Verifica si una configuraci\u00f3n est\u00e1 activa|\r\n|`app.disabled(nombre)`|Verifica si una configuraci\u00f3n est\u00e1 inactiva|\r\n|`app.configure([env], callback)`|Condiciona la activaci\u00f3n de una configuraci\u00f3n a una variable de entorno|\r\n|`app.use([ruta], funci\u00f3n)`|Carga un _middleware_ en la app|\r\n|`app.engine(ext, callback)`|Registra un motor de plantillas|\r\n|`app.param([name], callback)`|Agrega par\u00e1metros a la rutas|\r\n|`app.VERBO(ruta, [callback...], callback)`|Define rutas y gestores para los verbos HTTP|\r\n|`app.all(ruta, [callback...], callback)`|Define rutas y gestores para cualquier ruta|\r\n|`app.locals`|Almacena variables accesibles desde cualquier vista|\r\n|`app.render(view, [opciones], callback)`|Renderiza la vista|\r\n|`app.routes`|Contiene una lista de las rutas definidas|\r\n|`app.listen()`|Crea el enlace que escucha las peticiones|\r\n\r\nLa documentaci\u00f3n de **Express.js** es excelente y una explicaci\u00f3n m\u00e1s ampl\u00eda de todos estos m\u00e9todos y propiedades se pueden consultar en la [Referencia de API][1].\r\n\r\n## El objeto petici\u00f3n\r\nEl objeto _\"petici\u00f3n\"_ de HTTP se crea cuando un cliente hace una petici\u00f3n a la app de **Express.js**. Este objeto, se representa por costumbre con la variable `req`, que contiene propiedades y m\u00e9todos relacionados con la petici\u00f3n actual.\r\n\r\nEstos son los m\u00e9todos y propiedades relacionados con el objeto `req`, as\u00ed como una breve descripci\u00f3n de los mismos.\r\n\r\n| Propiedad/M\u00e9todo | Descripci\u00f3n |\r\n|:--|:--|\r\n|`req.params`|Contiene los valores de los par\u00e1metros pasados a la URI|\r\n|`req.params(nombre)`|Regresa el valor del par\u00e1metro, ya sea GET o POST|\r\n|`req.query`|Contiene los valores enviados por un formulario v\u00eda GET|\r\n|`req.body`|Contiene los valores enviados por un formulario v\u00eda POST|\r\n|`req.files`|Contiene los archivos subidos por un formulario|\r\n|`req.route`|Proporciona detalles sobre la ruta actual|\r\n|`req.cookies`|Contiene los valores de las *cookies*|\r\n|`req.signedCookies`|Contiene los valores de las *cookies* firmadas|\r\n|`req.get(encabezado)`|Contiene los encabezados de la petici\u00f3n HTTP|\r\n|`req.accepts(tipos)`|Verifica si el cliente los tipos de medios indicados|\r\n|`req.is(tipo)`|Verifica si la petici\u00f3n entrante es de un tipo de medio en particular|\r\n|`req.ip`|La IP del cliente|\r\n|`req.ips`|La IP del cliente junto con todos los proxies a trav\u00e9s de los cuales se conecta|\r\n|`req.path`|La ruta solicitada|\r\n|`req.host`|_Hostname_ desde el encabezado HTTP|\r\n|`req.fresh`|Verifica si la solicitud todav\u00eda esta _fresca_|\r\n|`req.stale`|Verifica si la petici\u00f3n est\u00e1 congelada|\r\n|`req.xhr`|Verifica se la petici\u00f3n se hizo v\u00eda una solicitud AJAX|\r\n|`req.protocol`|El protocolo usado para hacer la petici\u00f3n|\r\n|`req.secure`|Verifica si la conexi\u00f3n es segura|\r\n|`req.subdomains`|Subdominios en el _hosts_|\r\n|`req.url`|La ruta de la petici\u00f3n, junto con los par\u00e1metros de consulta|\r\n|`req.originaUrl`|Se usa como respaldo de `req.url`|\r\n|`req.acceptedLanguages`|Una lista de los lenguajes aceptados por el cliente|\r\n|`req.acceptsLanguage(lenguaje)`|Verifica si el cliente acepta `lenguaje`|\r\n|`req.acceptedCharsets`|Una lista de los conjuntos de caracteres aceptados por el cliente|\r\n|`req.acceptsCharsets(charset)`|Verifica si el cliente acepta el conjunto de caracteres `charset`|\r\n\r\n## El objeto respuesta\r\nEl objeto respuestas, com\u00fanmente denominado como `res` se crea junto con el objeto `req` y aunque puede parecer extra\u00f1o que se creen al mismo tiempo es necesario para que todos los intermediarios o *middlewares* puedan trabajar con ambos objetos antes de pasar el control al siguiente intermediario.\r\n\r\nA continuaci\u00f3n vemos una lista con las propiedades y m\u00e9todos del objeto *respuesta*.\r\n\r\n|Propiedad/M\u00e9todo|Descripci\u00f3n|\r\n|:---|:---|\r\n|`res.status(code)`|Establece el c\u00f3digo de respuesta HTTP|\r\n|`res.set(campo, [valor])`|Configura encabezados HTTP de respuesta|\r\n|`res.cookie(nombre, valor, [opciones])`|Configura una *cookie* en el cliente|\r\n|`res.clearCookie(nombre, [opciones])`|Borra una *cookie* del cliente|\r\n|`res.redirect([estado], url)`|Redirecciona al cliente a la URL dada, con un estado HTTP opcional|\r\n|`res.location`|El valor del encabezado `location` (ubicaci\u00f3n) en el encabezado HTTP de respuesta|\r\n|`res.charset`|El valor del encabezado `charter` del encabezado HTTP de respuesta|\r\n|`res.send([body|status], [body])`|Env\u00eda objeto tipo _respuesta HTTP_ por la respuesta HTTP, junto con alguna otra respuesta HTTP opcional|\r\n|`res.json([body|status], [body])`|Env\u00eda un objeto JSON por la respuesta HTTP, junto con alguna respuesta HTTP opcional|\r\n|`res.jsonp([body|status], [body])`|Env\u00eda un objeto JSON _con soporte JSONP_ por la respuesta HTTP, junto con alguna respuesta HTTP opcional|\r\n|`set.type(tipo)`|Asigna el tipo de medio al encabezado de la respuesta HTTP.|\r\n|`res.format(objeto)`|Env\u00eda una respuesta condicionada, basada en el encabezado Accept de la petici\u00f3n HTTP|\r\n|`res.attachment([archivo])`|Asigna el encabezado de petici\u00f3n HTTP en `archivo`|\r\n|`res.sendfile(ruta, [opciones], [callback])`|Env\u00eda un archivo al cliente|\r\n|`res.download(ruta, [opciones], [callback])`|Ofrece al cliente la descarga de un archivo|\r\n|`res.links(enlaces)`|Configura el encabezado HTTP `links`|\r\n|`res.locals`|El objeto almacena variables espec\u00edficas para renderizar la vista de la petici\u00f3n|\r\n|`res.render(vista, [locales], callback)`|Renderiza una vista|\r\n\r\n\r\n## Qu\u00e9 son los middlewares o intermediarios\r\nLos *middlewares* o __intermediarios__ son funciones de JavaScript creadas para manejar las solicitudes HTTP de una aplicaci\u00f3n Express. Pueden manipular los objetos de solicitud y de respuesta o realizar acciones aisladas o terminar el flujo de la solicitud al enviar la respuesta al cliente o al pasar el control al siguiente intermediario.\r\n\r\nLos intermediarios se cargan en una aplicaci\u00f3n Express usando el m\u00e9todo `app.use()`.\r\n\r\n Vamos a crear un ejemplo para nuestro servidor. Lo \u00fanico que va a hacer es imprimir la direcci\u00f3n IP del cliente que haga la solicitud. Puede que parezca un intermediario muy simpl\u00f3n, pero nos dar\u00e1 una idea de como funcionan los intermediarios o _middleware_.\r\n\r\n```javascript\r\n/**\r\n * Obtiene la IP del cliente\r\n * @param req.ip La IP del cliente, tomada de la solicitud.\r\n */\r\napp.use((req, res, next) => {\r\n  console.log(`Solicitud hecha desde ${req.ip}`)\r\n  next()\r\n})\r\n```\r\n\r\nComo podemos ver, un intermediario es solo una funci\u00f3n que acepta tres par\u00e1metros: `req`, `res` y `next`. El par\u00e1metro `req` es el objeto enviado con la solicitud. `res` es el objeto devuelto como respuesta y `next` es una referencia al siguiente intermediario en el flujo. Cualquier intermediario puede terminar una solicitud enviando una respuesta de regreso al cliente usando uno de los m\u00e9todos de respuesta del objeto `res`. Si un intermediario no llama a un m\u00e9todo de respuesta __debe llamar al siguiente intermediario en el flujo__, de lo contrario la aplicaci\u00f3n se quedar\u00eda colgada.\r\n\r\nEn la mayor\u00eda de los casos, los _middlewares_ o intermedarios son un poco m\u00e1s complejos, pueden estar dentro de un objeto o pueden ser m\u00f3dulos de Node. Veamos un caso en el que el intermediario se define primero antes de pasarse al m\u00e9todo `app.use()`.\r\n\r\nAs\u00ed se ve un m\u00f3dulo intermediario si lo definimos primero.\r\n\r\n```javascript\r\nconst _prohibido = (_diaProhibido) => {\r\n  const _dias = ['domingo', 'lunes', 'martes', 'mi\u00e9rcoles', 'jueves', 'viernes', 's\u00e1bado']\r\n  return (req, res, next) => {\r\n    // obtenemos el d\u00eda actual\r\n    let _dia = new Date().getDay()\r\n\r\n    // verificamos si hoy es un d\u00eda prohibido\r\n    if (_dias[_dia] === _diaProhibido) {\r\n      res.send(`No se permiten visitas los d\u00edas ${_diaProhibido}!`)\r\n    }\r\n    else {\r\n      next()\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nBueno, acepto que un intermediario que rechaze a los visitantes un d\u00eda a la semana no es una buena idea, pero la intenci\u00f3n es conocer como funcionan los _middlewares_.\r\n\r\n\r\nPara usarlo, debemos importarlo a nuestra `app`\r\n\r\n    :::js\r\n    import {prohibido} from './apps/dummy/modulos'\r\n\r\nY para activarlo, lo vamos a colocar antes de las rutas...\r\n\r\n    :::js\r\n    app.use(prohibido('jueves'))\r\n\r\n---\r\n\r\nLa mayor\u00eda de las funcionalidades de alto nivel de __Express.js__ se implementan a trav\u00e9s de sus intermedarios preconstruidos. Un componente indispensable en cualquier aplicaci\u00f3n de Express.js es el intermediario `router` que es el encargado de gestionar que las solicitudes de las aplicaciones Express sean atendidas por las funciones apropiadas. A esto se le llama _\"ruteo\"_.\r\n\r\n\r\n[1]: https://goo.gl/3UMMkp", "extend": "", "pub_date": "2017-05-24T17:22:01Z", "summary_html": "<p>En este art\u00edculo conoceremos los principales componentes de Express.js: aplicaci\u00f3n, petici\u00f3n, respuesta y los middlewares.</p>", "body_html": "<p>En t\u00e9rminos reales, <strong>Express.js</strong> solo tiene tres componentes en su n\u00facleo, por lo que es relativamente f\u00e1cil aprenderlo. Estos componentes son: <code>app</code>, <code>req</code> y <code>res</code>. Pero un concepto b\u00e1sico son los <em>middlewares</em> y tambi\u00e9n los revisaremos.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Contenido</p>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#el-objeto-aplicacion\">El objeto aplicaci\u00f3n</a></li>\n<li><a href=\"#el-objeto-peticion\">El objeto petici\u00f3n</a></li>\n<li><a href=\"#el-objeto-respuesta\">El objeto respuesta</a></li>\n<li><a href=\"#que-son-los-middlewares-o-intermediarios\">Qu\u00e9 son los middlewares o intermediarios</a></li>\n</ul>\n</div>\n</div>\n<h2 id=\"el-objeto-aplicacion\">El objeto aplicaci\u00f3n</h2>\n<p>El objeto <strong>aplicaci\u00f3n</strong>, com\u00fanmente llamado <code>app</code> es una instancia de <strong>Express.js</strong>. Es el objeto principal de nuestra aplicaci\u00f3n y la gran mayor\u00eda de las funcionalidad del framework est\u00e1n construidas en \u00e9l.</p>\n<p>Una instancia de <strong>Express.js</strong> se crea de la siguiente manera:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">express</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;express&#39;</span>\n<span class=\"kd\">let</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">express</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>Esta es una lista de las propiedades y m\u00e9todos disponibles en el objeto <code>aplicaci\u00f3n</code>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Propiedad/M\u00e9todo</th>\n<th align=\"left\">Descripci\u00f3n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>app.set(nombre, valor)</code></td>\n<td align=\"left\">Establece propiedades espec\u00edficas de la aplicaci\u00f3n</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.get(nombre)</code></td>\n<td align=\"left\">Recupera un valor establecido por <code>app.set()</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.enable(nombre)</code></td>\n<td align=\"left\">Activa una configuraci\u00f3n en la app</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.disable(nombre)</code></td>\n<td align=\"left\">Desactiva una configuraci\u00f3n en la app</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.enabled(nombre)</code></td>\n<td align=\"left\">Verifica si una configuraci\u00f3n est\u00e1 activa</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.disabled(nombre)</code></td>\n<td align=\"left\">Verifica si una configuraci\u00f3n est\u00e1 inactiva</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.configure([env], callback)</code></td>\n<td align=\"left\">Condiciona la activaci\u00f3n de una configuraci\u00f3n a una variable de entorno</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.use([ruta], funci\u00f3n)</code></td>\n<td align=\"left\">Carga un <em>middleware</em> en la app</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.engine(ext, callback)</code></td>\n<td align=\"left\">Registra un motor de plantillas</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.param([name], callback)</code></td>\n<td align=\"left\">Agrega par\u00e1metros a la rutas</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.VERBO(ruta, [callback...], callback)</code></td>\n<td align=\"left\">Define rutas y gestores para los verbos HTTP</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.all(ruta, [callback...], callback)</code></td>\n<td align=\"left\">Define rutas y gestores para cualquier ruta</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.locals</code></td>\n<td align=\"left\">Almacena variables accesibles desde cualquier vista</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.render(view, [opciones], callback)</code></td>\n<td align=\"left\">Renderiza la vista</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.routes</code></td>\n<td align=\"left\">Contiene una lista de las rutas definidas</td>\n</tr>\n<tr>\n<td align=\"left\"><code>app.listen()</code></td>\n<td align=\"left\">Crea el enlace que escucha las peticiones</td>\n</tr>\n</tbody>\n</table>\n<p>La documentaci\u00f3n de <strong>Express.js</strong> es excelente y una explicaci\u00f3n m\u00e1s ampl\u00eda de todos estos m\u00e9todos y propiedades se pueden consultar en la <a href=\"https://goo.gl/3UMMkp\">Referencia de API</a>.</p>\n<h2 id=\"el-objeto-peticion\">El objeto petici\u00f3n</h2>\n<p>El objeto <em>&ldquo;petici\u00f3n&rdquo;</em> de HTTP se crea cuando un cliente hace una petici\u00f3n a la app de <strong>Express.js</strong>. Este objeto, se representa por costumbre con la variable <code>req</code>, que contiene propiedades y m\u00e9todos relacionados con la petici\u00f3n actual.</p>\n<p>Estos son los m\u00e9todos y propiedades relacionados con el objeto <code>req</code>, as\u00ed como una breve descripci\u00f3n de los mismos.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Propiedad/M\u00e9todo</th>\n<th align=\"left\">Descripci\u00f3n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>req.params</code></td>\n<td align=\"left\">Contiene los valores de los par\u00e1metros pasados a la URI</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.params(nombre)</code></td>\n<td align=\"left\">Regresa el valor del par\u00e1metro, ya sea GET o POST</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.query</code></td>\n<td align=\"left\">Contiene los valores enviados por un formulario v\u00eda GET</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.body</code></td>\n<td align=\"left\">Contiene los valores enviados por un formulario v\u00eda POST</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.files</code></td>\n<td align=\"left\">Contiene los archivos subidos por un formulario</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.route</code></td>\n<td align=\"left\">Proporciona detalles sobre la ruta actual</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.cookies</code></td>\n<td align=\"left\">Contiene los valores de las <em>cookies</em></td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.signedCookies</code></td>\n<td align=\"left\">Contiene los valores de las <em>cookies</em> firmadas</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.get(encabezado)</code></td>\n<td align=\"left\">Contiene los encabezados de la petici\u00f3n HTTP</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.accepts(tipos)</code></td>\n<td align=\"left\">Verifica si el cliente los tipos de medios indicados</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.is(tipo)</code></td>\n<td align=\"left\">Verifica si la petici\u00f3n entrante es de un tipo de medio en particular</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.ip</code></td>\n<td align=\"left\">La IP del cliente</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.ips</code></td>\n<td align=\"left\">La IP del cliente junto con todos los proxies a trav\u00e9s de los cuales se conecta</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.path</code></td>\n<td align=\"left\">La ruta solicitada</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.host</code></td>\n<td align=\"left\"><em>Hostname</em> desde el encabezado HTTP</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.fresh</code></td>\n<td align=\"left\">Verifica si la solicitud todav\u00eda esta <em>fresca</em></td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.stale</code></td>\n<td align=\"left\">Verifica si la petici\u00f3n est\u00e1 congelada</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.xhr</code></td>\n<td align=\"left\">Verifica se la petici\u00f3n se hizo v\u00eda una solicitud AJAX</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.protocol</code></td>\n<td align=\"left\">El protocolo usado para hacer la petici\u00f3n</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.secure</code></td>\n<td align=\"left\">Verifica si la conexi\u00f3n es segura</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.subdomains</code></td>\n<td align=\"left\">Subdominios en el <em>hosts</em></td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.url</code></td>\n<td align=\"left\">La ruta de la petici\u00f3n, junto con los par\u00e1metros de consulta</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.originaUrl</code></td>\n<td align=\"left\">Se usa como respaldo de <code>req.url</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.acceptedLanguages</code></td>\n<td align=\"left\">Una lista de los lenguajes aceptados por el cliente</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.acceptsLanguage(lenguaje)</code></td>\n<td align=\"left\">Verifica si el cliente acepta <code>lenguaje</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.acceptedCharsets</code></td>\n<td align=\"left\">Una lista de los conjuntos de caracteres aceptados por el cliente</td>\n</tr>\n<tr>\n<td align=\"left\"><code>req.acceptsCharsets(charset)</code></td>\n<td align=\"left\">Verifica si el cliente acepta el conjunto de caracteres <code>charset</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"el-objeto-respuesta\">El objeto respuesta</h2>\n<p>El objeto respuestas, com\u00fanmente denominado como <code>res</code> se crea junto con el objeto <code>req</code> y aunque puede parecer extra\u00f1o que se creen al mismo tiempo es necesario para que todos los intermediarios o <em>middlewares</em> puedan trabajar con ambos objetos antes de pasar el control al siguiente intermediario.</p>\n<p>A continuaci\u00f3n vemos una lista con las propiedades y m\u00e9todos del objeto <em>respuesta</em>.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Propiedad/M\u00e9todo</th>\n<th align=\"left\">Descripci\u00f3n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>res.status(code)</code></td>\n<td align=\"left\">Establece el c\u00f3digo de respuesta HTTP</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.set(campo, [valor])</code></td>\n<td align=\"left\">Configura encabezados HTTP de respuesta</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.cookie(nombre, valor, [opciones])</code></td>\n<td align=\"left\">Configura una <em>cookie</em> en el cliente</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.clearCookie(nombre, [opciones])</code></td>\n<td align=\"left\">Borra una <em>cookie</em> del cliente</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.redirect([estado], url)</code></td>\n<td align=\"left\">Redirecciona al cliente a la URL dada, con un estado HTTP opcional</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.location</code></td>\n<td align=\"left\">El valor del encabezado <code>location</code> (ubicaci\u00f3n) en el encabezado HTTP de respuesta</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.charset</code></td>\n<td align=\"left\">El valor del encabezado <code>charter</code> del encabezado HTTP de respuesta</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.send([body|status], [body])</code></td>\n<td align=\"left\">Env\u00eda objeto tipo <em>respuesta HTTP</em> por la respuesta HTTP, junto con alguna otra respuesta HTTP opcional</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.json([body|status], [body])</code></td>\n<td align=\"left\">Env\u00eda un objeto JSON por la respuesta HTTP, junto con alguna respuesta HTTP opcional</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.jsonp([body|status], [body])</code></td>\n<td align=\"left\">Env\u00eda un objeto JSON <em>con soporte JSONP</em> por la respuesta HTTP, junto con alguna respuesta HTTP opcional</td>\n</tr>\n<tr>\n<td align=\"left\"><code>set.type(tipo)</code></td>\n<td align=\"left\">Asigna el tipo de medio al encabezado de la respuesta HTTP.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.format(objeto)</code></td>\n<td align=\"left\">Env\u00eda una respuesta condicionada, basada en el encabezado Accept de la petici\u00f3n HTTP</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.attachment([archivo])</code></td>\n<td align=\"left\">Asigna el encabezado de petici\u00f3n HTTP en <code>archivo</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.sendfile(ruta, [opciones], [callback])</code></td>\n<td align=\"left\">Env\u00eda un archivo al cliente</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.download(ruta, [opciones], [callback])</code></td>\n<td align=\"left\">Ofrece al cliente la descarga de un archivo</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.links(enlaces)</code></td>\n<td align=\"left\">Configura el encabezado HTTP <code>links</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.locals</code></td>\n<td align=\"left\">El objeto almacena variables espec\u00edficas para renderizar la vista de la petici\u00f3n</td>\n</tr>\n<tr>\n<td align=\"left\"><code>res.render(vista, [locales], callback)</code></td>\n<td align=\"left\">Renderiza una vista</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"que-son-los-middlewares-o-intermediarios\">Qu\u00e9 son los middlewares o intermediarios</h2>\n<p>Los <em>middlewares</em> o <strong>intermediarios</strong> son funciones de JavaScript creadas para manejar las solicitudes HTTP de una aplicaci\u00f3n Express. Pueden manipular los objetos de solicitud y de respuesta o realizar acciones aisladas o terminar el flujo de la solicitud al enviar la respuesta al cliente o al pasar el control al siguiente intermediario.</p>\n<p>Los intermediarios se cargan en una aplicaci\u00f3n Express usando el m\u00e9todo <code>app.use()</code>.</p>\n<p>Vamos a crear un ejemplo para nuestro servidor. Lo \u00fanico que va a hacer es imprimir la direcci\u00f3n IP del cliente que haga la solicitud. Puede que parezca un intermediario muy simpl\u00f3n, pero nos dar\u00e1 una idea de como funcionan los intermediarios o <em>middleware</em>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cm\">/**</span>\n<span class=\"cm\"> * Obtiene la IP del cliente</span>\n<span class=\"cm\"> * @param req.ip La IP del cliente, tomada de la solicitud.</span>\n<span class=\"cm\"> */</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">((</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">,</span> <span class=\"nx\">next</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Solicitud hecha desde </span><span class=\"si\">${</span><span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">ip</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">)</span>\n  <span class=\"nx\">next</span><span class=\"p\">()</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Como podemos ver, un intermediario es solo una funci\u00f3n que acepta tres par\u00e1metros: <code>req</code>, <code>res</code> y <code>next</code>. El par\u00e1metro <code>req</code> es el objeto enviado con la solicitud. <code>res</code> es el objeto devuelto como respuesta y <code>next</code> es una referencia al siguiente intermediario en el flujo. Cualquier intermediario puede terminar una solicitud enviando una respuesta de regreso al cliente usando uno de los m\u00e9todos de respuesta del objeto <code>res</code>. Si un intermediario no llama a un m\u00e9todo de respuesta <strong>debe llamar al siguiente intermediario en el flujo</strong>, de lo contrario la aplicaci\u00f3n se quedar\u00eda colgada.</p>\n<p>En la mayor\u00eda de los casos, los <em>middlewares</em> o intermedarios son un poco m\u00e1s complejos, pueden estar dentro de un objeto o pueden ser m\u00f3dulos de Node. Veamos un caso en el que el intermediario se define primero antes de pasarse al m\u00e9todo <code>app.use()</code>.</p>\n<p>As\u00ed se ve un m\u00f3dulo intermediario si lo definimos primero.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">_prohibido</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">_diaProhibido</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">_dias</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;domingo&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lunes&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;martes&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mi\u00e9rcoles&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;jueves&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;viernes&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;s\u00e1bado&#39;</span><span class=\"p\">]</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">,</span> <span class=\"nx\">next</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// obtenemos el d\u00eda actual</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">_dia</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getDay</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">// verificamos si hoy es un d\u00eda prohibido</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">_dias</span><span class=\"p\">[</span><span class=\"nx\">_dia</span><span class=\"p\">]</span> <span class=\"o\">===</span> <span class=\"nx\">_diaProhibido</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"sb\">`No se permiten visitas los d\u00edas </span><span class=\"si\">${</span><span class=\"nx\">_diaProhibido</span><span class=\"si\">}</span><span class=\"sb\">!`</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span> <span class=\"p\">{</span>\n      <span class=\"nx\">next</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Bueno, acepto que un intermediario que rechaze a los visitantes un d\u00eda a la semana no es una buena idea, pero la intenci\u00f3n es conocer como funcionan los <em>middlewares</em>.</p>\n<p>Para usarlo, debemos importarlo a nuestra <code>app</code></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span><span class=\"nx\">prohibido</span><span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;./apps/dummy/modulos&#39;</span>\n</pre></div>\n\n\n<p>Y para activarlo, lo vamos a colocar antes de las rutas&hellip;</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">prohibido</span><span class=\"p\">(</span><span class=\"s1\">&#39;jueves&#39;</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<hr>\n<p>La mayor\u00eda de las funcionalidades de alto nivel de <strong>Express.js</strong> se implementan a trav\u00e9s de sus intermedarios preconstruidos. Un componente indispensable en cualquier aplicaci\u00f3n de Express.js es el intermediario <code>router</code> que es el encargado de gestionar que las solicitudes de las aplicaciones Express sean atendidas por las funciones apropiadas. A esto se le llama <em>&ldquo;ruteo&rdquo;</em>.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-funciona-expressjs", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 128, "fields": {"idx": "806bc264-12ac-4add-9859-f2e4520952b0", "creado": "2017-08-01T18:15:14.779Z", "modificado": "2017-08-02T18:29:32.075Z", "title": "El C\u00edrculo", "summary": "Una novela que critica el consumo desmedido de redes sociales y que sin embargo se queda corta. La pel\u00edcula es a\u00fan mas simple y no se arriesga nada.", "body": "<div class='malla'>\r\n  <div class='row'>\r\n    <div class='col-md-4 col-xs-12'>\r\n      <img class=\"alignleft size-medium wp-image-498\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/12114820/18302455.jpg\" alt=\"\" width=\"210\" height=\"300\" />\r\n    </div>\r\n    <div class='col-md-8 col-xs-12'>\r\n      <p>Hay un tuit que de vez en cuando puedes ver por ah\u00ed que dice m\u00e1s o menos as\u00ed:</p>\r\n\r\n      <blockquote>\"Me gustar\u00eda tener una conversaci\u00f3n o tomarme un caf\u00e9 sin un tel\u00e9fono, como cuando \u00e9ramos libres...\"</blockquote >\r\n\r\n      <p>Una cosa as\u00ed, la verdad no lo recuerdo exactamente. Los tel\u00e9fonos inteligentes son una adici\u00f3n que nos esclaviza o algo como eso pretende decir.</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\nEn \u00abEl C\u00edrculo\u00bb, la novela del 2013 de Dave Eggers las redes sociales unen y acercan a la gente hasta niveles \u00edntimos y personales.\r\n\r\nLa novela me pareci\u00f3 al principio muy \u00e1gil y entretenida, pero despu\u00e9s se pierde porque da saltos que complican la continuidad.\r\n\r\nMuy pronto se estrenar\u00e1 una pel\u00edcula protagonizada por Emma Watson y Tom Hanks, que se ve interesante.\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/jBfGCds2DZI\" frameborder=\"0\" allowfullscreen></iframe>", "extend": "", "pub_date": "2017-08-01T18:14:12Z", "summary_html": "<p>Una novela que critica el consumo desmedido de redes sociales y que sin embargo se queda corta. La pel\u00edcula es a\u00fan mas simple y no se arriesga nada.</p>", "body_html": "<div class='malla'>\n  <div class='row'>\n    <div class='col-md-4 col-xs-12'>\n      <img class=\"alignleft size-medium wp-image-498\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/12114820/18302455.jpg\" alt=\"\" width=\"210\" height=\"300\" />\n    </div>\n    <div class='col-md-8 col-xs-12'>\n      <p>Hay un tuit que de vez en cuando puedes ver por ah\u00ed que dice m\u00e1s o menos as\u00ed:</p>\n\n      <blockquote>\"Me gustar\u00eda tener una conversaci\u00f3n o tomarme un caf\u00e9 sin un tel\u00e9fono, como cuando \u00e9ramos libres...\"</blockquote >\n\n      <p>Una cosa as\u00ed, la verdad no lo recuerdo exactamente. Los tel\u00e9fonos inteligentes son una adici\u00f3n que nos esclaviza o algo como eso pretende decir.</p>\n    </div>\n  </div>\n</div>\n\n<p>En \u00abEl C\u00edrculo\u00bb, la novela del 2013 de Dave Eggers las redes sociales unen y acercan a la gente hasta niveles \u00edntimos y personales.</p>\n<p>La novela me pareci\u00f3 al principio muy \u00e1gil y entretenida, pero despu\u00e9s se pierde porque da saltos que complican la continuidad.</p>\n<p>Muy pronto se estrenar\u00e1 una pel\u00edcula protagonizada por Emma Watson y Tom Hanks, que se ve interesante.</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/jBfGCds2DZI\" frameborder=\"0\" allowfullscreen></iframe>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "el-circulo", "status": 1, "featured": false, "category": 5, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 129, "fields": {"idx": "fa29eb6a-086b-4518-9e9c-4ac92e8de727", "creado": "2017-08-02T00:07:40.476Z", "modificado": "2017-08-02T00:07:40.476Z", "title": "La Lengua Kasteyana", "summary": "", "body": "En vista de la evoluci\u00f3n del lenguaje castellano (espa\u00f1ol) en los \u00faltimos a\u00f1os, debido especialmente a las aportaciones realizadas por los j\u00f3venes y sus mensajes por tel\u00e9fonos m\u00f3viles, la Real Academia de la Lengua dar\u00e1 a conocer, pr\u00f3ximamente, la reforma modelo 2003 de la ortograf\u00eda espa\u00f1ola, que tiene como objetivo unificar el espa\u00f1ol como lengua universal de los hispanohablantes.\r\n\r\nMe han mandado, con car\u00e1cter exclusivo, un documento reservado que revela c\u00f3mo se llevar\u00e1 a cabo dicha reforma. Ser\u00e1, pues, una enmienda paulatina, que entrar\u00e1 en vigor poco a poco, para evitar confusiones.\r\n\r\nLa reforma har\u00e1 mucho m\u00e1s simple el castellano de todos los d\u00edas, pondr\u00e1 fin a los problemas de otros pa\u00edses, especialmente los iberoamericanos, y har\u00e1 que nos entendamos de manera universal quienes hablamos esta noble lengua. De acuerdo con el expediente secreto, la reforma se introducir\u00e1 en las siguientes etapas anuales:\r\n\r\nSupresi\u00f3n de las diferencias entre c, q y k. Komo despegue del plan, todo sonido parecido al de la k (este fonema tiene su definici\u00f3n t\u00e9knika ling\u00fc\u00edstika, pero confundir\u00eda mucho si la mencionamos ak\u00ed) ser\u00e1 asumido por esta letra. En adelante, pues, se eskribir\u00e1 kasa, keso, Kijote\u2026\r\n\r\nTambi\u00e9n se simplifikar\u00e1 el sonido de la c y la z para igualarnos a nuestros hermanos hispanoamericanos ke convierten todas estas letras en un \u00faniko fonema s, Kon lo kual sobrar\u00e1n la c y la z: \u201cEl sapato de Sesilia es asul\u201d.\r\n\r\nPor otro lado, desapareser\u00e1 la doble c y ser\u00e1 reemplasada por x: \u201cTuve un axidente en la Avenida Oxidental\u201d. Grasias a esta modifikasi\u00f3n, los espa\u00f1oles no tendr\u00e1n desventajas ortogr\u00e1fikas frente a otros pueblos hispanoparlantes por su estra\u00f1a pronunsiasi\u00f3n de siertas letras.\r\n\r\nAsimismo, se funden la b kon la v; ya ke no existe en espa\u00f1ol diferensia alguna entre el sonido de la b larga y la v chikita. Por lo kual, a partir del segundo a\u00f1o, desapareser\u00e1 la v y beremos k\u00f3mo bastar\u00e1 kon la b para ke bibamos felises y kontentos. Toda b ser\u00e1 de baka, toda b ser\u00e1 de burro.\r\n\r\nPasa lo mismo kon la elle y la y. Todo se eskribir\u00e1 kon y: \u201cY\u00e9beme de paseo a Sebiya, se\u00f1or Biyar\u201d. Esta integrasi\u00f3n probokar\u00e1 agradesimiento general de kienes hablan kasteyano, desde Balensia hasta Bolibia.\r\n\r\nLa hache, kuya presensia es fantasma en nuestra lengua, kedar\u00e1 suprimida por kompleto: as\u00ed, ablaremos de abichuelas o alkool. No tendremos ke pensar k\u00f3mo se eskribe sanaoria y se akabar\u00e1n esas komplikadas y umiyantes distinsiones entre \u201cecho\u201d y \u201checho\u201d. Ya no abr\u00e1 ke desperdisiar m\u00e1s oras de estudio en semejante kuesti\u00f3n ke nos ten\u00eda artos.\r\n\r\nA partir del terser a\u00f1o de esta implantasi\u00f3n, y para mayor konsistensia, todo sonido de erre se eskribir\u00e1 kon doble r: \u201cRroberto me rregal\u00f3 una rradio\u201d.\r\n\r\nPara ebitar otros problemas ortogr\u00e1fikos, se fusionan la g y la j, para ke as\u00ed, jitano se eskriba komo jirafa y jeranio komo jefe. Aora todo ba kon jota: \u201cEl jeneral jestion\u00f3 la jerensia\u201d. No ay duda de ke esta sensiya modifikasi\u00f3n ar\u00e1 ke ablemos y eskribamos todos kon m\u00e1s rregularidad y m\u00e1s rr\u00e1pido rritmo.\r\n\r\nOrrible kalamidad del kastellano, en jeneral, son las tildes o asentos. Esta sankadiya kotidiana jenerar\u00e1 una axi\u00f3n desisiba en la rreforma; aremos komo el ingl\u00e9s, ke a triunfado universalmente sin tildes. Kedaran ellas kanseladas desde el kuarto a\u00f1o, y abran de ser el sentido komun y la intelijensia kayejera los ke digan a ke se rrefiere kada bokablo. Berbigrasia: \u201cKomo komo komo komo!\u201d\r\n\r\nLas konsonantes st, ps o pt juntas kedaran komo simples t o s, kon el fin de aprosimarnos lo masimo posible a la pronunsiasion iberoamerikana. Kon el kambio anterior diremos ke etas propuetas okasionales etan detinadas a mejorar ete etado konfuso de la lengua.\r\n\r\nTambien seran proibidas siertas konsonantes finales ke inkomodan y poko ayudan al siudadano. Asi, se dira: \u201c\u00bfke ora es en tu relo?\u201d, \u201cAs un ueko en la pare\u201d y \u201cLa mita de los aorros son de agusti\u201d. Entre eyas, se suprimiran las eses de los plurales, de manera ke diremos \u201cla mujere\u201d o \u201clo ombre\u201d. Despues yegara la eliminasion de la d del partisipio pasao y kanselasion de lo artikulo. El uso a impueto ke no se diga ya \u201cbailado\u201d sino \u201cbailao\u201d, no \u201cerbido\u201d sino \u201cerbio\u201d y no \u201cbenido\u201d sino \u201cbenio\u201d.\r\n\r\nKabibajo asetaremo eta kotumbre bulgar, ya ke el pueblo yano manda, al fin y al kabo. Dede el kinto a\u00f1o kedaran suprimia esa de interbokalika ke la jente no pronunsia. Adema, y konsiderando ke el latin no tenia artikulo y nosotro no debemo imbentar kosa ke nuetro padre latin rrechasaba, kateyano karesera de artikulo. Sera poko enrredao en prinsipio, y ablaremo komo fubolita yugolabo, pero depue todo etranjero beran ke tarea de aprender nuebo idioma resultan ma fasile. Profesore terminaran benerando akademiko ke an desidio aser rreforma klabe para ke sere umano ke bibimo en nasione ispanoablante gosemo berdaderamente del idioma de Serbante y Kebedo.\r\n\r\nEso si: nunka asetaremo ke potensia etranjera token kabeyo de letra e\u00f1e. E\u00f1e rrepresenta balore ma elebado de tradision ispanika y primero kaeremo mueto ante ke asetar bejasione a simbolo ke a sio korason bibifikante de istoria kastisa epa\u00f1ola unibersa.", "extend": "", "pub_date": "2013-11-24T01:06:04Z", "summary_html": "", "body_html": "<p>En vista de la evoluci\u00f3n del lenguaje castellano (espa\u00f1ol) en los \u00faltimos a\u00f1os, debido especialmente a las aportaciones realizadas por los j\u00f3venes y sus mensajes por tel\u00e9fonos m\u00f3viles, la Real Academia de la Lengua dar\u00e1 a conocer, pr\u00f3ximamente, la reforma modelo 2003 de la ortograf\u00eda espa\u00f1ola, que tiene como objetivo unificar el espa\u00f1ol como lengua universal de los hispanohablantes.</p>\n<p>Me han mandado, con car\u00e1cter exclusivo, un documento reservado que revela c\u00f3mo se llevar\u00e1 a cabo dicha reforma. Ser\u00e1, pues, una enmienda paulatina, que entrar\u00e1 en vigor poco a poco, para evitar confusiones.</p>\n<p>La reforma har\u00e1 mucho m\u00e1s simple el castellano de todos los d\u00edas, pondr\u00e1 fin a los problemas de otros pa\u00edses, especialmente los iberoamericanos, y har\u00e1 que nos entendamos de manera universal quienes hablamos esta noble lengua. De acuerdo con el expediente secreto, la reforma se introducir\u00e1 en las siguientes etapas anuales:</p>\n<p>Supresi\u00f3n de las diferencias entre c, q y k. Komo despegue del plan, todo sonido parecido al de la k (este fonema tiene su definici\u00f3n t\u00e9knika ling\u00fc\u00edstika, pero confundir\u00eda mucho si la mencionamos ak\u00ed) ser\u00e1 asumido por esta letra. En adelante, pues, se eskribir\u00e1 kasa, keso, Kijote\u2026</p>\n<p>Tambi\u00e9n se simplifikar\u00e1 el sonido de la c y la z para igualarnos a nuestros hermanos hispanoamericanos ke convierten todas estas letras en un \u00faniko fonema s, Kon lo kual sobrar\u00e1n la c y la z: \u201cEl sapato de Sesilia es asul\u201d.</p>\n<p>Por otro lado, desapareser\u00e1 la doble c y ser\u00e1 reemplasada por x: \u201cTuve un axidente en la Avenida Oxidental\u201d. Grasias a esta modifikasi\u00f3n, los espa\u00f1oles no tendr\u00e1n desventajas ortogr\u00e1fikas frente a otros pueblos hispanoparlantes por su estra\u00f1a pronunsiasi\u00f3n de siertas letras.</p>\n<p>Asimismo, se funden la b kon la v; ya ke no existe en espa\u00f1ol diferensia alguna entre el sonido de la b larga y la v chikita. Por lo kual, a partir del segundo a\u00f1o, desapareser\u00e1 la v y beremos k\u00f3mo bastar\u00e1 kon la b para ke bibamos felises y kontentos. Toda b ser\u00e1 de baka, toda b ser\u00e1 de burro.</p>\n<p>Pasa lo mismo kon la elle y la y. Todo se eskribir\u00e1 kon y: \u201cY\u00e9beme de paseo a Sebiya, se\u00f1or Biyar\u201d. Esta integrasi\u00f3n probokar\u00e1 agradesimiento general de kienes hablan kasteyano, desde Balensia hasta Bolibia.</p>\n<p>La hache, kuya presensia es fantasma en nuestra lengua, kedar\u00e1 suprimida por kompleto: as\u00ed, ablaremos de abichuelas o alkool. No tendremos ke pensar k\u00f3mo se eskribe sanaoria y se akabar\u00e1n esas komplikadas y umiyantes distinsiones entre \u201cecho\u201d y \u201checho\u201d. Ya no abr\u00e1 ke desperdisiar m\u00e1s oras de estudio en semejante kuesti\u00f3n ke nos ten\u00eda artos.</p>\n<p>A partir del terser a\u00f1o de esta implantasi\u00f3n, y para mayor konsistensia, todo sonido de erre se eskribir\u00e1 kon doble r: \u201cRroberto me rregal\u00f3 una rradio\u201d.</p>\n<p>Para ebitar otros problemas ortogr\u00e1fikos, se fusionan la g y la j, para ke as\u00ed, jitano se eskriba komo jirafa y jeranio komo jefe. Aora todo ba kon jota: \u201cEl jeneral jestion\u00f3 la jerensia\u201d. No ay duda de ke esta sensiya modifikasi\u00f3n ar\u00e1 ke ablemos y eskribamos todos kon m\u00e1s rregularidad y m\u00e1s rr\u00e1pido rritmo.</p>\n<p>Orrible kalamidad del kastellano, en jeneral, son las tildes o asentos. Esta sankadiya kotidiana jenerar\u00e1 una axi\u00f3n desisiba en la rreforma; aremos komo el ingl\u00e9s, ke a triunfado universalmente sin tildes. Kedaran ellas kanseladas desde el kuarto a\u00f1o, y abran de ser el sentido komun y la intelijensia kayejera los ke digan a ke se rrefiere kada bokablo. Berbigrasia: \u201cKomo komo komo komo!\u201d</p>\n<p>Las konsonantes st, ps o pt juntas kedaran komo simples t o s, kon el fin de aprosimarnos lo masimo posible a la pronunsiasion iberoamerikana. Kon el kambio anterior diremos ke etas propuetas okasionales etan detinadas a mejorar ete etado konfuso de la lengua.</p>\n<p>Tambien seran proibidas siertas konsonantes finales ke inkomodan y poko ayudan al siudadano. Asi, se dira: \u201c\u00bfke ora es en tu relo?\u201d, \u201cAs un ueko en la pare\u201d y \u201cLa mita de los aorros son de agusti\u201d. Entre eyas, se suprimiran las eses de los plurales, de manera ke diremos \u201cla mujere\u201d o \u201clo ombre\u201d. Despues yegara la eliminasion de la d del partisipio pasao y kanselasion de lo artikulo. El uso a impueto ke no se diga ya \u201cbailado\u201d sino \u201cbailao\u201d, no \u201cerbido\u201d sino \u201cerbio\u201d y no \u201cbenido\u201d sino \u201cbenio\u201d.</p>\n<p>Kabibajo asetaremo eta kotumbre bulgar, ya ke el pueblo yano manda, al fin y al kabo. Dede el kinto a\u00f1o kedaran suprimia esa de interbokalika ke la jente no pronunsia. Adema, y konsiderando ke el latin no tenia artikulo y nosotro no debemo imbentar kosa ke nuetro padre latin rrechasaba, kateyano karesera de artikulo. Sera poko enrredao en prinsipio, y ablaremo komo fubolita yugolabo, pero depue todo etranjero beran ke tarea de aprender nuebo idioma resultan ma fasile. Profesore terminaran benerando akademiko ke an desidio aser rreforma klabe para ke sere umano ke bibimo en nasione ispanoablante gosemo berdaderamente del idioma de Serbante y Kebedo.</p>\n<p>Eso si: nunka asetaremo ke potensia etranjera token kabeyo de letra e\u00f1e. E\u00f1e rrepresenta balore ma elebado de tradision ispanika y primero kaeremo mueto ante ke asetar bejasione a simbolo ke a sio korason bibifikante de istoria kastisa epa\u00f1ola unibersa.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "la-lengua-kasteyana", "status": 1, "featured": false, "category": 5, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 130, "fields": {"idx": "6a640f44-0e38-4619-8c95-a32771f3c3c3", "creado": "2017-08-02T20:01:01.557Z", "modificado": "2017-08-02T23:47:19.768Z", "title": "Plaza Ju\u00e1rez", "summary": "Fotograf\u00eda de la Plaza Juarez en Tlaxcala", "body": "![La Plaza Ju\u00e1rez, Tlaxcala][1]\r\n<cite>La Plaza Ju\u00e1rez, Tlaxcala, M\u00e9xico</cite> \r\n\r\n[1]: https://media.toledano.org/images/2017/4522508564_fecb0378f1_o.jpg", "extend": "", "pub_date": "2017-08-02T19:58:04Z", "summary_html": "<p>Fotograf\u00eda de la Plaza Juarez en Tlaxcala</p>", "body_html": "<p><img alt=\"La Plaza Ju\u00e1rez, Tlaxcala\" src=\"https://media.toledano.org/images/2017/4522508564_fecb0378f1_o.jpg\">\n<cite>La Plaza Ju\u00e1rez, Tlaxcala, M\u00e9xico</cite> </p>", "extend_html": "", "enable_comments": true, "cover": "https://media.toledano.org/images/2017/4522508564_fecb0378f1_o.jpg", "slug": "plaza-juarez", "status": 1, "featured": false, "category": 3, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 131, "fields": {"idx": "3c7fa251-2156-4fce-9081-be21f5a57344", "creado": "2017-08-03T03:38:36.515Z", "modificado": "2017-08-06T17:03:34.687Z", "title": "Distancia de Hamming con JavaScript", "summary": "En este ejercicio se debe calcular la distancia de Hamming entre dos cadenas de ADN usando JavaScript.", "body": "Seg\u00fan la Wikipedia, la \"Distancia de Hamming\" es la diferencia entre una palabra y otra. En este ejercicio se debe calcular la distancia de Hamming entre dos cadenas de ADN.\r\n\r\n!!! notice \"Qu\u00e9 es una mutaci\u00f3n\"\r\n    Una mutaci\u00f3n es simplemente un error que ocurre durante la creaci\u00f3n o copiado de un \u00e1cido nucleico, en particular de ADN. Debido a que los \u00e1cidos nucleicos son vitales para el funcionamiento celular, las mutaciones tienden a provocar un efecto de onda en toda la c\u00e9lula. Aunque las mutaciones son t\u00e9cnicamente errores, una mutaci\u00f3n puede equipar a la c\u00e9lula con un atributo ben\u00e9fico. De hecho, los efectos a nivel macro de la evoluci\u00f3n se atribuyen por la resultados acumuladores de mutaciones microsc\u00f3picas ben\u00e9ficas acumuladas a lo largo de muchas generaciones.\r\n\r\nLa mutaci\u00f3n de \u00e1cido nucleico mas simple y com\u00fan es una mutaci\u00f3n puntual, que reemplaza una base con otra en un nucle\u00f3tido individual.\r\n\r\nAl contar el n\u00famero de diferencias entre dos cadenas de ADN hom\u00f3logas obtenidas de diferentes genomas con un ancestro com\u00fan, obtenemos una medida del n\u00famero m\u00ednimo de puntos de mutaci\u00f3n que podr\u00edan haber ocurrido en la ruta evolutiva entre las dos cadenas.\r\n\r\nEsta medida se llama <strong>\"Distancia de Hamming\"</strong>.\r\n\r\nSe encuentra comparando dos cadenas de ADN y contar cu\u00e1ntos nucle\u00f3tidos son diferentes de sus equivalentes en la otra cadena.\r\n\r\n```\r\nGAGCCTACTAACGGGAT\r\nCATCGTAATGACGGCCT\r\n^ ^ ^  ^ ^    ^^\r\n```\r\n\r\nLa distancia de Hamming de estas dos cadenas de ADN es de 7.\r\n<h2>Implementaci\u00f3n</h2>\r\nLa distancia de Hamming solo puede definirse con secuencias de la misma longitud. Esto significa que, de acuerdo a la definici\u00f3n, debemos manejar con un error cadenas de longitudes diferentes.\r\n\r\nPara la realizaci\u00f3n de este ejercicio se usar\u00e1 el paradigma de Desarrollo Basado en Pruebas, que consiste en escribir y pasar todas las pruebas o <i>test</i> que aseguren el funcionamiento del programa.\r\n\r\nEstas son las pruebas que controlan el desarrollo:\r\n\r\n```js\r\nvar Hamming = require('./hamming');\r\n\r\ndescribe('Hamming', function () {\r\n  var hamming = new Hamming();\r\n\r\n  it('no difference between identical strands', function () {\r\n    expect(hamming.compute('A', 'A')).toEqual(0);\r\n  });\r\n\r\n  it('complete hamming distance for single nucleotide strand', function () {\r\n    expect(hamming.compute('A','G')).toEqual(1);\r\n  });\r\n\r\n  it('complete hamming distance for small strand', function () {\r\n    expect(hamming.compute('AG','CT')).toEqual(2);\r\n  });\r\n\r\n  it('small hamming distance', function () {\r\n    expect(hamming.compute('AT','CT')).toEqual(1);\r\n  });\r\n\r\n  it('small hamming distance in longer strand', function () {\r\n    expect(hamming.compute('GGACG', 'GGTCG')).toEqual(1);\r\n  });\r\n\r\n  it('large hamming distance', function () {\r\n    expect(hamming.compute('GATACA', 'GCATAA')).toEqual(4);\r\n  });\r\n\r\n  it('hamming distance in very long strand', function () {\r\n    expect(hamming.compute('GGACGGATTCTG', 'AGGACGGATTCT')).toEqual(9);\r\n  });\r\n\r\n  it('throws error when strands are not equal length', function() {\r\n    expect(function() { hamming.compute('GGACGGATTCTG', 'AGGAC'); }).toThrow(\r\n      new Error('DNA strands must be of equal length.')\r\n    );\r\n  });\r\n\r\n});\r\n```", "extend": "Y despu\u00e9s de <strong>cuatro</strong> iteraciones, logr\u00e9 una funci\u00f3n que pasa las ocho pruebas.\r\n\r\n```js\r\nvar Hamming = function(){};\r\n\r\nHamming.prototype.compute = function(adn1, adn2){\r\n  var size = adn1.length - adn2.length;\r\n\r\n  if(size !== 0) {\r\n    throw new Error('DNA strands must be of equal length.');\r\n  } else {\r\n    if (adn1.length == 1) {\r\n      if (adn1 === adn2) {\r\n        return 0;\r\n      } else {\r\n        return 1;\r\n      }\r\n    } else {\r\n      var i;\r\n      var dist = 0;\r\n      for (i = 0; i &lt; adn1.length; i++){\r\n        if (adn1[i] !== adn2[i]) {\r\n          dist++;\r\n        }\r\n      }\r\n      return dist;\r\n    }\r\n  } \r\n};\r\n\r\nmodule.exports = Hamming;\r\n```", "pub_date": "2017-02-15T04:37:10Z", "summary_html": "<p>En este ejercicio se debe calcular la distancia de Hamming entre dos cadenas de ADN usando JavaScript.</p>", "body_html": "<p>Seg\u00fan la Wikipedia, la &ldquo;Distancia de Hamming&rdquo; es la diferencia entre una palabra y otra. En este ejercicio se debe calcular la distancia de Hamming entre dos cadenas de ADN.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Qu\u00e9 es una mutaci\u00f3n</p>\n<p>Una mutaci\u00f3n es simplemente un error que ocurre durante la creaci\u00f3n o copiado de un \u00e1cido nucleico, en particular de ADN. Debido a que los \u00e1cidos nucleicos son vitales para el funcionamiento celular, las mutaciones tienden a provocar un efecto de onda en toda la c\u00e9lula. Aunque las mutaciones son t\u00e9cnicamente errores, una mutaci\u00f3n puede equipar a la c\u00e9lula con un atributo ben\u00e9fico. De hecho, los efectos a nivel macro de la evoluci\u00f3n se atribuyen por la resultados acumuladores de mutaciones microsc\u00f3picas ben\u00e9ficas acumuladas a lo largo de muchas generaciones.</p>\n</div>\n<p>La mutaci\u00f3n de \u00e1cido nucleico mas simple y com\u00fan es una mutaci\u00f3n puntual, que reemplaza una base con otra en un nucle\u00f3tido individual.</p>\n<p>Al contar el n\u00famero de diferencias entre dos cadenas de ADN hom\u00f3logas obtenidas de diferentes genomas con un ancestro com\u00fan, obtenemos una medida del n\u00famero m\u00ednimo de puntos de mutaci\u00f3n que podr\u00edan haber ocurrido en la ruta evolutiva entre las dos cadenas.</p>\n<p>Esta medida se llama <strong>&ldquo;Distancia de Hamming&rdquo;</strong>.</p>\n<p>Se encuentra comparando dos cadenas de ADN y contar cu\u00e1ntos nucle\u00f3tidos son diferentes de sus equivalentes en la otra cadena.</p>\n<div class=\"codehilite\"><pre><span></span>GAGCCTACTAACGGGAT\nCATCGTAATGACGGCCT\n^ ^ ^  ^ ^    ^^\n</pre></div>\n\n\n<p>La distancia de Hamming de estas dos cadenas de ADN es de 7.\n<h2>Implementaci\u00f3n</h2>\nLa distancia de Hamming solo puede definirse con secuencias de la misma longitud. Esto significa que, de acuerdo a la definici\u00f3n, debemos manejar con un error cadenas de longitudes diferentes.</p>\n<p>Para la realizaci\u00f3n de este ejercicio se usar\u00e1 el paradigma de Desarrollo Basado en Pruebas, que consiste en escribir y pasar todas las pruebas o <i>test</i> que aseguren el funcionamiento del programa.</p>\n<p>Estas son las pruebas que controlan el desarrollo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nx\">Hamming</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;./hamming&#39;</span><span class=\"p\">);</span>\n\n<span class=\"nx\">describe</span><span class=\"p\">(</span><span class=\"s1\">&#39;Hamming&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">hamming</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Hamming</span><span class=\"p\">();</span>\n\n  <span class=\"nx\">it</span><span class=\"p\">(</span><span class=\"s1\">&#39;no difference between identical strands&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"nx\">hamming</span><span class=\"p\">.</span><span class=\"nx\">compute</span><span class=\"p\">(</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;A&#39;</span><span class=\"p\">)).</span><span class=\"nx\">toEqual</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"nx\">it</span><span class=\"p\">(</span><span class=\"s1\">&#39;complete hamming distance for single nucleotide strand&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"nx\">hamming</span><span class=\"p\">.</span><span class=\"nx\">compute</span><span class=\"p\">(</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;G&#39;</span><span class=\"p\">)).</span><span class=\"nx\">toEqual</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"nx\">it</span><span class=\"p\">(</span><span class=\"s1\">&#39;complete hamming distance for small strand&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"nx\">hamming</span><span class=\"p\">.</span><span class=\"nx\">compute</span><span class=\"p\">(</span><span class=\"s1\">&#39;AG&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;CT&#39;</span><span class=\"p\">)).</span><span class=\"nx\">toEqual</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"nx\">it</span><span class=\"p\">(</span><span class=\"s1\">&#39;small hamming distance&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"nx\">hamming</span><span class=\"p\">.</span><span class=\"nx\">compute</span><span class=\"p\">(</span><span class=\"s1\">&#39;AT&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;CT&#39;</span><span class=\"p\">)).</span><span class=\"nx\">toEqual</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"nx\">it</span><span class=\"p\">(</span><span class=\"s1\">&#39;small hamming distance in longer strand&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"nx\">hamming</span><span class=\"p\">.</span><span class=\"nx\">compute</span><span class=\"p\">(</span><span class=\"s1\">&#39;GGACG&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;GGTCG&#39;</span><span class=\"p\">)).</span><span class=\"nx\">toEqual</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"nx\">it</span><span class=\"p\">(</span><span class=\"s1\">&#39;large hamming distance&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"nx\">hamming</span><span class=\"p\">.</span><span class=\"nx\">compute</span><span class=\"p\">(</span><span class=\"s1\">&#39;GATACA&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;GCATAA&#39;</span><span class=\"p\">)).</span><span class=\"nx\">toEqual</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"nx\">it</span><span class=\"p\">(</span><span class=\"s1\">&#39;hamming distance in very long strand&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"nx\">hamming</span><span class=\"p\">.</span><span class=\"nx\">compute</span><span class=\"p\">(</span><span class=\"s1\">&#39;GGACGGATTCTG&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;AGGACGGATTCT&#39;</span><span class=\"p\">)).</span><span class=\"nx\">toEqual</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"nx\">it</span><span class=\"p\">(</span><span class=\"s1\">&#39;throws error when strands are not equal length&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">expect</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span> <span class=\"nx\">hamming</span><span class=\"p\">.</span><span class=\"nx\">compute</span><span class=\"p\">(</span><span class=\"s1\">&#39;GGACGGATTCTG&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;AGGAC&#39;</span><span class=\"p\">);</span> <span class=\"p\">}).</span><span class=\"nx\">toThrow</span><span class=\"p\">(</span>\n      <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"s1\">&#39;DNA strands must be of equal length.&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n\n<span class=\"p\">});</span>\n</pre></div>", "extend_html": "<p>Y despu\u00e9s de <strong>cuatro</strong> iteraciones, logr\u00e9 una funci\u00f3n que pasa las ocho pruebas.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nx\">Hamming</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(){};</span>\n\n<span class=\"nx\">Hamming</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">compute</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">adn1</span><span class=\"p\">,</span> <span class=\"nx\">adn2</span><span class=\"p\">){</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">size</span> <span class=\"o\">=</span> <span class=\"nx\">adn1</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">-</span> <span class=\"nx\">adn2</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">size</span> <span class=\"o\">!==</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"s1\">&#39;DNA strands must be of equal length.&#39;</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">adn1</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">adn1</span> <span class=\"o\">===</span> <span class=\"nx\">adn2</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n      <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n      <span class=\"kd\">var</span> <span class=\"nx\">i</span><span class=\"p\">;</span>\n      <span class=\"kd\">var</span> <span class=\"nx\">dist</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n      <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&amp;</span><span class=\"nx\">lt</span><span class=\"p\">;</span> <span class=\"nx\">adn1</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">){</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">adn1</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]</span> <span class=\"o\">!==</span> <span class=\"nx\">adn2</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">])</span> <span class=\"p\">{</span>\n          <span class=\"nx\">dist</span><span class=\"o\">++</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">return</span> <span class=\"nx\">dist</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span> \n<span class=\"p\">};</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"nx\">Hamming</span><span class=\"p\">;</span>\n</pre></div>", "enable_comments": true, "cover": "", "slug": "distancia-hamming-javascript", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 132, "fields": {"idx": "1ce97b25-39b3-4e0a-bbdf-c626c67ae48e", "creado": "2017-08-03T04:03:10.044Z", "modificado": "2017-08-03T04:27:31.310Z", "title": "LoopBack, conceptos b\u00e1sicos", "summary": "Conceptos b\u00e1sicos que debemos conocer para trabajar de forma eficiente con LoopBack.", "body": "Antes de enfrascarnos en la aventura de usar un nuevo _backend_ para el Cuadro de Mando, debemos conocer los conceptos claves del dise\u00f1o de **LoopBack**, lo que sin duda nos permitir\u00e1 comprender mejor su funcionamiento.\r\n\r\n## Modelos\r\n\r\nLos _modelos_ son el coraz\u00f3n de **LoopBack** y corresponden con las fuentes de datos como bases de datos u otros servicios, por ejemplo REST, SOAP, etc. Los modelos de LoopBack son objetos de JavaScript con APIs tanto en Node como REST.\r\n\r\n!!! success \"Atenci\u00f3n\"\r\n    Una de las mejores caracter\u00edsticas de <i>LoopBack</i> es que cuando definimos un modelo, autom\u00e1ticamente se crea una API REST predefinida con un conjunto completo de operaciones para crear, leer, actualizar y borrar registros.\r\n\r\nUn objeto que usa el modelo B\u00e1sico tiene m\u00e9todos para agregar <b>ganchos</b> o <i>hooks</i> y para validar datos. Todos los dem\u00e1s modelos <b>heredan</b> estos m\u00e9todos. Los modelos tienen una herencia <i>jer\u00e1rquica</i> que podemos ver en la figura siguiente:\r\n\r\n![](https://media.toledano.org/wp-content/uploads/2017/02/11184108/loopback-01-herencia-modelos.png.001.png)\r\n\r\ncuando agregamos un modelo a una fuente persistente de datos, se convierte en un <i>modelo</i> conectado con operaciones CRUD., es decir Crear, Leer, Actualizar y Borrar. Del mismo modo, los modelos internos heredan sus propiedades de este modelo.", "extend": "<h3>Modelos internos</h3>\r\n\r\nCada aplicaci\u00f3n de <b>LoopBack</b> tiene un conjunto predefinido de modelos internos, como `User`, `Role`, `Application`, de modo que no tengamos que crearlos desde cero.\r\n\r\n<h3>Modelos personalizados</h3>\r\n\r\nPodemos definir nuestros propios modelos extendiendo los modelos internos para agregarles funciones a los modelos `User`\u00a0o `Application`\u00a0y a otros modelos internos.\r\n\r\nPodemos crear modelos de varias maneras, que dependen del tipo de datos en los que se base el modelo. Podemos crear los modelos:\r\n\r\n<ul>\r\n    <li>Con el generador de modelos de LoopBack, del que ya vimos un ejemplo.</li>\r\n    <li>De una base de datos relacionan, usando el <i>descubrimiento de modelos</i>. Con esto podemos mantener nuestros modelos sincronizados con la base de datos usando la API <i>sincronizaci\u00f3n modelo</i>esquema/ de LoopBack.</li>\r\n    <li>Usando <i>introspecci\u00f3n de instancias</i> para modelos de formato libre en bases NoSQL o APIs REST.</li>\r\n</ul>\r\n\r\nLos tres m\u00e9todos crean un archivo JSON de <i>\u201cdefinici\u00f3n de modelo\u201d</i> que define nuestros modelos en LoopBack en la ruta por default `common/models`; por ejemplo `common/models/sitios.json`.\r\n\r\nTambi\u00e9n podemos crear modelos personalizados program\u00e1ticamente usando la API de LoopBack o editando manualmente el archivo JSON de definici\u00f3n de datos. En muchos casos, no necesitaremos usar esta t\u00e9cnica para crear los modelos, pero si <b>para editarlos</b>.\r\n\r\n!!! notice \"Nota\"\r\n    El archivo JSON de definici\u00f3n de Modelo incluye la propiedad `idInjection` que indica que LoopBack agrega autom\u00e1ticamente la propiedad id a un modelo. Para un modelo conectado a la base de datos la propiedad id corresponde a la clave primaria.\r\n\r\n<h3>Relaciones</h3>\r\n\r\nSe pueden expresar las relaciones entre modelos como uno-a-uno o <b>BelongsTo</b>, uno-a-muchos o <b>HasMany</b> y <b>HasAndBelongToMany</b>.\r\n\r\n<h3>Operaciones CRUD con modelos</h3>\r\n\r\nCuando se conecta un modelo a una fuente persistente de datos como una base de datos se convierte en un <i>modelo conectado</i> con un conjunto completo de operaciones para crear, leer, actualizar y borrar (es decir, operaciones CRUD) heredadas desde la clase <code>PersistedModel</code>:\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Operaci\u00f3n</th>\r\n<th>REST</th>\r\n<th>M\u00e9todo LoopBack</th>\r\n<th>SQL</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Crear</td>\r\n<td>PUT /modelo\r\nPOST /modelo</td>\r\n<td><code>create()</code></td>\r\n<td><code>INSERT</code></td>\r\n</tr>\r\n<tr>\r\n<td>Leer (recuperar)</td>\r\n<td>GET /modelo?filtro=</td>\r\n<td><code>find()</code></td>\r\n<td><code>SELECT</code></td>\r\n</tr>\r\n<tr>\r\n<td>Actualizar (modificar)</td>\r\n<td>POST /modelo</td>\r\n<td><code>updateAll()</code></td>\r\n<td><code>UPDATE</code></td>\r\n</tr>\r\n<tr>\r\n<td>Borrar (Destruir)</td>\r\n<td>DELETE /modelo/ID</td>\r\n<td><code>destroyByID()</code></td>\r\n<td><code>DELETE</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n<h2>L\u00f3gica de la aplicaci\u00f3n</h2>\r\n\r\nSe puede agregar la l\u00f3gica de negocios de varias maneras; por ejemplo:\r\n\r\n<ul>\r\n    <li>Agregando la l\u00f3gica de negocios a los modelos a trav\u00e9s de m\u00e9todos remotos (<i>endpoints</i> remotos a la medida), ganchos o <i>hooks</i> remotos que se disparan por m\u00e9todos remotos y <i>hooks de operaci\u00f3n</i> que se disparan por los m\u00e9todos crear, recuperar, actualizar y borrar.</li>\r\n    <li>Agregando guiones de arranque cuando inicia la aplicaci\u00f3n.</li>\r\n    <li>Definiendo <b>intermediarios</b> o <i>middleware</i> a la medida antes de guardar el modelo en el soporte de datos.</li>\r\n</ul>\r\n\r\nTambi\u00e9n se puede agregar c\u00f3digos para validar la informaci\u00f3n <b>antes</b> de guardarla en el soporte.\r\n\r\n<h3>Fases intermedias</h3>\r\n\r\nEl <i>intermediario</i> o <b>middleware</b> es una funci\u00f3n que se ejecuta cuando se hacen solicitudes HTTP a un <i>endpoint</i> REST. Ya que LoopBack est\u00e1 basado en <a href=\" http://expressjs.com\">Express</a>, el <i>middleware</i> de LoopBack es el mismo que el <i>middleware</i> de Express. Sin embargo, LoopBack agrega el concepto de <i>fase</i>, para definir claramente el orden en el que se llama a los intermediarios. Usando las fases evitamos problemas de orden que pueden ocurrir con el <i>middleware</i> est\u00e1ndar de Express.\r\n\r\n![](https://media.toledano.org/wp-content/uploads/2017/02/11184114/loopback-02-conectores.002.png)\r\n\r\nLoopBack generaliza los servicios back-end como bases de datos, APIs REST, servicios web SOAP y servicios de almacenamiento de datos como <i>data sources</i>.\r\n\r\nLos <i>data sources</i> son soportados por <b>conectores</b> que se comunican directamente con la base de datos y otros servicios de back-end. Las aplicaciones no usan los conectores directamente, en lugar de eso, lo hacen a trav\u00e9s de los <i>data sources</i> usando las APIs <i>DataSource</i> y <i>PersistedModel</i>.\r\n\r\n<h2>Componentes de LoopBack</h2>\r\n\r\nLos componentes de LoopBack proporcionan funcionalidades adicionales tipo \u201cconectar y usar\u201d.\r\n\r\n<ul>\r\n    <li><b>Notificaciones Push</b> - permiten enviar informaci\u00f3n a aplicaciones m\u00f3viles para su visualizaci\u00f3n en los medios que ofrecen los dispositivos.</li>\r\n    <li><b>Componente de almacenamiento</b> - permite subir y bajar archivos en proveedores de almacenamiento en la nube (Amazon, Rackspace, Openstack, Azure) as\u00ed como en el sistema de archivos del servidor.</li>\r\n    <li><b>Acreditaci\u00f3n de terceros</b> - integra <a href=\"http://passportjs.org/\">Passport</a> y permite usar credenciales de acreditaci\u00f3n de terceros como Facebook, Google, Twitter, Github o cualquier sistema que soporte OAuth, OAuth 2 u OpenID.</li>\r\n    <li><b>Sincronizaci\u00f3n</b> - permite que las aplicaciones m\u00f3viles operen fuera de l\u00ednea y sincronice sus datos con el servidor cuando se re conecten.</li>\r\n    <li><b>OAuth 2.0</b> - permite que las aplicaciones de LoopBack funcionen como proveedores OAuth 2.0 para acreditar y autorizar aplicaciones clientes y usuarios y que puedan acceder a <i>endpoints</i> protegidos.</li>\r\n</ul>\r\n\r\n<hr />\r\n\r\nComo podemos ver, ofrece las mismas funciones de Django y Django REST Framework al mismo tiempo, en una sola aplicaci\u00f3n. Veamos como convertimos el c\u00f3digo actual del CMI a este nuevo esquema MEAN: Mongo + Express + Angular + Node con LoopBack.", "pub_date": "2017-02-12T04:58:53Z", "summary_html": "<p>Conceptos b\u00e1sicos que debemos conocer para trabajar de forma eficiente con LoopBack.</p>", "body_html": "<p>Antes de enfrascarnos en la aventura de usar un nuevo <em>backend</em> para el Cuadro de Mando, debemos conocer los conceptos claves del dise\u00f1o de <strong>LoopBack</strong>, lo que sin duda nos permitir\u00e1 comprender mejor su funcionamiento.</p>\n<h2 id=\"modelos\">Modelos</h2>\n<p>Los <em>modelos</em> son el coraz\u00f3n de <strong>LoopBack</strong> y corresponden con las fuentes de datos como bases de datos u otros servicios, por ejemplo REST, SOAP, etc. Los modelos de LoopBack son objetos de JavaScript con APIs tanto en Node como REST.</p>\n<div class=\"admonition success\">\n<p class=\"admonition-title\">Atenci\u00f3n</p>\n<p>Una de las mejores caracter\u00edsticas de <i>LoopBack</i> es que cuando definimos un modelo, autom\u00e1ticamente se crea una API REST predefinida con un conjunto completo de operaciones para crear, leer, actualizar y borrar registros.</p>\n</div>\n<p>Un objeto que usa el modelo B\u00e1sico tiene m\u00e9todos para agregar <b>ganchos</b> o <i>hooks</i> y para validar datos. Todos los dem\u00e1s modelos <b>heredan</b> estos m\u00e9todos. Los modelos tienen una herencia <i>jer\u00e1rquica</i> que podemos ver en la figura siguiente:</p>\n<p><img alt=\"\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/11184108/loopback-01-herencia-modelos.png.001.png\"></p>\n<p>cuando agregamos un modelo a una fuente persistente de datos, se convierte en un <i>modelo</i> conectado con operaciones CRUD., es decir Crear, Leer, Actualizar y Borrar. Del mismo modo, los modelos internos heredan sus propiedades de este modelo.</p>", "extend_html": "<h3>Modelos internos</h3>\n\n<p>Cada aplicaci\u00f3n de <b>LoopBack</b> tiene un conjunto predefinido de modelos internos, como <code>User</code>, <code>Role</code>, <code>Application</code>, de modo que no tengamos que crearlos desde cero.</p>\n<h3>Modelos personalizados</h3>\n\n<p>Podemos definir nuestros propios modelos extendiendo los modelos internos para agregarles funciones a los modelos <code>User</code>\u00a0o <code>Application</code>\u00a0y a otros modelos internos.</p>\n<p>Podemos crear modelos de varias maneras, que dependen del tipo de datos en los que se base el modelo. Podemos crear los modelos:</p>\n<ul>\n    <li>Con el generador de modelos de LoopBack, del que ya vimos un ejemplo.</li>\n    <li>De una base de datos relacionan, usando el <i>descubrimiento de modelos</i>. Con esto podemos mantener nuestros modelos sincronizados con la base de datos usando la API <i>sincronizaci\u00f3n modelo</i>esquema/ de LoopBack.</li>\n    <li>Usando <i>introspecci\u00f3n de instancias</i> para modelos de formato libre en bases NoSQL o APIs REST.</li>\n</ul>\n\n<p>Los tres m\u00e9todos crean un archivo JSON de <i>\u201cdefinici\u00f3n de modelo\u201d</i> que define nuestros modelos en LoopBack en la ruta por default <code>common/models</code>; por ejemplo <code>common/models/sitios.json</code>.</p>\n<p>Tambi\u00e9n podemos crear modelos personalizados program\u00e1ticamente usando la API de LoopBack o editando manualmente el archivo JSON de definici\u00f3n de datos. En muchos casos, no necesitaremos usar esta t\u00e9cnica para crear los modelos, pero si <b>para editarlos</b>.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Nota</p>\n<p>El archivo JSON de definici\u00f3n de Modelo incluye la propiedad <code>idInjection</code> que indica que LoopBack agrega autom\u00e1ticamente la propiedad id a un modelo. Para un modelo conectado a la base de datos la propiedad id corresponde a la clave primaria.</p>\n</div>\n<h3>Relaciones</h3>\n\n<p>Se pueden expresar las relaciones entre modelos como uno-a-uno o <b>BelongsTo</b>, uno-a-muchos o <b>HasMany</b> y <b>HasAndBelongToMany</b>.</p>\n<h3>Operaciones CRUD con modelos</h3>\n\n<p>Cuando se conecta un modelo a una fuente persistente de datos como una base de datos se convierte en un <i>modelo conectado</i> con un conjunto completo de operaciones para crear, leer, actualizar y borrar (es decir, operaciones CRUD) heredadas desde la clase <code>PersistedModel</code>:</p>\n<table>\n<thead>\n<tr>\n<th>Operaci\u00f3n</th>\n<th>REST</th>\n<th>M\u00e9todo LoopBack</th>\n<th>SQL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Crear</td>\n<td>PUT /modelo\nPOST /modelo</td>\n<td><code>create()</code></td>\n<td><code>INSERT</code></td>\n</tr>\n<tr>\n<td>Leer (recuperar)</td>\n<td>GET /modelo?filtro=</td>\n<td><code>find()</code></td>\n<td><code>SELECT</code></td>\n</tr>\n<tr>\n<td>Actualizar (modificar)</td>\n<td>POST /modelo</td>\n<td><code>updateAll()</code></td>\n<td><code>UPDATE</code></td>\n</tr>\n<tr>\n<td>Borrar (Destruir)</td>\n<td>DELETE /modelo/ID</td>\n<td><code>destroyByID()</code></td>\n<td><code>DELETE</code></td>\n</tr>\n</tbody>\n</table>\n\n<h2>L\u00f3gica de la aplicaci\u00f3n</h2>\n\n<p>Se puede agregar la l\u00f3gica de negocios de varias maneras; por ejemplo:</p>\n<ul>\n    <li>Agregando la l\u00f3gica de negocios a los modelos a trav\u00e9s de m\u00e9todos remotos (<i>endpoints</i> remotos a la medida), ganchos o <i>hooks</i> remotos que se disparan por m\u00e9todos remotos y <i>hooks de operaci\u00f3n</i> que se disparan por los m\u00e9todos crear, recuperar, actualizar y borrar.</li>\n    <li>Agregando guiones de arranque cuando inicia la aplicaci\u00f3n.</li>\n    <li>Definiendo <b>intermediarios</b> o <i>middleware</i> a la medida antes de guardar el modelo en el soporte de datos.</li>\n</ul>\n\n<p>Tambi\u00e9n se puede agregar c\u00f3digos para validar la informaci\u00f3n <b>antes</b> de guardarla en el soporte.</p>\n<h3>Fases intermedias</h3>\n\n<p>El <i>intermediario</i> o <b>middleware</b> es una funci\u00f3n que se ejecuta cuando se hacen solicitudes HTTP a un <i>endpoint</i> REST. Ya que LoopBack est\u00e1 basado en <a href=\" http://expressjs.com\">Express</a>, el <i>middleware</i> de LoopBack es el mismo que el <i>middleware</i> de Express. Sin embargo, LoopBack agrega el concepto de <i>fase</i>, para definir claramente el orden en el que se llama a los intermediarios. Usando las fases evitamos problemas de orden que pueden ocurrir con el <i>middleware</i> est\u00e1ndar de Express.</p>\n<p><img alt=\"\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/11184114/loopback-02-conectores.002.png\"></p>\n<p>LoopBack generaliza los servicios back-end como bases de datos, APIs REST, servicios web SOAP y servicios de almacenamiento de datos como <i>data sources</i>.</p>\n<p>Los <i>data sources</i> son soportados por <b>conectores</b> que se comunican directamente con la base de datos y otros servicios de back-end. Las aplicaciones no usan los conectores directamente, en lugar de eso, lo hacen a trav\u00e9s de los <i>data sources</i> usando las APIs <i>DataSource</i> y <i>PersistedModel</i>.</p>\n<h2>Componentes de LoopBack</h2>\n\n<p>Los componentes de LoopBack proporcionan funcionalidades adicionales tipo \u201cconectar y usar\u201d.</p>\n<ul>\n    <li><b>Notificaciones Push</b> - permiten enviar informaci\u00f3n a aplicaciones m\u00f3viles para su visualizaci\u00f3n en los medios que ofrecen los dispositivos.</li>\n    <li><b>Componente de almacenamiento</b> - permite subir y bajar archivos en proveedores de almacenamiento en la nube (Amazon, Rackspace, Openstack, Azure) as\u00ed como en el sistema de archivos del servidor.</li>\n    <li><b>Acreditaci\u00f3n de terceros</b> - integra <a href=\"http://passportjs.org/\">Passport</a> y permite usar credenciales de acreditaci\u00f3n de terceros como Facebook, Google, Twitter, Github o cualquier sistema que soporte OAuth, OAuth 2 u OpenID.</li>\n    <li><b>Sincronizaci\u00f3n</b> - permite que las aplicaciones m\u00f3viles operen fuera de l\u00ednea y sincronice sus datos con el servidor cuando se re conecten.</li>\n    <li><b>OAuth 2.0</b> - permite que las aplicaciones de LoopBack funcionen como proveedores OAuth 2.0 para acreditar y autorizar aplicaciones clientes y usuarios y que puedan acceder a <i>endpoints</i> protegidos.</li>\n</ul>\n\n<hr />\n\n<p>Como podemos ver, ofrece las mismas funciones de Django y Django REST Framework al mismo tiempo, en una sola aplicaci\u00f3n. Veamos como convertimos el c\u00f3digo actual del CMI a este nuevo esquema MEAN: Mongo + Express + Angular + Node con LoopBack.</p>", "enable_comments": true, "cover": "", "slug": "loopback-conceptos-basicos", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 133, "fields": {"idx": "e5c526b3-cefb-47ab-89ad-fd8e21157614", "creado": "2017-08-05T22:18:19.056Z", "modificado": "2017-08-05T22:18:19.056Z", "title": "Desarrollo basado en pruebas con Django", "summary": "Conceptos b\u00e1sicos sobre el TDD o Desarrollo Basado en Pruebas con Django y Python.", "body": "Title: Desarrollo basado en pruebas con Django    \r\nDate: 2017-08-05 16:59:55\r\nCategory: desarrollo\r\nTags: django, tdd, \r\nSummary: Conceptos b\u00e1sicos sobre el desarollo basado en pruebas con Django.\r\n\r\nEs importante conocer  algunos conceptos importantes antes de iniciar de lleno con el desarrollo basado en pruebas (TDD) con Django y Python. Hay dos tipos de pruebas, las funcionales que son desde el punto de vista del usuario y las **unitarias** que son _internas_, desde el punto de vista del programador.\r\n\r\nEl paradigma TDD que vamos a seguir (vamos a obedecer a la cabra) es una mezcla de ambos conceptos. Este es el flujo de trabajo propuesto:\r\n\r\n1. Empezamos escribiendo una _prueba funcional_, que describe una nueva funcionalidad desde el punto de vista del usuario.\r\n2. Una vez que la prueba funciona falla, empezamos a pensar c\u00f3mo escribir el c\u00f3digo que pase la prueba (o por lo menos, solucione una parte de la falla). Ahora vamos a usar una o mas _pruebas unitarias_ para definir **como queremos que se comporte nuestro c\u00f3digo** - la idea es que cada l\u00ednea de c\u00f3digo de producci\u00f3n que escribamos tenga una prueba (por lo menos).\r\n3. Una vez que falla la prueba unitaria, escribiremos **la menor cantidad de c\u00f3digo** posible, apenas el suficiente para pasar la prueba unitaria. Y empezaremos a dar vueltas por los puntos **2** y **3**, hasta que hayamos avanzado un poco en la prueba funcional del punto **1**.\r\n4. Ahora regresamos al punto **1** con nuestra prueba funcional y veremos si pasa o por lo menos tenemos un avance. Tal vez necesitemos m\u00e1s pruebas funcionales, y m\u00e1s c\u00f3digo y volvemos a empezar.\r\n\r\nPor ejemplo, vamos a escribir un conjunto de pruebas para el blog. La prueba funcional es que queremos ver la lista de entradas en el _endpoint_,  incluyendo su categor\u00eda y sus etiquetas. Luego empezamos a agregar las pruebas _unitarias_ necesarias para asegurar que avanzamos en el logro de esta prueba. \r\n\r\nLuego vamos a escribir una prueba _funcional_ para agregar una categor\u00eda usando el _endpoint_. Y las pruebas _unitarias_ que se requieran.\r\n\r\nY asi\u2026 primero la prueba funcional, luego falla. Luego las pruebas unitarias, que fallan, se solucionan, se crean nuevas, fallan, se solucionan\u2026 etc.", "extend": "", "pub_date": "2017-08-05T21:59:01Z", "summary_html": "<p>Conceptos b\u00e1sicos sobre el TDD o Desarrollo Basado en Pruebas con Django y Python.</p>", "body_html": "<p>Es importante conocer  algunos conceptos importantes antes de iniciar de lleno con el desarrollo basado en pruebas (TDD) con Django y Python. Hay dos tipos de pruebas, las funcionales que son desde el punto de vista del usuario y las <strong>unitarias</strong> que son <em>internas</em>, desde el punto de vista del programador.</p>\n<p>El paradigma TDD que vamos a seguir (vamos a obedecer a la cabra) es una mezcla de ambos conceptos. Este es el flujo de trabajo propuesto:</p>\n<ol>\n<li>Empezamos escribiendo una <em>prueba funcional</em>, que describe una nueva funcionalidad desde el punto de vista del usuario.</li>\n<li>Una vez que la prueba funciona falla, empezamos a pensar c\u00f3mo escribir el c\u00f3digo que pase la prueba (o por lo menos, solucione una parte de la falla). Ahora vamos a usar una o mas <em>pruebas unitarias</em> para definir <strong>como queremos que se comporte nuestro c\u00f3digo</strong> - la idea es que cada l\u00ednea de c\u00f3digo de producci\u00f3n que escribamos tenga una prueba (por lo menos).</li>\n<li>Una vez que falla la prueba unitaria, escribiremos <strong>la menor cantidad de c\u00f3digo</strong> posible, apenas el suficiente para pasar la prueba unitaria. Y empezaremos a dar vueltas por los puntos <strong>2</strong> y <strong>3</strong>, hasta que hayamos avanzado un poco en la prueba funcional del punto <strong>1</strong>.</li>\n<li>Ahora regresamos al punto <strong>1</strong> con nuestra prueba funcional y veremos si pasa o por lo menos tenemos un avance. Tal vez necesitemos m\u00e1s pruebas funcionales, y m\u00e1s c\u00f3digo y volvemos a empezar.</li>\n</ol>\n<p>Por ejemplo, vamos a escribir un conjunto de pruebas para el blog. La prueba funcional es que queremos ver la lista de entradas en el <em>endpoint</em>,  incluyendo su categor\u00eda y sus etiquetas. Luego empezamos a agregar las pruebas <em>unitarias</em> necesarias para asegurar que avanzamos en el logro de esta prueba. </p>\n<p>Luego vamos a escribir una prueba <em>funcional</em> para agregar una categor\u00eda usando el <em>endpoint</em>. Y las pruebas <em>unitarias</em> que se requieran.</p>\n<p>Y asi\u2026 primero la prueba funcional, luego falla. Luego las pruebas unitarias, que fallan, se solucionan, se crean nuevas, fallan, se solucionan\u2026 etc.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "desarrollo-basado-en-pruebas-con-django", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 134, "fields": {"idx": "f9e7368b-be87-43e6-a308-52e005918b0d", "creado": "2017-08-07T00:51:56.436Z", "modificado": "2017-08-07T01:01:16.024Z", "title": "MongoDB, convertir datos de CSV a JSON", "summary": "Como procesar un archivo de texto y convertirlo a formato JSON para usarlo con MongoDB usando JavaScript y NodeJS.", "body": "Para conocer\u00a0el desempe\u00f1o de nuestro proveedor, analizamos los datos de todos los tr\u00e1mites que hacemos en la entidad, para lo cual usamos <strong>MongoDB</strong>. Pero el archivo de origen es un texto simple, separado por <em>pipes</em>\u00a0(<code class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">|</code>). \u00a0El objetivo es convertir la informaci\u00f3n para asegurar que sea procesada correctamente, pero adem\u00e1s, agregar los campos calculados antes de guardarlos.\r\n\r\n<!--more-->\r\n\r\nLa idea es que cualquier tipo de c\u00e1lculo debe quedar fijo en la base de datos, para que al presentar la informaci\u00f3n en la vista no se realice ninguna operaci\u00f3n que haga lenta la respuesta.\r\n\r\nVamos a usar un paquete de NPM llamado <a href=\"https://www.npmjs.com/package/csvtojson\">CSV to JSON</a> que va a realizar las operaciones inicial de forma muy r\u00e1pida. As\u00ed que vamos a instalarlo de la forma tradicional.\r\n\r\n```sh\r\nnpm install --save csvtojson\r\n```\r\n\r\nUsamos tambi\u00e9n el paquete <code>moment.js</code> para hacer c\u00e1lculos con fechas, <code>lodash</code> para procesar arreglos y otras utilidades, adem\u00e1s de <code>fs</code> para leer y escribir archivos en el disco.\r\n\r\n<h3>Par\u00e1metros de conversi\u00f3n</h3>\r\n\r\nPara asegurar la correcta conversi\u00f3n de los archivos, vamos a establecer los par\u00e1metros que definen el archivo origen, de la siguiente manera:\r\n\r\n```js\r\nconst parametros = {\r\n  delimiter: '|',\r\n  noheader: false,\r\n  headers: [\r\n    'FOLIO', 'estatus', 'causa_rechazo', 'mov_solicitado', 'mov_definitivo',\r\n    'fecha_tramite', 'fecha_rec_cecyrd', 'fecha_reg_cecyrd', 'fecha_cancelado_mac',\r\n    'fecha_rechazado', 'fecha_cancelado_mov_post', 'fecha_alta_pe', 'fecha_actual_pe',\r\n    'fecha_reinc_pe', 'fecha_existoso', 'fecha_lote_prod', 'fecha_listo_reimp',\r\n    'fecha_cpv_creada', 'fecha_registrada_mac', 'fecha_disponible', 'fecha_entregada',\r\n    'fecha_afecta_ln'\r\n  ],\r\n  flatKeys: true,\r\n  workerNum: 2\r\n}\r\n```\r\n\r\nLa l\u00ednea m\u00e1s interesante es la que dice <code class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"twilight\">flatKeys: true</code>\u00a0que al indicar que no hay claves anidadas, se evita esta b\u00fasqueda y el procesamiento se vuelve muy r\u00e1pido.\r\n<h3>Normalizaci\u00f3n de fechas para usarse en MongoDB</h3>\r\nEl siguiente paso es asegurar que las fechas son consistentes con el formato que usa MongoDB y que pueden ser procesadas en an\u00e1lisis de datos, las fechas y todo lo que parezca fecha se convierte a ese formato. Pongo el c\u00f3digo y lo analizamos...\r\n\r\n```js\r\nconst regexAMPM = /([ap])\\. m\\./\r\n\r\n.on('json', (tramite) => {\r\n  _.forEach(tramite, (valor, clave) => {\r\n    tramite[clave] = tramite[clave].replace(\r\n      regexAMPM,\r\n      (match, grupo1) => grupo1 === 'a' ? 'AM' : 'PM'\r\n    )\r\n  })\r\n})\r\n```\r\n\r\nEste fragmento convierte las cadenas <code>a. m.</code>\u00a0y <code>p. m.</code>\u00a0en <code>AM</code>\u00a0y <code>PM</code>\u00a0para asegurar que se identifiquen correctamente. Busca esa cadena espec\u00edfica en todos los campos y realiza la sustici\u00f3n si hay coincidencia.\r\n\r\nAhora hay que recorrer nuevamente el archivo para convertir las fechas en formato ISO lo que asegura que las fechas sea las correctas:\r\n\r\n```js\r\n.on('json', (tramite) => {\r\n  _.forEach(tramite, (valor, clave) => {\r\n    if (moment(tramite[clave], 'DD/MM/YYYY hh:mm:ss A').isValid()) {\r\n      tramite[clave] = moment(tramite[clave], 'DD/MM/YYYY hh:mm:ss A').toISOString()\r\n    }\r\n  })\r\n})\r\n```\r\n\r\nPor \u00faltimo, recorremos <em>por tercera vez</em> el archivo para agregar la duraci\u00f3n a los tr\u00e1mites y evitar calculor en la base de datos.\r\n\r\n```js\r\n.on('json', (tramite) => {\r\n  tramite.duracion = moment(tramite.fecha_disponible).diff(moment(tramite.fecha_tramite), 'days')\r\n})\r\n```\r\n\r\nEsto deja listo el archivo para usarse en MongoDB.\r\n\r\nAl final, guardamos el JSON generado en un archivo e imprimos un mensaje de informaci\u00f3n.\r\n\r\n```js\r\n.on('end_parsed', (jsonObj) =&gt; {\r\n  console.log(`Se procesaron ${jsonObj.length} registros`)\r\n  fs.writeFile(jsonSalida, JSON.stringify(jsonObj), (err) =&gt; {\r\n    if (err) return console.log(err)\r\n    console.log('Se guard\u00f3 el archivo!')\r\n  })\r\n})\r\n```\r\n\r\nVeamos el archivo completo.\r\n\r\n```js\r\n'use strict'\r\n\r\nconst csvEntrada = 'tramites.csv'\r\nconst jsonSalida = 'salida.json'\r\n\r\nconst csv = require('csvtojson')\r\nconst moment = require('moment')\r\nconst _ = require('lodash')\r\nconst fs = require('fs')\r\n\r\nconst parametros = {\r\n  delimiter: '|',\r\n  noheader: false,\r\n  headers: [\r\n    'FOLIO', 'estatus', 'causa_rechazo', 'mov_solicitado', 'mov_definitivo',\r\n    'fecha_tramite', 'fecha_rec_cecyrd', 'fecha_reg_cecyrd', 'fecha_cancelado_mac',\r\n    'fecha_rechazado', 'fecha_cancelado_mov_post', 'fecha_alta_pe', 'fecha_actual_pe',\r\n    'fecha_reinc_pe', 'fecha_existoso', 'fecha_lote_prod', 'fecha_listo_reimp',\r\n    'fecha_cpv_creada', 'fecha_registrada_mac', 'fecha_disponible', 'fecha_entregada',\r\n    'fecha_afecta_ln'\r\n  ],\r\n  flatKeys: true,\r\n  workerNum: 2\r\n}\r\n\r\nconst regexAMPM = /([ap])\\. m\\./\r\n\r\n/**\r\n * @function fromFile El archivo que se procesa\r\n * @param {{fecha_disponible: string}} Fecha disponible\r\n * @param {{fecha_tramite: string}} La fecha de tr\u00e1mite\r\n */\r\ncsv(parametros).fromFile(csvEntrada)\r\n  .on('json', (tramite) => {\r\n    _.forEach(tramite, (valor, clave) => {\r\n      tramite[clave] = tramite[clave].replace(\r\n        regexAMPM,\r\n        (match, grupo1) => grupo1 === 'a' ? 'AM' : 'PM'\r\n      )\r\n    })\r\n  })\r\n  .on('json', (tramite) => {\r\n    _.forEach(tramite, (valor, clave) => {\r\n      if (moment(tramite[clave], 'DD/MM/YYYY hh:mm:ss A').isValid()) {\r\n        tramite[clave] = moment(tramite[clave], 'DD/MM/YYYY hh:mm:ss A').toISOString()\r\n      }\r\n    })\r\n  })\r\n  .on('json', (tramite) => {\r\n    tramite.duracion = moment(tramite.fecha_disponible).diff(moment(tramite.fecha_tramite), 'days')\r\n  })\r\n  .on('end_parsed', (jsonObj) => {\r\n    console.log(`Se procesaron ${jsonObj.length} registros`)\r\n    fs.writeFile(jsonSalida, JSON.stringify(jsonObj), (err) => {\r\n      if (err) return console.log(err)\r\n      console.log('Se guard\u00f3 el archivo!')\r\n    })\r\n  })\r\n```\r\n\r\nEl programa actual es muy ineficiente, por ejemplo, recorre tres veces todo el archivo y cada archivo tiene unos 30 mil registros y realiza b\u00fasquedas en cada uno de los 30 campos. Pero arreglarlo ser\u00e1 el siguiente paso.\r\n\r\nPor ahora estamos listo para procesar el archivo y enviarlo a MongoDB.", "extend": "", "pub_date": "2017-08-07T00:49:56Z", "summary_html": "<p>Como procesar un archivo de texto y convertirlo a formato JSON para usarlo con MongoDB usando JavaScript y NodeJS.</p>", "body_html": "<p>Para conocer\u00a0el desempe\u00f1o de nuestro proveedor, analizamos los datos de todos los tr\u00e1mites que hacemos en la entidad, para lo cual usamos <strong>MongoDB</strong>. Pero el archivo de origen es un texto simple, separado por <em>pipes</em>\u00a0(<code class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">|</code>). \u00a0El objetivo es convertir la informaci\u00f3n para asegurar que sea procesada correctamente, pero adem\u00e1s, agregar los campos calculados antes de guardarlos.</p>\n<!--more-->\n\n<p>La idea es que cualquier tipo de c\u00e1lculo debe quedar fijo en la base de datos, para que al presentar la informaci\u00f3n en la vista no se realice ninguna operaci\u00f3n que haga lenta la respuesta.</p>\n<p>Vamos a usar un paquete de NPM llamado <a href=\"https://www.npmjs.com/package/csvtojson\">CSV to JSON</a> que va a realizar las operaciones inicial de forma muy r\u00e1pida. As\u00ed que vamos a instalarlo de la forma tradicional.</p>\n<div class=\"codehilite\"><pre><span></span>npm install --save csvtojson\n</pre></div>\n\n\n<p>Usamos tambi\u00e9n el paquete <code>moment.js</code> para hacer c\u00e1lculos con fechas, <code>lodash</code> para procesar arreglos y otras utilidades, adem\u00e1s de <code>fs</code> para leer y escribir archivos en el disco.</p>\n<h3>Par\u00e1metros de conversi\u00f3n</h3>\n\n<p>Para asegurar la correcta conversi\u00f3n de los archivos, vamos a establecer los par\u00e1metros que definen el archivo origen, de la siguiente manera:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">parametros</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">delimiter</span><span class=\"o\">:</span> <span class=\"s1\">&#39;|&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">noheader</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n  <span class=\"nx\">headers</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n    <span class=\"s1\">&#39;FOLIO&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;estatus&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;causa_rechazo&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mov_solicitado&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mov_definitivo&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;fecha_tramite&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_rec_cecyrd&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_reg_cecyrd&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_cancelado_mac&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;fecha_rechazado&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_cancelado_mov_post&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_alta_pe&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_actual_pe&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;fecha_reinc_pe&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_existoso&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_lote_prod&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_listo_reimp&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;fecha_cpv_creada&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_registrada_mac&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_disponible&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_entregada&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;fecha_afecta_ln&#39;</span>\n  <span class=\"p\">],</span>\n  <span class=\"nx\">flatKeys</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"nx\">workerNum</span><span class=\"o\">:</span> <span class=\"mi\">2</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>La l\u00ednea m\u00e1s interesante es la que dice <code class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"twilight\">flatKeys: true</code>\u00a0que al indicar que no hay claves anidadas, se evita esta b\u00fasqueda y el procesamiento se vuelve muy r\u00e1pido.\n<h3>Normalizaci\u00f3n de fechas para usarse en MongoDB</h3>\nEl siguiente paso es asegurar que las fechas son consistentes con el formato que usa MongoDB y que pueden ser procesadas en an\u00e1lisis de datos, las fechas y todo lo que parezca fecha se convierte a ese formato. Pongo el c\u00f3digo y lo analizamos&hellip;</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">regexAMPM</span> <span class=\"o\">=</span> <span class=\"sr\">/([ap])\\. m\\./</span>\n\n<span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;json&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">valor</span><span class=\"p\">,</span> <span class=\"nx\">clave</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">clave</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">clave</span><span class=\"p\">].</span><span class=\"nx\">replace</span><span class=\"p\">(</span>\n      <span class=\"nx\">regexAMPM</span><span class=\"p\">,</span>\n      <span class=\"p\">(</span><span class=\"nx\">match</span><span class=\"p\">,</span> <span class=\"nx\">grupo1</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">grupo1</span> <span class=\"o\">===</span> <span class=\"s1\">&#39;a&#39;</span> <span class=\"o\">?</span> <span class=\"s1\">&#39;AM&#39;</span> <span class=\"o\">:</span> <span class=\"s1\">&#39;PM&#39;</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Este fragmento convierte las cadenas <code>a. m.</code>\u00a0y <code>p. m.</code>\u00a0en <code>AM</code>\u00a0y <code>PM</code>\u00a0para asegurar que se identifiquen correctamente. Busca esa cadena espec\u00edfica en todos los campos y realiza la sustici\u00f3n si hay coincidencia.</p>\n<p>Ahora hay que recorrer nuevamente el archivo para convertir las fechas en formato ISO lo que asegura que las fechas sea las correctas:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;json&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">valor</span><span class=\"p\">,</span> <span class=\"nx\">clave</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">moment</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">clave</span><span class=\"p\">],</span> <span class=\"s1\">&#39;DD/MM/YYYY hh:mm:ss A&#39;</span><span class=\"p\">).</span><span class=\"nx\">isValid</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n      <span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">clave</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">moment</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">clave</span><span class=\"p\">],</span> <span class=\"s1\">&#39;DD/MM/YYYY hh:mm:ss A&#39;</span><span class=\"p\">).</span><span class=\"nx\">toISOString</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Por \u00faltimo, recorremos <em>por tercera vez</em> el archivo para agregar la duraci\u00f3n a los tr\u00e1mites y evitar calculor en la base de datos.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;json&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">tramite</span><span class=\"p\">.</span><span class=\"nx\">duracion</span> <span class=\"o\">=</span> <span class=\"nx\">moment</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">.</span><span class=\"nx\">fecha_disponible</span><span class=\"p\">).</span><span class=\"nx\">diff</span><span class=\"p\">(</span><span class=\"nx\">moment</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">.</span><span class=\"nx\">fecha_tramite</span><span class=\"p\">),</span> <span class=\"s1\">&#39;days&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Esto deja listo el archivo para usarse en MongoDB.</p>\n<p>Al final, guardamos el JSON generado en un archivo e imprimos un mensaje de informaci\u00f3n.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;end_parsed&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">jsonObj</span><span class=\"p\">)</span> <span class=\"o\">=&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Se procesaron </span><span class=\"si\">${</span><span class=\"nx\">jsonObj</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"si\">}</span><span class=\"sb\"> registros`</span><span class=\"p\">)</span>\n  <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">writeFile</span><span class=\"p\">(</span><span class=\"nx\">jsonSalida</span><span class=\"p\">,</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">jsonObj</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"o\">=&amp;</span><span class=\"nx\">gt</span><span class=\"p\">;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">&#39;Se guard\u00f3 el archivo!&#39;</span><span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Veamos el archivo completo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"s1\">&#39;use strict&#39;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">csvEntrada</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;tramites.csv&#39;</span>\n<span class=\"kr\">const</span> <span class=\"nx\">jsonSalida</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;salida.json&#39;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">csv</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;csvtojson&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">moment</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;moment&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">_</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;lodash&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">fs</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;fs&#39;</span><span class=\"p\">)</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">parametros</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">delimiter</span><span class=\"o\">:</span> <span class=\"s1\">&#39;|&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">noheader</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n  <span class=\"nx\">headers</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n    <span class=\"s1\">&#39;FOLIO&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;estatus&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;causa_rechazo&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mov_solicitado&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mov_definitivo&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;fecha_tramite&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_rec_cecyrd&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_reg_cecyrd&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_cancelado_mac&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;fecha_rechazado&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_cancelado_mov_post&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_alta_pe&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_actual_pe&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;fecha_reinc_pe&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_existoso&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_lote_prod&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_listo_reimp&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;fecha_cpv_creada&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_registrada_mac&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_disponible&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fecha_entregada&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;fecha_afecta_ln&#39;</span>\n  <span class=\"p\">],</span>\n  <span class=\"nx\">flatKeys</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"nx\">workerNum</span><span class=\"o\">:</span> <span class=\"mi\">2</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">regexAMPM</span> <span class=\"o\">=</span> <span class=\"sr\">/([ap])\\. m\\./</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * @function fromFile El archivo que se procesa</span>\n<span class=\"cm\"> * @param {{fecha_disponible: string}} Fecha disponible</span>\n<span class=\"cm\"> * @param {{fecha_tramite: string}} La fecha de tr\u00e1mite</span>\n<span class=\"cm\"> */</span>\n<span class=\"nx\">csv</span><span class=\"p\">(</span><span class=\"nx\">parametros</span><span class=\"p\">).</span><span class=\"nx\">fromFile</span><span class=\"p\">(</span><span class=\"nx\">csvEntrada</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;json&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">valor</span><span class=\"p\">,</span> <span class=\"nx\">clave</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">clave</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">clave</span><span class=\"p\">].</span><span class=\"nx\">replace</span><span class=\"p\">(</span>\n        <span class=\"nx\">regexAMPM</span><span class=\"p\">,</span>\n        <span class=\"p\">(</span><span class=\"nx\">match</span><span class=\"p\">,</span> <span class=\"nx\">grupo1</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">grupo1</span> <span class=\"o\">===</span> <span class=\"s1\">&#39;a&#39;</span> <span class=\"o\">?</span> <span class=\"s1\">&#39;AM&#39;</span> <span class=\"o\">:</span> <span class=\"s1\">&#39;PM&#39;</span>\n      <span class=\"p\">)</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">})</span>\n  <span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;json&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">valor</span><span class=\"p\">,</span> <span class=\"nx\">clave</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">moment</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">clave</span><span class=\"p\">],</span> <span class=\"s1\">&#39;DD/MM/YYYY hh:mm:ss A&#39;</span><span class=\"p\">).</span><span class=\"nx\">isValid</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n        <span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">clave</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">moment</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">clave</span><span class=\"p\">],</span> <span class=\"s1\">&#39;DD/MM/YYYY hh:mm:ss A&#39;</span><span class=\"p\">).</span><span class=\"nx\">toISOString</span><span class=\"p\">()</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">})</span>\n  <span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;json&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">tramite</span><span class=\"p\">.</span><span class=\"nx\">duracion</span> <span class=\"o\">=</span> <span class=\"nx\">moment</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">.</span><span class=\"nx\">fecha_disponible</span><span class=\"p\">).</span><span class=\"nx\">diff</span><span class=\"p\">(</span><span class=\"nx\">moment</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">.</span><span class=\"nx\">fecha_tramite</span><span class=\"p\">),</span> <span class=\"s1\">&#39;days&#39;</span><span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n  <span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">&#39;end_parsed&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">jsonObj</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Se procesaron </span><span class=\"si\">${</span><span class=\"nx\">jsonObj</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"si\">}</span><span class=\"sb\"> registros`</span><span class=\"p\">)</span>\n    <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">writeFile</span><span class=\"p\">(</span><span class=\"nx\">jsonSalida</span><span class=\"p\">,</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">jsonObj</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">&#39;Se guard\u00f3 el archivo!&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">})</span>\n</pre></div>\n\n\n<p>El programa actual es muy ineficiente, por ejemplo, recorre tres veces todo el archivo y cada archivo tiene unos 30 mil registros y realiza b\u00fasquedas en cada uno de los 30 campos. Pero arreglarlo ser\u00e1 el siguiente paso.</p>\n<p>Por ahora estamos listo para procesar el archivo y enviarlo a MongoDB.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "mongodb-convertir-datos-csv-a-json", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 135, "fields": {"idx": "54b54d38-3694-4adb-abd6-553939bd5069", "creado": "2017-08-07T01:05:27.761Z", "modificado": "2017-08-07T01:19:45.309Z", "title": "MongoDB, procesar un archivo JSON registro por registro", "summary": "C\u00f3mo procesar un archivo JSON, objeto por objeto, para almacenarlo de forma correcta en MongoDB.", "body": "En el <a href=\"https://yo.toledano.org/desarrollo/mongodb-convertir-datos-csv-a-json/\">art\u00edculo anterior</a> vimos como convertir un archivo CSV en JSON para usarlo con MongoDB, ahora vamos a continuar desde el punto en que nos quedamos para subir los datos a **MongoDB** pero con un proceso de registro por registro.\r\n\r\nEs posible procesar un archivo completo e insertar su contenido en MongoDB, pero los archivos que vamos a usar tienen un peque\u00f1o problema que impide usarlo.\r\n\r\n- Primero, en la colecci\u00f3n, no usamos el `folio` como identificador, sino el propio objeto `_id` de MongoDB\r\n- Segundo, los archivos contienen datos repetidos. Me explico, en marzo recibimos los tr\u00e1mites de enero, febrero y algunos de marzo, pero el mes que contaba era enero; en abril, de febrero, marzo y algo de abril; en mayo, recibimos de marzo, abril y unos de mayo, etc.\r\n\r\nEsto hace que se repitan los folios, por lo que se se necesita hacer un movimiento que se llama en ingl\u00e9s __*upsert*__ que consiste en buscar el folio y si lo encuentra hace una actualizaci\u00f3n (_update_); si no lo encuentra, se hace una inserci\u00f3n (_insert_).\r\n\r\nLo anterior se logra con una sentencia similara a la siguiente:\r\n\r\n```javascript\r\ndb.collection().update(b\u00fasqueda, registro, {upsert: true})\r\n```\r\n\r\nTenemos que recorrer nuevamente todo el archivo, para insertar uno a uno cada registro, usando como filtro el `FOLIO` y el tr\u00e1mite a actualizar/insertar, es decir, a _upsertar_ como par\u00e1metro. Es importante entender que esto funciona con las promesas de JavaScript, por lo que vamos a usar una _callback_ para contar los registros procesados. \r\n\r\nAprovechamos para procesar nuevamente las fechas, para asegurar el correcto adecuado de las fechas.\r\n\r\nAs\u00ed que pasan dos cosas, primero se lee cada registro y se manda a MongoDb para hacer el _upsert_, pero como esto sucede muy r\u00e1pido, se acumulan en un _pool_ y se van procesando a la velocidad de MongoDB. Adicionalmente, despu\u00e9s del _upsert_ exitoso, se aumenta un contador, solo para hacer m\u00e1s amena la espera. Este es el _script_ completo.\r\n\r\n```js\r\n'use strict'\r\n\r\nconst jsonSalida = 'salida.json'\r\nconst mongoURI = 'mongodb://localhost:27017/cmi'\r\n\r\nconst moment = require('moment')\r\nconst _ = require('lodash')\r\nconst fs = require('fs')\r\nconst MongoClient = require('mongodb').MongoClient\r\n\r\nconst datos = fs.readFileSync(jsonSalida, 'utf8')\r\nconst tramites = JSON.parse(datos)\r\nlet totalTramites = tramites.length\r\nconsole.log(`Se procesar\u00e1n ${totalTramites} tr\u00e1mites`)\r\n\r\n/**\r\n * @function fromFile El archivo que se procesa\r\n * @param {{folio: string}} Fecha disponible\r\n * @param {{fecha_tramite: string}} La fecha de tr\u00e1mite\r\n */\r\nMongoClient.connect(mongoURI, (err, db) => {\r\n  if (err) console.log(err)\r\n  let conteo = 0\r\n\r\n  _.forEach(tramites, (tramite, idx) => {\r\n    _.forEach(tramite, (valor, campo) => {\r\n      if (moment(tramite[campo], moment.ISO_8601).isValid()) {\r\n        tramite[campo] = new Date(moment(tramite[campo]).format())\r\n      }\r\n    })\r\n    db.collection('cecyrd')\r\n      .update({FOLIO: tramite.FOLIO}, tramite, {upsert: true}, (err, res) => {\r\n        if (err) console.log(err)\r\n        conteo++\r\n        if ((conteo % 5000) === 0) console.log(`Se han procesado ${conteo} tramites.`)\r\n    })\r\n  })\r\n\r\n  db.close()\r\n  console.log(`proceso terminado, se cargaron ${conteo} tr\u00e1mites.`)\r\n})\r\n```\r\n\r\nPhoto by <a href=\"https://goo.gl/4puqMr\">Tobias van Schneider</a> on Unsplash.", "extend": "", "pub_date": "2017-08-07T01:01:16Z", "summary_html": "<p>C\u00f3mo procesar un archivo JSON, objeto por objeto, para almacenarlo de forma correcta en MongoDB.</p>", "body_html": "<p>En el <a href=\"https://yo.toledano.org/desarrollo/mongodb-convertir-datos-csv-a-json/\">art\u00edculo anterior</a> vimos como convertir un archivo CSV en JSON para usarlo con MongoDB, ahora vamos a continuar desde el punto en que nos quedamos para subir los datos a <strong>MongoDB</strong> pero con un proceso de registro por registro.</p>\n<p>Es posible procesar un archivo completo e insertar su contenido en MongoDB, pero los archivos que vamos a usar tienen un peque\u00f1o problema que impide usarlo.</p>\n<ul>\n<li>Primero, en la colecci\u00f3n, no usamos el <code>folio</code> como identificador, sino el propio objeto <code>_id</code> de MongoDB</li>\n<li>Segundo, los archivos contienen datos repetidos. Me explico, en marzo recibimos los tr\u00e1mites de enero, febrero y algunos de marzo, pero el mes que contaba era enero; en abril, de febrero, marzo y algo de abril; en mayo, recibimos de marzo, abril y unos de mayo, etc.</li>\n</ul>\n<p>Esto hace que se repitan los folios, por lo que se se necesita hacer un movimiento que se llama en ingl\u00e9s <strong><em>upsert</em></strong> que consiste en buscar el folio y si lo encuentra hace una actualizaci\u00f3n (<em>update</em>); si no lo encuentra, se hace una inserci\u00f3n (<em>insert</em>).</p>\n<p>Lo anterior se logra con una sentencia similara a la siguiente:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">collection</span><span class=\"p\">().</span><span class=\"nx\">update</span><span class=\"p\">(</span><span class=\"nx\">b\u00fasqueda</span><span class=\"p\">,</span> <span class=\"nx\">registro</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"nx\">upsert</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Tenemos que recorrer nuevamente todo el archivo, para insertar uno a uno cada registro, usando como filtro el <code>FOLIO</code> y el tr\u00e1mite a actualizar/insertar, es decir, a <em>upsertar</em> como par\u00e1metro. Es importante entender que esto funciona con las promesas de JavaScript, por lo que vamos a usar una <em>callback</em> para contar los registros procesados. </p>\n<p>Aprovechamos para procesar nuevamente las fechas, para asegurar el correcto adecuado de las fechas.</p>\n<p>As\u00ed que pasan dos cosas, primero se lee cada registro y se manda a MongoDb para hacer el <em>upsert</em>, pero como esto sucede muy r\u00e1pido, se acumulan en un <em>pool</em> y se van procesando a la velocidad de MongoDB. Adicionalmente, despu\u00e9s del <em>upsert</em> exitoso, se aumenta un contador, solo para hacer m\u00e1s amena la espera. Este es el <em>script</em> completo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"s1\">&#39;use strict&#39;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">jsonSalida</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;salida.json&#39;</span>\n<span class=\"kr\">const</span> <span class=\"nx\">mongoURI</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mongodb://localhost:27017/cmi&#39;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">moment</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;moment&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">_</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;lodash&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">fs</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;fs&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">MongoClient</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;mongodb&#39;</span><span class=\"p\">).</span><span class=\"nx\">MongoClient</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">datos</span> <span class=\"o\">=</span> <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">readFileSync</span><span class=\"p\">(</span><span class=\"nx\">jsonSalida</span><span class=\"p\">,</span> <span class=\"s1\">&#39;utf8&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">tramites</span> <span class=\"o\">=</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">parse</span><span class=\"p\">(</span><span class=\"nx\">datos</span><span class=\"p\">)</span>\n<span class=\"kd\">let</span> <span class=\"nx\">totalTramites</span> <span class=\"o\">=</span> <span class=\"nx\">tramites</span><span class=\"p\">.</span><span class=\"nx\">length</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Se procesar\u00e1n </span><span class=\"si\">${</span><span class=\"nx\">totalTramites</span><span class=\"si\">}</span><span class=\"sb\"> tr\u00e1mites`</span><span class=\"p\">)</span>\n\n<span class=\"cm\">/**</span>\n<span class=\"cm\"> * @function fromFile El archivo que se procesa</span>\n<span class=\"cm\"> * @param {{folio: string}} Fecha disponible</span>\n<span class=\"cm\"> * @param {{fecha_tramite: string}} La fecha de tr\u00e1mite</span>\n<span class=\"cm\"> */</span>\n<span class=\"nx\">MongoClient</span><span class=\"p\">.</span><span class=\"nx\">connect</span><span class=\"p\">(</span><span class=\"nx\">mongoURI</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">db</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">conteo</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n  <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"nx\">tramites</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">,</span> <span class=\"nx\">idx</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">valor</span><span class=\"p\">,</span> <span class=\"nx\">campo</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">moment</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">campo</span><span class=\"p\">],</span> <span class=\"nx\">moment</span><span class=\"p\">.</span><span class=\"nx\">ISO_8601</span><span class=\"p\">).</span><span class=\"nx\">isValid</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n        <span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">campo</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"nx\">moment</span><span class=\"p\">(</span><span class=\"nx\">tramite</span><span class=\"p\">[</span><span class=\"nx\">campo</span><span class=\"p\">]).</span><span class=\"nx\">format</span><span class=\"p\">())</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">})</span>\n    <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">collection</span><span class=\"p\">(</span><span class=\"s1\">&#39;cecyrd&#39;</span><span class=\"p\">)</span>\n      <span class=\"p\">.</span><span class=\"nx\">update</span><span class=\"p\">({</span><span class=\"nx\">FOLIO</span><span class=\"o\">:</span> <span class=\"nx\">tramite</span><span class=\"p\">.</span><span class=\"nx\">FOLIO</span><span class=\"p\">},</span> <span class=\"nx\">tramite</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"nx\">upsert</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">},</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n        <span class=\"nx\">conteo</span><span class=\"o\">++</span>\n        <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"nx\">conteo</span> <span class=\"o\">%</span> <span class=\"mi\">5000</span><span class=\"p\">)</span> <span class=\"o\">===</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Se han procesado </span><span class=\"si\">${</span><span class=\"nx\">conteo</span><span class=\"si\">}</span><span class=\"sb\"> tramites.`</span><span class=\"p\">)</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">})</span>\n\n  <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">close</span><span class=\"p\">()</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`proceso terminado, se cargaron </span><span class=\"si\">${</span><span class=\"nx\">conteo</span><span class=\"si\">}</span><span class=\"sb\"> tr\u00e1mites.`</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</pre></div>\n\n\n<p>Photo by <a href=\"https://goo.gl/4puqMr\">Tobias van Schneider</a> on Unsplash.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "procesar-un-archivo-json-para-mongodb", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 136, "fields": {"idx": "8d180b8c-29a3-4417-ae6d-a2d4396d0c7d", "creado": "2017-08-20T18:38:49.939Z", "modificado": "2017-11-05T19:26:58.910Z", "title": "Swift y el concepto de opcionales", "summary": "", "body": "Swift tiene un concepto muy importante que son los __opcionales__. Para los que desarrollan en JavaScript este es un concepto similar a las _promesas_. Como es muy frecuente, debemos darnos el tiempo de usarlo y dominarlo.\r\n\r\n<div style=\"margin-bottom: 65px;\">\r\n  <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\r\n  <ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-9466828947698623\"\r\n     data-ad-slot=\"4037058060\"></ins>\r\n  <script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n  </script>\r\n</div>\r\n\r\nLos *opcionales* se usan cuando un valor **puede** estar ausente. Se define de la siguiente manera.\r\n\r\n!!! notice \"Definici\u00f3n de Opcional\"\r\n    Un opcional es una variable que puede o no tener un valor asignado a ella.\r\n    \r\nHay ocaciones en que una constante o una variable podr\u00eda no tener un valor, por ejemplo, cuando se llena un formulario. Recordemos que Swift es un lenguaje compilado por lo tanto, desde el dise\u00f1o debemos asegurar que sabemos que hacer si el usuario llena mal un campo (es parte de las validaciones).\r\n\r\nVeamos este ejemplo que usa el inicializador llamado `Int()`, que convierte, en este caso un texto `String` en un entero tipo `Int`.\r\n\r\n```swift\r\nvar strText = \"43\"\r\nlet intEntero = Int(strText)\r\n```\r\n\r\nEn este caso, el tipo `intEntero` se *infiere* como tipo `Int?`, es decir **opcional Entero** con el valor `43`. El signo de interrogaci\u00f3n indica que el es un *opcional*, lo que significa que el valor de la variable o constante **puede estar ausente**. Veamos el siguiente ejemplo:\r\n\r\n```swift\r\nvar strTexto = \"Hola Mundo\"\r\nlet intEntero = Int(strText)\r\n```\r\n\r\nEl ejemplo anterior tiene un problema: no podemos convertir `Hola Mundo` desde un `String` a un `Int`. Por lo tanto, se dice que el valor de `intEntero` **est\u00e1 ausente** o es `nil` (o sea nulo),  porque el tipo de datos de la variable `intEntero` se infiri\u00f3 com `Int opcional`.\r\n\r\n<div style=\"margin-bottom: 65px;\">\r\n  <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\r\n  <ins class=\"adsbygoogle\"\r\n    style=\"display:block; text-align:center;\"\r\n    data-ad-layout=\"in-article\"\r\n    data-ad-format=\"fluid\"\r\n    data-ad-client=\"ca-pub-9466828947698623\"\r\n    data-ad-slot=\"4911156035\"></ins>\r\n  <script>\r\n    (adsbygoogle = window.adsbygoogle || []).push({});\r\n  </script>\r\n</div>\r\n\r\nEl inicializador de enteros `Int()` puede fallar al regresar un valor, por eso el m\u00e9todo regresa un `Int opcional`, en lugar de un tipo `Int`. De nuevo, el signo de interrogaci\u00f3n indica que el valor de un variable es de tipo opcional, lo que significa que *puede* contener un valor entero o **puede que no** contenga nada[^1].\r\n\r\n[^1]: En el idioma espa\u00f1ol, la doble negativa sigue siendo negativa.\r\n\r\nPodr\u00edamos definir la variable como tipo `Int opcional` de la siguiente manera: \r\n\r\n```swift\r\nlet intEntero: Int? = Int(strText)\r\n```\r\n\r\n> En **Swift 4** `nil` es la *ausencia* de un valor. Los opcionales de cualquier tipo pueden ser `nil`, no solo los tipos b\u00e1sicos.\r\n\r\n### Desempaquetando opcionales\r\nYa que los opcionales pueden tener o no un valor, hay que verificarlos antes de poder usarlos. Esto lo podemos hacer usando un `if` para determinar si el opcional contiene un valor, comparando la variable contra `nil`. Si el opcional tiene un valor, se considera que *\"no es igual que\"* `nil`.\r\n\r\n```swift\r\nvar strTexto = \"Hola Mundo\"\r\nlet intEntero = Int(strTexto)\r\n// intEntero no tiene un valor o su valor esta ausente\r\nif intEntero != nil {\r\n  print(\"intEntero contiene un valor entero.\")\r\n} else {\r\n  print(\"intEntero no contiene un valor entero.\")\r\n}\r\n```\r\n\r\nAhora que hemos agregado una verificaci\u00f3n para asegurarnos que el opcional contiene o no un valor, podemos acceder a este valor agregando un signo de exclamaci\u00f3n (`!`) al final del nombre del opcional. El `!` significa que nos hemos asegurado que la variable opcional tiene un valor y podemos usarlo. Esto se llama **desempaquedado forzoso** del valor del opcional.\r\n\r\n```swift\r\nvar strTexto = \"Hola Mundo\"\r\nlet intEntero = Int(strTexto)\r\n// intEntero no tiene un valor o su valor esta ausente\r\nif intEntero != nil {\r\n  print(\"intEntero contiene un valor entero. Es este \\(intEntero!)\")\r\n} else {\r\n  print(\"intEntero no contiene un valor entero.\")\r\n}\r\n```\r\n\r\n### Enlace opcional\r\nSe puede verificar si un opcional contiene un valor y si es as\u00ed, asignarlo a una constante o una variable en un solo movimiento. Esto se llama *enlace opcional* y puede usarse con sentencias `if` y `while` para determinar si un opcional tiene un valor y extraer ese valor en una variable o constante. \r\n\r\n```swift \r\nlet strOpcional: String? = \"Hola mundo\"\r\nif let strEnlace = strOpcional { \r\n  print(\"strEnlace contiene un valor que es: \\(strEnlace)\")\r\n}\r\n```\r\n\r\nSi queremos asignar el opcional a una variable para poder manipularla, podemos asignar el opcional a un `var`:\r\n\r\n```swift\r\nlet strOpcional: String? = \"Hola Mundo\"\r\nif var strEnlace = strOpcional {\r\n  print(\"strEnlace contiene un valor que es: \\(strEnlace)\")\r\n}\r\n```\r\n\r\nHay que observar que en los ejemplos anteriores no necesitamos usar el `!`. Si la conversi\u00f3n fue exitosa, la variable o constante fue inicializada con el valor contenido en el opcional. \r\n\r\nEn otros lenguajes el s\u00edmbolo `!` implica *negaci\u00f3n* y se coloca antes de la variable o constante, pero en el desempaquetado forzoso se coloca **despu\u00e9s** de la constante o variable con opcional.\r\n\r\n### Desempaquetado impl\u00edcito de opcional\r\nHay ocasiones en que el valor de una variable puede establecerse cuando sabes que el opcional siempre tendr\u00e1 un valor. En esos casos, es \u00fatil eliminar la necesidad de verificar y desempaquetar el opcional cada vez que se necesita acceder a su valor. Esta clase de opcionales se llaman *opcionales impl\u00edcitamente desempaquetados*.\r\n\r\nDebido a la estructura de un programa, podemos saber que el opcional tiene un valor, y concederle permisos para desempaquetar su valor de forma segura cada vez que tengamos que acceder a \u00e9l. En estos casos, no necesitamos usar el `!`; en su lugar lo colocamos despu\u00e9s del tipo de opcional cuando lo declaremos. Veamos el siguiente ejemplo:\r\n\r\n```swift\r\nvar strOpcional: String? = \"Mi texto opcional\"\r\nvar textDesempaquetadoForzoso: String =  strOpcional!  // requiere un !\r\nvar otroTextoOpcional: String! = \"Opcional con desempaquetado impl\u00edcito\"\r\nvar opcionalaDesempaquetadoImplicito = otroTextoOpcional  // no necesitamos un !\r\n```\r\n\r\n\r\nDespu\u00e9s de leer lo anterior y hacer algunas pruebas, creo que necesito mas pr\u00e1ctica.\r\n\r\n<div style=\"margin-bottom: 65px;\">\r\n  <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\r\n  <ins class=\"adsbygoogle\"\r\n    style=\"display:block; text-align:center;\"\r\n    data-ad-layout=\"in-article\"\r\n    data-ad-format=\"fluid\"\r\n    data-ad-client=\"ca-pub-9466828947698623\"\r\n    data-ad-slot=\"2205101643\"></ins>\r\n  <script>\r\n    (adsbygoogle = window.adsbygoogle || []).push({});\r\n  </script>\r\n</div>", "extend": "", "pub_date": "2017-08-20T18:37:29Z", "summary_html": "", "body_html": "<p>Swift tiene un concepto muy importante que son los <strong>opcionales</strong>. Para los que desarrollan en JavaScript este es un concepto similar a las <em>promesas</em>. Como es muy frecuente, debemos darnos el tiempo de usarlo y dominarlo.</p>\n<div style=\"margin-bottom: 65px;\">\n  <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n  <ins class=\"adsbygoogle\"\n     style=\"display:block; text-align:center;\"\n     data-ad-layout=\"in-article\"\n     data-ad-format=\"fluid\"\n     data-ad-client=\"ca-pub-9466828947698623\"\n     data-ad-slot=\"4037058060\"></ins>\n  <script>\n     (adsbygoogle = window.adsbygoogle || []).push({});\n  </script>\n</div>\n\n<p>Los <em>opcionales</em> se usan cuando un valor <strong>puede</strong> estar ausente. Se define de la siguiente manera.</p>\n<div class=\"admonition notice\">\n<p class=\"admonition-title\">Definici\u00f3n de Opcional</p>\n<p>Un opcional es una variable que puede o no tener un valor asignado a ella.</p>\n</div>\n<p>Hay ocaciones en que una constante o una variable podr\u00eda no tener un valor, por ejemplo, cuando se llena un formulario. Recordemos que Swift es un lenguaje compilado por lo tanto, desde el dise\u00f1o debemos asegurar que sabemos que hacer si el usuario llena mal un campo (es parte de las validaciones).</p>\n<p>Veamos este ejemplo que usa el inicializador llamado <code>Int()</code>, que convierte, en este caso un texto <code>String</code> en un entero tipo <code>Int</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nv\">strText</span> <span class=\"p\">=</span> <span class=\"s\">&quot;43&quot;</span>\n<span class=\"kd\">let</span> <span class=\"nv\">intEntero</span> <span class=\"p\">=</span> <span class=\"nb\">Int</span><span class=\"p\">(</span><span class=\"n\">strText</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>En este caso, el tipo <code>intEntero</code> se <em>infiere</em> como tipo <code>Int?</code>, es decir <strong>opcional Entero</strong> con el valor <code>43</code>. El signo de interrogaci\u00f3n indica que el es un <em>opcional</em>, lo que significa que el valor de la variable o constante <strong>puede estar ausente</strong>. Veamos el siguiente ejemplo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nv\">strTexto</span> <span class=\"p\">=</span> <span class=\"s\">&quot;Hola Mundo&quot;</span>\n<span class=\"kd\">let</span> <span class=\"nv\">intEntero</span> <span class=\"p\">=</span> <span class=\"nb\">Int</span><span class=\"p\">(</span><span class=\"n\">strText</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>El ejemplo anterior tiene un problema: no podemos convertir <code>Hola Mundo</code> desde un <code>String</code> a un <code>Int</code>. Por lo tanto, se dice que el valor de <code>intEntero</code> <strong>est\u00e1 ausente</strong> o es <code>nil</code> (o sea nulo),  porque el tipo de datos de la variable <code>intEntero</code> se infiri\u00f3 com <code>Int opcional</code>.</p>\n<div style=\"margin-bottom: 65px;\">\n  <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n  <ins class=\"adsbygoogle\"\n    style=\"display:block; text-align:center;\"\n    data-ad-layout=\"in-article\"\n    data-ad-format=\"fluid\"\n    data-ad-client=\"ca-pub-9466828947698623\"\n    data-ad-slot=\"4911156035\"></ins>\n  <script>\n    (adsbygoogle = window.adsbygoogle || []).push({});\n  </script>\n</div>\n\n<p>El inicializador de enteros <code>Int()</code> puede fallar al regresar un valor, por eso el m\u00e9todo regresa un <code>Int opcional</code>, en lugar de un tipo <code>Int</code>. De nuevo, el signo de interrogaci\u00f3n indica que el valor de un variable es de tipo opcional, lo que significa que <em>puede</em> contener un valor entero o <strong>puede que no</strong> contenga nada<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>.</p>\n<p>Podr\u00edamos definir la variable como tipo <code>Int opcional</code> de la siguiente manera: </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nv\">intEntero</span><span class=\"p\">:</span> <span class=\"nb\">Int</span><span class=\"p\">?</span> <span class=\"p\">=</span> <span class=\"nb\">Int</span><span class=\"p\">(</span><span class=\"n\">strText</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<blockquote>\n<p>En <strong>Swift 4</strong> <code>nil</code> es la <em>ausencia</em> de un valor. Los opcionales de cualquier tipo pueden ser <code>nil</code>, no solo los tipos b\u00e1sicos.</p>\n</blockquote>\n<h3 id=\"desempaquetando-opcionales\">Desempaquetando opcionales</h3>\n<p>Ya que los opcionales pueden tener o no un valor, hay que verificarlos antes de poder usarlos. Esto lo podemos hacer usando un <code>if</code> para determinar si el opcional contiene un valor, comparando la variable contra <code>nil</code>. Si el opcional tiene un valor, se considera que <em>&ldquo;no es igual que&rdquo;</em> <code>nil</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nv\">strTexto</span> <span class=\"p\">=</span> <span class=\"s\">&quot;Hola Mundo&quot;</span>\n<span class=\"kd\">let</span> <span class=\"nv\">intEntero</span> <span class=\"p\">=</span> <span class=\"nb\">Int</span><span class=\"p\">(</span><span class=\"n\">strTexto</span><span class=\"p\">)</span>\n<span class=\"c1\">// intEntero no tiene un valor o su valor esta ausente</span>\n<span class=\"k\">if</span> <span class=\"n\">intEntero</span> <span class=\"o\">!=</span> <span class=\"kc\">nil</span> <span class=\"p\">{</span>\n  <span class=\"bp\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;intEntero contiene un valor entero.&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n  <span class=\"bp\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;intEntero no contiene un valor entero.&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Ahora que hemos agregado una verificaci\u00f3n para asegurarnos que el opcional contiene o no un valor, podemos acceder a este valor agregando un signo de exclamaci\u00f3n (<code>!</code>) al final del nombre del opcional. El <code>!</code> significa que nos hemos asegurado que la variable opcional tiene un valor y podemos usarlo. Esto se llama <strong>desempaquedado forzoso</strong> del valor del opcional.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nv\">strTexto</span> <span class=\"p\">=</span> <span class=\"s\">&quot;Hola Mundo&quot;</span>\n<span class=\"kd\">let</span> <span class=\"nv\">intEntero</span> <span class=\"p\">=</span> <span class=\"nb\">Int</span><span class=\"p\">(</span><span class=\"n\">strTexto</span><span class=\"p\">)</span>\n<span class=\"c1\">// intEntero no tiene un valor o su valor esta ausente</span>\n<span class=\"k\">if</span> <span class=\"n\">intEntero</span> <span class=\"o\">!=</span> <span class=\"kc\">nil</span> <span class=\"p\">{</span>\n  <span class=\"bp\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;intEntero contiene un valor entero. Es este </span><span class=\"si\">\\(</span><span class=\"n\">intEntero</span><span class=\"p\">!</span><span class=\"si\">)</span><span class=\"s\">&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n  <span class=\"bp\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;intEntero no contiene un valor entero.&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<h3 id=\"enlace-opcional\">Enlace opcional</h3>\n<p>Se puede verificar si un opcional contiene un valor y si es as\u00ed, asignarlo a una constante o una variable en un solo movimiento. Esto se llama <em>enlace opcional</em> y puede usarse con sentencias <code>if</code> y <code>while</code> para determinar si un opcional tiene un valor y extraer ese valor en una variable o constante. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nv\">strOpcional</span><span class=\"p\">:</span> <span class=\"nb\">String</span><span class=\"p\">?</span> <span class=\"p\">=</span> <span class=\"s\">&quot;Hola mundo&quot;</span>\n<span class=\"k\">if</span> <span class=\"kd\">let</span> <span class=\"nv\">strEnlace</span> <span class=\"p\">=</span> <span class=\"n\">strOpcional</span> <span class=\"p\">{</span> \n  <span class=\"bp\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;strEnlace contiene un valor que es: </span><span class=\"si\">\\(</span><span class=\"n\">strEnlace</span><span class=\"si\">)</span><span class=\"s\">&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Si queremos asignar el opcional a una variable para poder manipularla, podemos asignar el opcional a un <code>var</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span> <span class=\"nv\">strOpcional</span><span class=\"p\">:</span> <span class=\"nb\">String</span><span class=\"p\">?</span> <span class=\"p\">=</span> <span class=\"s\">&quot;Hola Mundo&quot;</span>\n<span class=\"k\">if</span> <span class=\"kd\">var</span> <span class=\"nv\">strEnlace</span> <span class=\"p\">=</span> <span class=\"n\">strOpcional</span> <span class=\"p\">{</span>\n  <span class=\"bp\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;strEnlace contiene un valor que es: </span><span class=\"si\">\\(</span><span class=\"n\">strEnlace</span><span class=\"si\">)</span><span class=\"s\">&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Hay que observar que en los ejemplos anteriores no necesitamos usar el <code>!</code>. Si la conversi\u00f3n fue exitosa, la variable o constante fue inicializada con el valor contenido en el opcional. </p>\n<p>En otros lenguajes el s\u00edmbolo <code>!</code> implica <em>negaci\u00f3n</em> y se coloca antes de la variable o constante, pero en el desempaquetado forzoso se coloca <strong>despu\u00e9s</strong> de la constante o variable con opcional.</p>\n<h3 id=\"desempaquetado-implicito-de-opcional\">Desempaquetado impl\u00edcito de opcional</h3>\n<p>Hay ocasiones en que el valor de una variable puede establecerse cuando sabes que el opcional siempre tendr\u00e1 un valor. En esos casos, es \u00fatil eliminar la necesidad de verificar y desempaquetar el opcional cada vez que se necesita acceder a su valor. Esta clase de opcionales se llaman <em>opcionales impl\u00edcitamente desempaquetados</em>.</p>\n<p>Debido a la estructura de un programa, podemos saber que el opcional tiene un valor, y concederle permisos para desempaquetar su valor de forma segura cada vez que tengamos que acceder a \u00e9l. En estos casos, no necesitamos usar el <code>!</code>; en su lugar lo colocamos despu\u00e9s del tipo de opcional cuando lo declaremos. Veamos el siguiente ejemplo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nv\">strOpcional</span><span class=\"p\">:</span> <span class=\"nb\">String</span><span class=\"p\">?</span> <span class=\"p\">=</span> <span class=\"s\">&quot;Mi texto opcional&quot;</span>\n<span class=\"kd\">var</span> <span class=\"nv\">textDesempaquetadoForzoso</span><span class=\"p\">:</span> <span class=\"nb\">String</span> <span class=\"p\">=</span>  <span class=\"n\">strOpcional</span><span class=\"p\">!</span>  <span class=\"c1\">// requiere un !</span>\n<span class=\"kd\">var</span> <span class=\"nv\">otroTextoOpcional</span><span class=\"p\">:</span> <span class=\"nb\">String</span><span class=\"p\">!</span> <span class=\"p\">=</span> <span class=\"s\">&quot;Opcional con desempaquetado impl\u00edcito&quot;</span>\n<span class=\"kd\">var</span> <span class=\"nv\">opcionalaDesempaquetadoImplicito</span> <span class=\"p\">=</span> <span class=\"n\">otroTextoOpcional</span>  <span class=\"c1\">// no necesitamos un !</span>\n</pre></div>\n\n\n<p>Despu\u00e9s de leer lo anterior y hacer algunas pruebas, creo que necesito mas pr\u00e1ctica.</p>\n<div style=\"margin-bottom: 65px;\">\n  <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n  <ins class=\"adsbygoogle\"\n    style=\"display:block; text-align:center;\"\n    data-ad-layout=\"in-article\"\n    data-ad-format=\"fluid\"\n    data-ad-client=\"ca-pub-9466828947698623\"\n    data-ad-slot=\"2205101643\"></ins>\n  <script>\n    (adsbygoogle = window.adsbygoogle || []).push({});\n  </script>\n</div>\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>En el idioma espa\u00f1ol, la doble negativa sigue siendo negativa.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "swift-y-el-concepto-de-opcionales", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 137, "fields": {"idx": "0ba841ba-f63a-4294-8535-31fc2ae1efd7", "creado": "2017-08-29T14:51:27.658Z", "modificado": "2017-08-29T14:58:30.858Z", "title": "C\u00f3mo crear una API con LoopBack", "summary": "", "body": "El objetivo ahora que conocemos los conceptos b\u00e1sicos de <b>LoopBack</b> es empezar a crear el servidor <i>backend</i> del cuadro de mando. Vamos a empezar con el control de personal que sirve en realidad para el control de competencias, seg\u00fan la norma ISO 9001.\r\n\r\nEn realidad esta aplicaci\u00f3n cumple con varios prop\u00f3sitos, por un lado es el control de personal, es decir el nombre, puesto y sitio de todos los que trabajamos en la delegaci\u00f3n. Pero tambi\u00e9n sirve como almac\u00e9n de evidencias documentales de las competencias de experiencia, habilidades y educaci\u00f3n. Y por \u00faltimo, sirve para controlar la formaci\u00f3n, ya que lleva un registro de todos los cursos que se han proporcionado al personal, ya sea de Oficinas Centrales, internos o externos.\r\n\r\nVamos a empezar con la parte m\u00e1s simple de la aplicaci\u00f3n, el control de personal, pero no por ser simple no es retadora, ya que usaremos tres tablas relacionadas para formar cada registro. Veamos la siguiente figura.\r\n\r\n<img class=\"aligncenter size-full wp-image-536\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/17220053/20170217-API-personas.png\" alt=\"\" width=\"503\" height=\"198\" />\r\n\r\nEste es el modelo b\u00e1sico, que es muy limitado. Por ejemplo, la tabla <code class=\"code-inline\">Sitio</code> solo toma en cuenta a Tlaxcala (en general a una sola entidad) y tendr\u00e1 que ampliarse para que acepte m\u00e1s entidades. Un dato interesante sobre esta tabla, es que el campo <code class=\"code-inline\">tel\u00e9fonos</code> es un objeto <code class=\"code-inline\">JSON</code> para almacenar varios datos en un solo campo. La tabla <code class=\"code-inline\">Puestos</code> necesita un campo <code class=\"code-inline\">orden</code> para asegurar que la alta direcci\u00f3n siempre aparezca primero.\r\n\r\nAunque limitado, lo importante de este modelo son las relaciones, indicadas por las flechas, que deben tomarse en cuenta no solo en el <i>backend</i>, sino tambi\u00e9n en el <i>frontend</i>.\r\n<h3>Creando los modelos</h3>\r\nYa vimos en el <a href=\"https://yo.toledano.org/desarrollo/loopback-servidor-api/\">art\u00edculo anterior</a> como crear un modelo <code class=\"code-inline\">Sitios</code>, y vamos a usar la misma estrategia para el modelo <code class=\"code-inline\">Puestos</code>, es decir, lo vamos a crear usando la interface de l\u00ednea de comandos <code class=\"code-inline\">lb</code>.\r\n<pre><code class=\"code-multiline\"> /Volumes/datos/projects/lb-cmi \ue0b0 lb model\r\n? Enter the model name: puesto\r\n? Select the data-source to attach puesto to: db (memory)\r\n? Select model's base class PersistedModel\r\n? Expose puesto via the REST API? Yes\r\n? Custom plural form (used to build REST URL): puestos\r\n? Common model or server only? common\r\nLet's add some puesto properties now.\r\n\r\nEnter an empty property name when done.\r\n? Property name: puesto\r\n   invoke   loopback:property\r\n? Property type: string\r\n? Required? Yes\r\n? Default value[leave blank for none]:\r\n\r\nLet's add another puesto property.\r\nEnter an empty property name when done.\r\n? Property name: clave\r\n   invoke   loopback:property\r\n? Property type: string\r\n? Required? Yes\r\n? Default value[leave blank for none]:\r\n\r\nLet's add another puesto property.\r\nEnter an empty property name when done.\r\n? Property name: orden\r\n   invoke   loopback:property\r\n? Property type: number\r\n? Required? Yes\r\n? Default value[leave blank for none]:\r\n\r\nLet's add another puesto property.\r\nEnter an empty property name when done.\r\n? Property name:\r\n /Volumes/datos/projects/lb-cmi $\r\n</code></pre>\r\nEl campo <code class=\"code-inline\">nombre</code> es de tipo texto, no se validar\u00e1 la extensi\u00f3n, aunque ser\u00eda bueno validar que sea \u00fanico. El campo <code class=\"code-inline\">clave</code> debe ser de tres o cuatro letras, ser\u00e1 necesario validar la extensi\u00f3n y tambi\u00e9n que sea \u00fanico. El campo <code class=\"code-inline\">orden</code> que es num\u00e9rico no necesita muchas validaciones, pero bueno, ya veremos.\r\n<h3>Usando el API Explorer</h3>\r\nAntes de continuar con el tercer modelo, vamos a familiarizarnos con el <i>API Explorer</i> y a realizar algunas operaciones b\u00e1sicas en el navegador y en la consola.\r\nDentro del directorio de nuestro proyecto ejecutamos la siguiente orden para arrancar el servidor:\r\n<pre><code class=\"code-multiline\">&gt; $ node .                                                                                                     \r\nWeb server listening at: http://0.0.0.0:3000\r\nBrowse your REST API at http://0.0.0.0:3000/explorer\r\n</code></pre>\r\nCon esto podemos visitar el API Explorer que inicialmente nos presenta el primer nivel de la API.\r\n<img class=\"aligncenter size-full wp-image-537\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/17221409/Captura-de-pantalla-2017-02-17-a-las-19.27.02.png\" alt=\"\" width=\"748\" height=\"249\" />\r\nAl hacer clic en el enlace <code class=\"code-inline\">sitio</code> vemos todos los <i>endpoints</i> que est\u00e1n disponibles para ese <i>endpoint</i>.\r\n<img class=\"aligncenter size-full wp-image-535\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/17220041/Captura-de-pantalla-2017-02-17-a-las-19.28.26.png\" alt=\"\" width=\"737\" height=\"661\" />\r\nComo podemos apreciar, tenemos todos los verbos de una API RESTFul completa, sin tener que escribir una sola l\u00ednea de c\u00f3digo, solo contestando algunas preguntas.\r\nAhora vamos a hacer clic en el verbo POST del <i>endpoint</i> <code class=\"code-inline\">sitios</code>, y veremos la siguiente pantalla.\r\n<img class=\"aligncenter wp-image-534 size-full\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/17220028/20170217-API-Explorer.png\" width=\"772\" height=\"564\" />\r\nComo recordamos del art\u00edculo anterior, no debemos usar el <code class=\"code-inline\">id</code> porque ese es autom\u00e1tico, as\u00ed vamos a usar este JSON:\r\n<pre><code class=\"code-multiline\">{\r\n  \"nombre\": \"Junta Local\",\r\n  \"direccion\": \"Xicohtencatl 7, Centro. Tlaxcala, Tlax.\",\r\n  \"telefonos\": {\r\n    \"Ejecutiva\": \"(246) 123 456\",\r\n    \"Secretario\": \"(246) 456 789\",\r\n    \"Registro\": \"(246) 987 654\"\r\n  }\r\n}\r\n</code></pre>\r\nAl oprimir el bot\u00f3n <b>Try it out!</b> obtenemos esto:\r\n<img class=\"aligncenter size-full wp-image-533\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/17220019/Captura-de-pantalla-2017-02-17-a-las-20.46.37.png\" alt=\"\" width=\"744\" height=\"670\" />\r\nLa respuesta nos muestra el c\u00f3digo <code class=\"code-inline\">curl</code> para subir los datos, la respuesta exitosa, el c\u00f3digo de respuesta y los encabezados de respuesta.\r\nAhora podemos ver otros enlaces, como el <i>endpoint</i> <b>GET</b> para ver la respuesta del servidor, usar filtros, etc.\r\nM\u00e1s adelante veremos como usar el Token que se ve en la parte superior, pero primero tenemos que conectar nuestra API a una fuente de datos para hacerlos persistentes, como por ejemplo a una base de datos como MongoDB.", "extend": "", "pub_date": "2017-02-17T15:49:28Z", "summary_html": "", "body_html": "<p>El objetivo ahora que conocemos los conceptos b\u00e1sicos de <b>LoopBack</b> es empezar a crear el servidor <i>backend</i> del cuadro de mando. Vamos a empezar con el control de personal que sirve en realidad para el control de competencias, seg\u00fan la norma ISO 9001.</p>\n<p>En realidad esta aplicaci\u00f3n cumple con varios prop\u00f3sitos, por un lado es el control de personal, es decir el nombre, puesto y sitio de todos los que trabajamos en la delegaci\u00f3n. Pero tambi\u00e9n sirve como almac\u00e9n de evidencias documentales de las competencias de experiencia, habilidades y educaci\u00f3n. Y por \u00faltimo, sirve para controlar la formaci\u00f3n, ya que lleva un registro de todos los cursos que se han proporcionado al personal, ya sea de Oficinas Centrales, internos o externos.</p>\n<p>Vamos a empezar con la parte m\u00e1s simple de la aplicaci\u00f3n, el control de personal, pero no por ser simple no es retadora, ya que usaremos tres tablas relacionadas para formar cada registro. Veamos la siguiente figura.</p>\n<p><img class=\"aligncenter size-full wp-image-536\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/17220053/20170217-API-personas.png\" alt=\"\" width=\"503\" height=\"198\" /></p>\n<p>Este es el modelo b\u00e1sico, que es muy limitado. Por ejemplo, la tabla <code class=\"code-inline\">Sitio</code> solo toma en cuenta a Tlaxcala (en general a una sola entidad) y tendr\u00e1 que ampliarse para que acepte m\u00e1s entidades. Un dato interesante sobre esta tabla, es que el campo <code class=\"code-inline\">tel\u00e9fonos</code> es un objeto <code class=\"code-inline\">JSON</code> para almacenar varios datos en un solo campo. La tabla <code class=\"code-inline\">Puestos</code> necesita un campo <code class=\"code-inline\">orden</code> para asegurar que la alta direcci\u00f3n siempre aparezca primero.</p>\n<p>Aunque limitado, lo importante de este modelo son las relaciones, indicadas por las flechas, que deben tomarse en cuenta no solo en el <i>backend</i>, sino tambi\u00e9n en el <i>frontend</i>.\n<h3>Creando los modelos</h3>\nYa vimos en el <a href=\"https://yo.toledano.org/desarrollo/loopback-servidor-api/\">art\u00edculo anterior</a> como crear un modelo <code class=\"code-inline\">Sitios</code>, y vamos a usar la misma estrategia para el modelo <code class=\"code-inline\">Puestos</code>, es decir, lo vamos a crear usando la interface de l\u00ednea de comandos <code class=\"code-inline\">lb</code>.\n<pre><code class=\"code-multiline\"> /Volumes/datos/projects/lb-cmi \ue0b0 lb model\n? Enter the model name: puesto\n? Select the data-source to attach puesto to: db (memory)\n? Select model&rsquo;s base class PersistedModel\n? Expose puesto via the REST API? Yes\n? Custom plural form (used to build REST URL): puestos\n? Common model or server only? common\nLet&rsquo;s add some puesto properties now.</p>\n<p>Enter an empty property name when done.\n? Property name: puesto\n   invoke   loopback:property\n? Property type: string\n? Required? Yes\n? Default value[leave blank for none]:</p>\n<p>Let&rsquo;s add another puesto property.\nEnter an empty property name when done.\n? Property name: clave\n   invoke   loopback:property\n? Property type: string\n? Required? Yes\n? Default value[leave blank for none]:</p>\n<p>Let&rsquo;s add another puesto property.\nEnter an empty property name when done.\n? Property name: orden\n   invoke   loopback:property\n? Property type: number\n? Required? Yes\n? Default value[leave blank for none]:</p>\n<p>Let&rsquo;s add another puesto property.\nEnter an empty property name when done.\n? Property name:\n /Volumes/datos/projects/lb-cmi $\n</code></pre>\nEl campo <code class=\"code-inline\">nombre</code> es de tipo texto, no se validar\u00e1 la extensi\u00f3n, aunque ser\u00eda bueno validar que sea \u00fanico. El campo <code class=\"code-inline\">clave</code> debe ser de tres o cuatro letras, ser\u00e1 necesario validar la extensi\u00f3n y tambi\u00e9n que sea \u00fanico. El campo <code class=\"code-inline\">orden</code> que es num\u00e9rico no necesita muchas validaciones, pero bueno, ya veremos.\n<h3>Usando el API Explorer</h3>\nAntes de continuar con el tercer modelo, vamos a familiarizarnos con el <i>API Explorer</i> y a realizar algunas operaciones b\u00e1sicas en el navegador y en la consola.\nDentro del directorio de nuestro proyecto ejecutamos la siguiente orden para arrancar el servidor:\n<pre><code class=\"code-multiline\">&gt; $ node .                                                                                                   <br>\nWeb server listening at: http://0.0.0.0:3000\nBrowse your REST API at http://0.0.0.0:3000/explorer\n</code></pre>\nCon esto podemos visitar el API Explorer que inicialmente nos presenta el primer nivel de la API.\n<img class=\"aligncenter size-full wp-image-537\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/17221409/Captura-de-pantalla-2017-02-17-a-las-19.27.02.png\" alt=\"\" width=\"748\" height=\"249\" />\nAl hacer clic en el enlace <code class=\"code-inline\">sitio</code> vemos todos los <i>endpoints</i> que est\u00e1n disponibles para ese <i>endpoint</i>.\n<img class=\"aligncenter size-full wp-image-535\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/17220041/Captura-de-pantalla-2017-02-17-a-las-19.28.26.png\" alt=\"\" width=\"737\" height=\"661\" />\nComo podemos apreciar, tenemos todos los verbos de una API RESTFul completa, sin tener que escribir una sola l\u00ednea de c\u00f3digo, solo contestando algunas preguntas.\nAhora vamos a hacer clic en el verbo POST del <i>endpoint</i> <code class=\"code-inline\">sitios</code>, y veremos la siguiente pantalla.\n<img class=\"aligncenter wp-image-534 size-full\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/17220028/20170217-API-Explorer.png\" width=\"772\" height=\"564\" />\nComo recordamos del art\u00edculo anterior, no debemos usar el <code class=\"code-inline\">id</code> porque ese es autom\u00e1tico, as\u00ed vamos a usar este JSON:\n<pre><code class=\"code-multiline\">{\n  &ldquo;nombre&rdquo;: &ldquo;Junta Local&rdquo;,\n  &ldquo;direccion&rdquo;: &ldquo;Xicohtencatl 7, Centro. Tlaxcala, Tlax.&rdquo;,\n  &ldquo;telefonos&rdquo;: {\n    &ldquo;Ejecutiva&rdquo;: &ldquo;(246) 123 456&rdquo;,\n    &ldquo;Secretario&rdquo;: &ldquo;(246) 456 789&rdquo;,\n    &ldquo;Registro&rdquo;: &ldquo;(246) 987 654&rdquo;\n  }\n}\n</code></pre>\nAl oprimir el bot\u00f3n <b>Try it out!</b> obtenemos esto:\n<img class=\"aligncenter size-full wp-image-533\" src=\"https://media.toledano.org/wp-content/uploads/2017/02/17220019/Captura-de-pantalla-2017-02-17-a-las-20.46.37.png\" alt=\"\" width=\"744\" height=\"670\" />\nLa respuesta nos muestra el c\u00f3digo <code class=\"code-inline\">curl</code> para subir los datos, la respuesta exitosa, el c\u00f3digo de respuesta y los encabezados de respuesta.\nAhora podemos ver otros enlaces, como el <i>endpoint</i> <b>GET</b> para ver la respuesta del servidor, usar filtros, etc.\nM\u00e1s adelante veremos como usar el Token que se ve en la parte superior, pero primero tenemos que conectar nuestra API a una fuente de datos para hacerlos persistentes, como por ejemplo a una base de datos como MongoDB.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "como-crear-una-api-con-loopback", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 138, "fields": {"idx": "d901bb18-667d-49ed-8e5f-321403b827b9", "creado": "2017-08-29T14:59:46.109Z", "modificado": "2017-08-29T14:59:46.109Z", "title": "Conectar LoopBack con una base de datos", "summary": "", "body": "Ya tenemos dos modelos de nuestra aplicaci\u00f3n de control de personal, ahora vamos a hacer que la informaci\u00f3n sea persistente, es decir, vamos a conectarnos con una fuente de datos, m\u00e1s espec\u00edficamente con una base de datos y en concreto con MongoDB.\r\n<h2>Crear la fuente de datos</h2>\r\nPara crear una fuente de datos, llamadas <i>datasources</i> en LoopBack, debemos usar el siguiente comando, dentro del directorio del proyecto.\r\n<pre><code class=\"code-multiline\">$ lb datasource\r\n</code></pre>\r\nA continuaci\u00f3n nos va a preguntar por un nombre.\r\n[alert type=\"info\" icon-size=\"normal\"]No tengo claro si se crea una tabla o una base de datos, pero pensando en esto \u00faltimo, usar\u00e9 el nombre cmi y espero estar en lo correcto.[/alert]\r\n<pre><code class=\"code-multiline\">? Enter the data-source name: cmi\r\n? Select the connector for cmi:\r\n  IBM Cloudant DB (supported by StrongLoop)\r\n  IBM DB2 for z/OS (supported by StrongLoop)\r\n  Redis key-value connector (supported by StrongLoop)\r\n\u276f MongoDB (supported by StrongLoop)\r\n  MySQL (supported by StrongLoop)\r\n  PostgreSQL (supported by StrongLoop)\r\n  Oracle (supported by StrongLoop)\r\n(Move up and down to reveal more choices)\r\n</code></pre>\r\nEl siguiente paso es seleccionar el conector para la <i>datasource</i>, muchos de ellos son proporcionados por StrongLoop, los creadores de LoopBack, y tambi\u00e9n hay conectores para otras fuentes menos comunes creadas por la comunidad, por ejemplo para Couchbase, Neo4j, Kafka, SAP HANA y ElasticSearch.\r\nEn nuestro proyecto vamos a usar MongoDB, as\u00ed que es el conector seleccionado y debemos asegurarnos que la cadena de conexi\u00f3n es la correcta. En mi caso, la cadena de conexi\u00f3n es <code class=\"code-inline\">mongodb://127.0.0.1:27017/cmi</code>.\r\n<pre><code class=\"code-multiline\">&gt; $ lb datasource                                                          \r\n? Enter the data-source name: cmi\r\n? Select the connector for cmi: MongoDB (supported by StrongLoop)\r\nConnector-specific configuration:\r\n? Connection String url to override other settings (eg: mongodb://username:password@hostname:port/database):\r\n? host: localhost\r\n? port: 27017\r\n? user:\r\n? password:\r\n? database: cmi\r\n? Install loopback-connector-mongodb@^1.4 Yes\r\n</code></pre>\r\nLa \u00faltima pregunta ejecuta el programa <code class=\"code-inline\">npm</code> para instalar el conector especificado.\r\n<pre><code class=\"code-multiline\">lb-cmi@1.0.0 /Volumes/datos/projects/lb-cmi\r\n\u2514\u2500\u252c loopback-connector-mongodb@1.18.1\r\n  \u251c\u2500\u2500 async@1.5.2\r\n  \u251c\u2500\u2500 loopback-connector@2.7.1\r\n  \u2514\u2500\u252c mongodb@2.2.24\r\n    \u251c\u2500\u2500 es6-promise@3.2.1\r\n    \u251c\u2500\u252c mongodb-core@2.1.8\r\n    \u2502 \u251c\u2500\u2500 bson@1.0.4\r\n    \u2502 \u2514\u2500\u252c require_optional@1.0.0\r\n    \u2502   \u251c\u2500\u2500 resolve-from@2.0.0\r\n    \u2502   \u2514\u2500\u2500 semver@5.3.0\r\n    \u2514\u2500\u2500 readable-stream@2.1.5\r\n</code></pre>\r\nLa herramienta agrega la definici\u00f3n de la fuente de datos al archivo <code class=\"code-inline\">server/datasources.json</code> cuyo contenido podemos ver m\u00e1s abajo.\r\n<pre><code class=\"code-multiline\">{\r\n  \"db\": {\r\n    \"name\": \"db\",\r\n    \"connector\": \"memory\"\r\n  },\r\n  \"cmi\": {\r\n    \"host\": \"localhost\",\r\n    \"port\": 27017,\r\n    \"url\": \"\",\r\n    \"database\": \"cmi\",\r\n    \"password\": \"\",\r\n    \"name\": \"cmi\",\r\n    \"user\": \"\",\r\n    \"connector\": \"mongodb\"\r\n  }\r\n}\r\n</code></pre>\r\nAqu\u00ed podemos ver que nuestra fuente de datos <code class=\"code-inline\">\u201dcmi\u201d</code> se muestra junto a <code class=\"code-inline\">\u201ddb\u201d</code> que es la fuente de datos por default.\r\n<h2>Conectando modelos a fuentes de datos</h2>\r\nAhora que ya tenemos nuestra fuente de datos en MongoDB y nuestros modelos <code class=\"code-inline\">Sitios</code> y <code class=\"code-inline\">Puestos</code> debemos conectarlos. Las aplicaciones hechas con LoopBack usan el archivo <code class=\"code-inline\">model-config.json</code> para enlazar los modelos a las fuentes de datos. Vamos a editar este archivo y localizar la entrada del modelo <code class=\"code-inline\">Sitios</code>.\r\n<pre><code class=\"code-multiline\">...\r\n  \"sitio\": {\r\n    \"dataSource\": \"db\",\r\n    \"public\": true\r\n  },\r\n...\r\n</code></pre>\r\nAhora vamos a cambiar la propiedad <code class=\"code-inline\">dataSource</code> de <code class=\"code-inline\">db</code> a <code class=\"code-inline\">cmi</code>. Esto conecta el modelo <code class=\"code-inline\">Sitios</code> a la fuente de datos de MongoDB que acabamos de configurar.\r\n<pre><code class=\"code-multiline\">...\r\n  \"sitio\": {\r\n    \"dataSource\": \"cmi\",\r\n    \"public\": true\r\n  },\r\n...\r\n</code></pre>\r\n<h2>Agregando datos</h2>\r\nUsando el API Explorer es posible agregar datos y verificar el funcionamiento de la conexi\u00f3n a la fuente de datos, por ejemplo, si agregamos los mismos datos del ejemplo en el art\u00edculo anterior, veremos que hay un cambio importante:\r\n<pre><code class=\"code-multiline\">{\r\n  \"nombre\": \"Junta Local\",\r\n  \"direccion\": \"Xicohtencatl 7, Centro, Tlaxcala\",\r\n  \"telefonos\": {\r\n    \"Ejecutiva\": \"(246) 123 456\",\r\n    \"Secretarial\": \"(246) 456 789\",\r\n    \"Registro\": \"(246) 789 012\"\r\n  },\r\n  \"id\": \"58a8aa5ef1f2dbabf43463a1\"\r\n}\r\n</code></pre>\r\nEl <code class=\"code-inline\">id</code> generado corresponde al tipo de identificador de documento de MongoDB, en vez de un tradicional entero consecutivo que inicia en <code class=\"code-inline\">1</code>.\r\nTambi\u00e9n podemos verificar el funcionamiento del conector usando la l\u00ednea de comandos <code class=\"code-inline\">mongo</code> para verificar que el documento creado est\u00e9 dentro de la colecci\u00f3n.\r\n<pre><code class=\"code-multiline\">&gt; db.sitio.find()\r\n{ \"_id\" : ObjectId(\"58a8aa5ef1f2dbabf43463a1\"), \"nombre\" : \"Junta Local\", \"direccion\" : \"Xicohtencatl 7, Centro, Tlaxcala\", \"telefonos\" : { \"Ejecutiva\" : \"(246) 123 456\", \"Secretarial\" : \"(246) 456 789\", \"Registro\" : \"(246) 789 012\" } }\r\n</code></pre>\r\nTambi\u00e9n podemos agregar datos program\u00e1ticamente usando la funci\u00f3n <code class=\"code-inline\">automigrate()</code> que elimina las tablas indicadas y las crea de nuevo con los datos del archivo. Al colocar este archivo en el directorio <code class=\"code-inline\">/server/boot</code> se ejecuta de forma autom\u00e1tica cada vez que se inicia la aplicaci\u00f3n. Vamos a intentarlo con este archivo de prueba.\r\n<pre class=\"lang:js decode:true \" title=\"/server/boot/sitios-data.js\">var SitiosData = function(app){};\r\n\r\nSitiosData = function(app){\r\n  app.dataSources.cmi.automigrate('sitio', function(err){\r\n    if(err) throw err;\r\n\r\n    app.models.sitio.create([\r\n      {\r\n        nombre: 'Junta Local',\r\n        direccion: 'Xicohtencatl 7, Tlaxcala',\r\n        telefonos: {\r\n          'Ejecutiva': '(246) 123 456',\r\n          'Secretarial': '(246) 456 789',\r\n          'Registro': '(246) 789 012'\r\n        }\r\n      },\r\n      {\r\n        nombre: '01 Junta Distrital',\r\n        direccion: 'Xicohtencatl 2112, Apizaco',\r\n        telefonos: {\r\n          'Ejecutiva': '(241) 123 456',\r\n          'Secretarial': '(241) 456 789',\r\n          'Registro': '(241) 789 012'\r\n        }\r\n      },\r\n      {\r\n        nombre: '02 Junta Distrital',\r\n        direccion: 'Carr Ocotl\u00e1n-Chiautempan, Tlaxcala',\r\n        telefonos: {\r\n          'Ejecutiva': '(246) 123 456',\r\n          'Secretarial': '(246) 456 789',\r\n          'Registro': '(246) 789 012'\r\n        }\r\n      },\r\n      {\r\n        nombre: '03 Junta Distrital',\r\n        direccion: 'Calle Morelos, Zacatelco',\r\n        telefonos: {\r\n          'Ejecutiva': '(246) 123 456',\r\n          'Secretarial': '(246) 456 789',\r\n          'Registro': '(246) 789 012'\r\n        }\r\n      },\r\n    ], function(err, sitios){\r\n      if (err) throw err;\r\n      console.log('Modelos creados: \\n', sitios);\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = SitiosData;</pre>\r\nY una vez que se ejecute lo vamos a mover, para que no suceda de nuevo.\r\n\r\nEsta es la salida al reiniciar la aplicaci\u00f3n.\r\n<pre><code class=\"code-multiline\">&gt; $ node .\r\nWeb server listening at: http://0.0.0.0:3000\r\nBrowse your REST API at http://0.0.0.0:3000/explorer\r\nModelos creados:\r\n [ { nombre: 'Junta Local',\r\n    direccion: 'Xicohtencatl 7, Tlaxcala',\r\n    telefonos:\r\n     { Ejecutiva: '(246) 123 456',\r\n       Secretarial: '(246) 456 789',\r\n       Registro: '(246) 789 012' },\r\n    id: 58a8b79d2a8bbdb12fb115f9 },\r\n  { nombre: '01 Junta Distrital',\r\n    direccion: 'Xicohtencatl 2112, Apizaco',\r\n    telefonos:\r\n     { Ejecutiva: '(241) 123 456',\r\n       Secretarial: '(241) 456 789',\r\n       Registro: '(241) 789 012' },\r\n    id: 58a8b79d2a8bbdb12fb115fa },\r\n  { nombre: '02 Junta Distrital',\r\n    direccion: 'Carr Ocotl\u00e1n-Chiautempan, Tlaxcala',\r\n    telefonos:\r\n     { Ejecutiva: '(246) 123 456',\r\n       Secretarial: '(246) 456 789',\r\n       Registro: '(246) 789 012' },\r\n    id: 58a8b79d2a8bbdb12fb115fb },\r\n  { nombre: '03 Junta Distrital',\r\n    direccion: 'Calle Morelos, Zacatelco',\r\n    telefonos:\r\n     { Ejecutiva: '(246) 123 456',\r\n       Secretarial: '(246) 456 789',\r\n       Registro: '(246) 789 012' },\r\n    id: 58a8b79d2a8bbdb12fb115fc } ]\r\n</code></pre>\r\nAhora podemos revisar en el API Explorer el comando GET de nuestra API y ver el resultado.\r\nEl siguiente paso es extender nuestra API.", "extend": "", "pub_date": "2017-02-18T15:58:31Z", "summary_html": "", "body_html": "<p>Ya tenemos dos modelos de nuestra aplicaci\u00f3n de control de personal, ahora vamos a hacer que la informaci\u00f3n sea persistente, es decir, vamos a conectarnos con una fuente de datos, m\u00e1s espec\u00edficamente con una base de datos y en concreto con MongoDB.\n<h2>Crear la fuente de datos</h2>\nPara crear una fuente de datos, llamadas <i>datasources</i> en LoopBack, debemos usar el siguiente comando, dentro del directorio del proyecto.\n<pre><code class=\"code-multiline\">$ lb datasource\n</code></pre>\nA continuaci\u00f3n nos va a preguntar por un nombre.\n[alert type=&rdquo;info&rdquo; icon-size=&rdquo;normal&rdquo;]No tengo claro si se crea una tabla o una base de datos, pero pensando en esto \u00faltimo, usar\u00e9 el nombre cmi y espero estar en lo correcto.[/alert]\n<pre><code class=\"code-multiline\">? Enter the data-source name: cmi\n? Select the connector for cmi:\n  IBM Cloudant DB (supported by StrongLoop)\n  IBM DB2 for z/OS (supported by StrongLoop)\n  Redis key-value connector (supported by StrongLoop)\n\u276f MongoDB (supported by StrongLoop)\n  MySQL (supported by StrongLoop)\n  PostgreSQL (supported by StrongLoop)\n  Oracle (supported by StrongLoop)\n(Move up and down to reveal more choices)\n</code></pre>\nEl siguiente paso es seleccionar el conector para la <i>datasource</i>, muchos de ellos son proporcionados por StrongLoop, los creadores de LoopBack, y tambi\u00e9n hay conectores para otras fuentes menos comunes creadas por la comunidad, por ejemplo para Couchbase, Neo4j, Kafka, SAP HANA y ElasticSearch.\nEn nuestro proyecto vamos a usar MongoDB, as\u00ed que es el conector seleccionado y debemos asegurarnos que la cadena de conexi\u00f3n es la correcta. En mi caso, la cadena de conexi\u00f3n es <code class=\"code-inline\">mongodb://127.0.0.1:27017/cmi</code>.\n<pre><code class=\"code-multiline\">&gt; $ lb datasource                                                        <br>\n? Enter the data-source name: cmi\n? Select the connector for cmi: MongoDB (supported by StrongLoop)\nConnector-specific configuration:\n? Connection String url to override other settings (eg: mongodb://username:password@hostname:port/database):\n? host: localhost\n? port: 27017\n? user:\n? password:\n? database: cmi\n? Install loopback-connector-mongodb@^1.4 Yes\n</code></pre>\nLa \u00faltima pregunta ejecuta el programa <code class=\"code-inline\">npm</code> para instalar el conector especificado.\n<pre><code class=\"code-multiline\">lb-cmi@1.0.0 /Volumes/datos/projects/lb-cmi\n\u2514\u2500\u252c loopback-connector-mongodb@1.18.1\n  \u251c\u2500\u2500 async@1.5.2\n  \u251c\u2500\u2500 loopback-connector@2.7.1\n  \u2514\u2500\u252c mongodb@2.2.24\n    \u251c\u2500\u2500 es6-promise@3.2.1\n    \u251c\u2500\u252c mongodb-core@2.1.8\n    \u2502 \u251c\u2500\u2500 bson@1.0.4\n    \u2502 \u2514\u2500\u252c require_optional@1.0.0\n    \u2502   \u251c\u2500\u2500 resolve-from@2.0.0\n    \u2502   \u2514\u2500\u2500 semver@5.3.0\n    \u2514\u2500\u2500 readable-stream@2.1.5\n</code></pre>\nLa herramienta agrega la definici\u00f3n de la fuente de datos al archivo <code class=\"code-inline\">server/datasources.json</code> cuyo contenido podemos ver m\u00e1s abajo.\n<pre><code class=\"code-multiline\">{\n  &ldquo;db&rdquo;: {\n    &ldquo;name&rdquo;: &ldquo;db&rdquo;,\n    &ldquo;connector&rdquo;: &ldquo;memory&rdquo;\n  },\n  &ldquo;cmi&rdquo;: {\n    &ldquo;host&rdquo;: &ldquo;localhost&rdquo;,\n    &ldquo;port&rdquo;: 27017,\n    &ldquo;url&rdquo;: &ldquo;&rdquo;,\n    &ldquo;database&rdquo;: &ldquo;cmi&rdquo;,\n    &ldquo;password&rdquo;: &ldquo;&rdquo;,\n    &ldquo;name&rdquo;: &ldquo;cmi&rdquo;,\n    &ldquo;user&rdquo;: &ldquo;&rdquo;,\n    &ldquo;connector&rdquo;: &ldquo;mongodb&rdquo;\n  }\n}\n</code></pre>\nAqu\u00ed podemos ver que nuestra fuente de datos <code class=\"code-inline\">\u201dcmi\u201d</code> se muestra junto a <code class=\"code-inline\">\u201ddb\u201d</code> que es la fuente de datos por default.\n<h2>Conectando modelos a fuentes de datos</h2>\nAhora que ya tenemos nuestra fuente de datos en MongoDB y nuestros modelos <code class=\"code-inline\">Sitios</code> y <code class=\"code-inline\">Puestos</code> debemos conectarlos. Las aplicaciones hechas con LoopBack usan el archivo <code class=\"code-inline\">model-config.json</code> para enlazar los modelos a las fuentes de datos. Vamos a editar este archivo y localizar la entrada del modelo <code class=\"code-inline\">Sitios</code>.\n<pre><code class=\"code-multiline\">&hellip;\n  &ldquo;sitio&rdquo;: {\n    &ldquo;dataSource&rdquo;: &ldquo;db&rdquo;,\n    &ldquo;public&rdquo;: true\n  },\n&hellip;\n</code></pre>\nAhora vamos a cambiar la propiedad <code class=\"code-inline\">dataSource</code> de <code class=\"code-inline\">db</code> a <code class=\"code-inline\">cmi</code>. Esto conecta el modelo <code class=\"code-inline\">Sitios</code> a la fuente de datos de MongoDB que acabamos de configurar.\n<pre><code class=\"code-multiline\">&hellip;\n  &ldquo;sitio&rdquo;: {\n    &ldquo;dataSource&rdquo;: &ldquo;cmi&rdquo;,\n    &ldquo;public&rdquo;: true\n  },\n&hellip;\n</code></pre>\n<h2>Agregando datos</h2>\nUsando el API Explorer es posible agregar datos y verificar el funcionamiento de la conexi\u00f3n a la fuente de datos, por ejemplo, si agregamos los mismos datos del ejemplo en el art\u00edculo anterior, veremos que hay un cambio importante:\n<pre><code class=\"code-multiline\">{\n  &ldquo;nombre&rdquo;: &ldquo;Junta Local&rdquo;,\n  &ldquo;direccion&rdquo;: &ldquo;Xicohtencatl 7, Centro, Tlaxcala&rdquo;,\n  &ldquo;telefonos&rdquo;: {\n    &ldquo;Ejecutiva&rdquo;: &ldquo;(246) 123 456&rdquo;,\n    &ldquo;Secretarial&rdquo;: &ldquo;(246) 456 789&rdquo;,\n    &ldquo;Registro&rdquo;: &ldquo;(246) 789 012&rdquo;\n  },\n  &ldquo;id&rdquo;: &ldquo;58a8aa5ef1f2dbabf43463a1&rdquo;\n}\n</code></pre>\nEl <code class=\"code-inline\">id</code> generado corresponde al tipo de identificador de documento de MongoDB, en vez de un tradicional entero consecutivo que inicia en <code class=\"code-inline\">1</code>.\nTambi\u00e9n podemos verificar el funcionamiento del conector usando la l\u00ednea de comandos <code class=\"code-inline\">mongo</code> para verificar que el documento creado est\u00e9 dentro de la colecci\u00f3n.\n<pre><code class=\"code-multiline\">&gt; db.sitio.find()\n{ &ldquo;_id&rdquo; : ObjectId(&ldquo;58a8aa5ef1f2dbabf43463a1&rdquo;), &ldquo;nombre&rdquo; : &ldquo;Junta Local&rdquo;, &ldquo;direccion&rdquo; : &ldquo;Xicohtencatl 7, Centro, Tlaxcala&rdquo;, &ldquo;telefonos&rdquo; : { &ldquo;Ejecutiva&rdquo; : &ldquo;(246) 123 456&rdquo;, &ldquo;Secretarial&rdquo; : &ldquo;(246) 456 789&rdquo;, &ldquo;Registro&rdquo; : &ldquo;(246) 789 012&rdquo; } }\n</code></pre>\nTambi\u00e9n podemos agregar datos program\u00e1ticamente usando la funci\u00f3n <code class=\"code-inline\">automigrate()</code> que elimina las tablas indicadas y las crea de nuevo con los datos del archivo. Al colocar este archivo en el directorio <code class=\"code-inline\">/server/boot</code> se ejecuta de forma autom\u00e1tica cada vez que se inicia la aplicaci\u00f3n. Vamos a intentarlo con este archivo de prueba.\n<pre class=\"lang:js decode:true \" title=\"/server/boot/sitios-data.js\">var SitiosData = function(app){};</p>\n<p>SitiosData = function(app){\n  app.dataSources.cmi.automigrate(&lsquo;sitio&rsquo;, function(err){\n    if(err) throw err;</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">app</span><span class=\"p\">.</span><span class=\"nc\">models</span><span class=\"p\">.</span><span class=\"nc\">sitio</span><span class=\"p\">.</span><span class=\"nc\">create</span><span class=\"o\">(</span><span class=\"cp\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"nx\">nombre</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Junta Local&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">direccion</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Xicohtencatl 7, Tlaxcala&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">telefonos</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s1\">&#39;Ejecutiva&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(246) 123 456&#39;</span><span class=\"p\">,</span>\n      <span class=\"s1\">&#39;Secretarial&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(246) 456 789&#39;</span><span class=\"p\">,</span>\n      <span class=\"s1\">&#39;Registro&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(246) 789 012&#39;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nx\">nombre</span><span class=\"p\">:</span> <span class=\"s1\">&#39;01 Junta Distrital&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">direccion</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Xicohtencatl 2112, Apizaco&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">telefonos</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s1\">&#39;Ejecutiva&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(241) 123 456&#39;</span><span class=\"p\">,</span>\n      <span class=\"s1\">&#39;Secretarial&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(241) 456 789&#39;</span><span class=\"p\">,</span>\n      <span class=\"s1\">&#39;Registro&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(241) 789 012&#39;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nx\">nombre</span><span class=\"p\">:</span> <span class=\"s1\">&#39;02 Junta Distrital&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">direccion</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Carr Ocotl\u00e1n-Chiautempan, Tlaxcala&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">telefonos</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s1\">&#39;Ejecutiva&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(246) 123 456&#39;</span><span class=\"p\">,</span>\n      <span class=\"s1\">&#39;Secretarial&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(246) 456 789&#39;</span><span class=\"p\">,</span>\n      <span class=\"s1\">&#39;Registro&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(246) 789 012&#39;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nx\">nombre</span><span class=\"p\">:</span> <span class=\"s1\">&#39;03 Junta Distrital&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">direccion</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Calle Morelos, Zacatelco&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">telefonos</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s1\">&#39;Ejecutiva&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(246) 123 456&#39;</span><span class=\"p\">,</span>\n      <span class=\"s1\">&#39;Secretarial&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(246) 456 789&#39;</span><span class=\"p\">,</span>\n      <span class=\"s1\">&#39;Registro&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;(246) 789 012&#39;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n<span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">function</span><span class=\"o\">(</span><span class=\"nt\">err</span><span class=\"o\">,</span> <span class=\"nt\">sitios</span><span class=\"o\">)</span><span class=\"p\">{</span>\n  <span class=\"err\">if</span> <span class=\"err\">(err)</span> <span class=\"err\">throw</span> <span class=\"err\">err</span><span class=\"p\">;</span>\n  <span class=\"err\">console.log(&#39;Modelos</span> <span class=\"n\">creados</span><span class=\"p\">:</span> <span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"err\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">sitios</span><span class=\"p\">);</span>\n<span class=\"p\">}</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>});\n}</p>\n<p>module.exports = SitiosData;</pre>\nY una vez que se ejecute lo vamos a mover, para que no suceda de nuevo.</p>\n<p>Esta es la salida al reiniciar la aplicaci\u00f3n.\n<pre><code class=\"code-multiline\">&gt; $ node .\nWeb server listening at: http://0.0.0.0:3000\nBrowse your REST API at http://0.0.0.0:3000/explorer\nModelos creados:\n [ { nombre: &lsquo;Junta Local&rsquo;,\n    direccion: &lsquo;Xicohtencatl 7, Tlaxcala&rsquo;,\n    telefonos:\n     { Ejecutiva: &lsquo;(246) 123 456&rsquo;,\n       Secretarial: &lsquo;(246) 456 789&rsquo;,\n       Registro: &lsquo;(246) 789 012&rsquo; },\n    id: 58a8b79d2a8bbdb12fb115f9 },\n  { nombre: &lsquo;01 Junta Distrital&rsquo;,\n    direccion: &lsquo;Xicohtencatl 2112, Apizaco&rsquo;,\n    telefonos:\n     { Ejecutiva: &lsquo;(241) 123 456&rsquo;,\n       Secretarial: &lsquo;(241) 456 789&rsquo;,\n       Registro: &lsquo;(241) 789 012&rsquo; },\n    id: 58a8b79d2a8bbdb12fb115fa },\n  { nombre: &lsquo;02 Junta Distrital&rsquo;,\n    direccion: &lsquo;Carr Ocotl\u00e1n-Chiautempan, Tlaxcala&rsquo;,\n    telefonos:\n     { Ejecutiva: &lsquo;(246) 123 456&rsquo;,\n       Secretarial: &lsquo;(246) 456 789&rsquo;,\n       Registro: &lsquo;(246) 789 012&rsquo; },\n    id: 58a8b79d2a8bbdb12fb115fb },\n  { nombre: &lsquo;03 Junta Distrital&rsquo;,\n    direccion: &lsquo;Calle Morelos, Zacatelco&rsquo;,\n    telefonos:\n     { Ejecutiva: &lsquo;(246) 123 456&rsquo;,\n       Secretarial: &lsquo;(246) 456 789&rsquo;,\n       Registro: &lsquo;(246) 789 012&rsquo; },\n    id: 58a8b79d2a8bbdb12fb115fc } ]\n</code></pre>\nAhora podemos revisar en el API Explorer el comando GET de nuestra API y ver el resultado.\nEl siguiente paso es extender nuestra API.</p>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "conectar-loopback-con-una-base-de-datos", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}, {"model": "blog.entry", "pk": 139, "fields": {"idx": "dbfb6102-e9bb-4df0-9fbd-f8c82f0c39a1", "creado": "2017-11-07T03:13:24.838Z", "modificado": "2018-06-25T00:19:41.714Z", "title": "Docker y NodeJS, un ejemplo b\u00e1sico", "summary": "C\u00f3mo crear un contenedor de NodeJS con Docker, o como dicen ahora \"dockerizar\" nuestra aplicaci\u00f3n de NodeJS.", "body": "Title: Docker y NodeJS, un ejemplo b\u00e1sico    \r\nDate: 2017-11-05 22:12:16\r\nCategory: desarrollo\r\nTags: docker, nodejs \r\nSummary: C\u00f3mo crear un contenedor de NodeJS con Docker, o como dicen ahora \"dockerizar\" nuestra aplicaci\u00f3n de NodeJS.\r\n\r\nLo primero que tenemos que hacer es [instalar Docker][1], algo facil\u00edsimo en MacOS y en Linux (y seguramente en las versiones m\u00e1s recientes de Windows). Solo hay que seguir las instrucciones.\r\n\r\nUna vez instalado podemos verificar la versi\u00f3n:\r\n\r\n```bash\r\n$ docker --version \r\nDocker version 17.09.0-ce, build afdb6d4\r\n```\r\n\r\nY tambi\u00e9n podemos ejecutar el contenedor m\u00e1s peque\u00f1o posible:\r\n\r\n```bash\r\n $ docker run hello-world\r\nUnable to find image 'hello-world:latest' locally\r\nlatest: Pulling from library/hello-world\r\n9a0669468bf7: Pull complete\r\nDigest: sha256:0e06ef5e1945a718b02a8c319e15bae44f47039005530bc617a5d071190ed3fc\r\nStatus: Downloaded newer image for hello-world:latest\r\n\r\nHello from Docker!\r\nThis message shows that your installation appears to be working correctly.\r\n...\r\n```\r\n\r\n## La aplicaci\u00f3n\r\nPara este ejemplo b\u00e1sico vamos a crear una aplicaci\u00f3n de ReactJS  que solo diga el cl\u00e1sico `Hola Mundo`, pero usa una configuraci\u00f3n completa. \r\n\r\nLo primero es crear la carpeta, yo la llam\u00e9 `mern`.\r\n\r\n```sh\r\n$ mkdir mern\r\n$ cd mern\r\n```\r\n\r\nYo empec\u00e9 con `npm init` que crea un archivo `package.json`, este es el m\u00edo:\r\n\r\n```json\r\n{\r\n  \"name\": \"mern\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Pruebas con React\",\r\n  \"main\": \"index.js\",\r\n  \"scripts\": {\r\n    \"start\": \"node index.js\",\r\n    \"compile\": \"babel src --presets react,es2015 --out-dir static/js\",\r\n    \"watch\": \"babel src --presets react,es2015 --out-dir static/js --watch\",\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\r\n  },\r\n  \"keywords\": [\r\n    \"react\",\r\n    \"mongo\",\r\n    \"express\",\r\n    \"node\"\r\n  ],\r\n  \"author\": \"Javier Sanchez\",\r\n  \"license\": \"MIT\",\r\n  \"dependencies\": {\r\n    \"express\": \"^4.16.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"babel-cli\": \"^6.26.0\",\r\n    \"babel-preset-es2015\": \"^6.24.1\",\r\n    \"babel-preset-react\": \"^6.24.1\"\r\n  }\r\n}\r\n```\r\n\r\nUtiliza [ExpressJS][3] como \u00fanica dependencia en producci\u00f3n y para desarrollo uso [BabelJS][4] y dos plugins, uno para transpilar (o traducir) el c\u00f3digo de React y ES2015.\r\n\r\nLa orden de ejecuci\u00f3n, arranca el servidor con el archivo `\u00edndex.js` que es muy simple:\r\n\r\n```js\r\nconst express = require('express')\r\nconst app = express()\r\nconst PORT = 3000;\r\n\r\napp.use(express.static('static'))\r\n\r\napp.listen(PORT, () => console.log(`Funcionando en el puerto ${PORT}`))\r\n```\r\n\r\n<div style=\"margin-bottom: 65px;\">\r\n  <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\r\n  <ins class=\"adsbygoogle\"\r\n    style=\"display:block; text-align:center;\"\r\n    data-ad-layout=\"in-article\"\r\n    data-ad-format=\"fluid\"\r\n    data-ad-client=\"ca-pub-9466828947698623\"\r\n    data-ad-slot=\"4911156035\"></ins>\r\n  <script>\r\n    (adsbygoogle = window.adsbygoogle || []).push({});\r\n  </script>\r\n</div>\r\n\r\nLa aplicaci\u00f3n reside en el directorio `src` y solo es un componente que dice `Hola Mundo`:\r\n\r\n```js\r\nconst nodoContenido = document.getElementById('contenido')\r\n\r\nclass HolaMundo extends React.Component {\r\n  render() {\r\n    return (\r\n      <h1>Hola Mundo!</h1>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(<HolaMundo />, nodoContenido)\r\n```\r\n\r\nComo vemos en `package.json` necesita compilarse, lo que hacemos con la orden `npm run compile` que ejecuta el comando:\r\n\r\n```sh\r\n$ babel src --presets react,es2015 --out-dir static/js\r\n```\r\n\r\ny una vez compilada la aplicaci\u00f3n podemos ejecutar el servidor con \r\n\r\n```sh\r\nnpm start\r\n```\r\n\r\nAhora si, estamos listos para _dockerizar_ nuestra aplicaci\u00f3n.\r\n\r\n### El contenedor base\r\nLo primero que elegimos es el contenedor base. \r\n\r\n[__Alpine Linux__][2] es una distribuci\u00f3n muy ligera, que incluso puede ejecutarse en RAM. No utiliza las librer\u00edas est\u00e1ndar de C (las `glibc`) lo que puede ocasionar algunos problemas, pero no en este ejemplo.\r\n\r\nComo yo voy a usar este contenedor base en otros proyectos, voy a descargarla para tenerla disponible.\r\n\r\n```sh\r\n$ docker pull alpine\r\nUsing default tag: latest\r\nlatest: Pulling from library/alpine\r\nDigest: sha256:d6bfc3baf615dc9618209a8d607ba2a8103d9c8a405b3bd8741d88b4bef36478\r\nStatus: Image is up to date for alpine:latest\r\n```\r\n\r\n### Dockerfile con NodeJS para Alpine\r\nAhora, el contenedor para nuestra aplicaci\u00f3n es la variante `alpine` y la versi\u00f3n que vamos a utilizar es la mas nueva, es decir la 9.0[^1]. Para esto vamos a crear un archivo `Dockerfile` que contiene las siguientes l\u00edneas.\r\n\r\nPrimero instalamos el contenedor de NodeJS.\r\n\r\n```Dockefile\r\nFROM node:alpine\r\n```\r\n\r\nAhora vamos a crear un directorio de trabajo dentro del contenedor, al que llamaremos `/app`.\r\n\r\n```Dockerfile\r\nWORKDIR /app\r\n```\r\n\r\nLuego copiamos los archivos al directorio de trabajo.\r\n\r\n```Dockerfile\r\nADD . /app\r\n```\r\n\r\nDespu\u00e9s, instalamos los paquetes y compilamos el programa.\r\n\r\n```Dockerfile\r\nRUN npm install\r\nRUN npm run compile\r\n```\r\n\r\nTenemos que abrir el puerto `3000` para que sea visible en el exterior.\r\n\r\n```Dockerfile\r\nEXPOSE 3000\r\n```\r\n\r\nY por \u00faltimo ejecutamos nuestra aplicaci\u00f3n, con el script indicado en el archivo `package.json`.\r\n\r\n```Dockerfile\r\nCMD [\"npm\", \"start\"]\r\n```\r\n\r\nEste es el archivo completo:\r\n\r\n```Dockerfile\r\nFROM node:alpine\r\n\r\nWORKDIR /app\r\n\r\nADD . /app\r\n\r\nRUN npm install\r\nRUN npm run compile\r\n\r\nEXPOSE 3000\r\nCMD [\"npm\", \"start\"]\r\n```\r\n\r\n## Construir y ejecutar un contenedor.\r\n\r\nAhora toca el turno de construir el contenedor, que hacemos con la orden `build`. Adem\u00e1s, para identificarlo le agregamos una etiqueta con la marca `-t` de _tag_.\r\n\r\n```sh\r\n$ docker build -t mern .\r\nSending build context to Docker daemon  113.7kB\r\nStep 1/7 : FROM node:alpine\r\n ---> d06e52d14cac\r\nStep 2/7 : WORKDIR /app\r\n ---> Using cache\r\n ---> 8235cc38124f\r\nStep 3/7 : ADD . /app\r\n ---> 2a89296671af\r\nStep 4/7 : RUN npm install\r\n ---> Running in 480a4e340ed9\r\nnpm WARN mern@1.0.0 No repository field.\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.2 (node_modules/fsevents):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.2: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\r\n\r\nadded 327 packages in 463.458s\r\n ---> 4365094b5241\r\nRemoving intermediate container 480a4e340ed9\r\nStep 5/7 : RUN npm run compile\r\n ---> Running in 1e4b8eb87c21\r\n\r\n> mern@1.0.0 compile /app\r\n> babel src --presets react,es2015 --out-dir static/js\r\n\r\nsrc/app.jsx -> static/js/app.js\r\n ---> e6226251f8dd\r\nRemoving intermediate container 1e4b8eb87c21\r\nStep 6/7 : EXPOSE 3000\r\n ---> Running in 0c2f78b34720\r\n ---> a9888504fbaa\r\nRemoving intermediate container 0c2f78b34720\r\nStep 7/7 : CMD npm start\r\n ---> Running in dab2e748794a\r\n ---> 19bd1377caf6\r\nRemoving intermediate container dab2e748794a\r\nSuccessfully built 19bd1377caf6\r\nSuccessfully tagged mern:latest\r\n```\r\n\r\nAhora estamos listos para ejecutar el contenedor con la orden `run` y _mapeamos_ el puerto `3000`.\r\n\r\n```sh\r\n$ docker run -p 3000:3000 mern\r\n\r\n> mern@1.0.0 start /app\r\n> node index.js\r\n\r\nFuncionando en el puerto 3000\r\n```\r\n\r\nY verificamos el funcionamiento de nuestro servidor _dockerizado_ visitando la p\u00e1gina `http://localhost:3000/`.\r\n\r\nEn el siguiente art\u00edculo, veremos algunos comando \u00fatiles para administrar los contenedores, las imagines as\u00ed como crear un entorno de desarrollo usando Docker.\r\n\r\n[1]: https://goo.gl/qHmCoV\r\n[2]: https://goo.gl/GfNXmT\r\n[3]: https://goo.gl/kBeR2r\r\n[4]: https://goo.gl/CPtwn9\r\n\r\n<div style=\"margin-bottom: 65px;\">\r\n  <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\r\n  <ins class=\"adsbygoogle\"\r\n    style=\"display:block; text-align:center;\"\r\n    data-ad-layout=\"in-article\"\r\n    data-ad-format=\"fluid\"\r\n    data-ad-client=\"ca-pub-9466828947698623\"\r\n    data-ad-slot=\"2205101643\"></ins>\r\n  <script>\r\n    (adsbygoogle = window.adsbygoogle || []).push({});\r\n  </script>\r\n</div>\r\n\r\n[^1]: En un siguiente art\u00edculo vamos a crear un entorno de desarrollo con Docker y usaremos un contenedor con la versi\u00f3n LTS de NodeJS y una imagen de Ubuntu 16.04.", "extend": "", "pub_date": "2017-11-07T03:12:21Z", "summary_html": "<p>C\u00f3mo crear un contenedor de NodeJS con Docker, o como dicen ahora &ldquo;dockerizar&rdquo; nuestra aplicaci\u00f3n de NodeJS.</p>", "body_html": "<p>Lo primero que tenemos que hacer es <a href=\"https://goo.gl/qHmCoV\">instalar Docker</a>, algo facil\u00edsimo en MacOS y en Linux (y seguramente en las versiones m\u00e1s recientes de Windows). Solo hay que seguir las instrucciones.</p>\n<p>Una vez instalado podemos verificar la versi\u00f3n:</p>\n<div class=\"codehilite\"><pre><span></span>$ docker --version \nDocker version <span class=\"m\">17</span>.09.0-ce, build afdb6d4\n</pre></div>\n\n\n<p>Y tambi\u00e9n podemos ejecutar el contenedor m\u00e1s peque\u00f1o posible:</p>\n<div class=\"codehilite\"><pre><span></span> $ docker run hello-world\nUnable to find image <span class=\"s1\">&#39;hello-world:latest&#39;</span> locally\nlatest: Pulling from library/hello-world\n9a0669468bf7: Pull <span class=\"nb\">complete</span>\nDigest: sha256:0e06ef5e1945a718b02a8c319e15bae44f47039005530bc617a5d071190ed3fc\nStatus: Downloaded newer image <span class=\"k\">for</span> hello-world:latest\n\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n...\n</pre></div>\n\n\n<h2 id=\"la-aplicacion\">La aplicaci\u00f3n</h2>\n<p>Para este ejemplo b\u00e1sico vamos a crear una aplicaci\u00f3n de ReactJS  que solo diga el cl\u00e1sico <code>Hola Mundo</code>, pero usa una configuraci\u00f3n completa. </p>\n<p>Lo primero es crear la carpeta, yo la llam\u00e9 <code>mern</code>.</p>\n<div class=\"codehilite\"><pre><span></span>$ mkdir mern\n$ <span class=\"nb\">cd</span> mern\n</pre></div>\n\n\n<p>Yo empec\u00e9 con <code>npm init</code> que crea un archivo <code>package.json</code>, este es el m\u00edo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;mern&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Pruebas con React&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;main&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;index.js&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;scripts&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;start&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;node index.js&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;compile&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;babel src --presets react,es2015 --out-dir static/js&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;watch&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;babel src --presets react,es2015 --out-dir static/js --watch&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;test&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">&quot;keywords&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;react&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;mongo&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;express&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;node&quot;</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">&quot;author&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Javier Sanchez&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;license&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MIT&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;dependencies&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;express&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^4.16.2&quot;</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">&quot;devDependencies&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;babel-cli&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^6.26.0&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;babel-preset-es2015&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^6.24.1&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;babel-preset-react&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;^6.24.1&quot;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Utiliza <a href=\"https://goo.gl/kBeR2r\">ExpressJS</a> como \u00fanica dependencia en producci\u00f3n y para desarrollo uso <a href=\"https://goo.gl/CPtwn9\">BabelJS</a> y dos plugins, uno para transpilar (o traducir) el c\u00f3digo de React y ES2015.</p>\n<p>La orden de ejecuci\u00f3n, arranca el servidor con el archivo <code>\u00edndex.js</code> que es muy simple:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">express</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;express&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">()</span>\n<span class=\"kr\">const</span> <span class=\"nx\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">3000</span><span class=\"p\">;</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"kr\">static</span><span class=\"p\">(</span><span class=\"s1\">&#39;static&#39;</span><span class=\"p\">))</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">PORT</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"sb\">`Funcionando en el puerto </span><span class=\"si\">${</span><span class=\"nx\">PORT</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<div style=\"margin-bottom: 65px;\">\n  <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n  <ins class=\"adsbygoogle\"\n    style=\"display:block; text-align:center;\"\n    data-ad-layout=\"in-article\"\n    data-ad-format=\"fluid\"\n    data-ad-client=\"ca-pub-9466828947698623\"\n    data-ad-slot=\"4911156035\"></ins>\n  <script>\n    (adsbygoogle = window.adsbygoogle || []).push({});\n  </script>\n</div>\n\n<p>La aplicaci\u00f3n reside en el directorio <code>src</code> y solo es un componente que dice <code>Hola Mundo</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">nodoContenido</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;contenido&#39;</span><span class=\"p\">)</span>\n\n<span class=\"kr\">class</span> <span class=\"nx\">HolaMundo</span> <span class=\"kr\">extends</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n  <span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">h1</span><span class=\"o\">&gt;</span><span class=\"nx\">Hola</span> <span class=\"nx\">Mundo</span><span class=\"o\">!&lt;</span><span class=\"err\">/h1&gt;</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"nx\">HolaMundo</span> <span class=\"o\">/&gt;</span><span class=\"p\">,</span> <span class=\"nx\">nodoContenido</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Como vemos en <code>package.json</code> necesita compilarse, lo que hacemos con la orden <code>npm run compile</code> que ejecuta el comando:</p>\n<div class=\"codehilite\"><pre><span></span>$ babel src --presets react,es2015 --out-dir static/js\n</pre></div>\n\n\n<p>y una vez compilada la aplicaci\u00f3n podemos ejecutar el servidor con </p>\n<div class=\"codehilite\"><pre><span></span>npm start\n</pre></div>\n\n\n<p>Ahora si, estamos listos para <em>dockerizar</em> nuestra aplicaci\u00f3n.</p>\n<h3 id=\"el-contenedor-base\">El contenedor base</h3>\n<p>Lo primero que elegimos es el contenedor base. </p>\n<p><a href=\"https://goo.gl/GfNXmT\"><strong>Alpine Linux</strong></a> es una distribuci\u00f3n muy ligera, que incluso puede ejecutarse en RAM. No utiliza las librer\u00edas est\u00e1ndar de C (las <code>glibc</code>) lo que puede ocasionar algunos problemas, pero no en este ejemplo.</p>\n<p>Como yo voy a usar este contenedor base en otros proyectos, voy a descargarla para tenerla disponible.</p>\n<div class=\"codehilite\"><pre><span></span>$ docker pull alpine\nUsing default tag: latest\nlatest: Pulling from library/alpine\nDigest: sha256:d6bfc3baf615dc9618209a8d607ba2a8103d9c8a405b3bd8741d88b4bef36478\nStatus: Image is up to date <span class=\"k\">for</span> alpine:latest\n</pre></div>\n\n\n<h3 id=\"dockerfile-con-nodejs-para-alpine\">Dockerfile con NodeJS para Alpine</h3>\n<p>Ahora, el contenedor para nuestra aplicaci\u00f3n es la variante <code>alpine</code> y la versi\u00f3n que vamos a utilizar es la mas nueva, es decir la 9.0<sup id=\"fnref-1\"><a class=\"footnote-ref\" href=\"#fn-1\">1</a></sup>. Para esto vamos a crear un archivo <code>Dockerfile</code> que contiene las siguientes l\u00edneas.</p>\n<p>Primero instalamos el contenedor de NodeJS.</p>\n<div class=\"codehilite\"><pre><span></span>FROM node:alpine\n</pre></div>\n\n\n<p>Ahora vamos a crear un directorio de trabajo dentro del contenedor, al que llamaremos <code>/app</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">WORKDIR</span><span class=\"s\"> /app</span>\n</pre></div>\n\n\n<p>Luego copiamos los archivos al directorio de trabajo.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">ADD</span><span class=\"s\"> . /app</span>\n</pre></div>\n\n\n<p>Despu\u00e9s, instalamos los paquetes y compilamos el programa.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">RUN</span> npm install\n<span class=\"k\">RUN</span> npm run compile\n</pre></div>\n\n\n<p>Tenemos que abrir el puerto <code>3000</code> para que sea visible en el exterior.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">EXPOSE</span><span class=\"s\"> 3000</span>\n</pre></div>\n\n\n<p>Y por \u00faltimo ejecutamos nuestra aplicaci\u00f3n, con el script indicado en el archivo <code>package.json</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">CMD</span><span class=\"s\"> [&quot;npm&quot;, &quot;start&quot;]</span>\n</pre></div>\n\n\n<p>Este es el archivo completo:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">FROM</span><span class=\"s\"> node:alpine</span>\n\n<span class=\"k\">WORKDIR</span><span class=\"s\"> /app</span>\n\n<span class=\"k\">ADD</span><span class=\"s\"> . /app</span>\n\n<span class=\"k\">RUN</span> npm install\n<span class=\"k\">RUN</span> npm run compile\n\n<span class=\"k\">EXPOSE</span><span class=\"s\"> 3000</span>\n<span class=\"k\">CMD</span><span class=\"s\"> [&quot;npm&quot;, &quot;start&quot;]</span>\n</pre></div>\n\n\n<h2 id=\"construir-y-ejecutar-un-contenedor\">Construir y ejecutar un contenedor.</h2>\n<p>Ahora toca el turno de construir el contenedor, que hacemos con la orden <code>build</code>. Adem\u00e1s, para identificarlo le agregamos una etiqueta con la marca <code>-t</code> de <em>tag</em>.</p>\n<div class=\"codehilite\"><pre><span></span>$ docker build -t mern .\nSending build context to Docker daemon  <span class=\"m\">113</span>.7kB\nStep <span class=\"m\">1</span>/7 : FROM node:alpine\n ---&gt; d06e52d14cac\nStep <span class=\"m\">2</span>/7 : WORKDIR /app\n ---&gt; Using cache\n ---&gt; 8235cc38124f\nStep <span class=\"m\">3</span>/7 : ADD . /app\n ---&gt; 2a89296671af\nStep <span class=\"m\">4</span>/7 : RUN npm install\n ---&gt; Running in 480a4e340ed9\nnpm WARN mern@1.0.0 No repository field.\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.2 <span class=\"o\">(</span>node_modules/fsevents<span class=\"o\">)</span>:\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class=\"k\">for</span> fsevents@1.1.2: wanted <span class=\"o\">{</span><span class=\"s2\">&quot;os&quot;</span>:<span class=\"s2\">&quot;darwin&quot;</span>,<span class=\"s2\">&quot;arch&quot;</span>:<span class=\"s2\">&quot;any&quot;</span><span class=\"o\">}</span> <span class=\"o\">(</span>current: <span class=\"o\">{</span><span class=\"s2\">&quot;os&quot;</span>:<span class=\"s2\">&quot;linux&quot;</span>,<span class=\"s2\">&quot;arch&quot;</span>:<span class=\"s2\">&quot;x64&quot;</span><span class=\"o\">})</span>\n\nadded <span class=\"m\">327</span> packages in <span class=\"m\">463</span>.458s\n ---&gt; 4365094b5241\nRemoving intermediate container 480a4e340ed9\nStep <span class=\"m\">5</span>/7 : RUN npm run compile\n ---&gt; Running in 1e4b8eb87c21\n\n&gt; mern@1.0.0 compile /app\n&gt; babel src --presets react,es2015 --out-dir static/js\n\nsrc/app.jsx -&gt; static/js/app.js\n ---&gt; e6226251f8dd\nRemoving intermediate container 1e4b8eb87c21\nStep <span class=\"m\">6</span>/7 : EXPOSE <span class=\"m\">3000</span>\n ---&gt; Running in 0c2f78b34720\n ---&gt; a9888504fbaa\nRemoving intermediate container 0c2f78b34720\nStep <span class=\"m\">7</span>/7 : CMD npm start\n ---&gt; Running in dab2e748794a\n ---&gt; 19bd1377caf6\nRemoving intermediate container dab2e748794a\nSuccessfully built 19bd1377caf6\nSuccessfully tagged mern:latest\n</pre></div>\n\n\n<p>Ahora estamos listos para ejecutar el contenedor con la orden <code>run</code> y <em>mapeamos</em> el puerto <code>3000</code>.</p>\n<div class=\"codehilite\"><pre><span></span>$ docker run -p <span class=\"m\">3000</span>:3000 mern\n\n&gt; mern@1.0.0 start /app\n&gt; node index.js\n\nFuncionando en el puerto <span class=\"m\">3000</span>\n</pre></div>\n\n\n<p>Y verificamos el funcionamiento de nuestro servidor <em>dockerizado</em> visitando la p\u00e1gina <code>http://localhost:3000/</code>.</p>\n<p>En el siguiente art\u00edculo, veremos algunos comando \u00fatiles para administrar los contenedores, las imagines as\u00ed como crear un entorno de desarrollo usando Docker.</p>\n<div style=\"margin-bottom: 65px;\">\n  <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n  <ins class=\"adsbygoogle\"\n    style=\"display:block; text-align:center;\"\n    data-ad-layout=\"in-article\"\n    data-ad-format=\"fluid\"\n    data-ad-client=\"ca-pub-9466828947698623\"\n    data-ad-slot=\"2205101643\"></ins>\n  <script>\n    (adsbygoogle = window.adsbygoogle || []).push({});\n  </script>\n</div>\n\n<div class=\"footnote\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>En un siguiente art\u00edculo vamos a crear un entorno de desarrollo con Docker y usaremos un contenedor con la versi\u00f3n LTS de NodeJS y una imagen de Ubuntu 16.04.&#160;<a class=\"footnote-backref\" href=\"#fnref-1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>", "extend_html": "", "enable_comments": true, "cover": "", "slug": "docker-y-nodejs-un-ejemplo-basico", "status": 1, "featured": false, "category": 6, "autor": "4366d00e-792d-448e-b784-0f03754419c0"}}]